// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package smn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a list of SMN topics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Smn"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Smn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			topicName := cfg.RequireObject("topicName")
//			_, err := Smn.GetTopics(ctx, &smn.GetTopicsArgs{
//				Name: pulumi.StringRef(topicName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTopics(ctx *pulumi.Context, args *GetTopicsArgs, opts ...pulumi.InvokeOption) (*GetTopicsResult, error) {
	var rv GetTopicsResult
	err := ctx.Invoke("huaweicloud:Smn/getTopics:getTopics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTopics.
type GetTopicsArgs struct {
	// Specifies the topic display name.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the enterprise project ID of the SMN topic.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the name of the topic.
	Name *string `pulumi:"name"`
	// Specifies the region in which to obtain the SMN topics. If omitted, the
	// provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the topic URN.
	TopicUrn *string `pulumi:"topicUrn"`
}

// A collection of values returned by getTopics.
type GetTopicsResult struct {
	// The topic display name.
	DisplayName *string `pulumi:"displayName"`
	// The enterprise project ID of the SMN topic.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the topic.
	Name   *string `pulumi:"name"`
	Region *string `pulumi:"region"`
	// The topic URN.
	TopicUrn *string `pulumi:"topicUrn"`
	// An array of SMN topics found. Structure is documented below.
	Topics []GetTopicsTopic `pulumi:"topics"`
}

func GetTopicsOutput(ctx *pulumi.Context, args GetTopicsOutputArgs, opts ...pulumi.InvokeOption) GetTopicsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTopicsResult, error) {
			args := v.(GetTopicsArgs)
			r, err := GetTopics(ctx, &args, opts...)
			var s GetTopicsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTopicsResultOutput)
}

// A collection of arguments for invoking getTopics.
type GetTopicsOutputArgs struct {
	// Specifies the topic display name.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Specifies the enterprise project ID of the SMN topic.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the name of the topic.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to obtain the SMN topics. If omitted, the
	// provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the topic URN.
	TopicUrn pulumi.StringPtrInput `pulumi:"topicUrn"`
}

func (GetTopicsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsArgs)(nil)).Elem()
}

// A collection of values returned by getTopics.
type GetTopicsResultOutput struct{ *pulumi.OutputState }

func (GetTopicsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsResult)(nil)).Elem()
}

func (o GetTopicsResultOutput) ToGetTopicsResultOutput() GetTopicsResultOutput {
	return o
}

func (o GetTopicsResultOutput) ToGetTopicsResultOutputWithContext(ctx context.Context) GetTopicsResultOutput {
	return o
}

// The topic display name.
func (o GetTopicsResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicsResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The enterprise project ID of the SMN topic.
func (o GetTopicsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTopicsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the topic.
func (o GetTopicsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetTopicsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The topic URN.
func (o GetTopicsResultOutput) TopicUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicsResult) *string { return v.TopicUrn }).(pulumi.StringPtrOutput)
}

// An array of SMN topics found. Structure is documented below.
func (o GetTopicsResultOutput) Topics() GetTopicsTopicArrayOutput {
	return o.ApplyT(func(v GetTopicsResult) []GetTopicsTopic { return v.Topics }).(GetTopicsTopicArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTopicsResultOutput{})
}
