// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package smn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetTopicsTopic struct {
	// Specifies the topic display name.
	DisplayName string `pulumi:"displayName"`
	// Specifies the enterprise project ID of the SMN topic.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// The topic ID. The value is the topic URN.
	Id string `pulumi:"id"`
	// Specifies the name of the topic.
	Name string `pulumi:"name"`
	// Message pushing policy.
	// + **0**: indicates that the message sending fails and the message is cached in the queue.
	// + **1**: indicates that the failed message is discarded.
	PushPolicy int `pulumi:"pushPolicy"`
	// The tags of the SMN topic, key/value pair format.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the topic URN.
	TopicUrn string `pulumi:"topicUrn"`
}

// GetTopicsTopicInput is an input type that accepts GetTopicsTopicArgs and GetTopicsTopicOutput values.
// You can construct a concrete instance of `GetTopicsTopicInput` via:
//
//	GetTopicsTopicArgs{...}
type GetTopicsTopicInput interface {
	pulumi.Input

	ToGetTopicsTopicOutput() GetTopicsTopicOutput
	ToGetTopicsTopicOutputWithContext(context.Context) GetTopicsTopicOutput
}

type GetTopicsTopicArgs struct {
	// Specifies the topic display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Specifies the enterprise project ID of the SMN topic.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// The topic ID. The value is the topic URN.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the topic.
	Name pulumi.StringInput `pulumi:"name"`
	// Message pushing policy.
	// + **0**: indicates that the message sending fails and the message is cached in the queue.
	// + **1**: indicates that the failed message is discarded.
	PushPolicy pulumi.IntInput `pulumi:"pushPolicy"`
	// The tags of the SMN topic, key/value pair format.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Specifies the topic URN.
	TopicUrn pulumi.StringInput `pulumi:"topicUrn"`
}

func (GetTopicsTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsTopic)(nil)).Elem()
}

func (i GetTopicsTopicArgs) ToGetTopicsTopicOutput() GetTopicsTopicOutput {
	return i.ToGetTopicsTopicOutputWithContext(context.Background())
}

func (i GetTopicsTopicArgs) ToGetTopicsTopicOutputWithContext(ctx context.Context) GetTopicsTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsTopicOutput)
}

// GetTopicsTopicArrayInput is an input type that accepts GetTopicsTopicArray and GetTopicsTopicArrayOutput values.
// You can construct a concrete instance of `GetTopicsTopicArrayInput` via:
//
//	GetTopicsTopicArray{ GetTopicsTopicArgs{...} }
type GetTopicsTopicArrayInput interface {
	pulumi.Input

	ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput
	ToGetTopicsTopicArrayOutputWithContext(context.Context) GetTopicsTopicArrayOutput
}

type GetTopicsTopicArray []GetTopicsTopicInput

func (GetTopicsTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsTopic)(nil)).Elem()
}

func (i GetTopicsTopicArray) ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput {
	return i.ToGetTopicsTopicArrayOutputWithContext(context.Background())
}

func (i GetTopicsTopicArray) ToGetTopicsTopicArrayOutputWithContext(ctx context.Context) GetTopicsTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTopicsTopicArrayOutput)
}

type GetTopicsTopicOutput struct{ *pulumi.OutputState }

func (GetTopicsTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicsTopic)(nil)).Elem()
}

func (o GetTopicsTopicOutput) ToGetTopicsTopicOutput() GetTopicsTopicOutput {
	return o
}

func (o GetTopicsTopicOutput) ToGetTopicsTopicOutputWithContext(ctx context.Context) GetTopicsTopicOutput {
	return o
}

// Specifies the topic display name.
func (o GetTopicsTopicOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Specifies the enterprise project ID of the SMN topic.
func (o GetTopicsTopicOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The topic ID. The value is the topic URN.
func (o GetTopicsTopicOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the topic.
func (o GetTopicsTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.Name }).(pulumi.StringOutput)
}

// Message pushing policy.
// + **0**: indicates that the message sending fails and the message is cached in the queue.
// + **1**: indicates that the failed message is discarded.
func (o GetTopicsTopicOutput) PushPolicy() pulumi.IntOutput {
	return o.ApplyT(func(v GetTopicsTopic) int { return v.PushPolicy }).(pulumi.IntOutput)
}

// The tags of the SMN topic, key/value pair format.
func (o GetTopicsTopicOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetTopicsTopic) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the topic URN.
func (o GetTopicsTopicOutput) TopicUrn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicsTopic) string { return v.TopicUrn }).(pulumi.StringOutput)
}

type GetTopicsTopicArrayOutput struct{ *pulumi.OutputState }

func (GetTopicsTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTopicsTopic)(nil)).Elem()
}

func (o GetTopicsTopicArrayOutput) ToGetTopicsTopicArrayOutput() GetTopicsTopicArrayOutput {
	return o
}

func (o GetTopicsTopicArrayOutput) ToGetTopicsTopicArrayOutputWithContext(ctx context.Context) GetTopicsTopicArrayOutput {
	return o
}

func (o GetTopicsTopicArrayOutput) Index(i pulumi.IntInput) GetTopicsTopicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTopicsTopic {
		return vs[0].([]GetTopicsTopic)[vs[1].(int)]
	}).(GetTopicsTopicOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsTopicInput)(nil)).Elem(), GetTopicsTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTopicsTopicArrayInput)(nil)).Elem(), GetTopicsTopicArray{})
	pulumi.RegisterOutputType(GetTopicsTopicOutput{})
	pulumi.RegisterOutputType(GetTopicsTopicArrayOutput{})
}
