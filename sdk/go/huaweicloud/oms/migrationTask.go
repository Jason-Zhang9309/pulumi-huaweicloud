// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an OMS migration task resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Oms"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Oms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			sourceRegion := cfg.RequireObject("sourceRegion")
//			sourceBucket := cfg.RequireObject("sourceBucket")
//			sourceAccessKey := cfg.RequireObject("sourceAccessKey")
//			sourceSecretKey := cfg.RequireObject("sourceSecretKey")
//			destRegion := cfg.RequireObject("destRegion")
//			destBucket := cfg.RequireObject("destBucket")
//			destAccessKey := cfg.RequireObject("destAccessKey")
//			destSecretKey := cfg.RequireObject("destSecretKey")
//			topicUrn := cfg.RequireObject("topicUrn")
//			_, err := Oms.NewMigrationTask(ctx, "test", &Oms.MigrationTaskArgs{
//				SourceObject: &oms.MigrationTaskSourceObjectArgs{
//					DataSource: pulumi.String("Aliyun"),
//					Region:     pulumi.Any(sourceRegion),
//					Bucket:     pulumi.Any(sourceBucket),
//					AccessKey:  pulumi.Any(sourceAccessKey),
//					SecretKey:  pulumi.Any(sourceSecretKey),
//					Objects: pulumi.StringArray{
//						pulumi.String(""),
//					},
//				},
//				DestinationObject: &oms.MigrationTaskDestinationObjectArgs{
//					Region:    pulumi.Any(destRegion),
//					Bucket:    pulumi.Any(destBucket),
//					AccessKey: pulumi.Any(destAccessKey),
//					SecretKey: pulumi.Any(destSecretKey),
//				},
//				Type:        pulumi.String("object"),
//				Description: pulumi.String("test task"),
//				BandwidthPolicies: oms.MigrationTaskBandwidthPolicyArray{
//					&oms.MigrationTaskBandwidthPolicyArgs{
//						MaxBandwidth: pulumi.Int(2),
//						Start:        pulumi.String("15:00"),
//						End:          pulumi.String("16:00"),
//					},
//				},
//				SmnConfig: &oms.MigrationTaskSmnConfigArgs{
//					TopicUrn: pulumi.Any(topicUrn),
//					TriggerConditions: pulumi.StringArray{
//						pulumi.String("FAILURE"),
//						pulumi.String("SUCCESS"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type MigrationTask struct {
	pulumi.CustomResourceState

	// Specifies the traffic limit rules. Each element in the array
	// corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
	// segments must not overlap. The object structure is  documented below.
	BandwidthPolicies MigrationTaskBandwidthPolicyArrayOutput `pulumi:"bandwidthPolicies"`
	// Specifies the description of the task.
	// Changing this creates a new resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the destination information. The object
	// structure is documented below. Changing this creates a new resource.
	DestinationObject MigrationTaskDestinationObjectOutput `pulumi:"destinationObject"`
	// Specifies whether to record failed objects. If this
	// function is enabled, information about objects that fail to be migrated will be stored in the destination bucket.
	// Default value: **true**. Changing this creates a new resource.
	EnableFailedObjectRecording pulumi.BoolPtrOutput `pulumi:"enableFailedObjectRecording"`
	// Specifies whether to enable the KMS encryption function.
	// Default value: **false**. Changing this creates a new resource.
	EnableKms pulumi.BoolPtrOutput `pulumi:"enableKms"`
	// Specifies whether to automatically restore the archive data. If enabled,
	// archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
	EnableRestore pulumi.BoolPtrOutput `pulumi:"enableRestore"`
	// Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
	// e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
	// No time is specified by default. Changing this creates a new resource.
	MigrateSince pulumi.StringOutput `pulumi:"migrateSince"`
	// The name of the migration task.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region where the destination bucket is located.
	// Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the SMN message sending configuration.
	// The object structure is  documented below. Changing this creates a new resource.
	SmnConfig MigrationTaskSmnConfigPtrOutput `pulumi:"smnConfig"`
	// Specifies the CDN information. If this parameter is contained,
	// using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
	// name during migration. The object structure is documented below.
	// Changing this creates a new resource.
	SourceCdn MigrationTaskSourceCdnPtrOutput `pulumi:"sourceCdn"`
	// Specifies the source information. The object
	// structure is documented below. Changing this creates a new resource.
	SourceObject MigrationTaskSourceObjectOutput `pulumi:"sourceObject"`
	// Specifies whether to start the task. Default value: **true**.
	StartTask pulumi.BoolPtrOutput `pulumi:"startTask"`
	// The status the migration task. The value can be:
	// + **1**: Waiting to migrate.
	// + **2**: Migrating.
	// + **3**: Migration paused.
	// + **4**: Migration failed.
	// + **5**: Migration succeeded.
	Status pulumi.IntOutput `pulumi:"status"`
	// Specifies the task type. The value can be:
	// + **list**: indicates migrating objects using an object list.
	// + **url_list**: indicates migrating objects using a URL object list.
	// + **object**: indicates migrating selected files or folders.
	// + **prefix**: indicates migrating objects with specified prefixes.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMigrationTask registers a new resource with the given unique name, arguments, and options.
func NewMigrationTask(ctx *pulumi.Context,
	name string, args *MigrationTaskArgs, opts ...pulumi.ResourceOption) (*MigrationTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationObject == nil {
		return nil, errors.New("invalid value for required argument 'DestinationObject'")
	}
	if args.SourceObject == nil {
		return nil, errors.New("invalid value for required argument 'SourceObject'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource MigrationTask
	err := ctx.RegisterResource("huaweicloud:Oms/migrationTask:MigrationTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMigrationTask gets an existing MigrationTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMigrationTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MigrationTaskState, opts ...pulumi.ResourceOption) (*MigrationTask, error) {
	var resource MigrationTask
	err := ctx.ReadResource("huaweicloud:Oms/migrationTask:MigrationTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MigrationTask resources.
type migrationTaskState struct {
	// Specifies the traffic limit rules. Each element in the array
	// corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
	// segments must not overlap. The object structure is  documented below.
	BandwidthPolicies []MigrationTaskBandwidthPolicy `pulumi:"bandwidthPolicies"`
	// Specifies the description of the task.
	// Changing this creates a new resource.
	Description *string `pulumi:"description"`
	// Specifies the destination information. The object
	// structure is documented below. Changing this creates a new resource.
	DestinationObject *MigrationTaskDestinationObject `pulumi:"destinationObject"`
	// Specifies whether to record failed objects. If this
	// function is enabled, information about objects that fail to be migrated will be stored in the destination bucket.
	// Default value: **true**. Changing this creates a new resource.
	EnableFailedObjectRecording *bool `pulumi:"enableFailedObjectRecording"`
	// Specifies whether to enable the KMS encryption function.
	// Default value: **false**. Changing this creates a new resource.
	EnableKms *bool `pulumi:"enableKms"`
	// Specifies whether to automatically restore the archive data. If enabled,
	// archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
	EnableRestore *bool `pulumi:"enableRestore"`
	// Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
	// e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
	// No time is specified by default. Changing this creates a new resource.
	MigrateSince *string `pulumi:"migrateSince"`
	// The name of the migration task.
	Name *string `pulumi:"name"`
	// Specifies the region where the destination bucket is located.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the SMN message sending configuration.
	// The object structure is  documented below. Changing this creates a new resource.
	SmnConfig *MigrationTaskSmnConfig `pulumi:"smnConfig"`
	// Specifies the CDN information. If this parameter is contained,
	// using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
	// name during migration. The object structure is documented below.
	// Changing this creates a new resource.
	SourceCdn *MigrationTaskSourceCdn `pulumi:"sourceCdn"`
	// Specifies the source information. The object
	// structure is documented below. Changing this creates a new resource.
	SourceObject *MigrationTaskSourceObject `pulumi:"sourceObject"`
	// Specifies whether to start the task. Default value: **true**.
	StartTask *bool `pulumi:"startTask"`
	// The status the migration task. The value can be:
	// + **1**: Waiting to migrate.
	// + **2**: Migrating.
	// + **3**: Migration paused.
	// + **4**: Migration failed.
	// + **5**: Migration succeeded.
	Status *int `pulumi:"status"`
	// Specifies the task type. The value can be:
	// + **list**: indicates migrating objects using an object list.
	// + **url_list**: indicates migrating objects using a URL object list.
	// + **object**: indicates migrating selected files or folders.
	// + **prefix**: indicates migrating objects with specified prefixes.
	Type *string `pulumi:"type"`
}

type MigrationTaskState struct {
	// Specifies the traffic limit rules. Each element in the array
	// corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
	// segments must not overlap. The object structure is  documented below.
	BandwidthPolicies MigrationTaskBandwidthPolicyArrayInput
	// Specifies the description of the task.
	// Changing this creates a new resource.
	Description pulumi.StringPtrInput
	// Specifies the destination information. The object
	// structure is documented below. Changing this creates a new resource.
	DestinationObject MigrationTaskDestinationObjectPtrInput
	// Specifies whether to record failed objects. If this
	// function is enabled, information about objects that fail to be migrated will be stored in the destination bucket.
	// Default value: **true**. Changing this creates a new resource.
	EnableFailedObjectRecording pulumi.BoolPtrInput
	// Specifies whether to enable the KMS encryption function.
	// Default value: **false**. Changing this creates a new resource.
	EnableKms pulumi.BoolPtrInput
	// Specifies whether to automatically restore the archive data. If enabled,
	// archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
	EnableRestore pulumi.BoolPtrInput
	// Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
	// e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
	// No time is specified by default. Changing this creates a new resource.
	MigrateSince pulumi.StringPtrInput
	// The name of the migration task.
	Name pulumi.StringPtrInput
	// Specifies the region where the destination bucket is located.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the SMN message sending configuration.
	// The object structure is  documented below. Changing this creates a new resource.
	SmnConfig MigrationTaskSmnConfigPtrInput
	// Specifies the CDN information. If this parameter is contained,
	// using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
	// name during migration. The object structure is documented below.
	// Changing this creates a new resource.
	SourceCdn MigrationTaskSourceCdnPtrInput
	// Specifies the source information. The object
	// structure is documented below. Changing this creates a new resource.
	SourceObject MigrationTaskSourceObjectPtrInput
	// Specifies whether to start the task. Default value: **true**.
	StartTask pulumi.BoolPtrInput
	// The status the migration task. The value can be:
	// + **1**: Waiting to migrate.
	// + **2**: Migrating.
	// + **3**: Migration paused.
	// + **4**: Migration failed.
	// + **5**: Migration succeeded.
	Status pulumi.IntPtrInput
	// Specifies the task type. The value can be:
	// + **list**: indicates migrating objects using an object list.
	// + **url_list**: indicates migrating objects using a URL object list.
	// + **object**: indicates migrating selected files or folders.
	// + **prefix**: indicates migrating objects with specified prefixes.
	Type pulumi.StringPtrInput
}

func (MigrationTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationTaskState)(nil)).Elem()
}

type migrationTaskArgs struct {
	// Specifies the traffic limit rules. Each element in the array
	// corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
	// segments must not overlap. The object structure is  documented below.
	BandwidthPolicies []MigrationTaskBandwidthPolicy `pulumi:"bandwidthPolicies"`
	// Specifies the description of the task.
	// Changing this creates a new resource.
	Description *string `pulumi:"description"`
	// Specifies the destination information. The object
	// structure is documented below. Changing this creates a new resource.
	DestinationObject MigrationTaskDestinationObject `pulumi:"destinationObject"`
	// Specifies whether to record failed objects. If this
	// function is enabled, information about objects that fail to be migrated will be stored in the destination bucket.
	// Default value: **true**. Changing this creates a new resource.
	EnableFailedObjectRecording *bool `pulumi:"enableFailedObjectRecording"`
	// Specifies whether to enable the KMS encryption function.
	// Default value: **false**. Changing this creates a new resource.
	EnableKms *bool `pulumi:"enableKms"`
	// Specifies whether to automatically restore the archive data. If enabled,
	// archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
	EnableRestore *bool `pulumi:"enableRestore"`
	// Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
	// e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
	// No time is specified by default. Changing this creates a new resource.
	MigrateSince *string `pulumi:"migrateSince"`
	// Specifies the region where the destination bucket is located.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the SMN message sending configuration.
	// The object structure is  documented below. Changing this creates a new resource.
	SmnConfig *MigrationTaskSmnConfig `pulumi:"smnConfig"`
	// Specifies the CDN information. If this parameter is contained,
	// using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
	// name during migration. The object structure is documented below.
	// Changing this creates a new resource.
	SourceCdn *MigrationTaskSourceCdn `pulumi:"sourceCdn"`
	// Specifies the source information. The object
	// structure is documented below. Changing this creates a new resource.
	SourceObject MigrationTaskSourceObject `pulumi:"sourceObject"`
	// Specifies whether to start the task. Default value: **true**.
	StartTask *bool `pulumi:"startTask"`
	// Specifies the task type. The value can be:
	// + **list**: indicates migrating objects using an object list.
	// + **url_list**: indicates migrating objects using a URL object list.
	// + **object**: indicates migrating selected files or folders.
	// + **prefix**: indicates migrating objects with specified prefixes.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a MigrationTask resource.
type MigrationTaskArgs struct {
	// Specifies the traffic limit rules. Each element in the array
	// corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
	// segments must not overlap. The object structure is  documented below.
	BandwidthPolicies MigrationTaskBandwidthPolicyArrayInput
	// Specifies the description of the task.
	// Changing this creates a new resource.
	Description pulumi.StringPtrInput
	// Specifies the destination information. The object
	// structure is documented below. Changing this creates a new resource.
	DestinationObject MigrationTaskDestinationObjectInput
	// Specifies whether to record failed objects. If this
	// function is enabled, information about objects that fail to be migrated will be stored in the destination bucket.
	// Default value: **true**. Changing this creates a new resource.
	EnableFailedObjectRecording pulumi.BoolPtrInput
	// Specifies whether to enable the KMS encryption function.
	// Default value: **false**. Changing this creates a new resource.
	EnableKms pulumi.BoolPtrInput
	// Specifies whether to automatically restore the archive data. If enabled,
	// archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
	EnableRestore pulumi.BoolPtrInput
	// Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
	// e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
	// No time is specified by default. Changing this creates a new resource.
	MigrateSince pulumi.StringPtrInput
	// Specifies the region where the destination bucket is located.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the SMN message sending configuration.
	// The object structure is  documented below. Changing this creates a new resource.
	SmnConfig MigrationTaskSmnConfigPtrInput
	// Specifies the CDN information. If this parameter is contained,
	// using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
	// name during migration. The object structure is documented below.
	// Changing this creates a new resource.
	SourceCdn MigrationTaskSourceCdnPtrInput
	// Specifies the source information. The object
	// structure is documented below. Changing this creates a new resource.
	SourceObject MigrationTaskSourceObjectInput
	// Specifies whether to start the task. Default value: **true**.
	StartTask pulumi.BoolPtrInput
	// Specifies the task type. The value can be:
	// + **list**: indicates migrating objects using an object list.
	// + **url_list**: indicates migrating objects using a URL object list.
	// + **object**: indicates migrating selected files or folders.
	// + **prefix**: indicates migrating objects with specified prefixes.
	Type pulumi.StringInput
}

func (MigrationTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationTaskArgs)(nil)).Elem()
}

type MigrationTaskInput interface {
	pulumi.Input

	ToMigrationTaskOutput() MigrationTaskOutput
	ToMigrationTaskOutputWithContext(ctx context.Context) MigrationTaskOutput
}

func (*MigrationTask) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationTask)(nil)).Elem()
}

func (i *MigrationTask) ToMigrationTaskOutput() MigrationTaskOutput {
	return i.ToMigrationTaskOutputWithContext(context.Background())
}

func (i *MigrationTask) ToMigrationTaskOutputWithContext(ctx context.Context) MigrationTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationTaskOutput)
}

// MigrationTaskArrayInput is an input type that accepts MigrationTaskArray and MigrationTaskArrayOutput values.
// You can construct a concrete instance of `MigrationTaskArrayInput` via:
//
//	MigrationTaskArray{ MigrationTaskArgs{...} }
type MigrationTaskArrayInput interface {
	pulumi.Input

	ToMigrationTaskArrayOutput() MigrationTaskArrayOutput
	ToMigrationTaskArrayOutputWithContext(context.Context) MigrationTaskArrayOutput
}

type MigrationTaskArray []MigrationTaskInput

func (MigrationTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MigrationTask)(nil)).Elem()
}

func (i MigrationTaskArray) ToMigrationTaskArrayOutput() MigrationTaskArrayOutput {
	return i.ToMigrationTaskArrayOutputWithContext(context.Background())
}

func (i MigrationTaskArray) ToMigrationTaskArrayOutputWithContext(ctx context.Context) MigrationTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationTaskArrayOutput)
}

// MigrationTaskMapInput is an input type that accepts MigrationTaskMap and MigrationTaskMapOutput values.
// You can construct a concrete instance of `MigrationTaskMapInput` via:
//
//	MigrationTaskMap{ "key": MigrationTaskArgs{...} }
type MigrationTaskMapInput interface {
	pulumi.Input

	ToMigrationTaskMapOutput() MigrationTaskMapOutput
	ToMigrationTaskMapOutputWithContext(context.Context) MigrationTaskMapOutput
}

type MigrationTaskMap map[string]MigrationTaskInput

func (MigrationTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MigrationTask)(nil)).Elem()
}

func (i MigrationTaskMap) ToMigrationTaskMapOutput() MigrationTaskMapOutput {
	return i.ToMigrationTaskMapOutputWithContext(context.Background())
}

func (i MigrationTaskMap) ToMigrationTaskMapOutputWithContext(ctx context.Context) MigrationTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationTaskMapOutput)
}

type MigrationTaskOutput struct{ *pulumi.OutputState }

func (MigrationTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationTask)(nil)).Elem()
}

func (o MigrationTaskOutput) ToMigrationTaskOutput() MigrationTaskOutput {
	return o
}

func (o MigrationTaskOutput) ToMigrationTaskOutputWithContext(ctx context.Context) MigrationTaskOutput {
	return o
}

// Specifies the traffic limit rules. Each element in the array
// corresponds to the maximum bandwidth of a time segment. A maximum of 5 time segments are allowed, and the time
// segments must not overlap. The object structure is  documented below.
func (o MigrationTaskOutput) BandwidthPolicies() MigrationTaskBandwidthPolicyArrayOutput {
	return o.ApplyT(func(v *MigrationTask) MigrationTaskBandwidthPolicyArrayOutput { return v.BandwidthPolicies }).(MigrationTaskBandwidthPolicyArrayOutput)
}

// Specifies the description of the task.
// Changing this creates a new resource.
func (o MigrationTaskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the destination information. The object
// structure is documented below. Changing this creates a new resource.
func (o MigrationTaskOutput) DestinationObject() MigrationTaskDestinationObjectOutput {
	return o.ApplyT(func(v *MigrationTask) MigrationTaskDestinationObjectOutput { return v.DestinationObject }).(MigrationTaskDestinationObjectOutput)
}

// Specifies whether to record failed objects. If this
// function is enabled, information about objects that fail to be migrated will be stored in the destination bucket.
// Default value: **true**. Changing this creates a new resource.
func (o MigrationTaskOutput) EnableFailedObjectRecording() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.BoolPtrOutput { return v.EnableFailedObjectRecording }).(pulumi.BoolPtrOutput)
}

// Specifies whether to enable the KMS encryption function.
// Default value: **false**. Changing this creates a new resource.
func (o MigrationTaskOutput) EnableKms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.BoolPtrOutput { return v.EnableKms }).(pulumi.BoolPtrOutput)
}

// Specifies whether to automatically restore the archive data. If enabled,
// archive data is automatically restored and migrated. Default value: **false**. Changing this creates a new resource.
func (o MigrationTaskOutput) EnableRestore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.BoolPtrOutput { return v.EnableRestore }).(pulumi.BoolPtrOutput)
}

// Specifies a time in format **yyyy-MM-dd HH:mm:ss**,
// e.g. **2006-01-02 15:04:05**. The system migrates only the objects that are modified after the specified time.
// No time is specified by default. Changing this creates a new resource.
func (o MigrationTaskOutput) MigrateSince() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.StringOutput { return v.MigrateSince }).(pulumi.StringOutput)
}

// The name of the migration task.
func (o MigrationTaskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region where the destination bucket is located.
// Changing this creates a new resource.
func (o MigrationTaskOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the SMN message sending configuration.
// The object structure is  documented below. Changing this creates a new resource.
func (o MigrationTaskOutput) SmnConfig() MigrationTaskSmnConfigPtrOutput {
	return o.ApplyT(func(v *MigrationTask) MigrationTaskSmnConfigPtrOutput { return v.SmnConfig }).(MigrationTaskSmnConfigPtrOutput)
}

// Specifies the CDN information. If this parameter is contained,
// using CDN to download source data is supported, the source objects to be migrated are obtained from the CDN domain
// name during migration. The object structure is documented below.
// Changing this creates a new resource.
func (o MigrationTaskOutput) SourceCdn() MigrationTaskSourceCdnPtrOutput {
	return o.ApplyT(func(v *MigrationTask) MigrationTaskSourceCdnPtrOutput { return v.SourceCdn }).(MigrationTaskSourceCdnPtrOutput)
}

// Specifies the source information. The object
// structure is documented below. Changing this creates a new resource.
func (o MigrationTaskOutput) SourceObject() MigrationTaskSourceObjectOutput {
	return o.ApplyT(func(v *MigrationTask) MigrationTaskSourceObjectOutput { return v.SourceObject }).(MigrationTaskSourceObjectOutput)
}

// Specifies whether to start the task. Default value: **true**.
func (o MigrationTaskOutput) StartTask() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.BoolPtrOutput { return v.StartTask }).(pulumi.BoolPtrOutput)
}

// The status the migration task. The value can be:
// + **1**: Waiting to migrate.
// + **2**: Migrating.
// + **3**: Migration paused.
// + **4**: Migration failed.
// + **5**: Migration succeeded.
func (o MigrationTaskOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

// Specifies the task type. The value can be:
// + **list**: indicates migrating objects using an object list.
// + **url_list**: indicates migrating objects using a URL object list.
// + **object**: indicates migrating selected files or folders.
// + **prefix**: indicates migrating objects with specified prefixes.
func (o MigrationTaskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationTask) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type MigrationTaskArrayOutput struct{ *pulumi.OutputState }

func (MigrationTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MigrationTask)(nil)).Elem()
}

func (o MigrationTaskArrayOutput) ToMigrationTaskArrayOutput() MigrationTaskArrayOutput {
	return o
}

func (o MigrationTaskArrayOutput) ToMigrationTaskArrayOutputWithContext(ctx context.Context) MigrationTaskArrayOutput {
	return o
}

func (o MigrationTaskArrayOutput) Index(i pulumi.IntInput) MigrationTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MigrationTask {
		return vs[0].([]*MigrationTask)[vs[1].(int)]
	}).(MigrationTaskOutput)
}

type MigrationTaskMapOutput struct{ *pulumi.OutputState }

func (MigrationTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MigrationTask)(nil)).Elem()
}

func (o MigrationTaskMapOutput) ToMigrationTaskMapOutput() MigrationTaskMapOutput {
	return o
}

func (o MigrationTaskMapOutput) ToMigrationTaskMapOutputWithContext(ctx context.Context) MigrationTaskMapOutput {
	return o
}

func (o MigrationTaskMapOutput) MapIndex(k pulumi.StringInput) MigrationTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MigrationTask {
		return vs[0].(map[string]*MigrationTask)[vs[1].(string)]
	}).(MigrationTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationTaskInput)(nil)).Elem(), &MigrationTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationTaskArrayInput)(nil)).Elem(), MigrationTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationTaskMapInput)(nil)).Elem(), MigrationTaskMap{})
	pulumi.RegisterOutputType(MigrationTaskOutput{})
	pulumi.RegisterOutputType(MigrationTaskArrayOutput{})
	pulumi.RegisterOutputType(MigrationTaskMapOutput{})
}
