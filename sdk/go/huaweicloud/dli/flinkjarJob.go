// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dli

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a flink job resource which type is `Flink Jar` within HuaweiCloud DLI.
//
// ## Example Usage
// ### Create a flink job
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Dli"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := cfg.RequireObject("name")
//			queueName := cfg.RequireObject("queueName")
//			jarObsPath := cfg.RequireObject("jarObsPath")
//			entrypointArgs := cfg.RequireObject("entrypointArgs")
//			testPackage, err := Dli.NewPackage(ctx, "testPackage", &Dli.PackageArgs{
//				GroupName:  pulumi.String("jarPackage"),
//				Type:       pulumi.String("jar"),
//				ObjectPath: pulumi.Any(jarObsPath),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Dli.NewFlinkjarJob(ctx, "testFlinkjarJob", &Dli.FlinkjarJobArgs{
//				QueueName: pulumi.Any(queueName),
//				Entrypoint: pulumi.All(testPackage.GroupName, testPackage.ObjectName).ApplyT(func(_args []interface{}) (string, error) {
//					groupName := _args[0].(string)
//					objectName := _args[1].(string)
//					return fmt.Sprintf("%v/%v", groupName, objectName), nil
//				}).(pulumi.StringOutput),
//				EntrypointArgs: pulumi.Any(entrypointArgs),
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//					"key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The job can be imported by `id`. For example, bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Dli/flinkjarJob:FlinkjarJob test 12345
//
// ```
type FlinkjarJob struct {
	pulumi.CustomResourceState

	// Specifies storage address of the checkpoint in the JAR file of the user.
	// The path must be unique.
	CheckpointPath pulumi.StringPtrOutput `pulumi:"checkpointPath"`
	// Specifies number of CUs selected for a job. The default value is `2`.
	CuNum pulumi.IntPtrOutput `pulumi:"cuNum"`
	// Specifies dependency files. It is the name of the package that has been
	// uploaded to the DLI.
	DependencyFiles pulumi.StringArrayOutput `pulumi:"dependencyFiles"`
	// Specifies other dependency jars. It is the name of the package that
	// has been uploaded to the DLI.
	DependencyJars pulumi.StringArrayOutput `pulumi:"dependencyJars"`
	// Specifies job description. Length range: `1` to `512` characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the JAR file where the job main class is located. It is the name of the
	// package that has been uploaded to the DLI.
	Entrypoint pulumi.StringPtrOutput `pulumi:"entrypoint"`
	// Specifies job entry arguments. Multiple arguments are separated by spaces.
	// The arguments are keys followed by values. Keys have to start with '-' or '--'.
	EntrypointArgs pulumi.StringPtrOutput `pulumi:"entrypointArgs"`
	// Specifies job feature. Type of the Flink image used by a job.
	// + **basic**: indicates that the basic Flink image provided by DLI is used.
	// + **custom**: indicates that the user-defined Flink image is used.
	Feature pulumi.StringOutput `pulumi:"feature"`
	// Specifies flink version. This parameter is valid only when feature is set
	// to basic. You can use this parameter with the feature parameter to specify the version of the DLI basic Flink image
	// used for job running. The options are as follows: `1.10` and `1.7`.
	FlinkVersion pulumi.StringOutput `pulumi:"flinkVersion"`
	// Specifies custom image. The format is Organization name/Image name:Image version.
	// This parameter is valid only when feature is set to `custom`. You can use this parameter with the feature parameter
	// to specify a user-defined Flink image for job running. For details about how to use custom images, see the
	// Data Lake Insight User Guide <https://support.huaweicloud.com/en-us/usermanual-dli/dli_01_0494.html>.
	Image pulumi.StringPtrOutput `pulumi:"image"`
	// Specifies whether to enable the function of uploading job logs to users' OBS buckets.
	// The default value is `false`.
	LogEnabled pulumi.BoolPtrOutput `pulumi:"logEnabled"`
	// Specifies job entry class. Default main class is specified by the Manifest file
	// of the application.
	MainClass pulumi.StringPtrOutput `pulumi:"mainClass"`
	// Specifies number of CUs in the JobManager selected for a job.
	// The default value is `1`.
	ManagerCuNum pulumi.IntPtrOutput `pulumi:"managerCuNum"`
	// Specifies the name of the job. Length range: `1` to `57` characters.
	// Which may consist of letters, digits, underscores (_) and hyphens (-).
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies OBS path. OBS path where users are authorized to save the log.
	// This parameter is valid only when `logEnabled` is set to `true`.
	ObsBucket pulumi.StringPtrOutput `pulumi:"obsBucket"`
	// Specifies number of parallel for a job. The default value is `1`.
	ParallelNum pulumi.IntPtrOutput `pulumi:"parallelNum"`
	// Specifies the name of DLI queue which this job run in. The type of queue
	// must be `general`.
	QueueName pulumi.StringOutput `pulumi:"queueName"`
	// The region in which to create the DLI flink job resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies whether to enable the function of restart upon exceptions.
	// The default value is `false`.
	RestartWhenException pulumi.BoolPtrOutput `pulumi:"restartWhenException"`
	// Specifies whether the abnormal restart is recovered from the checkpoint.
	ResumeCheckpoint pulumi.BoolPtrOutput `pulumi:"resumeCheckpoint"`
	// Specifies maximum number of retry times upon exceptions. The unit is
	// `times/hour`. Value range: `-1` or greater than `0`. The default value is `-1`, indicating that the number of times is
	// unlimited.
	ResumeMaxNum pulumi.IntPtrOutput `pulumi:"resumeMaxNum"`
	// Specifies customizes optimization parameters when a Flink job is running.
	RuntimeConfig pulumi.StringMapOutput `pulumi:"runtimeConfig"`
	// Specifies SMN topic. If a job fails, the system will send a message to users
	// subscribed to the SMN topic.
	SmnTopic pulumi.StringPtrOutput `pulumi:"smnTopic"`
	// The Job status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies number of CUs for each TaskManager. The default value is `1`.
	TmCuNum pulumi.IntPtrOutput `pulumi:"tmCuNum"`
	// Specifies number of slots in each TaskManager.
	// The default value is `(parallel_num * tm_cu_num) / (cu_num - manager_cu_num)`.
	TmSlotNum pulumi.IntOutput `pulumi:"tmSlotNum"`
}

// NewFlinkjarJob registers a new resource with the given unique name, arguments, and options.
func NewFlinkjarJob(ctx *pulumi.Context,
	name string, args *FlinkjarJobArgs, opts ...pulumi.ResourceOption) (*FlinkjarJob, error) {
	if args == nil {
		args = &FlinkjarJobArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource FlinkjarJob
	err := ctx.RegisterResource("huaweicloud:Dli/flinkjarJob:FlinkjarJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkjarJob gets an existing FlinkjarJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkjarJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkjarJobState, opts ...pulumi.ResourceOption) (*FlinkjarJob, error) {
	var resource FlinkjarJob
	err := ctx.ReadResource("huaweicloud:Dli/flinkjarJob:FlinkjarJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkjarJob resources.
type flinkjarJobState struct {
	// Specifies storage address of the checkpoint in the JAR file of the user.
	// The path must be unique.
	CheckpointPath *string `pulumi:"checkpointPath"`
	// Specifies number of CUs selected for a job. The default value is `2`.
	CuNum *int `pulumi:"cuNum"`
	// Specifies dependency files. It is the name of the package that has been
	// uploaded to the DLI.
	DependencyFiles []string `pulumi:"dependencyFiles"`
	// Specifies other dependency jars. It is the name of the package that
	// has been uploaded to the DLI.
	DependencyJars []string `pulumi:"dependencyJars"`
	// Specifies job description. Length range: `1` to `512` characters.
	Description *string `pulumi:"description"`
	// Specifies the JAR file where the job main class is located. It is the name of the
	// package that has been uploaded to the DLI.
	Entrypoint *string `pulumi:"entrypoint"`
	// Specifies job entry arguments. Multiple arguments are separated by spaces.
	// The arguments are keys followed by values. Keys have to start with '-' or '--'.
	EntrypointArgs *string `pulumi:"entrypointArgs"`
	// Specifies job feature. Type of the Flink image used by a job.
	// + **basic**: indicates that the basic Flink image provided by DLI is used.
	// + **custom**: indicates that the user-defined Flink image is used.
	Feature *string `pulumi:"feature"`
	// Specifies flink version. This parameter is valid only when feature is set
	// to basic. You can use this parameter with the feature parameter to specify the version of the DLI basic Flink image
	// used for job running. The options are as follows: `1.10` and `1.7`.
	FlinkVersion *string `pulumi:"flinkVersion"`
	// Specifies custom image. The format is Organization name/Image name:Image version.
	// This parameter is valid only when feature is set to `custom`. You can use this parameter with the feature parameter
	// to specify a user-defined Flink image for job running. For details about how to use custom images, see the
	// Data Lake Insight User Guide <https://support.huaweicloud.com/en-us/usermanual-dli/dli_01_0494.html>.
	Image *string `pulumi:"image"`
	// Specifies whether to enable the function of uploading job logs to users' OBS buckets.
	// The default value is `false`.
	LogEnabled *bool `pulumi:"logEnabled"`
	// Specifies job entry class. Default main class is specified by the Manifest file
	// of the application.
	MainClass *string `pulumi:"mainClass"`
	// Specifies number of CUs in the JobManager selected for a job.
	// The default value is `1`.
	ManagerCuNum *int `pulumi:"managerCuNum"`
	// Specifies the name of the job. Length range: `1` to `57` characters.
	// Which may consist of letters, digits, underscores (_) and hyphens (-).
	Name *string `pulumi:"name"`
	// Specifies OBS path. OBS path where users are authorized to save the log.
	// This parameter is valid only when `logEnabled` is set to `true`.
	ObsBucket *string `pulumi:"obsBucket"`
	// Specifies number of parallel for a job. The default value is `1`.
	ParallelNum *int `pulumi:"parallelNum"`
	// Specifies the name of DLI queue which this job run in. The type of queue
	// must be `general`.
	QueueName *string `pulumi:"queueName"`
	// The region in which to create the DLI flink job resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies whether to enable the function of restart upon exceptions.
	// The default value is `false`.
	RestartWhenException *bool `pulumi:"restartWhenException"`
	// Specifies whether the abnormal restart is recovered from the checkpoint.
	ResumeCheckpoint *bool `pulumi:"resumeCheckpoint"`
	// Specifies maximum number of retry times upon exceptions. The unit is
	// `times/hour`. Value range: `-1` or greater than `0`. The default value is `-1`, indicating that the number of times is
	// unlimited.
	ResumeMaxNum *int `pulumi:"resumeMaxNum"`
	// Specifies customizes optimization parameters when a Flink job is running.
	RuntimeConfig map[string]string `pulumi:"runtimeConfig"`
	// Specifies SMN topic. If a job fails, the system will send a message to users
	// subscribed to the SMN topic.
	SmnTopic *string `pulumi:"smnTopic"`
	// The Job status.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies number of CUs for each TaskManager. The default value is `1`.
	TmCuNum *int `pulumi:"tmCuNum"`
	// Specifies number of slots in each TaskManager.
	// The default value is `(parallel_num * tm_cu_num) / (cu_num - manager_cu_num)`.
	TmSlotNum *int `pulumi:"tmSlotNum"`
}

type FlinkjarJobState struct {
	// Specifies storage address of the checkpoint in the JAR file of the user.
	// The path must be unique.
	CheckpointPath pulumi.StringPtrInput
	// Specifies number of CUs selected for a job. The default value is `2`.
	CuNum pulumi.IntPtrInput
	// Specifies dependency files. It is the name of the package that has been
	// uploaded to the DLI.
	DependencyFiles pulumi.StringArrayInput
	// Specifies other dependency jars. It is the name of the package that
	// has been uploaded to the DLI.
	DependencyJars pulumi.StringArrayInput
	// Specifies job description. Length range: `1` to `512` characters.
	Description pulumi.StringPtrInput
	// Specifies the JAR file where the job main class is located. It is the name of the
	// package that has been uploaded to the DLI.
	Entrypoint pulumi.StringPtrInput
	// Specifies job entry arguments. Multiple arguments are separated by spaces.
	// The arguments are keys followed by values. Keys have to start with '-' or '--'.
	EntrypointArgs pulumi.StringPtrInput
	// Specifies job feature. Type of the Flink image used by a job.
	// + **basic**: indicates that the basic Flink image provided by DLI is used.
	// + **custom**: indicates that the user-defined Flink image is used.
	Feature pulumi.StringPtrInput
	// Specifies flink version. This parameter is valid only when feature is set
	// to basic. You can use this parameter with the feature parameter to specify the version of the DLI basic Flink image
	// used for job running. The options are as follows: `1.10` and `1.7`.
	FlinkVersion pulumi.StringPtrInput
	// Specifies custom image. The format is Organization name/Image name:Image version.
	// This parameter is valid only when feature is set to `custom`. You can use this parameter with the feature parameter
	// to specify a user-defined Flink image for job running. For details about how to use custom images, see the
	// Data Lake Insight User Guide <https://support.huaweicloud.com/en-us/usermanual-dli/dli_01_0494.html>.
	Image pulumi.StringPtrInput
	// Specifies whether to enable the function of uploading job logs to users' OBS buckets.
	// The default value is `false`.
	LogEnabled pulumi.BoolPtrInput
	// Specifies job entry class. Default main class is specified by the Manifest file
	// of the application.
	MainClass pulumi.StringPtrInput
	// Specifies number of CUs in the JobManager selected for a job.
	// The default value is `1`.
	ManagerCuNum pulumi.IntPtrInput
	// Specifies the name of the job. Length range: `1` to `57` characters.
	// Which may consist of letters, digits, underscores (_) and hyphens (-).
	Name pulumi.StringPtrInput
	// Specifies OBS path. OBS path where users are authorized to save the log.
	// This parameter is valid only when `logEnabled` is set to `true`.
	ObsBucket pulumi.StringPtrInput
	// Specifies number of parallel for a job. The default value is `1`.
	ParallelNum pulumi.IntPtrInput
	// Specifies the name of DLI queue which this job run in. The type of queue
	// must be `general`.
	QueueName pulumi.StringPtrInput
	// The region in which to create the DLI flink job resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies whether to enable the function of restart upon exceptions.
	// The default value is `false`.
	RestartWhenException pulumi.BoolPtrInput
	// Specifies whether the abnormal restart is recovered from the checkpoint.
	ResumeCheckpoint pulumi.BoolPtrInput
	// Specifies maximum number of retry times upon exceptions. The unit is
	// `times/hour`. Value range: `-1` or greater than `0`. The default value is `-1`, indicating that the number of times is
	// unlimited.
	ResumeMaxNum pulumi.IntPtrInput
	// Specifies customizes optimization parameters when a Flink job is running.
	RuntimeConfig pulumi.StringMapInput
	// Specifies SMN topic. If a job fails, the system will send a message to users
	// subscribed to the SMN topic.
	SmnTopic pulumi.StringPtrInput
	// The Job status.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the resource.
	Tags pulumi.StringMapInput
	// Specifies number of CUs for each TaskManager. The default value is `1`.
	TmCuNum pulumi.IntPtrInput
	// Specifies number of slots in each TaskManager.
	// The default value is `(parallel_num * tm_cu_num) / (cu_num - manager_cu_num)`.
	TmSlotNum pulumi.IntPtrInput
}

func (FlinkjarJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkjarJobState)(nil)).Elem()
}

type flinkjarJobArgs struct {
	// Specifies storage address of the checkpoint in the JAR file of the user.
	// The path must be unique.
	CheckpointPath *string `pulumi:"checkpointPath"`
	// Specifies number of CUs selected for a job. The default value is `2`.
	CuNum *int `pulumi:"cuNum"`
	// Specifies dependency files. It is the name of the package that has been
	// uploaded to the DLI.
	DependencyFiles []string `pulumi:"dependencyFiles"`
	// Specifies other dependency jars. It is the name of the package that
	// has been uploaded to the DLI.
	DependencyJars []string `pulumi:"dependencyJars"`
	// Specifies job description. Length range: `1` to `512` characters.
	Description *string `pulumi:"description"`
	// Specifies the JAR file where the job main class is located. It is the name of the
	// package that has been uploaded to the DLI.
	Entrypoint *string `pulumi:"entrypoint"`
	// Specifies job entry arguments. Multiple arguments are separated by spaces.
	// The arguments are keys followed by values. Keys have to start with '-' or '--'.
	EntrypointArgs *string `pulumi:"entrypointArgs"`
	// Specifies job feature. Type of the Flink image used by a job.
	// + **basic**: indicates that the basic Flink image provided by DLI is used.
	// + **custom**: indicates that the user-defined Flink image is used.
	Feature *string `pulumi:"feature"`
	// Specifies flink version. This parameter is valid only when feature is set
	// to basic. You can use this parameter with the feature parameter to specify the version of the DLI basic Flink image
	// used for job running. The options are as follows: `1.10` and `1.7`.
	FlinkVersion *string `pulumi:"flinkVersion"`
	// Specifies custom image. The format is Organization name/Image name:Image version.
	// This parameter is valid only when feature is set to `custom`. You can use this parameter with the feature parameter
	// to specify a user-defined Flink image for job running. For details about how to use custom images, see the
	// Data Lake Insight User Guide <https://support.huaweicloud.com/en-us/usermanual-dli/dli_01_0494.html>.
	Image *string `pulumi:"image"`
	// Specifies whether to enable the function of uploading job logs to users' OBS buckets.
	// The default value is `false`.
	LogEnabled *bool `pulumi:"logEnabled"`
	// Specifies job entry class. Default main class is specified by the Manifest file
	// of the application.
	MainClass *string `pulumi:"mainClass"`
	// Specifies number of CUs in the JobManager selected for a job.
	// The default value is `1`.
	ManagerCuNum *int `pulumi:"managerCuNum"`
	// Specifies the name of the job. Length range: `1` to `57` characters.
	// Which may consist of letters, digits, underscores (_) and hyphens (-).
	Name *string `pulumi:"name"`
	// Specifies OBS path. OBS path where users are authorized to save the log.
	// This parameter is valid only when `logEnabled` is set to `true`.
	ObsBucket *string `pulumi:"obsBucket"`
	// Specifies number of parallel for a job. The default value is `1`.
	ParallelNum *int `pulumi:"parallelNum"`
	// Specifies the name of DLI queue which this job run in. The type of queue
	// must be `general`.
	QueueName *string `pulumi:"queueName"`
	// The region in which to create the DLI flink job resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies whether to enable the function of restart upon exceptions.
	// The default value is `false`.
	RestartWhenException *bool `pulumi:"restartWhenException"`
	// Specifies whether the abnormal restart is recovered from the checkpoint.
	ResumeCheckpoint *bool `pulumi:"resumeCheckpoint"`
	// Specifies maximum number of retry times upon exceptions. The unit is
	// `times/hour`. Value range: `-1` or greater than `0`. The default value is `-1`, indicating that the number of times is
	// unlimited.
	ResumeMaxNum *int `pulumi:"resumeMaxNum"`
	// Specifies customizes optimization parameters when a Flink job is running.
	RuntimeConfig map[string]string `pulumi:"runtimeConfig"`
	// Specifies SMN topic. If a job fails, the system will send a message to users
	// subscribed to the SMN topic.
	SmnTopic *string `pulumi:"smnTopic"`
	// Specifies the key/value pairs to associate with the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies number of CUs for each TaskManager. The default value is `1`.
	TmCuNum *int `pulumi:"tmCuNum"`
	// Specifies number of slots in each TaskManager.
	// The default value is `(parallel_num * tm_cu_num) / (cu_num - manager_cu_num)`.
	TmSlotNum *int `pulumi:"tmSlotNum"`
}

// The set of arguments for constructing a FlinkjarJob resource.
type FlinkjarJobArgs struct {
	// Specifies storage address of the checkpoint in the JAR file of the user.
	// The path must be unique.
	CheckpointPath pulumi.StringPtrInput
	// Specifies number of CUs selected for a job. The default value is `2`.
	CuNum pulumi.IntPtrInput
	// Specifies dependency files. It is the name of the package that has been
	// uploaded to the DLI.
	DependencyFiles pulumi.StringArrayInput
	// Specifies other dependency jars. It is the name of the package that
	// has been uploaded to the DLI.
	DependencyJars pulumi.StringArrayInput
	// Specifies job description. Length range: `1` to `512` characters.
	Description pulumi.StringPtrInput
	// Specifies the JAR file where the job main class is located. It is the name of the
	// package that has been uploaded to the DLI.
	Entrypoint pulumi.StringPtrInput
	// Specifies job entry arguments. Multiple arguments are separated by spaces.
	// The arguments are keys followed by values. Keys have to start with '-' or '--'.
	EntrypointArgs pulumi.StringPtrInput
	// Specifies job feature. Type of the Flink image used by a job.
	// + **basic**: indicates that the basic Flink image provided by DLI is used.
	// + **custom**: indicates that the user-defined Flink image is used.
	Feature pulumi.StringPtrInput
	// Specifies flink version. This parameter is valid only when feature is set
	// to basic. You can use this parameter with the feature parameter to specify the version of the DLI basic Flink image
	// used for job running. The options are as follows: `1.10` and `1.7`.
	FlinkVersion pulumi.StringPtrInput
	// Specifies custom image. The format is Organization name/Image name:Image version.
	// This parameter is valid only when feature is set to `custom`. You can use this parameter with the feature parameter
	// to specify a user-defined Flink image for job running. For details about how to use custom images, see the
	// Data Lake Insight User Guide <https://support.huaweicloud.com/en-us/usermanual-dli/dli_01_0494.html>.
	Image pulumi.StringPtrInput
	// Specifies whether to enable the function of uploading job logs to users' OBS buckets.
	// The default value is `false`.
	LogEnabled pulumi.BoolPtrInput
	// Specifies job entry class. Default main class is specified by the Manifest file
	// of the application.
	MainClass pulumi.StringPtrInput
	// Specifies number of CUs in the JobManager selected for a job.
	// The default value is `1`.
	ManagerCuNum pulumi.IntPtrInput
	// Specifies the name of the job. Length range: `1` to `57` characters.
	// Which may consist of letters, digits, underscores (_) and hyphens (-).
	Name pulumi.StringPtrInput
	// Specifies OBS path. OBS path where users are authorized to save the log.
	// This parameter is valid only when `logEnabled` is set to `true`.
	ObsBucket pulumi.StringPtrInput
	// Specifies number of parallel for a job. The default value is `1`.
	ParallelNum pulumi.IntPtrInput
	// Specifies the name of DLI queue which this job run in. The type of queue
	// must be `general`.
	QueueName pulumi.StringPtrInput
	// The region in which to create the DLI flink job resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies whether to enable the function of restart upon exceptions.
	// The default value is `false`.
	RestartWhenException pulumi.BoolPtrInput
	// Specifies whether the abnormal restart is recovered from the checkpoint.
	ResumeCheckpoint pulumi.BoolPtrInput
	// Specifies maximum number of retry times upon exceptions. The unit is
	// `times/hour`. Value range: `-1` or greater than `0`. The default value is `-1`, indicating that the number of times is
	// unlimited.
	ResumeMaxNum pulumi.IntPtrInput
	// Specifies customizes optimization parameters when a Flink job is running.
	RuntimeConfig pulumi.StringMapInput
	// Specifies SMN topic. If a job fails, the system will send a message to users
	// subscribed to the SMN topic.
	SmnTopic pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the resource.
	Tags pulumi.StringMapInput
	// Specifies number of CUs for each TaskManager. The default value is `1`.
	TmCuNum pulumi.IntPtrInput
	// Specifies number of slots in each TaskManager.
	// The default value is `(parallel_num * tm_cu_num) / (cu_num - manager_cu_num)`.
	TmSlotNum pulumi.IntPtrInput
}

func (FlinkjarJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkjarJobArgs)(nil)).Elem()
}

type FlinkjarJobInput interface {
	pulumi.Input

	ToFlinkjarJobOutput() FlinkjarJobOutput
	ToFlinkjarJobOutputWithContext(ctx context.Context) FlinkjarJobOutput
}

func (*FlinkjarJob) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkjarJob)(nil)).Elem()
}

func (i *FlinkjarJob) ToFlinkjarJobOutput() FlinkjarJobOutput {
	return i.ToFlinkjarJobOutputWithContext(context.Background())
}

func (i *FlinkjarJob) ToFlinkjarJobOutputWithContext(ctx context.Context) FlinkjarJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkjarJobOutput)
}

// FlinkjarJobArrayInput is an input type that accepts FlinkjarJobArray and FlinkjarJobArrayOutput values.
// You can construct a concrete instance of `FlinkjarJobArrayInput` via:
//
//	FlinkjarJobArray{ FlinkjarJobArgs{...} }
type FlinkjarJobArrayInput interface {
	pulumi.Input

	ToFlinkjarJobArrayOutput() FlinkjarJobArrayOutput
	ToFlinkjarJobArrayOutputWithContext(context.Context) FlinkjarJobArrayOutput
}

type FlinkjarJobArray []FlinkjarJobInput

func (FlinkjarJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkjarJob)(nil)).Elem()
}

func (i FlinkjarJobArray) ToFlinkjarJobArrayOutput() FlinkjarJobArrayOutput {
	return i.ToFlinkjarJobArrayOutputWithContext(context.Background())
}

func (i FlinkjarJobArray) ToFlinkjarJobArrayOutputWithContext(ctx context.Context) FlinkjarJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkjarJobArrayOutput)
}

// FlinkjarJobMapInput is an input type that accepts FlinkjarJobMap and FlinkjarJobMapOutput values.
// You can construct a concrete instance of `FlinkjarJobMapInput` via:
//
//	FlinkjarJobMap{ "key": FlinkjarJobArgs{...} }
type FlinkjarJobMapInput interface {
	pulumi.Input

	ToFlinkjarJobMapOutput() FlinkjarJobMapOutput
	ToFlinkjarJobMapOutputWithContext(context.Context) FlinkjarJobMapOutput
}

type FlinkjarJobMap map[string]FlinkjarJobInput

func (FlinkjarJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkjarJob)(nil)).Elem()
}

func (i FlinkjarJobMap) ToFlinkjarJobMapOutput() FlinkjarJobMapOutput {
	return i.ToFlinkjarJobMapOutputWithContext(context.Background())
}

func (i FlinkjarJobMap) ToFlinkjarJobMapOutputWithContext(ctx context.Context) FlinkjarJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkjarJobMapOutput)
}

type FlinkjarJobOutput struct{ *pulumi.OutputState }

func (FlinkjarJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkjarJob)(nil)).Elem()
}

func (o FlinkjarJobOutput) ToFlinkjarJobOutput() FlinkjarJobOutput {
	return o
}

func (o FlinkjarJobOutput) ToFlinkjarJobOutputWithContext(ctx context.Context) FlinkjarJobOutput {
	return o
}

// Specifies storage address of the checkpoint in the JAR file of the user.
// The path must be unique.
func (o FlinkjarJobOutput) CheckpointPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.CheckpointPath }).(pulumi.StringPtrOutput)
}

// Specifies number of CUs selected for a job. The default value is `2`.
func (o FlinkjarJobOutput) CuNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.IntPtrOutput { return v.CuNum }).(pulumi.IntPtrOutput)
}

// Specifies dependency files. It is the name of the package that has been
// uploaded to the DLI.
func (o FlinkjarJobOutput) DependencyFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringArrayOutput { return v.DependencyFiles }).(pulumi.StringArrayOutput)
}

// Specifies other dependency jars. It is the name of the package that
// has been uploaded to the DLI.
func (o FlinkjarJobOutput) DependencyJars() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringArrayOutput { return v.DependencyJars }).(pulumi.StringArrayOutput)
}

// Specifies job description. Length range: `1` to `512` characters.
func (o FlinkjarJobOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the JAR file where the job main class is located. It is the name of the
// package that has been uploaded to the DLI.
func (o FlinkjarJobOutput) Entrypoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.Entrypoint }).(pulumi.StringPtrOutput)
}

// Specifies job entry arguments. Multiple arguments are separated by spaces.
// The arguments are keys followed by values. Keys have to start with '-' or '--'.
func (o FlinkjarJobOutput) EntrypointArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.EntrypointArgs }).(pulumi.StringPtrOutput)
}

// Specifies job feature. Type of the Flink image used by a job.
// + **basic**: indicates that the basic Flink image provided by DLI is used.
// + **custom**: indicates that the user-defined Flink image is used.
func (o FlinkjarJobOutput) Feature() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringOutput { return v.Feature }).(pulumi.StringOutput)
}

// Specifies flink version. This parameter is valid only when feature is set
// to basic. You can use this parameter with the feature parameter to specify the version of the DLI basic Flink image
// used for job running. The options are as follows: `1.10` and `1.7`.
func (o FlinkjarJobOutput) FlinkVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringOutput { return v.FlinkVersion }).(pulumi.StringOutput)
}

// Specifies custom image. The format is Organization name/Image name:Image version.
// This parameter is valid only when feature is set to `custom`. You can use this parameter with the feature parameter
// to specify a user-defined Flink image for job running. For details about how to use custom images, see the
// Data Lake Insight User Guide <https://support.huaweicloud.com/en-us/usermanual-dli/dli_01_0494.html>.
func (o FlinkjarJobOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.Image }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable the function of uploading job logs to users' OBS buckets.
// The default value is `false`.
func (o FlinkjarJobOutput) LogEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.BoolPtrOutput { return v.LogEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies job entry class. Default main class is specified by the Manifest file
// of the application.
func (o FlinkjarJobOutput) MainClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.MainClass }).(pulumi.StringPtrOutput)
}

// Specifies number of CUs in the JobManager selected for a job.
// The default value is `1`.
func (o FlinkjarJobOutput) ManagerCuNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.IntPtrOutput { return v.ManagerCuNum }).(pulumi.IntPtrOutput)
}

// Specifies the name of the job. Length range: `1` to `57` characters.
// Which may consist of letters, digits, underscores (_) and hyphens (-).
func (o FlinkjarJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies OBS path. OBS path where users are authorized to save the log.
// This parameter is valid only when `logEnabled` is set to `true`.
func (o FlinkjarJobOutput) ObsBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.ObsBucket }).(pulumi.StringPtrOutput)
}

// Specifies number of parallel for a job. The default value is `1`.
func (o FlinkjarJobOutput) ParallelNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.IntPtrOutput { return v.ParallelNum }).(pulumi.IntPtrOutput)
}

// Specifies the name of DLI queue which this job run in. The type of queue
// must be `general`.
func (o FlinkjarJobOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringOutput { return v.QueueName }).(pulumi.StringOutput)
}

// The region in which to create the DLI flink job resource. If omitted, the
// provider-level region will be used. Changing this parameter will create a new resource.
func (o FlinkjarJobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies whether to enable the function of restart upon exceptions.
// The default value is `false`.
func (o FlinkjarJobOutput) RestartWhenException() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.BoolPtrOutput { return v.RestartWhenException }).(pulumi.BoolPtrOutput)
}

// Specifies whether the abnormal restart is recovered from the checkpoint.
func (o FlinkjarJobOutput) ResumeCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.BoolPtrOutput { return v.ResumeCheckpoint }).(pulumi.BoolPtrOutput)
}

// Specifies maximum number of retry times upon exceptions. The unit is
// `times/hour`. Value range: `-1` or greater than `0`. The default value is `-1`, indicating that the number of times is
// unlimited.
func (o FlinkjarJobOutput) ResumeMaxNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.IntPtrOutput { return v.ResumeMaxNum }).(pulumi.IntPtrOutput)
}

// Specifies customizes optimization parameters when a Flink job is running.
func (o FlinkjarJobOutput) RuntimeConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringMapOutput { return v.RuntimeConfig }).(pulumi.StringMapOutput)
}

// Specifies SMN topic. If a job fails, the system will send a message to users
// subscribed to the SMN topic.
func (o FlinkjarJobOutput) SmnTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringPtrOutput { return v.SmnTopic }).(pulumi.StringPtrOutput)
}

// The Job status.
func (o FlinkjarJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the resource.
func (o FlinkjarJobOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies number of CUs for each TaskManager. The default value is `1`.
func (o FlinkjarJobOutput) TmCuNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.IntPtrOutput { return v.TmCuNum }).(pulumi.IntPtrOutput)
}

// Specifies number of slots in each TaskManager.
// The default value is `(parallel_num * tm_cu_num) / (cu_num - manager_cu_num)`.
func (o FlinkjarJobOutput) TmSlotNum() pulumi.IntOutput {
	return o.ApplyT(func(v *FlinkjarJob) pulumi.IntOutput { return v.TmSlotNum }).(pulumi.IntOutput)
}

type FlinkjarJobArrayOutput struct{ *pulumi.OutputState }

func (FlinkjarJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkjarJob)(nil)).Elem()
}

func (o FlinkjarJobArrayOutput) ToFlinkjarJobArrayOutput() FlinkjarJobArrayOutput {
	return o
}

func (o FlinkjarJobArrayOutput) ToFlinkjarJobArrayOutputWithContext(ctx context.Context) FlinkjarJobArrayOutput {
	return o
}

func (o FlinkjarJobArrayOutput) Index(i pulumi.IntInput) FlinkjarJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkjarJob {
		return vs[0].([]*FlinkjarJob)[vs[1].(int)]
	}).(FlinkjarJobOutput)
}

type FlinkjarJobMapOutput struct{ *pulumi.OutputState }

func (FlinkjarJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkjarJob)(nil)).Elem()
}

func (o FlinkjarJobMapOutput) ToFlinkjarJobMapOutput() FlinkjarJobMapOutput {
	return o
}

func (o FlinkjarJobMapOutput) ToFlinkjarJobMapOutputWithContext(ctx context.Context) FlinkjarJobMapOutput {
	return o
}

func (o FlinkjarJobMapOutput) MapIndex(k pulumi.StringInput) FlinkjarJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkjarJob {
		return vs[0].(map[string]*FlinkjarJob)[vs[1].(string)]
	}).(FlinkjarJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkjarJobInput)(nil)).Elem(), &FlinkjarJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkjarJobArrayInput)(nil)).Elem(), FlinkjarJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkjarJobMapInput)(nil)).Elem(), FlinkjarJobMap{})
	pulumi.RegisterOutputType(FlinkjarJobOutput{})
	pulumi.RegisterOutputType(FlinkjarJobArrayOutput{})
	pulumi.RegisterOutputType(FlinkjarJobMapOutput{})
}
