// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage RDS instance resource within HuaweiCloud.
//
// ## Example Usage
// ### create a single db instance
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			secgroup, err := Vpc.NewSecgroup(ctx, "secgroup", &Vpc.SecgroupArgs{
//				Description: pulumi.String("terraform security group acceptance test"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Rds.NewInstance(ctx, "instance", &Rds.InstanceArgs{
//				Flavor:          pulumi.String("rds.pg.n1.large.2"),
//				VpcId:           pulumi.String("{{ vpc_id }}"),
//				SubnetId:        pulumi.String("{{ subnet_id }}"),
//				SecurityGroupId: secgroup.ID(),
//				AvailabilityZones: pulumi.StringArray{
//					pulumi.String("{{ availability_zone }}"),
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.String("Huangwei!120521"),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type: pulumi.String("ULTRAHIGH"),
//					Size: pulumi.Int(100),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### create a primary/standby db instance
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			secgroup, err := Vpc.NewSecgroup(ctx, "secgroup", &Vpc.SecgroupArgs{
//				Description: pulumi.String("terraform security group acceptance test"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Rds.NewInstance(ctx, "instance", &Rds.InstanceArgs{
//				Flavor:            pulumi.String("rds.pg.n1.large.2.ha"),
//				HaReplicationMode: pulumi.String("async"),
//				VpcId:             pulumi.String("{{ vpc_id }}"),
//				SubnetId:          pulumi.String("{{ subnet_id }}"),
//				SecurityGroupId:   secgroup.ID(),
//				AvailabilityZones: pulumi.StringArray{
//					pulumi.String("{{ availability_zone_1 }}"),
//					pulumi.String("{{ availability_zone_2 }}"),
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.String("Huangwei!120521"),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type: pulumi.String("ULTRAHIGH"),
//					Size: pulumi.Int(100),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### create a single db instance with encrypted volume
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Dew"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			key, err := Dew.NewKey(ctx, "key", &Dew.KeyArgs{
//				KeyAlias:       pulumi.String("key_1"),
//				KeyDescription: pulumi.String("first test key"),
//				IsEnabled:      pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			secgroup, err := Vpc.NewSecgroup(ctx, "secgroup", &Vpc.SecgroupArgs{
//				Description: pulumi.String("security group acceptance test"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Rds.NewInstance(ctx, "instance", &Rds.InstanceArgs{
//				Flavor:          pulumi.String("rds.pg.n1.large.2"),
//				VpcId:           pulumi.String("{{ vpc_id }}"),
//				SubnetId:        pulumi.String("{{ subnet_id }}"),
//				SecurityGroupId: secgroup.ID(),
//				AvailabilityZones: pulumi.StringArray{
//					pulumi.String("{{ availability_zone }}"),
//				},
//				Db: &rds.InstanceDbArgs{
//					Type:     pulumi.String("PostgreSQL"),
//					Version:  pulumi.String("12"),
//					Password: pulumi.String("Huangwei!120521"),
//				},
//				Volume: &rds.InstanceVolumeArgs{
//					Type:             pulumi.String("ULTRAHIGH"),
//					Size:             pulumi.Int(100),
//					DiskEncryptionId: key.ID(),
//				},
//				BackupStrategy: &rds.InstanceBackupStrategyArgs{
//					StartTime: pulumi.String("08:00-09:00"),
//					KeepDays:  pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RDS instance can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:Rds/instance:Instance instance_1 7117d38e-4c8f-4624-a505-bd96b97d024c
//
// ```
//
//	But due to some attributes missing from the API response, it's required to ignore changes as below. resource "huaweicloud_rds_instance" "instance_1" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	"db", "collation"
//
//	]
//
//	} }
type Instance struct {
	pulumi.CustomResourceState

	AutoPay pulumi.StringPtrOutput `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy InstanceBackupStrategyOutput `pulumi:"backupStrategy"`
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// *prePaid* and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	// Changing this parameter will create a new resource.
	Collation pulumi.StringPtrOutput `pulumi:"collation"`
	// Indicates the creation time.
	Created pulumi.StringOutput `pulumi:"created"`
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDbOutput `pulumi:"db"`
	// The enterprise project id of the RDS instance. Changing this
	// parameter creates a new RDS instance.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies an intranet floating IP address of RDS DB instance. Changing this
	// parameter will create a new resource.
	FixedIp pulumi.StringOutput `pulumi:"fixedIp"`
	// Specifies the specification code.
	Flavor pulumi.StringOutput `pulumi:"flavor"`
	// Specifies the replication mode for the standby DB instance.
	// Changing this parameter will create a new resource.
	// + For MySQL, the value is *async* or *semisync*.
	// + For PostgreSQL, the value is *async* or *sync*.
	// + For Microsoft SQL Server, the value is *sync*.
	HaReplicationMode pulumi.StringOutput `pulumi:"haReplicationMode"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes InstanceNodeArrayOutput `pulumi:"nodes"`
	// Specifies the parameter group ID. Changing this parameter will create
	// a new resource.
	ParamGroupId pulumi.StringPtrOutput `pulumi:"paramGroupId"`
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to *month*, the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This
	// parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Indicates the private IP address list. It is a blank string until an ECS is created.
	PrivateIps pulumi.StringArrayOutput `pulumi:"privateIps"`
	// Indicates the public IP address list.
	PublicIps pulumi.StringArrayOutput `pulumi:"publicIps"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable pulumi.BoolPtrOutput `pulumi:"sslEnable"`
	// Indicates the node status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string, refer to
	// [HuaweiCloud Document](https://support.huaweicloud.com/intl/en-us/api-rds/rds_01_0002.html#rds_01_0002__table613473883617)
	// .
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolumeOutput `pulumi:"volume"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZones == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZones'")
	}
	if args.Db == nil {
		return nil, errors.New("invalid value for required argument 'Db'")
	}
	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Volume == nil {
		return nil, errors.New("invalid value for required argument 'Volume'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("huaweicloud:Rds/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("huaweicloud:Rds/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	AutoPay *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *InstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// *prePaid* and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	// Changing this parameter will create a new resource.
	Collation *string `pulumi:"collation"`
	// Indicates the creation time.
	Created *string `pulumi:"created"`
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db *InstanceDb `pulumi:"db"`
	// The enterprise project id of the RDS instance. Changing this
	// parameter creates a new RDS instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies an intranet floating IP address of RDS DB instance. Changing this
	// parameter will create a new resource.
	FixedIp *string `pulumi:"fixedIp"`
	// Specifies the specification code.
	Flavor *string `pulumi:"flavor"`
	// Specifies the replication mode for the standby DB instance.
	// Changing this parameter will create a new resource.
	// + For MySQL, the value is *async* or *semisync*.
	// + For PostgreSQL, the value is *async* or *sync*.
	// + For Microsoft SQL Server, the value is *sync*.
	HaReplicationMode *string `pulumi:"haReplicationMode"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []InstanceNode `pulumi:"nodes"`
	// Specifies the parameter group ID. Changing this parameter will create
	// a new resource.
	ParamGroupId *string `pulumi:"paramGroupId"`
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to *month*, the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This
	// parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Indicates the private IP address list. It is a blank string until an ECS is created.
	PrivateIps []string `pulumi:"privateIps"`
	// Indicates the public IP address list.
	PublicIps []string `pulumi:"publicIps"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region *string `pulumi:"region"`
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable *bool `pulumi:"sslEnable"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId *string `pulumi:"subnetId"`
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string, refer to
	// [HuaweiCloud Document](https://support.huaweicloud.com/intl/en-us/api-rds/rds_01_0002.html#rds_01_0002__table613473883617)
	// .
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume information. Structure is documented below.
	Volume *InstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type InstanceState struct {
	AutoPay pulumi.StringPtrInput
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew pulumi.StringPtrInput
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones pulumi.StringArrayInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy InstanceBackupStrategyPtrInput
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// *prePaid* and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	// Changing this parameter will create a new resource.
	Collation pulumi.StringPtrInput
	// Indicates the creation time.
	Created pulumi.StringPtrInput
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDbPtrInput
	// The enterprise project id of the RDS instance. Changing this
	// parameter creates a new RDS instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies an intranet floating IP address of RDS DB instance. Changing this
	// parameter will create a new resource.
	FixedIp pulumi.StringPtrInput
	// Specifies the specification code.
	Flavor pulumi.StringPtrInput
	// Specifies the replication mode for the standby DB instance.
	// Changing this parameter will create a new resource.
	// + For MySQL, the value is *async* or *semisync*.
	// + For PostgreSQL, the value is *async* or *sync*.
	// + For Microsoft SQL Server, the value is *sync*.
	HaReplicationMode pulumi.StringPtrInput
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput
	// Indicates the instance nodes information. Structure is documented below.
	Nodes InstanceNodeArrayInput
	// Specifies the parameter group ID. Changing this parameter will create
	// a new resource.
	ParamGroupId pulumi.StringPtrInput
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to *month*, the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This
	// parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	PeriodUnit pulumi.StringPtrInput
	// Indicates the private IP address list. It is a blank string until an ECS is created.
	PrivateIps pulumi.StringArrayInput
	// Indicates the public IP address list.
	PublicIps pulumi.StringArrayInput
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region pulumi.StringPtrInput
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable pulumi.BoolPtrInput
	// Indicates the node status.
	Status pulumi.StringPtrInput
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringPtrInput
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags pulumi.StringMapInput
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string, refer to
	// [HuaweiCloud Document](https://support.huaweicloud.com/intl/en-us/api-rds/rds_01_0002.html#rds_01_0002__table613473883617)
	// .
	TimeZone pulumi.StringPtrInput
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolumePtrInput
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	AutoPay *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *InstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// *prePaid* and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	// Changing this parameter will create a new resource.
	Collation *string `pulumi:"collation"`
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDb `pulumi:"db"`
	// The enterprise project id of the RDS instance. Changing this
	// parameter creates a new RDS instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies an intranet floating IP address of RDS DB instance. Changing this
	// parameter will create a new resource.
	FixedIp *string `pulumi:"fixedIp"`
	// Specifies the specification code.
	Flavor string `pulumi:"flavor"`
	// Specifies the replication mode for the standby DB instance.
	// Changing this parameter will create a new resource.
	// + For MySQL, the value is *async* or *semisync*.
	// + For PostgreSQL, the value is *async* or *sync*.
	// + For Microsoft SQL Server, the value is *sync*.
	HaReplicationMode *string `pulumi:"haReplicationMode"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Specifies the parameter group ID. Changing this parameter will create
	// a new resource.
	ParamGroupId *string `pulumi:"paramGroupId"`
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to *month*, the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This
	// parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region *string `pulumi:"region"`
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable *bool `pulumi:"sslEnable"`
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId string `pulumi:"subnetId"`
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string, refer to
	// [HuaweiCloud Document](https://support.huaweicloud.com/intl/en-us/api-rds/rds_01_0002.html#rds_01_0002__table613473883617)
	// .
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	AutoPay pulumi.StringPtrInput
	// Specifies whether auto renew is enabled. Valid values are "true" and "
	// false". Changing this creates a new resource.
	AutoRenew pulumi.StringPtrInput
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZones pulumi.StringArrayInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy InstanceBackupStrategyPtrInput
	// Specifies the charging mode of the RDS DB instance. Valid values are
	// *prePaid* and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
	// Changing this parameter will create a new resource.
	Collation pulumi.StringPtrInput
	// Specifies the database information. Structure is documented below. Changing this
	// parameter will create a new resource.
	Db InstanceDbInput
	// The enterprise project id of the RDS instance. Changing this
	// parameter creates a new RDS instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies an intranet floating IP address of RDS DB instance. Changing this
	// parameter will create a new resource.
	FixedIp pulumi.StringPtrInput
	// Specifies the specification code.
	Flavor pulumi.StringInput
	// Specifies the replication mode for the standby DB instance.
	// Changing this parameter will create a new resource.
	// + For MySQL, the value is *async* or *semisync*.
	// + For PostgreSQL, the value is *async* or *sync*.
	// + For Microsoft SQL Server, the value is *sync*.
	HaReplicationMode pulumi.StringPtrInput
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput
	// Specifies the parameter group ID. Changing this parameter will create
	// a new resource.
	ParamGroupId pulumi.StringPtrInput
	// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
	// to *month*, the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This
	// parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the RDS DB instance. Valid values
	// are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	PeriodUnit pulumi.StringPtrInput
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new rds instance resource.
	Region pulumi.StringPtrInput
	// Specifies the security group which the RDS DB instance belongs to.
	SecurityGroupId pulumi.StringInput
	// Specifies whether to enable the SSL for MySQL database.
	SslEnable pulumi.BoolPtrInput
	// Specifies the network id of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringInput
	// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
	// pair.
	Tags pulumi.StringMapInput
	// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
	// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
	// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
	// zone is expressed as a character string, refer to
	// [HuaweiCloud Document](https://support.huaweicloud.com/intl/en-us/api-rds/rds_01_0002.html#rds_01_0002__table613473883617)
	// .
	TimeZone pulumi.StringPtrInput
	// Specifies the volume information. Structure is documented below.
	Volume InstanceVolumeInput
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

func (o InstanceOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

// Specifies whether auto renew is enabled. Valid values are "true" and "
// false". Changing this creates a new resource.
func (o InstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the list of AZ name. Changing this parameter will create a
// new resource.
func (o InstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Specifies the advanced backup policy. Structure is documented below.
func (o InstanceOutput) BackupStrategy() InstanceBackupStrategyOutput {
	return o.ApplyT(func(v *Instance) InstanceBackupStrategyOutput { return v.BackupStrategy }).(InstanceBackupStrategyOutput)
}

// Specifies the charging mode of the RDS DB instance. Valid values are
// *prePaid* and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
func (o InstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies the Character Set, only available to Microsoft SQL Server DB instances.
// Changing this parameter will create a new resource.
func (o InstanceOutput) Collation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Collation }).(pulumi.StringPtrOutput)
}

// Indicates the creation time.
func (o InstanceOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Specifies the database information. Structure is documented below. Changing this
// parameter will create a new resource.
func (o InstanceOutput) Db() InstanceDbOutput {
	return o.ApplyT(func(v *Instance) InstanceDbOutput { return v.Db }).(InstanceDbOutput)
}

// The enterprise project id of the RDS instance. Changing this
// parameter creates a new RDS instance.
func (o InstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies an intranet floating IP address of RDS DB instance. Changing this
// parameter will create a new resource.
func (o InstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.FixedIp }).(pulumi.StringOutput)
}

// Specifies the specification code.
func (o InstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

// Specifies the replication mode for the standby DB instance.
// Changing this parameter will create a new resource.
// + For MySQL, the value is *async* or *semisync*.
// + For PostgreSQL, the value is *async* or *sync*.
// + For Microsoft SQL Server, the value is *sync*.
func (o InstanceOutput) HaReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.HaReplicationMode }).(pulumi.StringOutput)
}

// Specifies the DB instance name. The DB instance name of the same type must be unique for
// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
// contain only letters, digits, hyphens (-), and underscores (_).
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o InstanceOutput) Nodes() InstanceNodeArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNodeArrayOutput { return v.Nodes }).(InstanceNodeArrayOutput)
}

// Specifies the parameter group ID. Changing this parameter will create
// a new resource.
func (o InstanceOutput) ParamGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ParamGroupId }).(pulumi.StringPtrOutput)
}

// Specifies the charging period of the RDS DB instance. If `periodUnit` is set
// to *month*, the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This
// parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
func (o InstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the RDS DB instance. Valid values
// are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
// new resource.
func (o InstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address list. It is a blank string until an ECS is created.
func (o InstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Indicates the public IP address list.
func (o InstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// The region in which to create the rds instance resource. If omitted, the
// provider-level region will be used. Changing this creates a new rds instance resource.
func (o InstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the security group which the RDS DB instance belongs to.
func (o InstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies whether to enable the SSL for MySQL database.
func (o InstanceOutput) SslEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.SslEnable }).(pulumi.BoolPtrOutput)
}

// Indicates the node status.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network id of a subnet. Changing this parameter will create a
// new resource.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the RDS instance. Each tag is represented by one key-value
// pair.
func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the UTC time zone. For MySQL and PostgreSQL Chinese mainland site
// and international site use UTC by default. The value ranges from UTC-12:00 to UTC+12:00 at the full hour. For
// Microsoft SQL Server international site use UTC by default and Chinese mainland site use China Standard Time. The time
// zone is expressed as a character string, refer to
// [HuaweiCloud Document](https://support.huaweicloud.com/intl/en-us/api-rds/rds_01_0002.html#rds_01_0002__table613473883617)
// .
func (o InstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// Specifies the volume information. Structure is documented below.
func (o InstanceOutput) Volume() InstanceVolumeOutput {
	return o.ApplyT(func(v *Instance) InstanceVolumeOutput { return v.Volume }).(InstanceVolumeOutput)
}

// Specifies the VPC ID. Changing this parameter will create a new resource.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
