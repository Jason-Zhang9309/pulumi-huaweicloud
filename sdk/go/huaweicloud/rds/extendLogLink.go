// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an RDS extend log link resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			fileName := cfg.RequireObject("fileName")
//			_, err := Rds.NewExtendLogLink(ctx, "test", &Rds.ExtendLogLinkArgs{
//				InstanceId: pulumi.Any(instanceId),
//				FileName:   pulumi.Any(fileName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ExtendLogLink struct {
	pulumi.CustomResourceState

	// Indicates the creation time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Indicates the download link.
	FileLink pulumi.StringOutput `pulumi:"fileLink"`
	// Specifies the name of the file to be downloaded.
	FileName pulumi.StringOutput `pulumi:"fileName"`
	// Indicates the file size in KB.
	FileSize pulumi.StringOutput `pulumi:"fileSize"`
	// Specifies the ID of the RDS instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Indicates the last update time.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewExtendLogLink registers a new resource with the given unique name, arguments, and options.
func NewExtendLogLink(ctx *pulumi.Context,
	name string, args *ExtendLogLinkArgs, opts ...pulumi.ResourceOption) (*ExtendLogLink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileName == nil {
		return nil, errors.New("invalid value for required argument 'FileName'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ExtendLogLink
	err := ctx.RegisterResource("huaweicloud:Rds/extendLogLink:ExtendLogLink", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExtendLogLink gets an existing ExtendLogLink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExtendLogLink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExtendLogLinkState, opts ...pulumi.ResourceOption) (*ExtendLogLink, error) {
	var resource ExtendLogLink
	err := ctx.ReadResource("huaweicloud:Rds/extendLogLink:ExtendLogLink", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExtendLogLink resources.
type extendLogLinkState struct {
	// Indicates the creation time.
	CreatedAt *string `pulumi:"createdAt"`
	// Indicates the download link.
	FileLink *string `pulumi:"fileLink"`
	// Specifies the name of the file to be downloaded.
	FileName *string `pulumi:"fileName"`
	// Indicates the file size in KB.
	FileSize *string `pulumi:"fileSize"`
	// Specifies the ID of the RDS instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Indicates the last update time.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type ExtendLogLinkState struct {
	// Indicates the creation time.
	CreatedAt pulumi.StringPtrInput
	// Indicates the download link.
	FileLink pulumi.StringPtrInput
	// Specifies the name of the file to be downloaded.
	FileName pulumi.StringPtrInput
	// Indicates the file size in KB.
	FileSize pulumi.StringPtrInput
	// Specifies the ID of the RDS instance.
	InstanceId pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Indicates the last update time.
	UpdatedAt pulumi.StringPtrInput
}

func (ExtendLogLinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*extendLogLinkState)(nil)).Elem()
}

type extendLogLinkArgs struct {
	// Specifies the name of the file to be downloaded.
	FileName string `pulumi:"fileName"`
	// Specifies the ID of the RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a ExtendLogLink resource.
type ExtendLogLinkArgs struct {
	// Specifies the name of the file to be downloaded.
	FileName pulumi.StringInput
	// Specifies the ID of the RDS instance.
	InstanceId pulumi.StringInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
}

func (ExtendLogLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*extendLogLinkArgs)(nil)).Elem()
}

type ExtendLogLinkInput interface {
	pulumi.Input

	ToExtendLogLinkOutput() ExtendLogLinkOutput
	ToExtendLogLinkOutputWithContext(ctx context.Context) ExtendLogLinkOutput
}

func (*ExtendLogLink) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendLogLink)(nil)).Elem()
}

func (i *ExtendLogLink) ToExtendLogLinkOutput() ExtendLogLinkOutput {
	return i.ToExtendLogLinkOutputWithContext(context.Background())
}

func (i *ExtendLogLink) ToExtendLogLinkOutputWithContext(ctx context.Context) ExtendLogLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendLogLinkOutput)
}

// ExtendLogLinkArrayInput is an input type that accepts ExtendLogLinkArray and ExtendLogLinkArrayOutput values.
// You can construct a concrete instance of `ExtendLogLinkArrayInput` via:
//
//	ExtendLogLinkArray{ ExtendLogLinkArgs{...} }
type ExtendLogLinkArrayInput interface {
	pulumi.Input

	ToExtendLogLinkArrayOutput() ExtendLogLinkArrayOutput
	ToExtendLogLinkArrayOutputWithContext(context.Context) ExtendLogLinkArrayOutput
}

type ExtendLogLinkArray []ExtendLogLinkInput

func (ExtendLogLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtendLogLink)(nil)).Elem()
}

func (i ExtendLogLinkArray) ToExtendLogLinkArrayOutput() ExtendLogLinkArrayOutput {
	return i.ToExtendLogLinkArrayOutputWithContext(context.Background())
}

func (i ExtendLogLinkArray) ToExtendLogLinkArrayOutputWithContext(ctx context.Context) ExtendLogLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendLogLinkArrayOutput)
}

// ExtendLogLinkMapInput is an input type that accepts ExtendLogLinkMap and ExtendLogLinkMapOutput values.
// You can construct a concrete instance of `ExtendLogLinkMapInput` via:
//
//	ExtendLogLinkMap{ "key": ExtendLogLinkArgs{...} }
type ExtendLogLinkMapInput interface {
	pulumi.Input

	ToExtendLogLinkMapOutput() ExtendLogLinkMapOutput
	ToExtendLogLinkMapOutputWithContext(context.Context) ExtendLogLinkMapOutput
}

type ExtendLogLinkMap map[string]ExtendLogLinkInput

func (ExtendLogLinkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtendLogLink)(nil)).Elem()
}

func (i ExtendLogLinkMap) ToExtendLogLinkMapOutput() ExtendLogLinkMapOutput {
	return i.ToExtendLogLinkMapOutputWithContext(context.Background())
}

func (i ExtendLogLinkMap) ToExtendLogLinkMapOutputWithContext(ctx context.Context) ExtendLogLinkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendLogLinkMapOutput)
}

type ExtendLogLinkOutput struct{ *pulumi.OutputState }

func (ExtendLogLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendLogLink)(nil)).Elem()
}

func (o ExtendLogLinkOutput) ToExtendLogLinkOutput() ExtendLogLinkOutput {
	return o
}

func (o ExtendLogLinkOutput) ToExtendLogLinkOutputWithContext(ctx context.Context) ExtendLogLinkOutput {
	return o
}

// Indicates the creation time.
func (o ExtendLogLinkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates the download link.
func (o ExtendLogLinkOutput) FileLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.FileLink }).(pulumi.StringOutput)
}

// Specifies the name of the file to be downloaded.
func (o ExtendLogLinkOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.FileName }).(pulumi.StringOutput)
}

// Indicates the file size in KB.
func (o ExtendLogLinkOutput) FileSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.FileSize }).(pulumi.StringOutput)
}

// Specifies the ID of the RDS instance.
func (o ExtendLogLinkOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o ExtendLogLinkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates the last update time.
func (o ExtendLogLinkOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ExtendLogLink) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ExtendLogLinkArrayOutput struct{ *pulumi.OutputState }

func (ExtendLogLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExtendLogLink)(nil)).Elem()
}

func (o ExtendLogLinkArrayOutput) ToExtendLogLinkArrayOutput() ExtendLogLinkArrayOutput {
	return o
}

func (o ExtendLogLinkArrayOutput) ToExtendLogLinkArrayOutputWithContext(ctx context.Context) ExtendLogLinkArrayOutput {
	return o
}

func (o ExtendLogLinkArrayOutput) Index(i pulumi.IntInput) ExtendLogLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExtendLogLink {
		return vs[0].([]*ExtendLogLink)[vs[1].(int)]
	}).(ExtendLogLinkOutput)
}

type ExtendLogLinkMapOutput struct{ *pulumi.OutputState }

func (ExtendLogLinkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExtendLogLink)(nil)).Elem()
}

func (o ExtendLogLinkMapOutput) ToExtendLogLinkMapOutput() ExtendLogLinkMapOutput {
	return o
}

func (o ExtendLogLinkMapOutput) ToExtendLogLinkMapOutputWithContext(ctx context.Context) ExtendLogLinkMapOutput {
	return o
}

func (o ExtendLogLinkMapOutput) MapIndex(k pulumi.StringInput) ExtendLogLinkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExtendLogLink {
		return vs[0].(map[string]*ExtendLogLink)[vs[1].(string)]
	}).(ExtendLogLinkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendLogLinkInput)(nil)).Elem(), &ExtendLogLink{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendLogLinkArrayInput)(nil)).Elem(), ExtendLogLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtendLogLinkMapInput)(nil)).Elem(), ExtendLogLinkMap{})
	pulumi.RegisterOutputType(ExtendLogLinkOutput{})
	pulumi.RegisterOutputType(ExtendLogLinkArrayOutput{})
	pulumi.RegisterOutputType(ExtendLogLinkMapOutput{})
}
