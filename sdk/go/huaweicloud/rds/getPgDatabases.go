// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS PostgreSQL databases.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetPgDatabases(ctx, &rds.GetPgDatabasesArgs{
//				InstanceId: instanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPgDatabases(ctx *pulumi.Context, args *GetPgDatabasesArgs, opts ...pulumi.InvokeOption) (*GetPgDatabasesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPgDatabasesResult
	err := ctx.Invoke("huaweicloud:Rds/getPgDatabases:getPgDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPgDatabases.
type GetPgDatabasesArgs struct {
	// Specifies the character set used by the database.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	CharacterSet *string `pulumi:"characterSet"`
	// Specifies the PostgreSQL instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the database collation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	LcCollate *string `pulumi:"lcCollate"`
	// Specifies the database name.
	Name *string `pulumi:"name"`
	// Specifies the database owner.
	Owner *string `pulumi:"owner"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the database size, in bytes.
	Size *int `pulumi:"size"`
}

// A collection of values returned by getPgDatabases.
type GetPgDatabasesResult struct {
	// Indicates the character set used by the database.
	CharacterSet *string `pulumi:"characterSet"`
	// Indicates the database list.
	// The databases structure is documented below.
	Databases []GetPgDatabasesDatabase `pulumi:"databases"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Indicates the database collation.
	LcCollate *string `pulumi:"lcCollate"`
	// Indicates the database name.
	Name *string `pulumi:"name"`
	// Indicates the database owner.
	Owner  *string `pulumi:"owner"`
	Region string  `pulumi:"region"`
	// Indicates the database size, in bytes.
	Size *int `pulumi:"size"`
}

func GetPgDatabasesOutput(ctx *pulumi.Context, args GetPgDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetPgDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPgDatabasesResult, error) {
			args := v.(GetPgDatabasesArgs)
			r, err := GetPgDatabases(ctx, &args, opts...)
			var s GetPgDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPgDatabasesResultOutput)
}

// A collection of arguments for invoking getPgDatabases.
type GetPgDatabasesOutputArgs struct {
	// Specifies the character set used by the database.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	CharacterSet pulumi.StringPtrInput `pulumi:"characterSet"`
	// Specifies the PostgreSQL instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the database collation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	LcCollate pulumi.StringPtrInput `pulumi:"lcCollate"`
	// Specifies the database name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the database owner.
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the database size, in bytes.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (GetPgDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getPgDatabases.
type GetPgDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetPgDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgDatabasesResult)(nil)).Elem()
}

func (o GetPgDatabasesResultOutput) ToGetPgDatabasesResultOutput() GetPgDatabasesResultOutput {
	return o
}

func (o GetPgDatabasesResultOutput) ToGetPgDatabasesResultOutputWithContext(ctx context.Context) GetPgDatabasesResultOutput {
	return o
}

// Indicates the character set used by the database.
func (o GetPgDatabasesResultOutput) CharacterSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) *string { return v.CharacterSet }).(pulumi.StringPtrOutput)
}

// Indicates the database list.
// The databases structure is documented below.
func (o GetPgDatabasesResultOutput) Databases() GetPgDatabasesDatabaseArrayOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) []GetPgDatabasesDatabase { return v.Databases }).(GetPgDatabasesDatabaseArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPgDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPgDatabasesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates the database collation.
func (o GetPgDatabasesResultOutput) LcCollate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) *string { return v.LcCollate }).(pulumi.StringPtrOutput)
}

// Indicates the database name.
func (o GetPgDatabasesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the database owner.
func (o GetPgDatabasesResultOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o GetPgDatabasesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the database size, in bytes.
func (o GetPgDatabasesResultOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetPgDatabasesResult) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPgDatabasesResultOutput{})
}
