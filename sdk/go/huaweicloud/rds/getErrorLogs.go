// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS error logs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			startTime := cfg.RequireObject("startTime")
//			endTime := cfg.RequireObject("endTime")
//			_, err := Rds.GetErrorLogs(ctx, &rds.GetErrorLogsArgs{
//				InstanceId: instanceId,
//				StartTime:  startTime,
//				EndTime:    endTime,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetErrorLogs(ctx *pulumi.Context, args *GetErrorLogsArgs, opts ...pulumi.InvokeOption) (*GetErrorLogsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetErrorLogsResult
	err := ctx.Invoke("huaweicloud:Rds/getErrorLogs:getErrorLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getErrorLogs.
type GetErrorLogsArgs struct {
	// Specifies the end time in the **yyyy-mm-ddThh:mm:ssZ** format.
	EndTime string `pulumi:"endTime"`
	// Specifies the ID of the RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the log level. Value options: **ALL**, **INFO**, **LOG**, **WARNING**,
	// **ERROR**, **FATAL**, **PANIC**, **NOTE**. Defaults to **ALL**.
	Level *string `pulumi:"level"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the start time in the **yyyy-mm-ddThh:mm:ssZ** format.
	StartTime string `pulumi:"startTime"`
}

// A collection of values returned by getErrorLogs.
type GetErrorLogsResult struct {
	EndTime string `pulumi:"endTime"`
	// Indicates the list of the error logs.
	ErrorLogs []GetErrorLogsErrorLog `pulumi:"errorLogs"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Indicates the error log level.
	Level     *string `pulumi:"level"`
	Region    string  `pulumi:"region"`
	StartTime string  `pulumi:"startTime"`
}

func GetErrorLogsOutput(ctx *pulumi.Context, args GetErrorLogsOutputArgs, opts ...pulumi.InvokeOption) GetErrorLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetErrorLogsResult, error) {
			args := v.(GetErrorLogsArgs)
			r, err := GetErrorLogs(ctx, &args, opts...)
			var s GetErrorLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetErrorLogsResultOutput)
}

// A collection of arguments for invoking getErrorLogs.
type GetErrorLogsOutputArgs struct {
	// Specifies the end time in the **yyyy-mm-ddThh:mm:ssZ** format.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Specifies the ID of the RDS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the log level. Value options: **ALL**, **INFO**, **LOG**, **WARNING**,
	// **ERROR**, **FATAL**, **PANIC**, **NOTE**. Defaults to **ALL**.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the start time in the **yyyy-mm-ddThh:mm:ssZ** format.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetErrorLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetErrorLogsArgs)(nil)).Elem()
}

// A collection of values returned by getErrorLogs.
type GetErrorLogsResultOutput struct{ *pulumi.OutputState }

func (GetErrorLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetErrorLogsResult)(nil)).Elem()
}

func (o GetErrorLogsResultOutput) ToGetErrorLogsResultOutput() GetErrorLogsResultOutput {
	return o
}

func (o GetErrorLogsResultOutput) ToGetErrorLogsResultOutputWithContext(ctx context.Context) GetErrorLogsResultOutput {
	return o
}

func (o GetErrorLogsResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrorLogsResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// Indicates the list of the error logs.
func (o GetErrorLogsResultOutput) ErrorLogs() GetErrorLogsErrorLogArrayOutput {
	return o.ApplyT(func(v GetErrorLogsResult) []GetErrorLogsErrorLog { return v.ErrorLogs }).(GetErrorLogsErrorLogArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetErrorLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrorLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetErrorLogsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrorLogsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates the error log level.
func (o GetErrorLogsResultOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetErrorLogsResult) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o GetErrorLogsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrorLogsResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetErrorLogsResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetErrorLogsResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetErrorLogsResultOutput{})
}
