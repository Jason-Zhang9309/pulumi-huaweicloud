// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages RDS PostgreSQL database resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.NewPgDatabase(ctx, "test", &Rds.PgDatabaseArgs{
//				InstanceId: pulumi.Any(instanceId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The RDS postgresql database can be imported using the `instance_id` and `name` separated by a slash, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Rds/pgDatabase:PgDatabase test <instance_id>/<name>
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`template`, `is_revoke_public_privilege` `lc_ctype`. It is generally recommended running `terraform plan` after importing the RDS PostgreSQL database. You can then decide if changes should be applied to the RDS PostgreSQL database, or the resource definition should be updated to align with the RDS PostgreSQL database. Also you can ignore changes as below. hcl resource "huaweicloud_rds_pg_database" "account_1" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	template, is_revoke_public_privilege, lc_ctype,
//
//	]
//
//	} }
type PgDatabase struct {
	pulumi.CustomResourceState

	// Specifies the database character set.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	// Defaults to **UTF8**.
	CharacterSet pulumi.StringOutput `pulumi:"characterSet"`
	// Specifies the database description. The value contains 0 to 512 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies whether to revoke the PUBLIC CREATE permission of
	// the public schema.
	// + **true**: indicates that the permission will be revoked.
	// + **false**: indicates that the permission will not be revoked.
	IsRevokePublicPrivilege pulumi.BoolOutput `pulumi:"isRevokePublicPrivilege"`
	// Specifies the database collocation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to **en_US.UTF-8**.
	LcCollate pulumi.StringOutput `pulumi:"lcCollate"`
	// Specifies the database classification.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to: **en_US.UTF-8**.
	LcCtype pulumi.StringOutput `pulumi:"lcCtype"`
	// Specifies the database name. The value contains 1 to 63 characters, including
	// letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
	// PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
	// **template1**.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the database user. The value must be an existing username and must be different
	// from system usernames. Defaults to **root**.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Indicates the database size, in bytes.
	Size pulumi.IntOutput `pulumi:"size"`
	// Specifies the name of the database template. Value options: **template0**,
	// **template1**. Defaults to **template1**.
	Template pulumi.StringOutput `pulumi:"template"`
}

// NewPgDatabase registers a new resource with the given unique name, arguments, and options.
func NewPgDatabase(ctx *pulumi.Context,
	name string, args *PgDatabaseArgs, opts ...pulumi.ResourceOption) (*PgDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource PgDatabase
	err := ctx.RegisterResource("huaweicloud:Rds/pgDatabase:PgDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPgDatabase gets an existing PgDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPgDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PgDatabaseState, opts ...pulumi.ResourceOption) (*PgDatabase, error) {
	var resource PgDatabase
	err := ctx.ReadResource("huaweicloud:Rds/pgDatabase:PgDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PgDatabase resources.
type pgDatabaseState struct {
	// Specifies the database character set.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	// Defaults to **UTF8**.
	CharacterSet *string `pulumi:"characterSet"`
	// Specifies the database description. The value contains 0 to 512 characters.
	Description *string `pulumi:"description"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies whether to revoke the PUBLIC CREATE permission of
	// the public schema.
	// + **true**: indicates that the permission will be revoked.
	// + **false**: indicates that the permission will not be revoked.
	IsRevokePublicPrivilege *bool `pulumi:"isRevokePublicPrivilege"`
	// Specifies the database collocation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to **en_US.UTF-8**.
	LcCollate *string `pulumi:"lcCollate"`
	// Specifies the database classification.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to: **en_US.UTF-8**.
	LcCtype *string `pulumi:"lcCtype"`
	// Specifies the database name. The value contains 1 to 63 characters, including
	// letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
	// PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
	// **template1**.
	Name *string `pulumi:"name"`
	// Specifies the database user. The value must be an existing username and must be different
	// from system usernames. Defaults to **root**.
	Owner *string `pulumi:"owner"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Indicates the database size, in bytes.
	Size *int `pulumi:"size"`
	// Specifies the name of the database template. Value options: **template0**,
	// **template1**. Defaults to **template1**.
	Template *string `pulumi:"template"`
}

type PgDatabaseState struct {
	// Specifies the database character set.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	// Defaults to **UTF8**.
	CharacterSet pulumi.StringPtrInput
	// Specifies the database description. The value contains 0 to 512 characters.
	Description pulumi.StringPtrInput
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringPtrInput
	// Specifies whether to revoke the PUBLIC CREATE permission of
	// the public schema.
	// + **true**: indicates that the permission will be revoked.
	// + **false**: indicates that the permission will not be revoked.
	IsRevokePublicPrivilege pulumi.BoolPtrInput
	// Specifies the database collocation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to **en_US.UTF-8**.
	LcCollate pulumi.StringPtrInput
	// Specifies the database classification.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to: **en_US.UTF-8**.
	LcCtype pulumi.StringPtrInput
	// Specifies the database name. The value contains 1 to 63 characters, including
	// letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
	// PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
	// **template1**.
	Name pulumi.StringPtrInput
	// Specifies the database user. The value must be an existing username and must be different
	// from system usernames. Defaults to **root**.
	Owner pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Indicates the database size, in bytes.
	Size pulumi.IntPtrInput
	// Specifies the name of the database template. Value options: **template0**,
	// **template1**. Defaults to **template1**.
	Template pulumi.StringPtrInput
}

func (PgDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*pgDatabaseState)(nil)).Elem()
}

type pgDatabaseArgs struct {
	// Specifies the database character set.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	// Defaults to **UTF8**.
	CharacterSet *string `pulumi:"characterSet"`
	// Specifies the database description. The value contains 0 to 512 characters.
	Description *string `pulumi:"description"`
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies whether to revoke the PUBLIC CREATE permission of
	// the public schema.
	// + **true**: indicates that the permission will be revoked.
	// + **false**: indicates that the permission will not be revoked.
	IsRevokePublicPrivilege *bool `pulumi:"isRevokePublicPrivilege"`
	// Specifies the database collocation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to **en_US.UTF-8**.
	LcCollate *string `pulumi:"lcCollate"`
	// Specifies the database classification.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to: **en_US.UTF-8**.
	LcCtype *string `pulumi:"lcCtype"`
	// Specifies the database name. The value contains 1 to 63 characters, including
	// letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
	// PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
	// **template1**.
	Name *string `pulumi:"name"`
	// Specifies the database user. The value must be an existing username and must be different
	// from system usernames. Defaults to **root**.
	Owner *string `pulumi:"owner"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the name of the database template. Value options: **template0**,
	// **template1**. Defaults to **template1**.
	Template *string `pulumi:"template"`
}

// The set of arguments for constructing a PgDatabase resource.
type PgDatabaseArgs struct {
	// Specifies the database character set.
	// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
	// Defaults to **UTF8**.
	CharacterSet pulumi.StringPtrInput
	// Specifies the database description. The value contains 0 to 512 characters.
	Description pulumi.StringPtrInput
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceId pulumi.StringInput
	// Specifies whether to revoke the PUBLIC CREATE permission of
	// the public schema.
	// + **true**: indicates that the permission will be revoked.
	// + **false**: indicates that the permission will not be revoked.
	IsRevokePublicPrivilege pulumi.BoolPtrInput
	// Specifies the database collocation.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to **en_US.UTF-8**.
	LcCollate pulumi.StringPtrInput
	// Specifies the database classification.
	// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
	// Defaults to: **en_US.UTF-8**.
	LcCtype pulumi.StringPtrInput
	// Specifies the database name. The value contains 1 to 63 characters, including
	// letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
	// PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
	// **template1**.
	Name pulumi.StringPtrInput
	// Specifies the database user. The value must be an existing username and must be different
	// from system usernames. Defaults to **root**.
	Owner pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the name of the database template. Value options: **template0**,
	// **template1**. Defaults to **template1**.
	Template pulumi.StringPtrInput
}

func (PgDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pgDatabaseArgs)(nil)).Elem()
}

type PgDatabaseInput interface {
	pulumi.Input

	ToPgDatabaseOutput() PgDatabaseOutput
	ToPgDatabaseOutputWithContext(ctx context.Context) PgDatabaseOutput
}

func (*PgDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**PgDatabase)(nil)).Elem()
}

func (i *PgDatabase) ToPgDatabaseOutput() PgDatabaseOutput {
	return i.ToPgDatabaseOutputWithContext(context.Background())
}

func (i *PgDatabase) ToPgDatabaseOutputWithContext(ctx context.Context) PgDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgDatabaseOutput)
}

// PgDatabaseArrayInput is an input type that accepts PgDatabaseArray and PgDatabaseArrayOutput values.
// You can construct a concrete instance of `PgDatabaseArrayInput` via:
//
//	PgDatabaseArray{ PgDatabaseArgs{...} }
type PgDatabaseArrayInput interface {
	pulumi.Input

	ToPgDatabaseArrayOutput() PgDatabaseArrayOutput
	ToPgDatabaseArrayOutputWithContext(context.Context) PgDatabaseArrayOutput
}

type PgDatabaseArray []PgDatabaseInput

func (PgDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PgDatabase)(nil)).Elem()
}

func (i PgDatabaseArray) ToPgDatabaseArrayOutput() PgDatabaseArrayOutput {
	return i.ToPgDatabaseArrayOutputWithContext(context.Background())
}

func (i PgDatabaseArray) ToPgDatabaseArrayOutputWithContext(ctx context.Context) PgDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgDatabaseArrayOutput)
}

// PgDatabaseMapInput is an input type that accepts PgDatabaseMap and PgDatabaseMapOutput values.
// You can construct a concrete instance of `PgDatabaseMapInput` via:
//
//	PgDatabaseMap{ "key": PgDatabaseArgs{...} }
type PgDatabaseMapInput interface {
	pulumi.Input

	ToPgDatabaseMapOutput() PgDatabaseMapOutput
	ToPgDatabaseMapOutputWithContext(context.Context) PgDatabaseMapOutput
}

type PgDatabaseMap map[string]PgDatabaseInput

func (PgDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PgDatabase)(nil)).Elem()
}

func (i PgDatabaseMap) ToPgDatabaseMapOutput() PgDatabaseMapOutput {
	return i.ToPgDatabaseMapOutputWithContext(context.Background())
}

func (i PgDatabaseMap) ToPgDatabaseMapOutputWithContext(ctx context.Context) PgDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PgDatabaseMapOutput)
}

type PgDatabaseOutput struct{ *pulumi.OutputState }

func (PgDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PgDatabase)(nil)).Elem()
}

func (o PgDatabaseOutput) ToPgDatabaseOutput() PgDatabaseOutput {
	return o
}

func (o PgDatabaseOutput) ToPgDatabaseOutputWithContext(ctx context.Context) PgDatabaseOutput {
	return o
}

// Specifies the database character set.
// For details, see [documentation](https://www.postgresql.org/docs/16/infoschema-character-sets.html).
// Defaults to **UTF8**.
func (o PgDatabaseOutput) CharacterSet() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.CharacterSet }).(pulumi.StringOutput)
}

// Specifies the database description. The value contains 0 to 512 characters.
func (o PgDatabaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the RDS PostgreSQL instance.
func (o PgDatabaseOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies whether to revoke the PUBLIC CREATE permission of
// the public schema.
// + **true**: indicates that the permission will be revoked.
// + **false**: indicates that the permission will not be revoked.
func (o PgDatabaseOutput) IsRevokePublicPrivilege() pulumi.BoolOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.BoolOutput { return v.IsRevokePublicPrivilege }).(pulumi.BoolOutput)
}

// Specifies the database collocation.
// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
// Defaults to **en_US.UTF-8**.
func (o PgDatabaseOutput) LcCollate() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.LcCollate }).(pulumi.StringOutput)
}

// Specifies the database classification.
// For details, see [documentation](https://support.huaweicloud.com/intl/en-us/bestpractice-rds/rds_pg_0017.html).
// Defaults to: **en_US.UTF-8**.
func (o PgDatabaseOutput) LcCtype() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.LcCtype }).(pulumi.StringOutput)
}

// Specifies the database name. The value contains 1 to 63 characters, including
// letters, digits, and underscores (_). It cannot start with pg or a digit, and must be different from RDS for
// PostgreSQL template library names. RDS for PostgreSQL template libraries include **postgres**, **template0**, and
// **template1**.
func (o PgDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the database user. The value must be an existing username and must be different
// from system usernames. Defaults to **root**.
func (o PgDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o PgDatabaseOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates the database size, in bytes.
func (o PgDatabaseOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

// Specifies the name of the database template. Value options: **template0**,
// **template1**. Defaults to **template1**.
func (o PgDatabaseOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v *PgDatabase) pulumi.StringOutput { return v.Template }).(pulumi.StringOutput)
}

type PgDatabaseArrayOutput struct{ *pulumi.OutputState }

func (PgDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PgDatabase)(nil)).Elem()
}

func (o PgDatabaseArrayOutput) ToPgDatabaseArrayOutput() PgDatabaseArrayOutput {
	return o
}

func (o PgDatabaseArrayOutput) ToPgDatabaseArrayOutputWithContext(ctx context.Context) PgDatabaseArrayOutput {
	return o
}

func (o PgDatabaseArrayOutput) Index(i pulumi.IntInput) PgDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PgDatabase {
		return vs[0].([]*PgDatabase)[vs[1].(int)]
	}).(PgDatabaseOutput)
}

type PgDatabaseMapOutput struct{ *pulumi.OutputState }

func (PgDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PgDatabase)(nil)).Elem()
}

func (o PgDatabaseMapOutput) ToPgDatabaseMapOutput() PgDatabaseMapOutput {
	return o
}

func (o PgDatabaseMapOutput) ToPgDatabaseMapOutputWithContext(ctx context.Context) PgDatabaseMapOutput {
	return o
}

func (o PgDatabaseMapOutput) MapIndex(k pulumi.StringInput) PgDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PgDatabase {
		return vs[0].(map[string]*PgDatabase)[vs[1].(string)]
	}).(PgDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PgDatabaseInput)(nil)).Elem(), &PgDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgDatabaseArrayInput)(nil)).Elem(), PgDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PgDatabaseMapInput)(nil)).Elem(), PgDatabaseMap{})
	pulumi.RegisterOutputType(PgDatabaseOutput{})
	pulumi.RegisterOutputType(PgDatabaseArrayOutput{})
	pulumi.RegisterOutputType(PgDatabaseMapOutput{})
}
