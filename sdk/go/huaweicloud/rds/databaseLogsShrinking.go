// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an RDS database logs shrinking resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			dbName := cfg.RequireObject("dbName")
//			_, err := Rds.NewDatabaseLogsShrinking(ctx, "test", &Rds.DatabaseLogsShrinkingArgs{
//				InstanceId: pulumi.Any(instanceId),
//				DbName:     pulumi.Any(dbName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DatabaseLogsShrinking struct {
	pulumi.CustomResourceState

	// Specifies the name of the database.
	DbName pulumi.StringOutput `pulumi:"dbName"`
	// Specifies the ID of instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrOutput `pulumi:"region"`
}

// NewDatabaseLogsShrinking registers a new resource with the given unique name, arguments, and options.
func NewDatabaseLogsShrinking(ctx *pulumi.Context,
	name string, args *DatabaseLogsShrinkingArgs, opts ...pulumi.ResourceOption) (*DatabaseLogsShrinking, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbName == nil {
		return nil, errors.New("invalid value for required argument 'DbName'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DatabaseLogsShrinking
	err := ctx.RegisterResource("huaweicloud:Rds/databaseLogsShrinking:DatabaseLogsShrinking", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseLogsShrinking gets an existing DatabaseLogsShrinking resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseLogsShrinking(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseLogsShrinkingState, opts ...pulumi.ResourceOption) (*DatabaseLogsShrinking, error) {
	var resource DatabaseLogsShrinking
	err := ctx.ReadResource("huaweicloud:Rds/databaseLogsShrinking:DatabaseLogsShrinking", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseLogsShrinking resources.
type databaseLogsShrinkingState struct {
	// Specifies the name of the database.
	DbName *string `pulumi:"dbName"`
	// Specifies the ID of instance.
	InstanceId *string `pulumi:"instanceId"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
}

type DatabaseLogsShrinkingState struct {
	// Specifies the name of the database.
	DbName pulumi.StringPtrInput
	// Specifies the ID of instance.
	InstanceId pulumi.StringPtrInput
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
}

func (DatabaseLogsShrinkingState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseLogsShrinkingState)(nil)).Elem()
}

type databaseLogsShrinkingArgs struct {
	// Specifies the name of the database.
	DbName string `pulumi:"dbName"`
	// Specifies the ID of instance.
	InstanceId string `pulumi:"instanceId"`
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a DatabaseLogsShrinking resource.
type DatabaseLogsShrinkingArgs struct {
	// Specifies the name of the database.
	DbName pulumi.StringInput
	// Specifies the ID of instance.
	InstanceId pulumi.StringInput
	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
}

func (DatabaseLogsShrinkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseLogsShrinkingArgs)(nil)).Elem()
}

type DatabaseLogsShrinkingInput interface {
	pulumi.Input

	ToDatabaseLogsShrinkingOutput() DatabaseLogsShrinkingOutput
	ToDatabaseLogsShrinkingOutputWithContext(ctx context.Context) DatabaseLogsShrinkingOutput
}

func (*DatabaseLogsShrinking) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseLogsShrinking)(nil)).Elem()
}

func (i *DatabaseLogsShrinking) ToDatabaseLogsShrinkingOutput() DatabaseLogsShrinkingOutput {
	return i.ToDatabaseLogsShrinkingOutputWithContext(context.Background())
}

func (i *DatabaseLogsShrinking) ToDatabaseLogsShrinkingOutputWithContext(ctx context.Context) DatabaseLogsShrinkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseLogsShrinkingOutput)
}

// DatabaseLogsShrinkingArrayInput is an input type that accepts DatabaseLogsShrinkingArray and DatabaseLogsShrinkingArrayOutput values.
// You can construct a concrete instance of `DatabaseLogsShrinkingArrayInput` via:
//
//	DatabaseLogsShrinkingArray{ DatabaseLogsShrinkingArgs{...} }
type DatabaseLogsShrinkingArrayInput interface {
	pulumi.Input

	ToDatabaseLogsShrinkingArrayOutput() DatabaseLogsShrinkingArrayOutput
	ToDatabaseLogsShrinkingArrayOutputWithContext(context.Context) DatabaseLogsShrinkingArrayOutput
}

type DatabaseLogsShrinkingArray []DatabaseLogsShrinkingInput

func (DatabaseLogsShrinkingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseLogsShrinking)(nil)).Elem()
}

func (i DatabaseLogsShrinkingArray) ToDatabaseLogsShrinkingArrayOutput() DatabaseLogsShrinkingArrayOutput {
	return i.ToDatabaseLogsShrinkingArrayOutputWithContext(context.Background())
}

func (i DatabaseLogsShrinkingArray) ToDatabaseLogsShrinkingArrayOutputWithContext(ctx context.Context) DatabaseLogsShrinkingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseLogsShrinkingArrayOutput)
}

// DatabaseLogsShrinkingMapInput is an input type that accepts DatabaseLogsShrinkingMap and DatabaseLogsShrinkingMapOutput values.
// You can construct a concrete instance of `DatabaseLogsShrinkingMapInput` via:
//
//	DatabaseLogsShrinkingMap{ "key": DatabaseLogsShrinkingArgs{...} }
type DatabaseLogsShrinkingMapInput interface {
	pulumi.Input

	ToDatabaseLogsShrinkingMapOutput() DatabaseLogsShrinkingMapOutput
	ToDatabaseLogsShrinkingMapOutputWithContext(context.Context) DatabaseLogsShrinkingMapOutput
}

type DatabaseLogsShrinkingMap map[string]DatabaseLogsShrinkingInput

func (DatabaseLogsShrinkingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseLogsShrinking)(nil)).Elem()
}

func (i DatabaseLogsShrinkingMap) ToDatabaseLogsShrinkingMapOutput() DatabaseLogsShrinkingMapOutput {
	return i.ToDatabaseLogsShrinkingMapOutputWithContext(context.Background())
}

func (i DatabaseLogsShrinkingMap) ToDatabaseLogsShrinkingMapOutputWithContext(ctx context.Context) DatabaseLogsShrinkingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseLogsShrinkingMapOutput)
}

type DatabaseLogsShrinkingOutput struct{ *pulumi.OutputState }

func (DatabaseLogsShrinkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseLogsShrinking)(nil)).Elem()
}

func (o DatabaseLogsShrinkingOutput) ToDatabaseLogsShrinkingOutput() DatabaseLogsShrinkingOutput {
	return o
}

func (o DatabaseLogsShrinkingOutput) ToDatabaseLogsShrinkingOutputWithContext(ctx context.Context) DatabaseLogsShrinkingOutput {
	return o
}

// Specifies the name of the database.
func (o DatabaseLogsShrinkingOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseLogsShrinking) pulumi.StringOutput { return v.DbName }).(pulumi.StringOutput)
}

// Specifies the ID of instance.
func (o DatabaseLogsShrinkingOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseLogsShrinking) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The region in which to create the rds instance resource. If omitted, the
// provider-level region will be used. Changing this creates a new resource.
func (o DatabaseLogsShrinkingOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseLogsShrinking) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

type DatabaseLogsShrinkingArrayOutput struct{ *pulumi.OutputState }

func (DatabaseLogsShrinkingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseLogsShrinking)(nil)).Elem()
}

func (o DatabaseLogsShrinkingArrayOutput) ToDatabaseLogsShrinkingArrayOutput() DatabaseLogsShrinkingArrayOutput {
	return o
}

func (o DatabaseLogsShrinkingArrayOutput) ToDatabaseLogsShrinkingArrayOutputWithContext(ctx context.Context) DatabaseLogsShrinkingArrayOutput {
	return o
}

func (o DatabaseLogsShrinkingArrayOutput) Index(i pulumi.IntInput) DatabaseLogsShrinkingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatabaseLogsShrinking {
		return vs[0].([]*DatabaseLogsShrinking)[vs[1].(int)]
	}).(DatabaseLogsShrinkingOutput)
}

type DatabaseLogsShrinkingMapOutput struct{ *pulumi.OutputState }

func (DatabaseLogsShrinkingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseLogsShrinking)(nil)).Elem()
}

func (o DatabaseLogsShrinkingMapOutput) ToDatabaseLogsShrinkingMapOutput() DatabaseLogsShrinkingMapOutput {
	return o
}

func (o DatabaseLogsShrinkingMapOutput) ToDatabaseLogsShrinkingMapOutputWithContext(ctx context.Context) DatabaseLogsShrinkingMapOutput {
	return o
}

func (o DatabaseLogsShrinkingMapOutput) MapIndex(k pulumi.StringInput) DatabaseLogsShrinkingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatabaseLogsShrinking {
		return vs[0].(map[string]*DatabaseLogsShrinking)[vs[1].(string)]
	}).(DatabaseLogsShrinkingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseLogsShrinkingInput)(nil)).Elem(), &DatabaseLogsShrinking{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseLogsShrinkingArrayInput)(nil)).Elem(), DatabaseLogsShrinkingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseLogsShrinkingMapInput)(nil)).Elem(), DatabaseLogsShrinkingMap{})
	pulumi.RegisterOutputType(DatabaseLogsShrinkingOutput{})
	pulumi.RegisterOutputType(DatabaseLogsShrinkingArrayOutput{})
	pulumi.RegisterOutputType(DatabaseLogsShrinkingMapOutput{})
}
