// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS storage types.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetStorageTypes(ctx, &rds.GetStorageTypesArgs{
//				DbType:    "MySQL",
//				DbVersion: "8.0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStorageTypes(ctx *pulumi.Context, args *GetStorageTypesArgs, opts ...pulumi.InvokeOption) (*GetStorageTypesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetStorageTypesResult
	err := ctx.Invoke("huaweicloud:Rds/getStorageTypes:getStorageTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStorageTypes.
type GetStorageTypesArgs struct {
	// DB engine. The valid values are **MySQL**, **PostgreSQL**, **SQLServer**, **MariaDB**.
	DbType string `pulumi:"dbType"`
	// DB version number.
	DbVersion string `pulumi:"dbVersion"`
	// HA mode. The valid values are **single**, **ha**, **replica**.
	InstanceMode *string `pulumi:"instanceMode"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getStorageTypes.
type GetStorageTypesResult struct {
	DbType    string `pulumi:"dbType"`
	DbVersion string `pulumi:"dbVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	InstanceMode *string `pulumi:"instanceMode"`
	Region       string  `pulumi:"region"`
	// Storage type list. For details, see Data structure of the storageType field.
	// The storageType structure is documented below.
	StorageTypes []GetStorageTypesStorageType `pulumi:"storageTypes"`
}

func GetStorageTypesOutput(ctx *pulumi.Context, args GetStorageTypesOutputArgs, opts ...pulumi.InvokeOption) GetStorageTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetStorageTypesResult, error) {
			args := v.(GetStorageTypesArgs)
			r, err := GetStorageTypes(ctx, &args, opts...)
			var s GetStorageTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetStorageTypesResultOutput)
}

// A collection of arguments for invoking getStorageTypes.
type GetStorageTypesOutputArgs struct {
	// DB engine. The valid values are **MySQL**, **PostgreSQL**, **SQLServer**, **MariaDB**.
	DbType pulumi.StringInput `pulumi:"dbType"`
	// DB version number.
	DbVersion pulumi.StringInput `pulumi:"dbVersion"`
	// HA mode. The valid values are **single**, **ha**, **replica**.
	InstanceMode pulumi.StringPtrInput `pulumi:"instanceMode"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetStorageTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageTypesArgs)(nil)).Elem()
}

// A collection of values returned by getStorageTypes.
type GetStorageTypesResultOutput struct{ *pulumi.OutputState }

func (GetStorageTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageTypesResult)(nil)).Elem()
}

func (o GetStorageTypesResultOutput) ToGetStorageTypesResultOutput() GetStorageTypesResultOutput {
	return o
}

func (o GetStorageTypesResultOutput) ToGetStorageTypesResultOutputWithContext(ctx context.Context) GetStorageTypesResultOutput {
	return o
}

func (o GetStorageTypesResultOutput) DbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageTypesResult) string { return v.DbType }).(pulumi.StringOutput)
}

func (o GetStorageTypesResultOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageTypesResult) string { return v.DbVersion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetStorageTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStorageTypesResultOutput) InstanceMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStorageTypesResult) *string { return v.InstanceMode }).(pulumi.StringPtrOutput)
}

func (o GetStorageTypesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageTypesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Storage type list. For details, see Data structure of the storageType field.
// The storageType structure is documented below.
func (o GetStorageTypesResultOutput) StorageTypes() GetStorageTypesStorageTypeArrayOutput {
	return o.ApplyT(func(v GetStorageTypesResult) []GetStorageTypesStorageType { return v.StorageTypes }).(GetStorageTypesStorageTypeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStorageTypesResultOutput{})
}
