// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS slow log files.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetSlowLogFiles(ctx, &rds.GetSlowLogFilesArgs{
//				InstanceId: instanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSlowLogFiles(ctx *pulumi.Context, args *GetSlowLogFilesArgs, opts ...pulumi.InvokeOption) (*GetSlowLogFilesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSlowLogFilesResult
	err := ctx.Invoke("huaweicloud:Rds/getSlowLogFiles:getSlowLogFiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSlowLogFiles.
type GetSlowLogFilesArgs struct {
	// Specifies the ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getSlowLogFiles.
type GetSlowLogFilesResult struct {
	// Indicates the list of slow log files.
	Files []GetSlowLogFilesFile `pulumi:"files"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Region     string `pulumi:"region"`
}

func GetSlowLogFilesOutput(ctx *pulumi.Context, args GetSlowLogFilesOutputArgs, opts ...pulumi.InvokeOption) GetSlowLogFilesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSlowLogFilesResult, error) {
			args := v.(GetSlowLogFilesArgs)
			r, err := GetSlowLogFiles(ctx, &args, opts...)
			var s GetSlowLogFilesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSlowLogFilesResultOutput)
}

// A collection of arguments for invoking getSlowLogFiles.
type GetSlowLogFilesOutputArgs struct {
	// Specifies the ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetSlowLogFilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogFilesArgs)(nil)).Elem()
}

// A collection of values returned by getSlowLogFiles.
type GetSlowLogFilesResultOutput struct{ *pulumi.OutputState }

func (GetSlowLogFilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogFilesResult)(nil)).Elem()
}

func (o GetSlowLogFilesResultOutput) ToGetSlowLogFilesResultOutput() GetSlowLogFilesResultOutput {
	return o
}

func (o GetSlowLogFilesResultOutput) ToGetSlowLogFilesResultOutputWithContext(ctx context.Context) GetSlowLogFilesResultOutput {
	return o
}

// Indicates the list of slow log files.
func (o GetSlowLogFilesResultOutput) Files() GetSlowLogFilesFileArrayOutput {
	return o.ApplyT(func(v GetSlowLogFilesResult) []GetSlowLogFilesFile { return v.Files }).(GetSlowLogFilesFileArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSlowLogFilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogFilesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSlowLogFilesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogFilesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetSlowLogFilesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogFilesResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSlowLogFilesResultOutput{})
}
