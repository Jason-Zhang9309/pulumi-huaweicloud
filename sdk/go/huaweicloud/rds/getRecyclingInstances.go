// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS recycling instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetRecyclingInstances(ctx, &rds.GetRecyclingInstancesArgs{
//				InstanceId: pulumi.StringRef(instanceId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRecyclingInstances(ctx *pulumi.Context, args *GetRecyclingInstancesArgs, opts ...pulumi.InvokeOption) (*GetRecyclingInstancesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetRecyclingInstancesResult
	err := ctx.Invoke("huaweicloud:Rds/getRecyclingInstances:getRecyclingInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecyclingInstances.
type GetRecyclingInstancesArgs struct {
	// Specifies the floating IP address.
	DataVip *string `pulumi:"dataVip"`
	// Specifies the DB engine name.
	EngineName *string `pulumi:"engineName"`
	// Specifies the DB engine version.
	EngineVersion *string `pulumi:"engineVersion"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the instance type.
	// Value options: **Ha**, **Single**.
	HaMode *string `pulumi:"haMode"`
	// Specifies the instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies whether the instance is a serverless instance.
	// Value options: **true**, **false**.
	IsServerless *string `pulumi:"isServerless"`
	// Specifies the instance name.
	Name *string `pulumi:"name"`
	// Specifies the billing mode.
	// Value options: **0** (pay-per-use), **1** (yearly/monthly).
	PayModel *string `pulumi:"payModel"`
	// Specifies the backup ID.
	RecycleBackupId *string `pulumi:"recycleBackupId"`
	// Specifies the backup status.
	// Value options:
	// + **BUILDING**: The instance is being backed up and cannot be rebuilt.
	// + **COMPLETED**: The backup is complete and the instance can be rebuilt.
	RecycleStatus *string `pulumi:"recycleStatus"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the storage space in **GB**.
	// The value must be a multiple of **10** and the value range is from **40 GB** to **4,000 GB**.
	VolumeSize *string `pulumi:"volumeSize"`
	// Specifies the storage type.
	// Value options:
	// + **ULTRAHIGH**: ultra-high I/O storage.
	// + **ULTRAHIGHPRO**: ultra-high I/O (advanced) storage.
	// + **CLOUDSSD**: cloud SSD storage.
	// + **LOCALSSD**: local SSD storage.
	VolumeType *string `pulumi:"volumeType"`
}

// A collection of values returned by getRecyclingInstances.
type GetRecyclingInstancesResult struct {
	// Indicates the floating IP address.
	DataVip *string `pulumi:"dataVip"`
	// Indicates the instance DB engine name.
	EngineName *string `pulumi:"engineName"`
	// Indicates the instance DB engine version.
	EngineVersion *string `pulumi:"engineVersion"`
	// Indicates the enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Indicates the instance type.
	HaMode *string `pulumi:"haMode"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId *string `pulumi:"instanceId"`
	// Indicates the list of recycling RDS instances.
	Instances []GetRecyclingInstancesInstance `pulumi:"instances"`
	// Indicates whether the instance is a serverless instance.
	IsServerless *string `pulumi:"isServerless"`
	// Indicates the instance name.
	Name *string `pulumi:"name"`
	// Indicates the instance billing mode.
	PayModel *string `pulumi:"payModel"`
	// Indicates the backup ID.
	RecycleBackupId *string `pulumi:"recycleBackupId"`
	// Indicates the backup status.
	RecycleStatus *string `pulumi:"recycleStatus"`
	Region        string  `pulumi:"region"`
	// Indicates the storage space in **GB**.
	VolumeSize *string `pulumi:"volumeSize"`
	// Indicates the storage type.
	VolumeType *string `pulumi:"volumeType"`
}

func GetRecyclingInstancesOutput(ctx *pulumi.Context, args GetRecyclingInstancesOutputArgs, opts ...pulumi.InvokeOption) GetRecyclingInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRecyclingInstancesResult, error) {
			args := v.(GetRecyclingInstancesArgs)
			r, err := GetRecyclingInstances(ctx, &args, opts...)
			var s GetRecyclingInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRecyclingInstancesResultOutput)
}

// A collection of arguments for invoking getRecyclingInstances.
type GetRecyclingInstancesOutputArgs struct {
	// Specifies the floating IP address.
	DataVip pulumi.StringPtrInput `pulumi:"dataVip"`
	// Specifies the DB engine name.
	EngineName pulumi.StringPtrInput `pulumi:"engineName"`
	// Specifies the DB engine version.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the instance type.
	// Value options: **Ha**, **Single**.
	HaMode pulumi.StringPtrInput `pulumi:"haMode"`
	// Specifies the instance ID.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Specifies whether the instance is a serverless instance.
	// Value options: **true**, **false**.
	IsServerless pulumi.StringPtrInput `pulumi:"isServerless"`
	// Specifies the instance name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the billing mode.
	// Value options: **0** (pay-per-use), **1** (yearly/monthly).
	PayModel pulumi.StringPtrInput `pulumi:"payModel"`
	// Specifies the backup ID.
	RecycleBackupId pulumi.StringPtrInput `pulumi:"recycleBackupId"`
	// Specifies the backup status.
	// Value options:
	// + **BUILDING**: The instance is being backed up and cannot be rebuilt.
	// + **COMPLETED**: The backup is complete and the instance can be rebuilt.
	RecycleStatus pulumi.StringPtrInput `pulumi:"recycleStatus"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the storage space in **GB**.
	// The value must be a multiple of **10** and the value range is from **40 GB** to **4,000 GB**.
	VolumeSize pulumi.StringPtrInput `pulumi:"volumeSize"`
	// Specifies the storage type.
	// Value options:
	// + **ULTRAHIGH**: ultra-high I/O storage.
	// + **ULTRAHIGHPRO**: ultra-high I/O (advanced) storage.
	// + **CLOUDSSD**: cloud SSD storage.
	// + **LOCALSSD**: local SSD storage.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (GetRecyclingInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecyclingInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getRecyclingInstances.
type GetRecyclingInstancesResultOutput struct{ *pulumi.OutputState }

func (GetRecyclingInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecyclingInstancesResult)(nil)).Elem()
}

func (o GetRecyclingInstancesResultOutput) ToGetRecyclingInstancesResultOutput() GetRecyclingInstancesResultOutput {
	return o
}

func (o GetRecyclingInstancesResultOutput) ToGetRecyclingInstancesResultOutputWithContext(ctx context.Context) GetRecyclingInstancesResultOutput {
	return o
}

// Indicates the floating IP address.
func (o GetRecyclingInstancesResultOutput) DataVip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.DataVip }).(pulumi.StringPtrOutput)
}

// Indicates the instance DB engine name.
func (o GetRecyclingInstancesResultOutput) EngineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.EngineName }).(pulumi.StringPtrOutput)
}

// Indicates the instance DB engine version.
func (o GetRecyclingInstancesResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// Indicates the enterprise project ID.
func (o GetRecyclingInstancesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// Indicates the instance type.
func (o GetRecyclingInstancesResultOutput) HaMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.HaMode }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRecyclingInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRecyclingInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Indicates the list of recycling RDS instances.
func (o GetRecyclingInstancesResultOutput) Instances() GetRecyclingInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) []GetRecyclingInstancesInstance { return v.Instances }).(GetRecyclingInstancesInstanceArrayOutput)
}

// Indicates whether the instance is a serverless instance.
func (o GetRecyclingInstancesResultOutput) IsServerless() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.IsServerless }).(pulumi.StringPtrOutput)
}

// Indicates the instance name.
func (o GetRecyclingInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the instance billing mode.
func (o GetRecyclingInstancesResultOutput) PayModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.PayModel }).(pulumi.StringPtrOutput)
}

// Indicates the backup ID.
func (o GetRecyclingInstancesResultOutput) RecycleBackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.RecycleBackupId }).(pulumi.StringPtrOutput)
}

// Indicates the backup status.
func (o GetRecyclingInstancesResultOutput) RecycleStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.RecycleStatus }).(pulumi.StringPtrOutput)
}

func (o GetRecyclingInstancesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the storage space in **GB**.
func (o GetRecyclingInstancesResultOutput) VolumeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.VolumeSize }).(pulumi.StringPtrOutput)
}

// Indicates the storage type.
func (o GetRecyclingInstancesResultOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecyclingInstancesResult) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecyclingInstancesResultOutput{})
}
