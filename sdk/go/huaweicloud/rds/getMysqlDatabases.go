// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS MySQL databases.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rds.GetMysqlDatabases(ctx, &rds.GetMysqlDatabasesArgs{
//				InstanceId:   _var.Instance_id,
//				Name:         pulumi.StringRef("test"),
//				CharacterSet: pulumi.StringRef("utf8"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMysqlDatabases(ctx *pulumi.Context, args *GetMysqlDatabasesArgs, opts ...pulumi.InvokeOption) (*GetMysqlDatabasesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetMysqlDatabasesResult
	err := ctx.Invoke("huaweicloud:Rds/getMysqlDatabases:getMysqlDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlDatabases.
type GetMysqlDatabasesArgs struct {
	// Specifies the character set used by the database.
	CharacterSet *string `pulumi:"characterSet"`
	// Specifies the ID of the RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the database name.
	Name *string `pulumi:"name"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getMysqlDatabases.
type GetMysqlDatabasesResult struct {
	// Indicates the character set used by the database.
	CharacterSet *string `pulumi:"characterSet"`
	// The list of databases.
	// The databases structure is documented below.
	Databases []GetMysqlDatabasesDatabase `pulumi:"databases"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	// Indicates the database name.
	Name   *string `pulumi:"name"`
	Region string  `pulumi:"region"`
}

func GetMysqlDatabasesOutput(ctx *pulumi.Context, args GetMysqlDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetMysqlDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMysqlDatabasesResult, error) {
			args := v.(GetMysqlDatabasesArgs)
			r, err := GetMysqlDatabases(ctx, &args, opts...)
			var s GetMysqlDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMysqlDatabasesResultOutput)
}

// A collection of arguments for invoking getMysqlDatabases.
type GetMysqlDatabasesOutputArgs struct {
	// Specifies the character set used by the database.
	CharacterSet pulumi.StringPtrInput `pulumi:"characterSet"`
	// Specifies the ID of the RDS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the database name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetMysqlDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlDatabases.
type GetMysqlDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetMysqlDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlDatabasesResult)(nil)).Elem()
}

func (o GetMysqlDatabasesResultOutput) ToGetMysqlDatabasesResultOutput() GetMysqlDatabasesResultOutput {
	return o
}

func (o GetMysqlDatabasesResultOutput) ToGetMysqlDatabasesResultOutputWithContext(ctx context.Context) GetMysqlDatabasesResultOutput {
	return o
}

// Indicates the character set used by the database.
func (o GetMysqlDatabasesResultOutput) CharacterSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlDatabasesResult) *string { return v.CharacterSet }).(pulumi.StringPtrOutput)
}

// The list of databases.
// The databases structure is documented below.
func (o GetMysqlDatabasesResultOutput) Databases() GetMysqlDatabasesDatabaseArrayOutput {
	return o.ApplyT(func(v GetMysqlDatabasesResult) []GetMysqlDatabasesDatabase { return v.Databases }).(GetMysqlDatabasesDatabaseArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMysqlDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMysqlDatabasesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDatabasesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Indicates the database name.
func (o GetMysqlDatabasesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlDatabasesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetMysqlDatabasesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlDatabasesResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMysqlDatabasesResultOutput{})
}
