// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the databases that can be restored to a specified point in time.
func GetRestoredDatabases(ctx *pulumi.Context, args *GetRestoredDatabasesArgs, opts ...pulumi.InvokeOption) (*GetRestoredDatabasesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetRestoredDatabasesResult
	err := ctx.Invoke("huaweicloud:Rds/getRestoredDatabases:getRestoredDatabases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRestoredDatabases.
type GetRestoredDatabasesArgs struct {
	// Specifies the database name, which can be used for fuzzy query.
	DatabaseNameLike *string `pulumi:"databaseNameLike"`
	// Specifies the database engine. The supported engines are as follows, not case-sensitive:
	// **postgresql**, **mysql**.
	Engine string `pulumi:"engine"`
	// Specifies the RDS instance IDs.
	InstanceIds []string `pulumi:"instanceIds"`
	// Specifies the instance name, which can be used for fuzzy query.
	InstanceNameLike *string `pulumi:"instanceNameLike"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the restoration time point. A timestamp in milliseconds is used.
	RestoreTime string `pulumi:"restoreTime"`
}

// A collection of values returned by getRestoredDatabases.
type GetRestoredDatabasesResult struct {
	// Indicates the maximum number of databases that can be restored for a single instance. If the number
	// of databases queried exceeds this limit, only the databases within this limit are returned to the response.
	DatabaseLimit    int     `pulumi:"databaseLimit"`
	DatabaseNameLike *string `pulumi:"databaseNameLike"`
	Engine           string  `pulumi:"engine"`
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	InstanceIds      []string `pulumi:"instanceIds"`
	InstanceNameLike *string  `pulumi:"instanceNameLike"`
	// Indicates the instance information.
	Instances   []GetRestoredDatabasesInstance `pulumi:"instances"`
	Region      string                         `pulumi:"region"`
	RestoreTime string                         `pulumi:"restoreTime"`
	// Indicates the maximum number of tables in all databases that can be restored for a single instance. If
	// the number of tables queried exceeds this limit, only the databases whose total number of tables is within this limit
	// are returned to the response.
	TableLimit int `pulumi:"tableLimit"`
}

func GetRestoredDatabasesOutput(ctx *pulumi.Context, args GetRestoredDatabasesOutputArgs, opts ...pulumi.InvokeOption) GetRestoredDatabasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRestoredDatabasesResult, error) {
			args := v.(GetRestoredDatabasesArgs)
			r, err := GetRestoredDatabases(ctx, &args, opts...)
			var s GetRestoredDatabasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRestoredDatabasesResultOutput)
}

// A collection of arguments for invoking getRestoredDatabases.
type GetRestoredDatabasesOutputArgs struct {
	// Specifies the database name, which can be used for fuzzy query.
	DatabaseNameLike pulumi.StringPtrInput `pulumi:"databaseNameLike"`
	// Specifies the database engine. The supported engines are as follows, not case-sensitive:
	// **postgresql**, **mysql**.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the RDS instance IDs.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Specifies the instance name, which can be used for fuzzy query.
	InstanceNameLike pulumi.StringPtrInput `pulumi:"instanceNameLike"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the restoration time point. A timestamp in milliseconds is used.
	RestoreTime pulumi.StringInput `pulumi:"restoreTime"`
}

func (GetRestoredDatabasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRestoredDatabasesArgs)(nil)).Elem()
}

// A collection of values returned by getRestoredDatabases.
type GetRestoredDatabasesResultOutput struct{ *pulumi.OutputState }

func (GetRestoredDatabasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRestoredDatabasesResult)(nil)).Elem()
}

func (o GetRestoredDatabasesResultOutput) ToGetRestoredDatabasesResultOutput() GetRestoredDatabasesResultOutput {
	return o
}

func (o GetRestoredDatabasesResultOutput) ToGetRestoredDatabasesResultOutputWithContext(ctx context.Context) GetRestoredDatabasesResultOutput {
	return o
}

// Indicates the maximum number of databases that can be restored for a single instance. If the number
// of databases queried exceeds this limit, only the databases within this limit are returned to the response.
func (o GetRestoredDatabasesResultOutput) DatabaseLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) int { return v.DatabaseLimit }).(pulumi.IntOutput)
}

func (o GetRestoredDatabasesResultOutput) DatabaseNameLike() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) *string { return v.DatabaseNameLike }).(pulumi.StringPtrOutput)
}

func (o GetRestoredDatabasesResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) string { return v.Engine }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRestoredDatabasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRestoredDatabasesResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetRestoredDatabasesResultOutput) InstanceNameLike() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) *string { return v.InstanceNameLike }).(pulumi.StringPtrOutput)
}

// Indicates the instance information.
func (o GetRestoredDatabasesResultOutput) Instances() GetRestoredDatabasesInstanceArrayOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) []GetRestoredDatabasesInstance { return v.Instances }).(GetRestoredDatabasesInstanceArrayOutput)
}

func (o GetRestoredDatabasesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRestoredDatabasesResultOutput) RestoreTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) string { return v.RestoreTime }).(pulumi.StringOutput)
}

// Indicates the maximum number of tables in all databases that can be restored for a single instance. If
// the number of tables queried exceeds this limit, only the databases whose total number of tables is within this limit
// are returned to the response.
func (o GetRestoredDatabasesResultOutput) TableLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetRestoredDatabasesResult) int { return v.TableLimit }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRestoredDatabasesResultOutput{})
}
