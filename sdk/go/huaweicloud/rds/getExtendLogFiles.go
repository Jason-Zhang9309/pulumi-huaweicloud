// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS extend log files.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetExtendLogFiles(ctx, &rds.GetExtendLogFilesArgs{
//				InstanceId: instanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetExtendLogFiles(ctx *pulumi.Context, args *GetExtendLogFilesArgs, opts ...pulumi.InvokeOption) (*GetExtendLogFilesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetExtendLogFilesResult
	err := ctx.Invoke("huaweicloud:Rds/getExtendLogFiles:getExtendLogFiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExtendLogFiles.
type GetExtendLogFilesArgs struct {
	// Specifies the ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getExtendLogFiles.
type GetExtendLogFilesResult struct {
	// Indicates the list of extend log files.
	Files []GetExtendLogFilesFile `pulumi:"files"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Region     string `pulumi:"region"`
}

func GetExtendLogFilesOutput(ctx *pulumi.Context, args GetExtendLogFilesOutputArgs, opts ...pulumi.InvokeOption) GetExtendLogFilesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetExtendLogFilesResult, error) {
			args := v.(GetExtendLogFilesArgs)
			r, err := GetExtendLogFiles(ctx, &args, opts...)
			var s GetExtendLogFilesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetExtendLogFilesResultOutput)
}

// A collection of arguments for invoking getExtendLogFiles.
type GetExtendLogFilesOutputArgs struct {
	// Specifies the ID of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetExtendLogFilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtendLogFilesArgs)(nil)).Elem()
}

// A collection of values returned by getExtendLogFiles.
type GetExtendLogFilesResultOutput struct{ *pulumi.OutputState }

func (GetExtendLogFilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetExtendLogFilesResult)(nil)).Elem()
}

func (o GetExtendLogFilesResultOutput) ToGetExtendLogFilesResultOutput() GetExtendLogFilesResultOutput {
	return o
}

func (o GetExtendLogFilesResultOutput) ToGetExtendLogFilesResultOutputWithContext(ctx context.Context) GetExtendLogFilesResultOutput {
	return o
}

// Indicates the list of extend log files.
func (o GetExtendLogFilesResultOutput) Files() GetExtendLogFilesFileArrayOutput {
	return o.ApplyT(func(v GetExtendLogFilesResult) []GetExtendLogFilesFile { return v.Files }).(GetExtendLogFilesFileArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetExtendLogFilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtendLogFilesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetExtendLogFilesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtendLogFilesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetExtendLogFilesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetExtendLogFilesResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetExtendLogFilesResultOutput{})
}
