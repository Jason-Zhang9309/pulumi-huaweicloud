// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS instance roles.
func GetPgRoles(ctx *pulumi.Context, args *GetPgRolesArgs, opts ...pulumi.InvokeOption) (*GetPgRolesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPgRolesResult
	err := ctx.Invoke("huaweicloud:Rds/getPgRoles:getPgRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPgRoles.
type GetPgRolesArgs struct {
	// Specifies the username of the account.
	// The list of authorized roles for this account when there is a value.
	Account *string `pulumi:"account"`
	// Specifies the ID of Instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getPgRoles.
type GetPgRolesResult struct {
	Account *string `pulumi:"account"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Region     string `pulumi:"region"`
	// Indicates the list of roles.
	Roles []string `pulumi:"roles"`
}

func GetPgRolesOutput(ctx *pulumi.Context, args GetPgRolesOutputArgs, opts ...pulumi.InvokeOption) GetPgRolesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPgRolesResult, error) {
			args := v.(GetPgRolesArgs)
			r, err := GetPgRoles(ctx, &args, opts...)
			var s GetPgRolesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPgRolesResultOutput)
}

// A collection of arguments for invoking getPgRoles.
type GetPgRolesOutputArgs struct {
	// Specifies the username of the account.
	// The list of authorized roles for this account when there is a value.
	Account pulumi.StringPtrInput `pulumi:"account"`
	// Specifies the ID of Instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetPgRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgRolesArgs)(nil)).Elem()
}

// A collection of values returned by getPgRoles.
type GetPgRolesResultOutput struct{ *pulumi.OutputState }

func (GetPgRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPgRolesResult)(nil)).Elem()
}

func (o GetPgRolesResultOutput) ToGetPgRolesResultOutput() GetPgRolesResultOutput {
	return o
}

func (o GetPgRolesResultOutput) ToGetPgRolesResultOutputWithContext(ctx context.Context) GetPgRolesResultOutput {
	return o
}

func (o GetPgRolesResultOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPgRolesResult) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPgRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPgRolesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgRolesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetPgRolesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetPgRolesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the list of roles.
func (o GetPgRolesResultOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPgRolesResult) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPgRolesResultOutput{})
}
