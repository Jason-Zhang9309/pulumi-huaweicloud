// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS instances for which cross-region backups are created.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetCrossRegionBackupInstances(ctx, &rds.GetCrossRegionBackupInstancesArgs{
//				InstanceId: pulumi.StringRef(instanceId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCrossRegionBackupInstances(ctx *pulumi.Context, args *GetCrossRegionBackupInstancesArgs, opts ...pulumi.InvokeOption) (*GetCrossRegionBackupInstancesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCrossRegionBackupInstancesResult
	err := ctx.Invoke("huaweicloud:Rds/getCrossRegionBackupInstances:getCrossRegionBackupInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCrossRegionBackupInstances.
type GetCrossRegionBackupInstancesArgs struct {
	// Specifies the project ID of the target backup region.
	DestinationProjectId *string `pulumi:"destinationProjectId"`
	// Specifies the region where the cross-region backup is located.
	DestinationRegion *string `pulumi:"destinationRegion"`
	// Specifies the ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the number of days to retain cross-region backups.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the name of the instance.
	Name *string `pulumi:"name"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the project ID of the source backup region.
	SourceProjectId *string `pulumi:"sourceProjectId"`
	// Specifies the source backup region.
	SourceRegion *string `pulumi:"sourceRegion"`
}

// A collection of values returned by getCrossRegionBackupInstances.
type GetCrossRegionBackupInstancesResult struct {
	// Indicates the list of instances for which cross-region backups are created.
	BackupInstances []GetCrossRegionBackupInstancesBackupInstance `pulumi:"backupInstances"`
	// Indicates the project ID of the target backup region.
	DestinationProjectId *string `pulumi:"destinationProjectId"`
	// Indicates the region where the cross-region backup is located.
	DestinationRegion *string `pulumi:"destinationRegion"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId *string `pulumi:"instanceId"`
	// Indicates the number of days to retain cross-region backups.
	KeepDays *int `pulumi:"keepDays"`
	// Indicates the name of the instance.
	Name   *string `pulumi:"name"`
	Region string  `pulumi:"region"`
	// Indicates the project ID of the source backup region.
	SourceProjectId *string `pulumi:"sourceProjectId"`
	// Indicates the source backup region.
	SourceRegion *string `pulumi:"sourceRegion"`
}

func GetCrossRegionBackupInstancesOutput(ctx *pulumi.Context, args GetCrossRegionBackupInstancesOutputArgs, opts ...pulumi.InvokeOption) GetCrossRegionBackupInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCrossRegionBackupInstancesResult, error) {
			args := v.(GetCrossRegionBackupInstancesArgs)
			r, err := GetCrossRegionBackupInstances(ctx, &args, opts...)
			var s GetCrossRegionBackupInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCrossRegionBackupInstancesResultOutput)
}

// A collection of arguments for invoking getCrossRegionBackupInstances.
type GetCrossRegionBackupInstancesOutputArgs struct {
	// Specifies the project ID of the target backup region.
	DestinationProjectId pulumi.StringPtrInput `pulumi:"destinationProjectId"`
	// Specifies the region where the cross-region backup is located.
	DestinationRegion pulumi.StringPtrInput `pulumi:"destinationRegion"`
	// Specifies the ID of the instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Specifies the number of days to retain cross-region backups.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the name of the instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the project ID of the source backup region.
	SourceProjectId pulumi.StringPtrInput `pulumi:"sourceProjectId"`
	// Specifies the source backup region.
	SourceRegion pulumi.StringPtrInput `pulumi:"sourceRegion"`
}

func (GetCrossRegionBackupInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossRegionBackupInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getCrossRegionBackupInstances.
type GetCrossRegionBackupInstancesResultOutput struct{ *pulumi.OutputState }

func (GetCrossRegionBackupInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCrossRegionBackupInstancesResult)(nil)).Elem()
}

func (o GetCrossRegionBackupInstancesResultOutput) ToGetCrossRegionBackupInstancesResultOutput() GetCrossRegionBackupInstancesResultOutput {
	return o
}

func (o GetCrossRegionBackupInstancesResultOutput) ToGetCrossRegionBackupInstancesResultOutputWithContext(ctx context.Context) GetCrossRegionBackupInstancesResultOutput {
	return o
}

// Indicates the list of instances for which cross-region backups are created.
func (o GetCrossRegionBackupInstancesResultOutput) BackupInstances() GetCrossRegionBackupInstancesBackupInstanceArrayOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) []GetCrossRegionBackupInstancesBackupInstance {
		return v.BackupInstances
	}).(GetCrossRegionBackupInstancesBackupInstanceArrayOutput)
}

// Indicates the project ID of the target backup region.
func (o GetCrossRegionBackupInstancesResultOutput) DestinationProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *string { return v.DestinationProjectId }).(pulumi.StringPtrOutput)
}

// Indicates the region where the cross-region backup is located.
func (o GetCrossRegionBackupInstancesResultOutput) DestinationRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *string { return v.DestinationRegion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCrossRegionBackupInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCrossRegionBackupInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Indicates the number of days to retain cross-region backups.
func (o GetCrossRegionBackupInstancesResultOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Indicates the name of the instance.
func (o GetCrossRegionBackupInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetCrossRegionBackupInstancesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the project ID of the source backup region.
func (o GetCrossRegionBackupInstancesResultOutput) SourceProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *string { return v.SourceProjectId }).(pulumi.StringPtrOutput)
}

// Indicates the source backup region.
func (o GetCrossRegionBackupInstancesResultOutput) SourceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCrossRegionBackupInstancesResult) *string { return v.SourceRegion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCrossRegionBackupInstancesResultOutput{})
}
