// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Database_privilegeUser struct {
	// Specifies the username of the database account. Changing this creates a new resource.
	Name string `pulumi:"name"`
	// Specifies the read-only permission. The value can be:
	// + **true**: indicates the read-only permission.
	// + **false**: indicates the read and write permission.
	Readonly *bool `pulumi:"readonly"`
}

// Database_privilegeUserInput is an input type that accepts Database_privilegeUserArgs and Database_privilegeUserOutput values.
// You can construct a concrete instance of `Database_privilegeUserInput` via:
//
//	Database_privilegeUserArgs{...}
type Database_privilegeUserInput interface {
	pulumi.Input

	ToDatabase_privilegeUserOutput() Database_privilegeUserOutput
	ToDatabase_privilegeUserOutputWithContext(context.Context) Database_privilegeUserOutput
}

type Database_privilegeUserArgs struct {
	// Specifies the username of the database account. Changing this creates a new resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the read-only permission. The value can be:
	// + **true**: indicates the read-only permission.
	// + **false**: indicates the read and write permission.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (Database_privilegeUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Database_privilegeUser)(nil)).Elem()
}

func (i Database_privilegeUserArgs) ToDatabase_privilegeUserOutput() Database_privilegeUserOutput {
	return i.ToDatabase_privilegeUserOutputWithContext(context.Background())
}

func (i Database_privilegeUserArgs) ToDatabase_privilegeUserOutputWithContext(ctx context.Context) Database_privilegeUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Database_privilegeUserOutput)
}

// Database_privilegeUserArrayInput is an input type that accepts Database_privilegeUserArray and Database_privilegeUserArrayOutput values.
// You can construct a concrete instance of `Database_privilegeUserArrayInput` via:
//
//	Database_privilegeUserArray{ Database_privilegeUserArgs{...} }
type Database_privilegeUserArrayInput interface {
	pulumi.Input

	ToDatabase_privilegeUserArrayOutput() Database_privilegeUserArrayOutput
	ToDatabase_privilegeUserArrayOutputWithContext(context.Context) Database_privilegeUserArrayOutput
}

type Database_privilegeUserArray []Database_privilegeUserInput

func (Database_privilegeUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Database_privilegeUser)(nil)).Elem()
}

func (i Database_privilegeUserArray) ToDatabase_privilegeUserArrayOutput() Database_privilegeUserArrayOutput {
	return i.ToDatabase_privilegeUserArrayOutputWithContext(context.Background())
}

func (i Database_privilegeUserArray) ToDatabase_privilegeUserArrayOutputWithContext(ctx context.Context) Database_privilegeUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Database_privilegeUserArrayOutput)
}

type Database_privilegeUserOutput struct{ *pulumi.OutputState }

func (Database_privilegeUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Database_privilegeUser)(nil)).Elem()
}

func (o Database_privilegeUserOutput) ToDatabase_privilegeUserOutput() Database_privilegeUserOutput {
	return o
}

func (o Database_privilegeUserOutput) ToDatabase_privilegeUserOutputWithContext(ctx context.Context) Database_privilegeUserOutput {
	return o
}

// Specifies the username of the database account. Changing this creates a new resource.
func (o Database_privilegeUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Database_privilegeUser) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the read-only permission. The value can be:
// + **true**: indicates the read-only permission.
// + **false**: indicates the read and write permission.
func (o Database_privilegeUserOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Database_privilegeUser) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type Database_privilegeUserArrayOutput struct{ *pulumi.OutputState }

func (Database_privilegeUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Database_privilegeUser)(nil)).Elem()
}

func (o Database_privilegeUserArrayOutput) ToDatabase_privilegeUserArrayOutput() Database_privilegeUserArrayOutput {
	return o
}

func (o Database_privilegeUserArrayOutput) ToDatabase_privilegeUserArrayOutputWithContext(ctx context.Context) Database_privilegeUserArrayOutput {
	return o
}

func (o Database_privilegeUserArrayOutput) Index(i pulumi.IntInput) Database_privilegeUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Database_privilegeUser {
		return vs[0].([]Database_privilegeUser)[vs[1].(int)]
	}).(Database_privilegeUserOutput)
}

type InstanceBackupStrategy struct {
	// Specifies the retention days for specific backup files. The value range is from 0 to
	// 732. If this parameter is not specified or set to 0, the automated backup policy is disabled.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the **hh:mm-HH:MM**
	// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
	// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
	// 00.
	StartTime string `pulumi:"startTime"`
}

// InstanceBackupStrategyInput is an input type that accepts InstanceBackupStrategyArgs and InstanceBackupStrategyOutput values.
// You can construct a concrete instance of `InstanceBackupStrategyInput` via:
//
//	InstanceBackupStrategyArgs{...}
type InstanceBackupStrategyInput interface {
	pulumi.Input

	ToInstanceBackupStrategyOutput() InstanceBackupStrategyOutput
	ToInstanceBackupStrategyOutputWithContext(context.Context) InstanceBackupStrategyOutput
}

type InstanceBackupStrategyArgs struct {
	// Specifies the retention days for specific backup files. The value range is from 0 to
	// 732. If this parameter is not specified or set to 0, the automated backup policy is disabled.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the **hh:mm-HH:MM**
	// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
	// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
	// 00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (InstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupStrategy)(nil)).Elem()
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyOutput() InstanceBackupStrategyOutput {
	return i.ToInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyOutputWithContext(ctx context.Context) InstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupStrategyOutput)
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return i.ToInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i InstanceBackupStrategyArgs) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupStrategyOutput).ToInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// InstanceBackupStrategyPtrInput is an input type that accepts InstanceBackupStrategyArgs, InstanceBackupStrategyPtr and InstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `InstanceBackupStrategyPtrInput` via:
//
//	        InstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type InstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput
	ToInstanceBackupStrategyPtrOutputWithContext(context.Context) InstanceBackupStrategyPtrOutput
}

type instanceBackupStrategyPtrType InstanceBackupStrategyArgs

func InstanceBackupStrategyPtr(v *InstanceBackupStrategyArgs) InstanceBackupStrategyPtrInput {
	return (*instanceBackupStrategyPtrType)(v)
}

func (*instanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupStrategy)(nil)).Elem()
}

func (i *instanceBackupStrategyPtrType) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return i.ToInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *instanceBackupStrategyPtrType) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBackupStrategyPtrOutput)
}

type InstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (InstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBackupStrategy)(nil)).Elem()
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyOutput() InstanceBackupStrategyOutput {
	return o
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyOutputWithContext(ctx context.Context) InstanceBackupStrategyOutput {
	return o
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return o.ToInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o InstanceBackupStrategyOutput) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBackupStrategy) *InstanceBackupStrategy {
		return &v
	}).(InstanceBackupStrategyPtrOutput)
}

// Specifies the retention days for specific backup files. The value range is from 0 to
// 732. If this parameter is not specified or set to 0, the automated backup policy is disabled.
func (o InstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the **hh:mm-HH:MM**
// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
// 00.
func (o InstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type InstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (InstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBackupStrategy)(nil)).Elem()
}

func (o InstanceBackupStrategyPtrOutput) ToInstanceBackupStrategyPtrOutput() InstanceBackupStrategyPtrOutput {
	return o
}

func (o InstanceBackupStrategyPtrOutput) ToInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InstanceBackupStrategyPtrOutput {
	return o
}

func (o InstanceBackupStrategyPtrOutput) Elem() InstanceBackupStrategyOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) InstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret InstanceBackupStrategy
		return ret
	}).(InstanceBackupStrategyOutput)
}

// Specifies the retention days for specific backup files. The value range is from 0 to
// 732. If this parameter is not specified or set to 0, the automated backup policy is disabled.
func (o InstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the **hh:mm-HH:MM**
// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
// 00.
func (o InstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type InstanceDb struct {
	// Specifies the database password. The value cannot be empty and should
	// contain 8 to 32 characters, including uppercase and lowercase letters, digits, and the following special
	// characters: ~!@#%^*-_=+? You are advised to enter a strong password to improve security, preventing security risks
	// such as brute force cracking. Changing this parameter will create a new resource.
	Password string `pulumi:"password"`
	// Specifies the database port.
	// + The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
	//   and cannot be used). The default value is 3306.
	// + The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
	// + The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
	//   default value is 1433.
	Port *int `pulumi:"port"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type     string  `pulumi:"type"`
	UserName *string `pulumi:"userName"`
	// Specifies the database version. Changing this parameter will create a new
	// resource. Available values detailed in
	// [DB Engines and Versions](https://support.huaweicloud.com/intl/en-us/productdesc-rds/en-us_topic_0043898356.html).
	Version string `pulumi:"version"`
}

// InstanceDbInput is an input type that accepts InstanceDbArgs and InstanceDbOutput values.
// You can construct a concrete instance of `InstanceDbInput` via:
//
//	InstanceDbArgs{...}
type InstanceDbInput interface {
	pulumi.Input

	ToInstanceDbOutput() InstanceDbOutput
	ToInstanceDbOutputWithContext(context.Context) InstanceDbOutput
}

type InstanceDbArgs struct {
	// Specifies the database password. The value cannot be empty and should
	// contain 8 to 32 characters, including uppercase and lowercase letters, digits, and the following special
	// characters: ~!@#%^*-_=+? You are advised to enter a strong password to improve security, preventing security risks
	// such as brute force cracking. Changing this parameter will create a new resource.
	Password pulumi.StringInput `pulumi:"password"`
	// Specifies the database port.
	// + The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
	//   and cannot be used). The default value is 3306.
	// + The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
	// + The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
	//   default value is 1433.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type     pulumi.StringInput    `pulumi:"type"`
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Specifies the database version. Changing this parameter will create a new
	// resource. Available values detailed in
	// [DB Engines and Versions](https://support.huaweicloud.com/intl/en-us/productdesc-rds/en-us_topic_0043898356.html).
	Version pulumi.StringInput `pulumi:"version"`
}

func (InstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDb)(nil)).Elem()
}

func (i InstanceDbArgs) ToInstanceDbOutput() InstanceDbOutput {
	return i.ToInstanceDbOutputWithContext(context.Background())
}

func (i InstanceDbArgs) ToInstanceDbOutputWithContext(ctx context.Context) InstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbOutput)
}

func (i InstanceDbArgs) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return i.ToInstanceDbPtrOutputWithContext(context.Background())
}

func (i InstanceDbArgs) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbOutput).ToInstanceDbPtrOutputWithContext(ctx)
}

// InstanceDbPtrInput is an input type that accepts InstanceDbArgs, InstanceDbPtr and InstanceDbPtrOutput values.
// You can construct a concrete instance of `InstanceDbPtrInput` via:
//
//	        InstanceDbArgs{...}
//
//	or:
//
//	        nil
type InstanceDbPtrInput interface {
	pulumi.Input

	ToInstanceDbPtrOutput() InstanceDbPtrOutput
	ToInstanceDbPtrOutputWithContext(context.Context) InstanceDbPtrOutput
}

type instanceDbPtrType InstanceDbArgs

func InstanceDbPtr(v *InstanceDbArgs) InstanceDbPtrInput {
	return (*instanceDbPtrType)(v)
}

func (*instanceDbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDb)(nil)).Elem()
}

func (i *instanceDbPtrType) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return i.ToInstanceDbPtrOutputWithContext(context.Background())
}

func (i *instanceDbPtrType) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDbPtrOutput)
}

type InstanceDbOutput struct{ *pulumi.OutputState }

func (InstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDb)(nil)).Elem()
}

func (o InstanceDbOutput) ToInstanceDbOutput() InstanceDbOutput {
	return o
}

func (o InstanceDbOutput) ToInstanceDbOutputWithContext(ctx context.Context) InstanceDbOutput {
	return o
}

func (o InstanceDbOutput) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return o.ToInstanceDbPtrOutputWithContext(context.Background())
}

func (o InstanceDbOutput) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceDb) *InstanceDb {
		return &v
	}).(InstanceDbPtrOutput)
}

// Specifies the database password. The value cannot be empty and should
// contain 8 to 32 characters, including uppercase and lowercase letters, digits, and the following special
// characters: ~!@#%^*-_=+? You are advised to enter a strong password to improve security, preventing security risks
// such as brute force cracking. Changing this parameter will create a new resource.
func (o InstanceDbOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDb) string { return v.Password }).(pulumi.StringOutput)
}

// Specifies the database port.
//   - The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
//     and cannot be used). The default value is 3306.
//   - The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
//   - The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
//     default value is 1433.
func (o InstanceDbOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDb) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o InstanceDbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDb) string { return v.Type }).(pulumi.StringOutput)
}

func (o InstanceDbOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDb) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Specifies the database version. Changing this parameter will create a new
// resource. Available values detailed in
// [DB Engines and Versions](https://support.huaweicloud.com/intl/en-us/productdesc-rds/en-us_topic_0043898356.html).
func (o InstanceDbOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDb) string { return v.Version }).(pulumi.StringOutput)
}

type InstanceDbPtrOutput struct{ *pulumi.OutputState }

func (InstanceDbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDb)(nil)).Elem()
}

func (o InstanceDbPtrOutput) ToInstanceDbPtrOutput() InstanceDbPtrOutput {
	return o
}

func (o InstanceDbPtrOutput) ToInstanceDbPtrOutputWithContext(ctx context.Context) InstanceDbPtrOutput {
	return o
}

func (o InstanceDbPtrOutput) Elem() InstanceDbOutput {
	return o.ApplyT(func(v *InstanceDb) InstanceDb {
		if v != nil {
			return *v
		}
		var ret InstanceDb
		return ret
	}).(InstanceDbOutput)
}

// Specifies the database password. The value cannot be empty and should
// contain 8 to 32 characters, including uppercase and lowercase letters, digits, and the following special
// characters: ~!@#%^*-_=+? You are advised to enter a strong password to improve security, preventing security risks
// such as brute force cracking. Changing this parameter will create a new resource.
func (o InstanceDbPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Specifies the database port.
//   - The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
//     and cannot be used). The default value is 3306.
//   - The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
//   - The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
//     default value is 1433.
func (o InstanceDbPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o InstanceDbPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o InstanceDbPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version. Changing this parameter will create a new
// resource. Available values detailed in
// [DB Engines and Versions](https://support.huaweicloud.com/intl/en-us/productdesc-rds/en-us_topic_0043898356.html).
func (o InstanceDbPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDb) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type InstanceNode struct {
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the node type. The value can be master or slave, indicating the primary node or standby node
	// respectively.
	Role *string `pulumi:"role"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
}

// InstanceNodeInput is an input type that accepts InstanceNodeArgs and InstanceNodeOutput values.
// You can construct a concrete instance of `InstanceNodeInput` via:
//
//	InstanceNodeArgs{...}
type InstanceNodeInput interface {
	pulumi.Input

	ToInstanceNodeOutput() InstanceNodeOutput
	ToInstanceNodeOutputWithContext(context.Context) InstanceNodeOutput
}

type InstanceNodeArgs struct {
	// Specifies the list of AZ name. Changing this parameter will create a
	// new resource.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the node type. The value can be master or slave, indicating the primary node or standby node
	// respectively.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (InstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArgs) ToInstanceNodeOutput() InstanceNodeOutput {
	return i.ToInstanceNodeOutputWithContext(context.Background())
}

func (i InstanceNodeArgs) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeOutput)
}

// InstanceNodeArrayInput is an input type that accepts InstanceNodeArray and InstanceNodeArrayOutput values.
// You can construct a concrete instance of `InstanceNodeArrayInput` via:
//
//	InstanceNodeArray{ InstanceNodeArgs{...} }
type InstanceNodeArrayInput interface {
	pulumi.Input

	ToInstanceNodeArrayOutput() InstanceNodeArrayOutput
	ToInstanceNodeArrayOutputWithContext(context.Context) InstanceNodeArrayOutput
}

type InstanceNodeArray []InstanceNodeInput

func (InstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return i.ToInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InstanceNodeArray) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeArrayOutput)
}

type InstanceNodeOutput struct{ *pulumi.OutputState }

func (InstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNode)(nil)).Elem()
}

func (o InstanceNodeOutput) ToInstanceNodeOutput() InstanceNodeOutput {
	return o
}

func (o InstanceNodeOutput) ToInstanceNodeOutputWithContext(ctx context.Context) InstanceNodeOutput {
	return o
}

// Specifies the list of AZ name. Changing this parameter will create a
// new resource.
func (o InstanceNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Indicates the node ID.
func (o InstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the DB instance name. The DB instance name of the same type must be unique for
// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
// contain only letters, digits, hyphens (-), and underscores (_).
func (o InstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the node type. The value can be master or slave, indicating the primary node or standby node
// respectively.
func (o InstanceNodeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o InstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type InstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNode)(nil)).Elem()
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutput() InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) ToInstanceNodeArrayOutputWithContext(ctx context.Context) InstanceNodeArrayOutput {
	return o
}

func (o InstanceNodeArrayOutput) Index(i pulumi.IntInput) InstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNode {
		return vs[0].([]InstanceNode)[vs[1].(int)]
	}).(InstanceNodeOutput)
}

type InstanceVolume struct {
	// Specifies the key ID for disk encryption. Changing this parameter will create a new
	// resource.
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
	// multiple of 10 and greater than the original size.
	Size int `pulumi:"size"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type string `pulumi:"type"`
}

// InstanceVolumeInput is an input type that accepts InstanceVolumeArgs and InstanceVolumeOutput values.
// You can construct a concrete instance of `InstanceVolumeInput` via:
//
//	InstanceVolumeArgs{...}
type InstanceVolumeInput interface {
	pulumi.Input

	ToInstanceVolumeOutput() InstanceVolumeOutput
	ToInstanceVolumeOutputWithContext(context.Context) InstanceVolumeOutput
}

type InstanceVolumeArgs struct {
	// Specifies the key ID for disk encryption. Changing this parameter will create a new
	// resource.
	DiskEncryptionId pulumi.StringPtrInput `pulumi:"diskEncryptionId"`
	// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
	// multiple of 10 and greater than the original size.
	Size pulumi.IntInput `pulumi:"size"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVolume)(nil)).Elem()
}

func (i InstanceVolumeArgs) ToInstanceVolumeOutput() InstanceVolumeOutput {
	return i.ToInstanceVolumeOutputWithContext(context.Background())
}

func (i InstanceVolumeArgs) ToInstanceVolumeOutputWithContext(ctx context.Context) InstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVolumeOutput)
}

func (i InstanceVolumeArgs) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return i.ToInstanceVolumePtrOutputWithContext(context.Background())
}

func (i InstanceVolumeArgs) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVolumeOutput).ToInstanceVolumePtrOutputWithContext(ctx)
}

// InstanceVolumePtrInput is an input type that accepts InstanceVolumeArgs, InstanceVolumePtr and InstanceVolumePtrOutput values.
// You can construct a concrete instance of `InstanceVolumePtrInput` via:
//
//	        InstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type InstanceVolumePtrInput interface {
	pulumi.Input

	ToInstanceVolumePtrOutput() InstanceVolumePtrOutput
	ToInstanceVolumePtrOutputWithContext(context.Context) InstanceVolumePtrOutput
}

type instanceVolumePtrType InstanceVolumeArgs

func InstanceVolumePtr(v *InstanceVolumeArgs) InstanceVolumePtrInput {
	return (*instanceVolumePtrType)(v)
}

func (*instanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVolume)(nil)).Elem()
}

func (i *instanceVolumePtrType) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return i.ToInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *instanceVolumePtrType) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceVolumePtrOutput)
}

type InstanceVolumeOutput struct{ *pulumi.OutputState }

func (InstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceVolume)(nil)).Elem()
}

func (o InstanceVolumeOutput) ToInstanceVolumeOutput() InstanceVolumeOutput {
	return o
}

func (o InstanceVolumeOutput) ToInstanceVolumeOutputWithContext(ctx context.Context) InstanceVolumeOutput {
	return o
}

func (o InstanceVolumeOutput) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return o.ToInstanceVolumePtrOutputWithContext(context.Background())
}

func (o InstanceVolumeOutput) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceVolume) *InstanceVolume {
		return &v
	}).(InstanceVolumePtrOutput)
}

// Specifies the key ID for disk encryption. Changing this parameter will create a new
// resource.
func (o InstanceVolumeOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceVolume) *string { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
// multiple of 10 and greater than the original size.
func (o InstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o InstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (InstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceVolume)(nil)).Elem()
}

func (o InstanceVolumePtrOutput) ToInstanceVolumePtrOutput() InstanceVolumePtrOutput {
	return o
}

func (o InstanceVolumePtrOutput) ToInstanceVolumePtrOutputWithContext(ctx context.Context) InstanceVolumePtrOutput {
	return o
}

func (o InstanceVolumePtrOutput) Elem() InstanceVolumeOutput {
	return o.ApplyT(func(v *InstanceVolume) InstanceVolume {
		if v != nil {
			return *v
		}
		var ret InstanceVolume
		return ret
	}).(InstanceVolumeOutput)
}

// Specifies the key ID for disk encryption. Changing this parameter will create a new
// resource.
func (o InstanceVolumePtrOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionId
	}).(pulumi.StringPtrOutput)
}

// Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
// multiple of 10 and greater than the original size.
func (o InstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o InstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ParametergroupConfigurationParameter struct {
	// The parameter group description. It contains a maximum of 256 characters and cannot
	// contain the following special characters:>!<"&'= the value is left blank by default.
	Description *string `pulumi:"description"`
	// The parameter group name. It contains a maximum of 64 characters.
	Name *string `pulumi:"name"`
	// Indicates whether the parameter is read-only.
	Readonly *bool `pulumi:"readonly"`
	// Indicates whether a restart is required.
	RestartRequired *bool `pulumi:"restartRequired"`
	// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
	// value is case-insensitive and can be mysql, postgresql, or sqlserver.
	Type *string `pulumi:"type"`
	// Indicates the parameter value.
	Value *string `pulumi:"value"`
	// Indicates the parameter value range.
	ValueRange *string `pulumi:"valueRange"`
}

// ParametergroupConfigurationParameterInput is an input type that accepts ParametergroupConfigurationParameterArgs and ParametergroupConfigurationParameterOutput values.
// You can construct a concrete instance of `ParametergroupConfigurationParameterInput` via:
//
//	ParametergroupConfigurationParameterArgs{...}
type ParametergroupConfigurationParameterInput interface {
	pulumi.Input

	ToParametergroupConfigurationParameterOutput() ParametergroupConfigurationParameterOutput
	ToParametergroupConfigurationParameterOutputWithContext(context.Context) ParametergroupConfigurationParameterOutput
}

type ParametergroupConfigurationParameterArgs struct {
	// The parameter group description. It contains a maximum of 256 characters and cannot
	// contain the following special characters:>!<"&'= the value is left blank by default.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The parameter group name. It contains a maximum of 64 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates whether the parameter is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
	// Indicates whether a restart is required.
	RestartRequired pulumi.BoolPtrInput `pulumi:"restartRequired"`
	// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
	// value is case-insensitive and can be mysql, postgresql, or sqlserver.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Indicates the parameter value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Indicates the parameter value range.
	ValueRange pulumi.StringPtrInput `pulumi:"valueRange"`
}

func (ParametergroupConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupConfigurationParameter)(nil)).Elem()
}

func (i ParametergroupConfigurationParameterArgs) ToParametergroupConfigurationParameterOutput() ParametergroupConfigurationParameterOutput {
	return i.ToParametergroupConfigurationParameterOutputWithContext(context.Background())
}

func (i ParametergroupConfigurationParameterArgs) ToParametergroupConfigurationParameterOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupConfigurationParameterOutput)
}

// ParametergroupConfigurationParameterArrayInput is an input type that accepts ParametergroupConfigurationParameterArray and ParametergroupConfigurationParameterArrayOutput values.
// You can construct a concrete instance of `ParametergroupConfigurationParameterArrayInput` via:
//
//	ParametergroupConfigurationParameterArray{ ParametergroupConfigurationParameterArgs{...} }
type ParametergroupConfigurationParameterArrayInput interface {
	pulumi.Input

	ToParametergroupConfigurationParameterArrayOutput() ParametergroupConfigurationParameterArrayOutput
	ToParametergroupConfigurationParameterArrayOutputWithContext(context.Context) ParametergroupConfigurationParameterArrayOutput
}

type ParametergroupConfigurationParameterArray []ParametergroupConfigurationParameterInput

func (ParametergroupConfigurationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParametergroupConfigurationParameter)(nil)).Elem()
}

func (i ParametergroupConfigurationParameterArray) ToParametergroupConfigurationParameterArrayOutput() ParametergroupConfigurationParameterArrayOutput {
	return i.ToParametergroupConfigurationParameterArrayOutputWithContext(context.Background())
}

func (i ParametergroupConfigurationParameterArray) ToParametergroupConfigurationParameterArrayOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupConfigurationParameterArrayOutput)
}

type ParametergroupConfigurationParameterOutput struct{ *pulumi.OutputState }

func (ParametergroupConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupConfigurationParameter)(nil)).Elem()
}

func (o ParametergroupConfigurationParameterOutput) ToParametergroupConfigurationParameterOutput() ParametergroupConfigurationParameterOutput {
	return o
}

func (o ParametergroupConfigurationParameterOutput) ToParametergroupConfigurationParameterOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterOutput {
	return o
}

// The parameter group description. It contains a maximum of 256 characters and cannot
// contain the following special characters:>!<"&'= the value is left blank by default.
func (o ParametergroupConfigurationParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The parameter group name. It contains a maximum of 64 characters.
func (o ParametergroupConfigurationParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates whether the parameter is read-only.
func (o ParametergroupConfigurationParameterOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

// Indicates whether a restart is required.
func (o ParametergroupConfigurationParameterOutput) RestartRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *bool { return v.RestartRequired }).(pulumi.BoolPtrOutput)
}

// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
// value is case-insensitive and can be mysql, postgresql, or sqlserver.
func (o ParametergroupConfigurationParameterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Indicates the parameter value.
func (o ParametergroupConfigurationParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Indicates the parameter value range.
func (o ParametergroupConfigurationParameterOutput) ValueRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParametergroupConfigurationParameter) *string { return v.ValueRange }).(pulumi.StringPtrOutput)
}

type ParametergroupConfigurationParameterArrayOutput struct{ *pulumi.OutputState }

func (ParametergroupConfigurationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParametergroupConfigurationParameter)(nil)).Elem()
}

func (o ParametergroupConfigurationParameterArrayOutput) ToParametergroupConfigurationParameterArrayOutput() ParametergroupConfigurationParameterArrayOutput {
	return o
}

func (o ParametergroupConfigurationParameterArrayOutput) ToParametergroupConfigurationParameterArrayOutputWithContext(ctx context.Context) ParametergroupConfigurationParameterArrayOutput {
	return o
}

func (o ParametergroupConfigurationParameterArrayOutput) Index(i pulumi.IntInput) ParametergroupConfigurationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParametergroupConfigurationParameter {
		return vs[0].([]ParametergroupConfigurationParameter)[vs[1].(int)]
	}).(ParametergroupConfigurationParameterOutput)
}

type ParametergroupDatastore struct {
	// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
	// value is case-insensitive and can be mysql, postgresql, or sqlserver.
	Type string `pulumi:"type"`
	// Specifies the database version.
	Version string `pulumi:"version"`
}

// ParametergroupDatastoreInput is an input type that accepts ParametergroupDatastoreArgs and ParametergroupDatastoreOutput values.
// You can construct a concrete instance of `ParametergroupDatastoreInput` via:
//
//	ParametergroupDatastoreArgs{...}
type ParametergroupDatastoreInput interface {
	pulumi.Input

	ToParametergroupDatastoreOutput() ParametergroupDatastoreOutput
	ToParametergroupDatastoreOutputWithContext(context.Context) ParametergroupDatastoreOutput
}

type ParametergroupDatastoreArgs struct {
	// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
	// value is case-insensitive and can be mysql, postgresql, or sqlserver.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ParametergroupDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupDatastore)(nil)).Elem()
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastoreOutput() ParametergroupDatastoreOutput {
	return i.ToParametergroupDatastoreOutputWithContext(context.Background())
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastoreOutputWithContext(ctx context.Context) ParametergroupDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupDatastoreOutput)
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return i.ToParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (i ParametergroupDatastoreArgs) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupDatastoreOutput).ToParametergroupDatastorePtrOutputWithContext(ctx)
}

// ParametergroupDatastorePtrInput is an input type that accepts ParametergroupDatastoreArgs, ParametergroupDatastorePtr and ParametergroupDatastorePtrOutput values.
// You can construct a concrete instance of `ParametergroupDatastorePtrInput` via:
//
//	        ParametergroupDatastoreArgs{...}
//
//	or:
//
//	        nil
type ParametergroupDatastorePtrInput interface {
	pulumi.Input

	ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput
	ToParametergroupDatastorePtrOutputWithContext(context.Context) ParametergroupDatastorePtrOutput
}

type parametergroupDatastorePtrType ParametergroupDatastoreArgs

func ParametergroupDatastorePtr(v *ParametergroupDatastoreArgs) ParametergroupDatastorePtrInput {
	return (*parametergroupDatastorePtrType)(v)
}

func (*parametergroupDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametergroupDatastore)(nil)).Elem()
}

func (i *parametergroupDatastorePtrType) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return i.ToParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (i *parametergroupDatastorePtrType) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParametergroupDatastorePtrOutput)
}

type ParametergroupDatastoreOutput struct{ *pulumi.OutputState }

func (ParametergroupDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParametergroupDatastore)(nil)).Elem()
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastoreOutput() ParametergroupDatastoreOutput {
	return o
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastoreOutputWithContext(ctx context.Context) ParametergroupDatastoreOutput {
	return o
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return o.ToParametergroupDatastorePtrOutputWithContext(context.Background())
}

func (o ParametergroupDatastoreOutput) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ParametergroupDatastore) *ParametergroupDatastore {
		return &v
	}).(ParametergroupDatastorePtrOutput)
}

// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
// value is case-insensitive and can be mysql, postgresql, or sqlserver.
func (o ParametergroupDatastoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParametergroupDatastore) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the database version.
func (o ParametergroupDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ParametergroupDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type ParametergroupDatastorePtrOutput struct{ *pulumi.OutputState }

func (ParametergroupDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParametergroupDatastore)(nil)).Elem()
}

func (o ParametergroupDatastorePtrOutput) ToParametergroupDatastorePtrOutput() ParametergroupDatastorePtrOutput {
	return o
}

func (o ParametergroupDatastorePtrOutput) ToParametergroupDatastorePtrOutputWithContext(ctx context.Context) ParametergroupDatastorePtrOutput {
	return o
}

func (o ParametergroupDatastorePtrOutput) Elem() ParametergroupDatastoreOutput {
	return o.ApplyT(func(v *ParametergroupDatastore) ParametergroupDatastore {
		if v != nil {
			return *v
		}
		var ret ParametergroupDatastore
		return ret
	}).(ParametergroupDatastoreOutput)
}

// The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
// value is case-insensitive and can be mysql, postgresql, or sqlserver.
func (o ParametergroupDatastorePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametergroupDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version.
func (o ParametergroupDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParametergroupDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type ReadReplicaInstanceDb struct {
	// Indicates the database port information.
	Port *int `pulumi:"port"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type *string `pulumi:"type"`
	// Indicates the default user name of database.
	UserName *string `pulumi:"userName"`
	// Indicates the database version.
	Version *string `pulumi:"version"`
}

// ReadReplicaInstanceDbInput is an input type that accepts ReadReplicaInstanceDbArgs and ReadReplicaInstanceDbOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceDbInput` via:
//
//	ReadReplicaInstanceDbArgs{...}
type ReadReplicaInstanceDbInput interface {
	pulumi.Input

	ToReadReplicaInstanceDbOutput() ReadReplicaInstanceDbOutput
	ToReadReplicaInstanceDbOutputWithContext(context.Context) ReadReplicaInstanceDbOutput
}

type ReadReplicaInstanceDbArgs struct {
	// Indicates the database port information.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Indicates the default user name of database.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
	// Indicates the database version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ReadReplicaInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceDb)(nil)).Elem()
}

func (i ReadReplicaInstanceDbArgs) ToReadReplicaInstanceDbOutput() ReadReplicaInstanceDbOutput {
	return i.ToReadReplicaInstanceDbOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceDbArgs) ToReadReplicaInstanceDbOutputWithContext(ctx context.Context) ReadReplicaInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceDbOutput)
}

// ReadReplicaInstanceDbArrayInput is an input type that accepts ReadReplicaInstanceDbArray and ReadReplicaInstanceDbArrayOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceDbArrayInput` via:
//
//	ReadReplicaInstanceDbArray{ ReadReplicaInstanceDbArgs{...} }
type ReadReplicaInstanceDbArrayInput interface {
	pulumi.Input

	ToReadReplicaInstanceDbArrayOutput() ReadReplicaInstanceDbArrayOutput
	ToReadReplicaInstanceDbArrayOutputWithContext(context.Context) ReadReplicaInstanceDbArrayOutput
}

type ReadReplicaInstanceDbArray []ReadReplicaInstanceDbInput

func (ReadReplicaInstanceDbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplicaInstanceDb)(nil)).Elem()
}

func (i ReadReplicaInstanceDbArray) ToReadReplicaInstanceDbArrayOutput() ReadReplicaInstanceDbArrayOutput {
	return i.ToReadReplicaInstanceDbArrayOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceDbArray) ToReadReplicaInstanceDbArrayOutputWithContext(ctx context.Context) ReadReplicaInstanceDbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceDbArrayOutput)
}

type ReadReplicaInstanceDbOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceDb)(nil)).Elem()
}

func (o ReadReplicaInstanceDbOutput) ToReadReplicaInstanceDbOutput() ReadReplicaInstanceDbOutput {
	return o
}

func (o ReadReplicaInstanceDbOutput) ToReadReplicaInstanceDbOutputWithContext(ctx context.Context) ReadReplicaInstanceDbOutput {
	return o
}

// Indicates the database port information.
func (o ReadReplicaInstanceDbOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o ReadReplicaInstanceDbOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Indicates the default user name of database.
func (o ReadReplicaInstanceDbOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// Indicates the database version.
func (o ReadReplicaInstanceDbOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceDb) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ReadReplicaInstanceDbArrayOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceDbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReadReplicaInstanceDb)(nil)).Elem()
}

func (o ReadReplicaInstanceDbArrayOutput) ToReadReplicaInstanceDbArrayOutput() ReadReplicaInstanceDbArrayOutput {
	return o
}

func (o ReadReplicaInstanceDbArrayOutput) ToReadReplicaInstanceDbArrayOutputWithContext(ctx context.Context) ReadReplicaInstanceDbArrayOutput {
	return o
}

func (o ReadReplicaInstanceDbArrayOutput) Index(i pulumi.IntInput) ReadReplicaInstanceDbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReadReplicaInstanceDb {
		return vs[0].([]ReadReplicaInstanceDb)[vs[1].(int)]
	}).(ReadReplicaInstanceDbOutput)
}

type ReadReplicaInstanceVolume struct {
	// Specifies the key ID for disk encryption. Changing this parameter
	// will create a new resource.
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	Size             *int    `pulumi:"size"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type string `pulumi:"type"`
}

// ReadReplicaInstanceVolumeInput is an input type that accepts ReadReplicaInstanceVolumeArgs and ReadReplicaInstanceVolumeOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceVolumeInput` via:
//
//	ReadReplicaInstanceVolumeArgs{...}
type ReadReplicaInstanceVolumeInput interface {
	pulumi.Input

	ToReadReplicaInstanceVolumeOutput() ReadReplicaInstanceVolumeOutput
	ToReadReplicaInstanceVolumeOutputWithContext(context.Context) ReadReplicaInstanceVolumeOutput
}

type ReadReplicaInstanceVolumeArgs struct {
	// Specifies the key ID for disk encryption. Changing this parameter
	// will create a new resource.
	DiskEncryptionId pulumi.StringPtrInput `pulumi:"diskEncryptionId"`
	Size             pulumi.IntPtrInput    `pulumi:"size"`
	// Specifies the volume type. Its value can be any of the following and is
	// case-sensitive:
	// + *ULTRAHIGH*: SSD storage.
	// + *LOCALSSD*: local SSD storage.
	// + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
	//   instances.
	// + *ESSD*: extreme SSD storage.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReadReplicaInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceVolume)(nil)).Elem()
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumeOutput() ReadReplicaInstanceVolumeOutput {
	return i.ToReadReplicaInstanceVolumeOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumeOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceVolumeOutput)
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return i.ToReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (i ReadReplicaInstanceVolumeArgs) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceVolumeOutput).ToReadReplicaInstanceVolumePtrOutputWithContext(ctx)
}

// ReadReplicaInstanceVolumePtrInput is an input type that accepts ReadReplicaInstanceVolumeArgs, ReadReplicaInstanceVolumePtr and ReadReplicaInstanceVolumePtrOutput values.
// You can construct a concrete instance of `ReadReplicaInstanceVolumePtrInput` via:
//
//	        ReadReplicaInstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type ReadReplicaInstanceVolumePtrInput interface {
	pulumi.Input

	ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput
	ToReadReplicaInstanceVolumePtrOutputWithContext(context.Context) ReadReplicaInstanceVolumePtrOutput
}

type readReplicaInstanceVolumePtrType ReadReplicaInstanceVolumeArgs

func ReadReplicaInstanceVolumePtr(v *ReadReplicaInstanceVolumeArgs) ReadReplicaInstanceVolumePtrInput {
	return (*readReplicaInstanceVolumePtrType)(v)
}

func (*readReplicaInstanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstanceVolume)(nil)).Elem()
}

func (i *readReplicaInstanceVolumePtrType) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return i.ToReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *readReplicaInstanceVolumePtrType) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadReplicaInstanceVolumePtrOutput)
}

type ReadReplicaInstanceVolumeOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadReplicaInstanceVolume)(nil)).Elem()
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumeOutput() ReadReplicaInstanceVolumeOutput {
	return o
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumeOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumeOutput {
	return o
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return o.ToReadReplicaInstanceVolumePtrOutputWithContext(context.Background())
}

func (o ReadReplicaInstanceVolumeOutput) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReadReplicaInstanceVolume) *ReadReplicaInstanceVolume {
		return &v
	}).(ReadReplicaInstanceVolumePtrOutput)
}

// Specifies the key ID for disk encryption. Changing this parameter
// will create a new resource.
func (o ReadReplicaInstanceVolumeOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) *string { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o ReadReplicaInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReadReplicaInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type ReadReplicaInstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (ReadReplicaInstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReadReplicaInstanceVolume)(nil)).Elem()
}

func (o ReadReplicaInstanceVolumePtrOutput) ToReadReplicaInstanceVolumePtrOutput() ReadReplicaInstanceVolumePtrOutput {
	return o
}

func (o ReadReplicaInstanceVolumePtrOutput) ToReadReplicaInstanceVolumePtrOutputWithContext(ctx context.Context) ReadReplicaInstanceVolumePtrOutput {
	return o
}

func (o ReadReplicaInstanceVolumePtrOutput) Elem() ReadReplicaInstanceVolumeOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) ReadReplicaInstanceVolume {
		if v != nil {
			return *v
		}
		var ret ReadReplicaInstanceVolume
		return ret
	}).(ReadReplicaInstanceVolumeOutput)
}

// Specifies the key ID for disk encryption. Changing this parameter
// will create a new resource.
func (o ReadReplicaInstanceVolumePtrOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return v.DiskEncryptionId
	}).(pulumi.StringPtrOutput)
}

func (o ReadReplicaInstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Its value can be any of the following and is
// case-sensitive:
//   - *ULTRAHIGH*: SSD storage.
//   - *LOCALSSD*: local SSD storage.
//   - *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
//     instances.
//   - *ESSD*: extreme SSD storage.
func (o ReadReplicaInstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReadReplicaInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetEngineVersionsVersion struct {
	// Version ID.
	Id string `pulumi:"id"`
	// Version name.
	Name string `pulumi:"name"`
}

// GetEngineVersionsVersionInput is an input type that accepts GetEngineVersionsVersionArgs and GetEngineVersionsVersionOutput values.
// You can construct a concrete instance of `GetEngineVersionsVersionInput` via:
//
//	GetEngineVersionsVersionArgs{...}
type GetEngineVersionsVersionInput interface {
	pulumi.Input

	ToGetEngineVersionsVersionOutput() GetEngineVersionsVersionOutput
	ToGetEngineVersionsVersionOutputWithContext(context.Context) GetEngineVersionsVersionOutput
}

type GetEngineVersionsVersionArgs struct {
	// Version ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Version name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetEngineVersionsVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionsVersion)(nil)).Elem()
}

func (i GetEngineVersionsVersionArgs) ToGetEngineVersionsVersionOutput() GetEngineVersionsVersionOutput {
	return i.ToGetEngineVersionsVersionOutputWithContext(context.Background())
}

func (i GetEngineVersionsVersionArgs) ToGetEngineVersionsVersionOutputWithContext(ctx context.Context) GetEngineVersionsVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEngineVersionsVersionOutput)
}

// GetEngineVersionsVersionArrayInput is an input type that accepts GetEngineVersionsVersionArray and GetEngineVersionsVersionArrayOutput values.
// You can construct a concrete instance of `GetEngineVersionsVersionArrayInput` via:
//
//	GetEngineVersionsVersionArray{ GetEngineVersionsVersionArgs{...} }
type GetEngineVersionsVersionArrayInput interface {
	pulumi.Input

	ToGetEngineVersionsVersionArrayOutput() GetEngineVersionsVersionArrayOutput
	ToGetEngineVersionsVersionArrayOutputWithContext(context.Context) GetEngineVersionsVersionArrayOutput
}

type GetEngineVersionsVersionArray []GetEngineVersionsVersionInput

func (GetEngineVersionsVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEngineVersionsVersion)(nil)).Elem()
}

func (i GetEngineVersionsVersionArray) ToGetEngineVersionsVersionArrayOutput() GetEngineVersionsVersionArrayOutput {
	return i.ToGetEngineVersionsVersionArrayOutputWithContext(context.Background())
}

func (i GetEngineVersionsVersionArray) ToGetEngineVersionsVersionArrayOutputWithContext(ctx context.Context) GetEngineVersionsVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEngineVersionsVersionArrayOutput)
}

type GetEngineVersionsVersionOutput struct{ *pulumi.OutputState }

func (GetEngineVersionsVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionsVersion)(nil)).Elem()
}

func (o GetEngineVersionsVersionOutput) ToGetEngineVersionsVersionOutput() GetEngineVersionsVersionOutput {
	return o
}

func (o GetEngineVersionsVersionOutput) ToGetEngineVersionsVersionOutputWithContext(ctx context.Context) GetEngineVersionsVersionOutput {
	return o
}

// Version ID.
func (o GetEngineVersionsVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineVersionsVersion) string { return v.Id }).(pulumi.StringOutput)
}

// Version name.
func (o GetEngineVersionsVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineVersionsVersion) string { return v.Name }).(pulumi.StringOutput)
}

type GetEngineVersionsVersionArrayOutput struct{ *pulumi.OutputState }

func (GetEngineVersionsVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEngineVersionsVersion)(nil)).Elem()
}

func (o GetEngineVersionsVersionArrayOutput) ToGetEngineVersionsVersionArrayOutput() GetEngineVersionsVersionArrayOutput {
	return o
}

func (o GetEngineVersionsVersionArrayOutput) ToGetEngineVersionsVersionArrayOutputWithContext(ctx context.Context) GetEngineVersionsVersionArrayOutput {
	return o
}

func (o GetEngineVersionsVersionArrayOutput) Index(i pulumi.IntInput) GetEngineVersionsVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEngineVersionsVersion {
		return vs[0].([]GetEngineVersionsVersion)[vs[1].(int)]
	}).(GetEngineVersionsVersionOutput)
}

type GetFlavorsFlavor struct {
	// The availability zones which the RDS flavor belongs to.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The Available versions of the database.
	DbVersions []string `pulumi:"dbVersions"`
	// Specifies the performance specification, the valid values are as follows:
	// + **normal**: General enhanced.
	// + **normal2**: General enhanced type II.
	// + **armFlavors**: KunPeng general enhancement.
	// + **dedicatedNormal**: (dedicatedNormalLocalssd): Dedicated for x86.
	// + **armLocalssd**: KunPeng general type.
	// + **normalLocalssd**: x86 general type.
	// + **general**: General type.
	// + **dedicated**:
	//   For MySQL engine: Dedicated type.
	//   For PostgreSQL and SQL Server engines: Dedicated type, only supported by cloud disk SSD.
	// + **rapid**:
	//   For MySQL engine: Dedicated (discontinued).
	//   For PostgreSQL and SQL Server engines: Dedicated, only supported by ultra-fast SSDs.
	// + **bigmem**: Large memory type.
	GroupType string `pulumi:"groupType"`
	// The ID of the rds flavor.
	Id string `pulumi:"id"`
	// The mode of instance. Value: *ha*(indicates primary/standby instance),
	// *single*(indicates single instance) and *replica*(indicates read replicas).
	InstanceMode string `pulumi:"instanceMode"`
	// Specifies the memory size(GB) in the RDS flavor.
	Memory int `pulumi:"memory"`
	// Deprecated: use instance_mode instead
	Mode string `pulumi:"mode"`
	// The name of the rds flavor.
	Name string `pulumi:"name"`
	// Specifies the number of vCPUs in the RDS flavor.
	Vcpus int `pulumi:"vcpus"`
}

// GetFlavorsFlavorInput is an input type that accepts GetFlavorsFlavorArgs and GetFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetFlavorsFlavorInput` via:
//
//	GetFlavorsFlavorArgs{...}
type GetFlavorsFlavorInput interface {
	pulumi.Input

	ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput
	ToGetFlavorsFlavorOutputWithContext(context.Context) GetFlavorsFlavorOutput
}

type GetFlavorsFlavorArgs struct {
	// The availability zones which the RDS flavor belongs to.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The Available versions of the database.
	DbVersions pulumi.StringArrayInput `pulumi:"dbVersions"`
	// Specifies the performance specification, the valid values are as follows:
	// + **normal**: General enhanced.
	// + **normal2**: General enhanced type II.
	// + **armFlavors**: KunPeng general enhancement.
	// + **dedicatedNormal**: (dedicatedNormalLocalssd): Dedicated for x86.
	// + **armLocalssd**: KunPeng general type.
	// + **normalLocalssd**: x86 general type.
	// + **general**: General type.
	// + **dedicated**:
	//   For MySQL engine: Dedicated type.
	//   For PostgreSQL and SQL Server engines: Dedicated type, only supported by cloud disk SSD.
	// + **rapid**:
	//   For MySQL engine: Dedicated (discontinued).
	//   For PostgreSQL and SQL Server engines: Dedicated, only supported by ultra-fast SSDs.
	// + **bigmem**: Large memory type.
	GroupType pulumi.StringInput `pulumi:"groupType"`
	// The ID of the rds flavor.
	Id pulumi.StringInput `pulumi:"id"`
	// The mode of instance. Value: *ha*(indicates primary/standby instance),
	// *single*(indicates single instance) and *replica*(indicates read replicas).
	InstanceMode pulumi.StringInput `pulumi:"instanceMode"`
	// Specifies the memory size(GB) in the RDS flavor.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Deprecated: use instance_mode instead
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the rds flavor.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the number of vCPUs in the RDS flavor.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
}

func (GetFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsFlavor)(nil)).Elem()
}

func (i GetFlavorsFlavorArgs) ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput {
	return i.ToGetFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetFlavorsFlavorArgs) ToGetFlavorsFlavorOutputWithContext(ctx context.Context) GetFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlavorsFlavorOutput)
}

// GetFlavorsFlavorArrayInput is an input type that accepts GetFlavorsFlavorArray and GetFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetFlavorsFlavorArrayInput` via:
//
//	GetFlavorsFlavorArray{ GetFlavorsFlavorArgs{...} }
type GetFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput
	ToGetFlavorsFlavorArrayOutputWithContext(context.Context) GetFlavorsFlavorArrayOutput
}

type GetFlavorsFlavorArray []GetFlavorsFlavorInput

func (GetFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlavorsFlavor)(nil)).Elem()
}

func (i GetFlavorsFlavorArray) ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput {
	return i.ToGetFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetFlavorsFlavorArray) ToGetFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlavorsFlavorArrayOutput)
}

type GetFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsFlavor)(nil)).Elem()
}

func (o GetFlavorsFlavorOutput) ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput {
	return o
}

func (o GetFlavorsFlavorOutput) ToGetFlavorsFlavorOutputWithContext(ctx context.Context) GetFlavorsFlavorOutput {
	return o
}

// The availability zones which the RDS flavor belongs to.
func (o GetFlavorsFlavorOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The Available versions of the database.
func (o GetFlavorsFlavorOutput) DbVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) []string { return v.DbVersions }).(pulumi.StringArrayOutput)
}

// Specifies the performance specification, the valid values are as follows:
//   - **normal**: General enhanced.
//   - **normal2**: General enhanced type II.
//   - **armFlavors**: KunPeng general enhancement.
//   - **dedicatedNormal**: (dedicatedNormalLocalssd): Dedicated for x86.
//   - **armLocalssd**: KunPeng general type.
//   - **normalLocalssd**: x86 general type.
//   - **general**: General type.
//   - **dedicated**:
//     For MySQL engine: Dedicated type.
//     For PostgreSQL and SQL Server engines: Dedicated type, only supported by cloud disk SSD.
//   - **rapid**:
//     For MySQL engine: Dedicated (discontinued).
//     For PostgreSQL and SQL Server engines: Dedicated, only supported by ultra-fast SSDs.
//   - **bigmem**: Large memory type.
func (o GetFlavorsFlavorOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.GroupType }).(pulumi.StringOutput)
}

// The ID of the rds flavor.
func (o GetFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

// The mode of instance. Value: *ha*(indicates primary/standby instance),
// *single*(indicates single instance) and *replica*(indicates read replicas).
func (o GetFlavorsFlavorOutput) InstanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.InstanceMode }).(pulumi.StringOutput)
}

// Specifies the memory size(GB) in the RDS flavor.
func (o GetFlavorsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

// Deprecated: use instance_mode instead
func (o GetFlavorsFlavorOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the rds flavor.
func (o GetFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the number of vCPUs in the RDS flavor.
func (o GetFlavorsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlavorsFlavor)(nil)).Elem()
}

func (o GetFlavorsFlavorArrayOutput) ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput {
	return o
}

func (o GetFlavorsFlavorArrayOutput) ToGetFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetFlavorsFlavorArrayOutput {
	return o
}

func (o GetFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlavorsFlavor {
		return vs[0].([]GetFlavorsFlavor)[vs[1].(int)]
	}).(GetFlavorsFlavorOutput)
}

type GetInstancesInstance struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies []GetInstancesInstanceBackupStrategy `pulumi:"backupStrategies"`
	// Indicates the creation time.
	Created string `pulumi:"created"`
	// Indicates the database information. Structure is documented below.
	Dbs []GetInstancesInstanceDb `pulumi:"dbs"`
	// Specifies the enterprise project id.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// Indicates the intranet floating IP address of the instance.
	FixedIp string `pulumi:"fixedIp"`
	// Indicates the instance specifications.
	Flavor string `pulumi:"flavor"`
	// Indicates the replication mode for the standby DB instance.
	HaReplicationMode string `pulumi:"haReplicationMode"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []GetInstancesInstanceNode `pulumi:"nodes"`
	// Indicates the configuration ID.
	ParamGroupId string `pulumi:"paramGroupId"`
	// Indicates the private ips in list.
	PrivateIps []string `pulumi:"privateIps"`
	// Indicates the public ips in list.
	PublicIps []string `pulumi:"publicIps"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region string `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Indicates whether to enable SSL.
	SslEnable bool `pulumi:"sslEnable"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId string `pulumi:"subnetId"`
	// Indicates the tags of the instance.
	Tags map[string]string `pulumi:"tags"`
	// Indicates the time zone.
	TimeZone string `pulumi:"timeZone"`
	// Indicates the volume information. Structure is documented below.
	Volumes []GetInstancesInstanceVolume `pulumi:"volumes"`
	// Specifies the VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies GetInstancesInstanceBackupStrategyArrayInput `pulumi:"backupStrategies"`
	// Indicates the creation time.
	Created pulumi.StringInput `pulumi:"created"`
	// Indicates the database information. Structure is documented below.
	Dbs GetInstancesInstanceDbArrayInput `pulumi:"dbs"`
	// Specifies the enterprise project id.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// Indicates the intranet floating IP address of the instance.
	FixedIp pulumi.StringInput `pulumi:"fixedIp"`
	// Indicates the instance specifications.
	Flavor pulumi.StringInput `pulumi:"flavor"`
	// Indicates the replication mode for the standby DB instance.
	HaReplicationMode pulumi.StringInput `pulumi:"haReplicationMode"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes GetInstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Indicates the configuration ID.
	ParamGroupId pulumi.StringInput `pulumi:"paramGroupId"`
	// Indicates the private ips in list.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
	// Indicates the public ips in list.
	PublicIps pulumi.StringArrayInput `pulumi:"publicIps"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringInput `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Indicates whether to enable SSL.
	SslEnable pulumi.BoolInput `pulumi:"sslEnable"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Indicates the tags of the instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Indicates the time zone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// Indicates the volume information. Structure is documented below.
	Volumes GetInstancesInstanceVolumeArrayInput `pulumi:"volumes"`
	// Specifies the VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetInstancesInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Indicates the advanced backup policy. Structure is documented below.
func (o GetInstancesInstanceOutput) BackupStrategies() GetInstancesInstanceBackupStrategyArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceBackupStrategy { return v.BackupStrategies }).(GetInstancesInstanceBackupStrategyArrayOutput)
}

// Indicates the creation time.
func (o GetInstancesInstanceOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Created }).(pulumi.StringOutput)
}

// Indicates the database information. Structure is documented below.
func (o GetInstancesInstanceOutput) Dbs() GetInstancesInstanceDbArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceDb { return v.Dbs }).(GetInstancesInstanceDbArrayOutput)
}

// Specifies the enterprise project id.
func (o GetInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates the intranet floating IP address of the instance.
func (o GetInstancesInstanceOutput) FixedIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.FixedIp }).(pulumi.StringOutput)
}

// Indicates the instance specifications.
func (o GetInstancesInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Flavor }).(pulumi.StringOutput)
}

// Indicates the replication mode for the standby DB instance.
func (o GetInstancesInstanceOutput) HaReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.HaReplicationMode }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o GetInstancesInstanceOutput) Nodes() GetInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceNode { return v.Nodes }).(GetInstancesInstanceNodeArrayOutput)
}

// Indicates the configuration ID.
func (o GetInstancesInstanceOutput) ParamGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ParamGroupId }).(pulumi.StringOutput)
}

// Indicates the private ips in list.
func (o GetInstancesInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Indicates the public ips in list.
func (o GetInstancesInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// The region in which to obtain the instances. If omitted, the provider-level region will
// be used.
func (o GetInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the security group ID.
func (o GetInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates whether to enable SSL.
func (o GetInstancesInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.SslEnable }).(pulumi.BoolOutput)
}

// Indicates the node status.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of a subnet.
func (o GetInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the tags of the instance.
func (o GetInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Indicates the time zone.
func (o GetInstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

// Indicates the volume information. Structure is documented below.
func (o GetInstancesInstanceOutput) Volumes() GetInstancesInstanceVolumeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceVolume { return v.Volumes }).(GetInstancesInstanceVolumeArrayOutput)
}

// Specifies the VPC ID.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated.
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetInstancesInstanceBackupStrategyInput is an input type that accepts GetInstancesInstanceBackupStrategyArgs and GetInstancesInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupStrategyInput` via:
//
//	GetInstancesInstanceBackupStrategyArgs{...}
type GetInstancesInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupStrategyOutput() GetInstancesInstanceBackupStrategyOutput
	ToGetInstancesInstanceBackupStrategyOutputWithContext(context.Context) GetInstancesInstanceBackupStrategyOutput
}

type GetInstancesInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated.
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetInstancesInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetInstancesInstanceBackupStrategyArgs) ToGetInstancesInstanceBackupStrategyOutput() GetInstancesInstanceBackupStrategyOutput {
	return i.ToGetInstancesInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupStrategyArgs) ToGetInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupStrategyOutput)
}

// GetInstancesInstanceBackupStrategyArrayInput is an input type that accepts GetInstancesInstanceBackupStrategyArray and GetInstancesInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupStrategyArrayInput` via:
//
//	GetInstancesInstanceBackupStrategyArray{ GetInstancesInstanceBackupStrategyArgs{...} }
type GetInstancesInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupStrategyArrayOutput() GetInstancesInstanceBackupStrategyArrayOutput
	ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(context.Context) GetInstancesInstanceBackupStrategyArrayOutput
}

type GetInstancesInstanceBackupStrategyArray []GetInstancesInstanceBackupStrategyInput

func (GetInstancesInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetInstancesInstanceBackupStrategyArray) ToGetInstancesInstanceBackupStrategyArrayOutput() GetInstancesInstanceBackupStrategyArrayOutput {
	return i.ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupStrategyArray) ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupStrategyArrayOutput)
}

type GetInstancesInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetInstancesInstanceBackupStrategyOutput) ToGetInstancesInstanceBackupStrategyOutput() GetInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetInstancesInstanceBackupStrategyOutput) ToGetInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated.
func (o GetInstancesInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetInstancesInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetInstancesInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetInstancesInstanceBackupStrategyArrayOutput) ToGetInstancesInstanceBackupStrategyArrayOutput() GetInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupStrategyArrayOutput) ToGetInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetInstancesInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceBackupStrategy {
		return vs[0].([]GetInstancesInstanceBackupStrategy)[vs[1].(int)]
	}).(GetInstancesInstanceBackupStrategyOutput)
}

type GetInstancesInstanceDb struct {
	// Indicates the database port.
	Port int `pulumi:"port"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type string `pulumi:"type"`
	// Indicates the database user name.
	UserName string `pulumi:"userName"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetInstancesInstanceDbInput is an input type that accepts GetInstancesInstanceDbArgs and GetInstancesInstanceDbOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDbInput` via:
//
//	GetInstancesInstanceDbArgs{...}
type GetInstancesInstanceDbInput interface {
	pulumi.Input

	ToGetInstancesInstanceDbOutput() GetInstancesInstanceDbOutput
	ToGetInstancesInstanceDbOutputWithContext(context.Context) GetInstancesInstanceDbOutput
}

type GetInstancesInstanceDbArgs struct {
	// Indicates the database port.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type pulumi.StringInput `pulumi:"type"`
	// Indicates the database user name.
	UserName pulumi.StringInput `pulumi:"userName"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetInstancesInstanceDbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDb)(nil)).Elem()
}

func (i GetInstancesInstanceDbArgs) ToGetInstancesInstanceDbOutput() GetInstancesInstanceDbOutput {
	return i.ToGetInstancesInstanceDbOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDbArgs) ToGetInstancesInstanceDbOutputWithContext(ctx context.Context) GetInstancesInstanceDbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDbOutput)
}

// GetInstancesInstanceDbArrayInput is an input type that accepts GetInstancesInstanceDbArray and GetInstancesInstanceDbArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceDbArrayInput` via:
//
//	GetInstancesInstanceDbArray{ GetInstancesInstanceDbArgs{...} }
type GetInstancesInstanceDbArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceDbArrayOutput() GetInstancesInstanceDbArrayOutput
	ToGetInstancesInstanceDbArrayOutputWithContext(context.Context) GetInstancesInstanceDbArrayOutput
}

type GetInstancesInstanceDbArray []GetInstancesInstanceDbInput

func (GetInstancesInstanceDbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDb)(nil)).Elem()
}

func (i GetInstancesInstanceDbArray) ToGetInstancesInstanceDbArrayOutput() GetInstancesInstanceDbArrayOutput {
	return i.ToGetInstancesInstanceDbArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceDbArray) ToGetInstancesInstanceDbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceDbArrayOutput)
}

type GetInstancesInstanceDbOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceDb)(nil)).Elem()
}

func (o GetInstancesInstanceDbOutput) ToGetInstancesInstanceDbOutput() GetInstancesInstanceDbOutput {
	return o
}

func (o GetInstancesInstanceDbOutput) ToGetInstancesInstanceDbOutputWithContext(ctx context.Context) GetInstancesInstanceDbOutput {
	return o
}

// Indicates the database port.
func (o GetInstancesInstanceDbOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
func (o GetInstancesInstanceDbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) string { return v.Type }).(pulumi.StringOutput)
}

// Indicates the database user name.
func (o GetInstancesInstanceDbOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) string { return v.UserName }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetInstancesInstanceDbOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceDb) string { return v.Version }).(pulumi.StringOutput)
}

type GetInstancesInstanceDbArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceDbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceDb)(nil)).Elem()
}

func (o GetInstancesInstanceDbArrayOutput) ToGetInstancesInstanceDbArrayOutput() GetInstancesInstanceDbArrayOutput {
	return o
}

func (o GetInstancesInstanceDbArrayOutput) ToGetInstancesInstanceDbArrayOutputWithContext(ctx context.Context) GetInstancesInstanceDbArrayOutput {
	return o
}

func (o GetInstancesInstanceDbArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceDbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceDb {
		return vs[0].([]GetInstancesInstanceDb)[vs[1].(int)]
	}).(GetInstancesInstanceDbOutput)
}

type GetInstancesInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the node type.
	Role string `pulumi:"role"`
	// Indicates the node status.
	Status string `pulumi:"status"`
}

// GetInstancesInstanceNodeInput is an input type that accepts GetInstancesInstanceNodeArgs and GetInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceNodeInput` via:
//
//	GetInstancesInstanceNodeArgs{...}
type GetInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput
	ToGetInstancesInstanceNodeOutputWithContext(context.Context) GetInstancesInstanceNodeOutput
}

type GetInstancesInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the node type.
	Role pulumi.StringInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceNode)(nil)).Elem()
}

func (i GetInstancesInstanceNodeArgs) ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput {
	return i.ToGetInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceNodeArgs) ToGetInstancesInstanceNodeOutputWithContext(ctx context.Context) GetInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceNodeOutput)
}

// GetInstancesInstanceNodeArrayInput is an input type that accepts GetInstancesInstanceNodeArray and GetInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceNodeArrayInput` via:
//
//	GetInstancesInstanceNodeArray{ GetInstancesInstanceNodeArgs{...} }
type GetInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput
	ToGetInstancesInstanceNodeArrayOutputWithContext(context.Context) GetInstancesInstanceNodeArrayOutput
}

type GetInstancesInstanceNodeArray []GetInstancesInstanceNodeInput

func (GetInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceNode)(nil)).Elem()
}

func (i GetInstancesInstanceNodeArray) ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput {
	return i.ToGetInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceNodeArray) ToGetInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceNodeArrayOutput)
}

type GetInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceNode)(nil)).Elem()
}

func (o GetInstancesInstanceNodeOutput) ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput {
	return o
}

func (o GetInstancesInstanceNodeOutput) ToGetInstancesInstanceNodeOutputWithContext(ctx context.Context) GetInstancesInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetInstancesInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetInstancesInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetInstancesInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the node type.
func (o GetInstancesInstanceNodeOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Role }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetInstancesInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceNode)(nil)).Elem()
}

func (o GetInstancesInstanceNodeArrayOutput) ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceNodeArrayOutput) ToGetInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceNode {
		return vs[0].([]GetInstancesInstanceNode)[vs[1].(int)]
	}).(GetInstancesInstanceNodeOutput)
}

type GetInstancesInstanceVolume struct {
	// Indicates the kms key id.
	DiskEncryptionId string `pulumi:"diskEncryptionId"`
	// Indicates the volume size.
	Size int `pulumi:"size"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type string `pulumi:"type"`
}

// GetInstancesInstanceVolumeInput is an input type that accepts GetInstancesInstanceVolumeArgs and GetInstancesInstanceVolumeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVolumeInput` via:
//
//	GetInstancesInstanceVolumeArgs{...}
type GetInstancesInstanceVolumeInput interface {
	pulumi.Input

	ToGetInstancesInstanceVolumeOutput() GetInstancesInstanceVolumeOutput
	ToGetInstancesInstanceVolumeOutputWithContext(context.Context) GetInstancesInstanceVolumeOutput
}

type GetInstancesInstanceVolumeArgs struct {
	// Indicates the kms key id.
	DiskEncryptionId pulumi.StringInput `pulumi:"diskEncryptionId"`
	// Indicates the volume size.
	Size pulumi.IntInput `pulumi:"size"`
	// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstancesInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVolume)(nil)).Elem()
}

func (i GetInstancesInstanceVolumeArgs) ToGetInstancesInstanceVolumeOutput() GetInstancesInstanceVolumeOutput {
	return i.ToGetInstancesInstanceVolumeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVolumeArgs) ToGetInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVolumeOutput)
}

// GetInstancesInstanceVolumeArrayInput is an input type that accepts GetInstancesInstanceVolumeArray and GetInstancesInstanceVolumeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVolumeArrayInput` via:
//
//	GetInstancesInstanceVolumeArray{ GetInstancesInstanceVolumeArgs{...} }
type GetInstancesInstanceVolumeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceVolumeArrayOutput() GetInstancesInstanceVolumeArrayOutput
	ToGetInstancesInstanceVolumeArrayOutputWithContext(context.Context) GetInstancesInstanceVolumeArrayOutput
}

type GetInstancesInstanceVolumeArray []GetInstancesInstanceVolumeInput

func (GetInstancesInstanceVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVolume)(nil)).Elem()
}

func (i GetInstancesInstanceVolumeArray) ToGetInstancesInstanceVolumeArrayOutput() GetInstancesInstanceVolumeArrayOutput {
	return i.ToGetInstancesInstanceVolumeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVolumeArray) ToGetInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVolumeArrayOutput)
}

type GetInstancesInstanceVolumeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVolume)(nil)).Elem()
}

func (o GetInstancesInstanceVolumeOutput) ToGetInstancesInstanceVolumeOutput() GetInstancesInstanceVolumeOutput {
	return o
}

func (o GetInstancesInstanceVolumeOutput) ToGetInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeOutput {
	return o
}

// Indicates the kms key id.
func (o GetInstancesInstanceVolumeOutput) DiskEncryptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVolume) string { return v.DiskEncryptionId }).(pulumi.StringOutput)
}

// Indicates the volume size.
func (o GetInstancesInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Specifies the type of the instance. Valid values are: Single, Ha, Replica, and Enterprise.
func (o GetInstancesInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstancesInstanceVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVolume)(nil)).Elem()
}

func (o GetInstancesInstanceVolumeArrayOutput) ToGetInstancesInstanceVolumeArrayOutput() GetInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetInstancesInstanceVolumeArrayOutput) ToGetInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetInstancesInstanceVolumeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceVolume {
		return vs[0].([]GetInstancesInstanceVolume)[vs[1].(int)]
	}).(GetInstancesInstanceVolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Database_privilegeUserInput)(nil)).Elem(), Database_privilegeUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Database_privilegeUserArrayInput)(nil)).Elem(), Database_privilegeUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupStrategyInput)(nil)).Elem(), InstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBackupStrategyPtrInput)(nil)).Elem(), InstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDbInput)(nil)).Elem(), InstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDbPtrInput)(nil)).Elem(), InstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInput)(nil)).Elem(), InstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeArrayInput)(nil)).Elem(), InstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceVolumeInput)(nil)).Elem(), InstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceVolumePtrInput)(nil)).Elem(), InstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupConfigurationParameterInput)(nil)).Elem(), ParametergroupConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupConfigurationParameterArrayInput)(nil)).Elem(), ParametergroupConfigurationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupDatastoreInput)(nil)).Elem(), ParametergroupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParametergroupDatastorePtrInput)(nil)).Elem(), ParametergroupDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceDbInput)(nil)).Elem(), ReadReplicaInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceDbArrayInput)(nil)).Elem(), ReadReplicaInstanceDbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceVolumeInput)(nil)).Elem(), ReadReplicaInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReadReplicaInstanceVolumePtrInput)(nil)).Elem(), ReadReplicaInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEngineVersionsVersionInput)(nil)).Elem(), GetEngineVersionsVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEngineVersionsVersionArrayInput)(nil)).Elem(), GetEngineVersionsVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlavorsFlavorInput)(nil)).Elem(), GetFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlavorsFlavorArrayInput)(nil)).Elem(), GetFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupStrategyInput)(nil)).Elem(), GetInstancesInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupStrategyArrayInput)(nil)).Elem(), GetInstancesInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDbInput)(nil)).Elem(), GetInstancesInstanceDbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceDbArrayInput)(nil)).Elem(), GetInstancesInstanceDbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceNodeInput)(nil)).Elem(), GetInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceNodeArrayInput)(nil)).Elem(), GetInstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVolumeInput)(nil)).Elem(), GetInstancesInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVolumeArrayInput)(nil)).Elem(), GetInstancesInstanceVolumeArray{})
	pulumi.RegisterOutputType(Database_privilegeUserOutput{})
	pulumi.RegisterOutputType(Database_privilegeUserArrayOutput{})
	pulumi.RegisterOutputType(InstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(InstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(InstanceDbOutput{})
	pulumi.RegisterOutputType(InstanceDbPtrOutput{})
	pulumi.RegisterOutputType(InstanceNodeOutput{})
	pulumi.RegisterOutputType(InstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InstanceVolumeOutput{})
	pulumi.RegisterOutputType(InstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(ParametergroupConfigurationParameterOutput{})
	pulumi.RegisterOutputType(ParametergroupConfigurationParameterArrayOutput{})
	pulumi.RegisterOutputType(ParametergroupDatastoreOutput{})
	pulumi.RegisterOutputType(ParametergroupDatastorePtrOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceDbOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceDbArrayOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceVolumeOutput{})
	pulumi.RegisterOutputType(ReadReplicaInstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(GetEngineVersionsVersionOutput{})
	pulumi.RegisterOutputType(GetEngineVersionsVersionArrayOutput{})
	pulumi.RegisterOutputType(GetFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDbOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceDbArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVolumeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVolumeArrayOutput{})
}
