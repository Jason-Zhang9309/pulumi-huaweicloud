// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS SQLServer collations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Rds.GetSqlserverCollations(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSqlserverCollations(ctx *pulumi.Context, args *GetSqlserverCollationsArgs, opts ...pulumi.InvokeOption) (*GetSqlserverCollationsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSqlserverCollationsResult
	err := ctx.Invoke("huaweicloud:Rds/getSqlserverCollations:getSqlserverCollations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlserverCollations.
type GetSqlserverCollationsArgs struct {
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getSqlserverCollations.
type GetSqlserverCollationsResult struct {
	// Indicates the character set information list.
	CharSets []string `pulumi:"charSets"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
}

func GetSqlserverCollationsOutput(ctx *pulumi.Context, args GetSqlserverCollationsOutputArgs, opts ...pulumi.InvokeOption) GetSqlserverCollationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlserverCollationsResult, error) {
			args := v.(GetSqlserverCollationsArgs)
			r, err := GetSqlserverCollations(ctx, &args, opts...)
			var s GetSqlserverCollationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlserverCollationsResultOutput)
}

// A collection of arguments for invoking getSqlserverCollations.
type GetSqlserverCollationsOutputArgs struct {
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetSqlserverCollationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlserverCollationsArgs)(nil)).Elem()
}

// A collection of values returned by getSqlserverCollations.
type GetSqlserverCollationsResultOutput struct{ *pulumi.OutputState }

func (GetSqlserverCollationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlserverCollationsResult)(nil)).Elem()
}

func (o GetSqlserverCollationsResultOutput) ToGetSqlserverCollationsResultOutput() GetSqlserverCollationsResultOutput {
	return o
}

func (o GetSqlserverCollationsResultOutput) ToGetSqlserverCollationsResultOutputWithContext(ctx context.Context) GetSqlserverCollationsResultOutput {
	return o
}

// Indicates the character set information list.
func (o GetSqlserverCollationsResultOutput) CharSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSqlserverCollationsResult) []string { return v.CharSets }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlserverCollationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlserverCollationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlserverCollationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlserverCollationsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlserverCollationsResultOutput{})
}
