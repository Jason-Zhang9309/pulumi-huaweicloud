// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS SQL audit operations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetSqlAuditOperations(ctx, &rds.GetSqlAuditOperationsArgs{
//				InstanceId: instanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSqlAuditOperations(ctx *pulumi.Context, args *GetSqlAuditOperationsArgs, opts ...pulumi.InvokeOption) (*GetSqlAuditOperationsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSqlAuditOperationsResult
	err := ctx.Invoke("huaweicloud:Rds/getSqlAuditOperations:getSqlAuditOperations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlAuditOperations.
type GetSqlAuditOperationsArgs struct {
	// Specifies the ID of the RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the list of the operation type. Value options: **DDL**, **DCL**,
	// **DML**, **OTHER**.
	OperationTypes []string `pulumi:"operationTypes"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getSqlAuditOperations.
type GetSqlAuditOperationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id             string   `pulumi:"id"`
	InstanceId     string   `pulumi:"instanceId"`
	OperationTypes []string `pulumi:"operationTypes"`
	// Indicates the list of audit operations.
	Operations []GetSqlAuditOperationsOperation `pulumi:"operations"`
	Region     string                           `pulumi:"region"`
}

func GetSqlAuditOperationsOutput(ctx *pulumi.Context, args GetSqlAuditOperationsOutputArgs, opts ...pulumi.InvokeOption) GetSqlAuditOperationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSqlAuditOperationsResult, error) {
			args := v.(GetSqlAuditOperationsArgs)
			r, err := GetSqlAuditOperations(ctx, &args, opts...)
			var s GetSqlAuditOperationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSqlAuditOperationsResultOutput)
}

// A collection of arguments for invoking getSqlAuditOperations.
type GetSqlAuditOperationsOutputArgs struct {
	// Specifies the ID of the RDS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the list of the operation type. Value options: **DDL**, **DCL**,
	// **DML**, **OTHER**.
	OperationTypes pulumi.StringArrayInput `pulumi:"operationTypes"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetSqlAuditOperationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlAuditOperationsArgs)(nil)).Elem()
}

// A collection of values returned by getSqlAuditOperations.
type GetSqlAuditOperationsResultOutput struct{ *pulumi.OutputState }

func (GetSqlAuditOperationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlAuditOperationsResult)(nil)).Elem()
}

func (o GetSqlAuditOperationsResultOutput) ToGetSqlAuditOperationsResultOutput() GetSqlAuditOperationsResultOutput {
	return o
}

func (o GetSqlAuditOperationsResultOutput) ToGetSqlAuditOperationsResultOutputWithContext(ctx context.Context) GetSqlAuditOperationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSqlAuditOperationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlAuditOperationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlAuditOperationsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlAuditOperationsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetSqlAuditOperationsResultOutput) OperationTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSqlAuditOperationsResult) []string { return v.OperationTypes }).(pulumi.StringArrayOutput)
}

// Indicates the list of audit operations.
func (o GetSqlAuditOperationsResultOutput) Operations() GetSqlAuditOperationsOperationArrayOutput {
	return o.ApplyT(func(v GetSqlAuditOperationsResult) []GetSqlAuditOperationsOperation { return v.Operations }).(GetSqlAuditOperationsOperationArrayOutput)
}

func (o GetSqlAuditOperationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlAuditOperationsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlAuditOperationsResultOutput{})
}
