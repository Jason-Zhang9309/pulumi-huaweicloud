// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of RDS MySQL proxy flavors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			_, err := Rds.GetMysqlProxyFlavors(ctx, &rds.GetMysqlProxyFlavorsArgs{
//				InstanceId: instanceId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMysqlProxyFlavors(ctx *pulumi.Context, args *GetMysqlProxyFlavorsArgs, opts ...pulumi.InvokeOption) (*GetMysqlProxyFlavorsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetMysqlProxyFlavorsResult
	err := ctx.Invoke("huaweicloud:Rds/getMysqlProxyFlavors:getMysqlProxyFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlProxyFlavors.
type GetMysqlProxyFlavorsArgs struct {
	// Specifies the ID of RDS MySQL instance.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getMysqlProxyFlavors.
type GetMysqlProxyFlavorsResult struct {
	// Indicates the list of flavor groups.
	// The flavorGroups structure is documented below.
	FlavorGroups []GetMysqlProxyFlavorsFlavorGroup `pulumi:"flavorGroups"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	InstanceId string `pulumi:"instanceId"`
	Region     string `pulumi:"region"`
}

func GetMysqlProxyFlavorsOutput(ctx *pulumi.Context, args GetMysqlProxyFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetMysqlProxyFlavorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMysqlProxyFlavorsResult, error) {
			args := v.(GetMysqlProxyFlavorsArgs)
			r, err := GetMysqlProxyFlavors(ctx, &args, opts...)
			var s GetMysqlProxyFlavorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMysqlProxyFlavorsResultOutput)
}

// A collection of arguments for invoking getMysqlProxyFlavors.
type GetMysqlProxyFlavorsOutputArgs struct {
	// Specifies the ID of RDS MySQL instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetMysqlProxyFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlProxyFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlProxyFlavors.
type GetMysqlProxyFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetMysqlProxyFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlProxyFlavorsResult)(nil)).Elem()
}

func (o GetMysqlProxyFlavorsResultOutput) ToGetMysqlProxyFlavorsResultOutput() GetMysqlProxyFlavorsResultOutput {
	return o
}

func (o GetMysqlProxyFlavorsResultOutput) ToGetMysqlProxyFlavorsResultOutputWithContext(ctx context.Context) GetMysqlProxyFlavorsResultOutput {
	return o
}

// Indicates the list of flavor groups.
// The flavorGroups structure is documented below.
func (o GetMysqlProxyFlavorsResultOutput) FlavorGroups() GetMysqlProxyFlavorsFlavorGroupArrayOutput {
	return o.ApplyT(func(v GetMysqlProxyFlavorsResult) []GetMysqlProxyFlavorsFlavorGroup { return v.FlavorGroups }).(GetMysqlProxyFlavorsFlavorGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMysqlProxyFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlProxyFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMysqlProxyFlavorsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlProxyFlavorsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetMysqlProxyFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlProxyFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMysqlProxyFlavorsResultOutput{})
}
