// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

// The access key of the HuaweiCloud to use.
func GetAccessKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:accessKey")
}

// The name of domain who created the agency (Identity v3).
func GetAgencyDomainName(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:agencyDomainName")
}

// The name of agency
func GetAgencyName(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:agencyName")
}
func GetAssumeRole(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:assumeRole")
}

// The Identity authentication URL.
func GetAuthUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:authUrl")
}

// A Custom CA certificate.
func GetCacertFile(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:cacertFile")
}

// A client certificate to authenticate with.
func GetCert(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:cert")
}

// The endpoint of cloud provider, defaults to myhuaweicloud.com
func GetCloud(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:cloud")
}

// The name of delegated project (Identity v3).
func GetDelegatedProject(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:delegatedProject")
}

// The ID of the Domain to scope to.
func GetDomainId(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:domainId")
}

// The name of the Domain to scope to.
func GetDomainName(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:domainName")
}

// The custom endpoints used to override the default endpoint URL.
func GetEndpoints(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:endpoints")
}

// enterprise project id
func GetEnterpriseProjectId(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:enterpriseProjectId")
}

// Trust self-signed certificates.
func GetInsecure(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "huaweicloud:insecure")
}

// A client private key to authenticate with.
func GetKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:key")
}

// How many times HTTP connection should be retried until giving up.
func GetMaxRetries(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "huaweicloud:maxRetries")
}

// Password to login with.
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:password")
}

// The profile name as set in the shared config file.
func GetProfile(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:profile")
}

// The ID of the project to login with.
func GetProjectId(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:projectId")
}

// The name of the project to login with.
func GetProjectName(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:projectName")
}

// The HuaweiCloud region to connect to.
func GetRegion(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:region")
}

// The secret key of the HuaweiCloud to use.
func GetSecretKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:secretKey")
}

// The security token to authenticate with a temporary security credential.
func GetSecurityToken(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:securityToken")
}

// The path to the shared config file. If not set, the default is ~/.hcloud/config.json.
func GetSharedConfigFile(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:sharedConfigFile")
}

// The ID of the Tenant (Identity v2) to login with.
func GetTenantId(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:tenantId")
}

// The name of the Tenant (Identity v2) to login with.
func GetTenantName(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:tenantName")
}

// Authentication token to use as an alternative to username/password.
func GetToken(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:token")
}

// User ID to login with.
func GetUserId(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:userId")
}

// Username to login with.
func GetUserName(ctx *pulumi.Context) string {
	return config.Get(ctx, "huaweicloud:userName")
}
