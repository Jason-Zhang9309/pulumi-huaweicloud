// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package huaweicloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the huaweicloud package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// The access key of the HuaweiCloud to use.
	AccessKey pulumi.StringPtrOutput `pulumi:"accessKey"`
	// The name of domain who created the agency (Identity v3).
	AgencyDomainName pulumi.StringPtrOutput `pulumi:"agencyDomainName"`
	// The name of agency
	AgencyName pulumi.StringPtrOutput `pulumi:"agencyName"`
	// The Identity authentication URL.
	AuthUrl pulumi.StringPtrOutput `pulumi:"authUrl"`
	// A Custom CA certificate.
	CacertFile pulumi.StringPtrOutput `pulumi:"cacertFile"`
	// A client certificate to authenticate with.
	Cert pulumi.StringPtrOutput `pulumi:"cert"`
	// The endpoint of cloud provider, defaults to myhuaweicloud.com
	Cloud pulumi.StringPtrOutput `pulumi:"cloud"`
	// The name of delegated project (Identity v3).
	DelegatedProject pulumi.StringPtrOutput `pulumi:"delegatedProject"`
	// The ID of the Domain to scope to.
	DomainId pulumi.StringPtrOutput `pulumi:"domainId"`
	// The name of the Domain to scope to.
	DomainName pulumi.StringPtrOutput `pulumi:"domainName"`
	// enterprise project id
	EnterpriseProjectId pulumi.StringPtrOutput `pulumi:"enterpriseProjectId"`
	// A client private key to authenticate with.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// Password to login with.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The profile name as set in the shared config file.
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// The ID of the project to login with.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// The name of the project to login with.
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// The HuaweiCloud region to connect to.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// The secret key of the HuaweiCloud to use.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
	// The security token to authenticate with a temporary security credential.
	SecurityToken pulumi.StringPtrOutput `pulumi:"securityToken"`
	// The path to the shared config file. If not set, the default is ~/.hcloud/config.json.
	SharedConfigFile pulumi.StringPtrOutput `pulumi:"sharedConfigFile"`
	// The ID of the Tenant (Identity v2) to login with.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// The name of the Tenant (Identity v2) to login with.
	TenantName pulumi.StringPtrOutput `pulumi:"tenantName"`
	// Authentication token to use as an alternative to username/password.
	Token pulumi.StringPtrOutput `pulumi:"token"`
	// User ID to login with.
	UserId pulumi.StringPtrOutput `pulumi:"userId"`
	// Username to login with.
	UserName pulumi.StringPtrOutput `pulumi:"userName"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:huaweicloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// The access key of the HuaweiCloud to use.
	AccessKey *string `pulumi:"accessKey"`
	// The name of domain who created the agency (Identity v3).
	AgencyDomainName *string `pulumi:"agencyDomainName"`
	// The name of agency
	AgencyName *string             `pulumi:"agencyName"`
	AssumeRole *ProviderAssumeRole `pulumi:"assumeRole"`
	// The Identity authentication URL.
	AuthUrl *string `pulumi:"authUrl"`
	// A Custom CA certificate.
	CacertFile *string `pulumi:"cacertFile"`
	// A client certificate to authenticate with.
	Cert *string `pulumi:"cert"`
	// The endpoint of cloud provider, defaults to myhuaweicloud.com
	Cloud *string `pulumi:"cloud"`
	// The name of delegated project (Identity v3).
	DelegatedProject *string `pulumi:"delegatedProject"`
	// The ID of the Domain to scope to.
	DomainId *string `pulumi:"domainId"`
	// The name of the Domain to scope to.
	DomainName *string `pulumi:"domainName"`
	// The custom endpoints used to override the default endpoint URL.
	Endpoints map[string]string `pulumi:"endpoints"`
	// enterprise project id
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Trust self-signed certificates.
	Insecure *bool `pulumi:"insecure"`
	// A client private key to authenticate with.
	Key *string `pulumi:"key"`
	// How many times HTTP connection should be retried until giving up.
	MaxRetries *int `pulumi:"maxRetries"`
	// Password to login with.
	Password *string `pulumi:"password"`
	// The profile name as set in the shared config file.
	Profile *string `pulumi:"profile"`
	// The ID of the project to login with.
	ProjectId *string `pulumi:"projectId"`
	// The name of the project to login with.
	ProjectName *string `pulumi:"projectName"`
	// The HuaweiCloud region to connect to.
	Region *string `pulumi:"region"`
	// The secret key of the HuaweiCloud to use.
	SecretKey *string `pulumi:"secretKey"`
	// The security token to authenticate with a temporary security credential.
	SecurityToken *string `pulumi:"securityToken"`
	// The path to the shared config file. If not set, the default is ~/.hcloud/config.json.
	SharedConfigFile *string `pulumi:"sharedConfigFile"`
	// The ID of the Tenant (Identity v2) to login with.
	TenantId *string `pulumi:"tenantId"`
	// The name of the Tenant (Identity v2) to login with.
	TenantName *string `pulumi:"tenantName"`
	// Authentication token to use as an alternative to username/password.
	Token *string `pulumi:"token"`
	// User ID to login with.
	UserId *string `pulumi:"userId"`
	// Username to login with.
	UserName *string `pulumi:"userName"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The access key of the HuaweiCloud to use.
	AccessKey pulumi.StringPtrInput
	// The name of domain who created the agency (Identity v3).
	AgencyDomainName pulumi.StringPtrInput
	// The name of agency
	AgencyName pulumi.StringPtrInput
	AssumeRole ProviderAssumeRolePtrInput
	// The Identity authentication URL.
	AuthUrl pulumi.StringPtrInput
	// A Custom CA certificate.
	CacertFile pulumi.StringPtrInput
	// A client certificate to authenticate with.
	Cert pulumi.StringPtrInput
	// The endpoint of cloud provider, defaults to myhuaweicloud.com
	Cloud pulumi.StringPtrInput
	// The name of delegated project (Identity v3).
	DelegatedProject pulumi.StringPtrInput
	// The ID of the Domain to scope to.
	DomainId pulumi.StringPtrInput
	// The name of the Domain to scope to.
	DomainName pulumi.StringPtrInput
	// The custom endpoints used to override the default endpoint URL.
	Endpoints pulumi.StringMapInput
	// enterprise project id
	EnterpriseProjectId pulumi.StringPtrInput
	// Trust self-signed certificates.
	Insecure pulumi.BoolPtrInput
	// A client private key to authenticate with.
	Key pulumi.StringPtrInput
	// How many times HTTP connection should be retried until giving up.
	MaxRetries pulumi.IntPtrInput
	// Password to login with.
	Password pulumi.StringPtrInput
	// The profile name as set in the shared config file.
	Profile pulumi.StringPtrInput
	// The ID of the project to login with.
	ProjectId pulumi.StringPtrInput
	// The name of the project to login with.
	ProjectName pulumi.StringPtrInput
	// The HuaweiCloud region to connect to.
	Region pulumi.StringPtrInput
	// The secret key of the HuaweiCloud to use.
	SecretKey pulumi.StringPtrInput
	// The security token to authenticate with a temporary security credential.
	SecurityToken pulumi.StringPtrInput
	// The path to the shared config file. If not set, the default is ~/.hcloud/config.json.
	SharedConfigFile pulumi.StringPtrInput
	// The ID of the Tenant (Identity v2) to login with.
	TenantId pulumi.StringPtrInput
	// The name of the Tenant (Identity v2) to login with.
	TenantName pulumi.StringPtrInput
	// Authentication token to use as an alternative to username/password.
	Token pulumi.StringPtrInput
	// User ID to login with.
	UserId pulumi.StringPtrInput
	// Username to login with.
	UserName pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The access key of the HuaweiCloud to use.
func (o ProviderOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The name of domain who created the agency (Identity v3).
func (o ProviderOutput) AgencyDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AgencyDomainName }).(pulumi.StringPtrOutput)
}

// The name of agency
func (o ProviderOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AgencyName }).(pulumi.StringPtrOutput)
}

// The Identity authentication URL.
func (o ProviderOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AuthUrl }).(pulumi.StringPtrOutput)
}

// A Custom CA certificate.
func (o ProviderOutput) CacertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.CacertFile }).(pulumi.StringPtrOutput)
}

// A client certificate to authenticate with.
func (o ProviderOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Cert }).(pulumi.StringPtrOutput)
}

// The endpoint of cloud provider, defaults to myhuaweicloud.com
func (o ProviderOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Cloud }).(pulumi.StringPtrOutput)
}

// The name of delegated project (Identity v3).
func (o ProviderOutput) DelegatedProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DelegatedProject }).(pulumi.StringPtrOutput)
}

// The ID of the Domain to scope to.
func (o ProviderOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DomainId }).(pulumi.StringPtrOutput)
}

// The name of the Domain to scope to.
func (o ProviderOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

// enterprise project id
func (o ProviderOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// A client private key to authenticate with.
func (o ProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

// Password to login with.
func (o ProviderOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The profile name as set in the shared config file.
func (o ProviderOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// The ID of the project to login with.
func (o ProviderOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The name of the project to login with.
func (o ProviderOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The HuaweiCloud region to connect to.
func (o ProviderOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// The secret key of the HuaweiCloud to use.
func (o ProviderOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// The security token to authenticate with a temporary security credential.
func (o ProviderOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

// The path to the shared config file. If not set, the default is ~/.hcloud/config.json.
func (o ProviderOutput) SharedConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SharedConfigFile }).(pulumi.StringPtrOutput)
}

// The ID of the Tenant (Identity v2) to login with.
func (o ProviderOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The name of the Tenant (Identity v2) to login with.
func (o ProviderOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.TenantName }).(pulumi.StringPtrOutput)
}

// Authentication token to use as an alternative to username/password.
func (o ProviderOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Token }).(pulumi.StringPtrOutput)
}

// User ID to login with.
func (o ProviderOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.UserId }).(pulumi.StringPtrOutput)
}

// Username to login with.
func (o ProviderOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
