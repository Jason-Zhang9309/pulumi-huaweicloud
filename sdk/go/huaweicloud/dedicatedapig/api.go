// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedapig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an APIG API resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedApig"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedApig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			groupId := cfg.RequireObject("groupId")
//			apiName := cfg.RequireObject("apiName")
//			customResponseId := cfg.RequireObject("customResponseId")
//			customAuthId := cfg.RequireObject("customAuthId")
//			vpcChannelId := cfg.RequireObject("vpcChannelId")
//			_, err := DedicatedApig.NewApi(ctx, "test", &DedicatedApig.ApiArgs{
//				InstanceId:             pulumi.Any(instanceId),
//				GroupId:                pulumi.Any(groupId),
//				Type:                   pulumi.String("Public"),
//				RequestProtocol:        pulumi.String("HTTP"),
//				RequestMethod:          pulumi.String("POST"),
//				RequestPath:            pulumi.String("/terraform/users"),
//				SecurityAuthentication: pulumi.String("AUTHORIZER"),
//				Matching:               pulumi.String("Exact"),
//				SuccessResponse:        pulumi.String("Successful"),
//				ResponseId:             pulumi.Any(customResponseId),
//				AuthorizerId:           pulumi.Any(customAuthId),
//				BackendParams: dedicatedapig.ApiBackendParamArray{
//					&dedicatedapig.ApiBackendParamArgs{
//						Type:     pulumi.String("SYSTEM"),
//						Name:     pulumi.String("X-User-Auth"),
//						Location: pulumi.String("HEADER"),
//						Value:    pulumi.String("user_name"),
//					},
//				},
//				Web: &dedicatedapig.ApiWebArgs{
//					Path:            pulumi.String("/backend/users"),
//					VpcChannelId:    pulumi.Any(vpcChannelId),
//					RequestMethod:   pulumi.String("POST"),
//					RequestProtocol: pulumi.String("HTTP"),
//					Timeout:         pulumi.Int(5000),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// APIs can be imported using their `name` and ID of the APIG dedicated instance to which the API belongs, separated by a slash, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:DedicatedApig/api:Api test <instance_id>/<name>
//
// ```
type Api struct {
	pulumi.CustomResourceState

	// Specifies the ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrOutput `pulumi:"authorizerId"`
	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams ApiBackendParamArrayOutput `pulumi:"backendParams"`
	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters. The request body does not exceed 20,480 characters. Chinese characters must be
	// in UTF-8 or Unicode format.
	BodyDescription pulumi.StringPtrOutput `pulumi:"bodyDescription"`
	// Specifies whether CORS is supported, default to false.
	Cors pulumi.BoolPtrOutput `pulumi:"cors"`
	// Specifies the description of the constant or system parameter, which contain a
	// maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	FailureResponse pulumi.StringPtrOutput `pulumi:"failureResponse"`
	// Specifies the function graph backend details. The object
	// structure is documented below. Changing this will create a new API resource.
	FuncGraph ApiFuncGraphOutput `pulumi:"funcGraph"`
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicies ApiFuncGraphPolicyArrayOutput `pulumi:"funcGraphPolicies"`
	// Specifies an ID of the APIG group to which the API belongs to.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies the route matching mode. The valid value are **Exact** and **Prefix**,
	// default to **Exact**.
	Matching pulumi.StringPtrOutput `pulumi:"matching"`
	// Specifies the mock backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Mock ApiMockOutput `pulumi:"mock"`
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	MockPolicies ApiMockPolicyArrayOutput `pulumi:"mockPolicies"`
	// Specifies the backend policy name, which can contains of 3 to 64 characters and start with
	// a letter. Only letters, digits, and underscores (_) are allowed.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region in which to create the API resource. If omitted, the
	// provider-level region will be used. Changing this will create a new API resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Time when the API is registered, in UTC format.
	RegisterTime pulumi.StringOutput `pulumi:"registerTime"`
	// Specifies the backend request method of the API. The valid types are **GET**,
	// **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
	RequestMethod pulumi.StringOutput `pulumi:"requestMethod"`
	// Specifies an array of one or more request parameters of the front-end. The maximum
	// of request parameters is 50. The object structure is documented below.
	RequestParams ApiRequestParamArrayOutput `pulumi:"requestParams"`
	// Specifies the request address, which can contain a maximum of 512 characters
	// request parameters enclosed with brackets ({}).
	// + The address can contain special characters, such as asterisks (), percent signs (%), hyphens (-), and
	//   underscores (_) and must comply with URI specifications.
	// + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
	//   Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
	RequestPath pulumi.StringOutput `pulumi:"requestPath"`
	// Specifies the backend request protocol. The valid values are **HTTP** and
	// **HTTPS**, default to **HTTPS**.
	RequestProtocol pulumi.StringOutput `pulumi:"requestProtocol"`
	// Specifies the APIG group response ID.
	ResponseId pulumi.StringPtrOutput `pulumi:"responseId"`
	// Specifies the security authentication mode. The valid values are
	// **NONE**, **APP** and **IAM**, default to **NONE**.
	SecurityAuthentication pulumi.StringPtrOutput `pulumi:"securityAuthentication"`
	// Specifies whether AppCode authentication is enabled. The applicaiton code
	// must located in the header when `simpleAuthentication` is true.
	SimpleAuthentication pulumi.BoolOutput `pulumi:"simpleAuthentication"`
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	SuccessResponse pulumi.StringPtrOutput `pulumi:"successResponse"`
	// Specifies the condition type of the backend policy. The valid values are **Equal**,
	// **Enumerated** and **Matching**, default to **Equal**.
	Type pulumi.StringOutput `pulumi:"type"`
	// Time when the API was last modified, in UTC format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Specifies the web backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Web ApiWebOutput `pulumi:"web"`
	// Specifies the example response for a failed request. The maximum of the policy is 5.
	// The object structure is documented below.
	WebPolicies ApiWebPolicyArrayOutput `pulumi:"webPolicies"`
}

// NewApi registers a new resource with the given unique name, arguments, and options.
func NewApi(ctx *pulumi.Context,
	name string, args *ApiArgs, opts ...pulumi.ResourceOption) (*Api, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RequestMethod == nil {
		return nil, errors.New("invalid value for required argument 'RequestMethod'")
	}
	if args.RequestPath == nil {
		return nil, errors.New("invalid value for required argument 'RequestPath'")
	}
	if args.RequestProtocol == nil {
		return nil, errors.New("invalid value for required argument 'RequestProtocol'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Api
	err := ctx.RegisterResource("huaweicloud:DedicatedApig/api:Api", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApi gets an existing Api resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiState, opts ...pulumi.ResourceOption) (*Api, error) {
	var resource Api
	err := ctx.ReadResource("huaweicloud:DedicatedApig/api:Api", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Api resources.
type apiState struct {
	// Specifies the ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams []ApiBackendParam `pulumi:"backendParams"`
	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters. The request body does not exceed 20,480 characters. Chinese characters must be
	// in UTF-8 or Unicode format.
	BodyDescription *string `pulumi:"bodyDescription"`
	// Specifies whether CORS is supported, default to false.
	Cors *bool `pulumi:"cors"`
	// Specifies the description of the constant or system parameter, which contain a
	// maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description *string `pulumi:"description"`
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	FailureResponse *string `pulumi:"failureResponse"`
	// Specifies the function graph backend details. The object
	// structure is documented below. Changing this will create a new API resource.
	FuncGraph *ApiFuncGraph `pulumi:"funcGraph"`
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicies []ApiFuncGraphPolicy `pulumi:"funcGraphPolicies"`
	// Specifies an ID of the APIG group to which the API belongs to.
	GroupId *string `pulumi:"groupId"`
	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the route matching mode. The valid value are **Exact** and **Prefix**,
	// default to **Exact**.
	Matching *string `pulumi:"matching"`
	// Specifies the mock backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Mock *ApiMock `pulumi:"mock"`
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	MockPolicies []ApiMockPolicy `pulumi:"mockPolicies"`
	// Specifies the backend policy name, which can contains of 3 to 64 characters and start with
	// a letter. Only letters, digits, and underscores (_) are allowed.
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the API resource. If omitted, the
	// provider-level region will be used. Changing this will create a new API resource.
	Region *string `pulumi:"region"`
	// Time when the API is registered, in UTC format.
	RegisterTime *string `pulumi:"registerTime"`
	// Specifies the backend request method of the API. The valid types are **GET**,
	// **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
	RequestMethod *string `pulumi:"requestMethod"`
	// Specifies an array of one or more request parameters of the front-end. The maximum
	// of request parameters is 50. The object structure is documented below.
	RequestParams []ApiRequestParam `pulumi:"requestParams"`
	// Specifies the request address, which can contain a maximum of 512 characters
	// request parameters enclosed with brackets ({}).
	// + The address can contain special characters, such as asterisks (), percent signs (%), hyphens (-), and
	//   underscores (_) and must comply with URI specifications.
	// + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
	//   Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
	RequestPath *string `pulumi:"requestPath"`
	// Specifies the backend request protocol. The valid values are **HTTP** and
	// **HTTPS**, default to **HTTPS**.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// Specifies the APIG group response ID.
	ResponseId *string `pulumi:"responseId"`
	// Specifies the security authentication mode. The valid values are
	// **NONE**, **APP** and **IAM**, default to **NONE**.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Specifies whether AppCode authentication is enabled. The applicaiton code
	// must located in the header when `simpleAuthentication` is true.
	SimpleAuthentication *bool `pulumi:"simpleAuthentication"`
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	SuccessResponse *string `pulumi:"successResponse"`
	// Specifies the condition type of the backend policy. The valid values are **Equal**,
	// **Enumerated** and **Matching**, default to **Equal**.
	Type *string `pulumi:"type"`
	// Time when the API was last modified, in UTC format.
	UpdateTime *string `pulumi:"updateTime"`
	// Specifies the web backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Web *ApiWeb `pulumi:"web"`
	// Specifies the example response for a failed request. The maximum of the policy is 5.
	// The object structure is documented below.
	WebPolicies []ApiWebPolicy `pulumi:"webPolicies"`
}

type ApiState struct {
	// Specifies the ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput
	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams ApiBackendParamArrayInput
	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters. The request body does not exceed 20,480 characters. Chinese characters must be
	// in UTF-8 or Unicode format.
	BodyDescription pulumi.StringPtrInput
	// Specifies whether CORS is supported, default to false.
	Cors pulumi.BoolPtrInput
	// Specifies the description of the constant or system parameter, which contain a
	// maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description pulumi.StringPtrInput
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	FailureResponse pulumi.StringPtrInput
	// Specifies the function graph backend details. The object
	// structure is documented below. Changing this will create a new API resource.
	FuncGraph ApiFuncGraphPtrInput
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicies ApiFuncGraphPolicyArrayInput
	// Specifies an ID of the APIG group to which the API belongs to.
	GroupId pulumi.StringPtrInput
	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	InstanceId pulumi.StringPtrInput
	// Specifies the route matching mode. The valid value are **Exact** and **Prefix**,
	// default to **Exact**.
	Matching pulumi.StringPtrInput
	// Specifies the mock backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Mock ApiMockPtrInput
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	MockPolicies ApiMockPolicyArrayInput
	// Specifies the backend policy name, which can contains of 3 to 64 characters and start with
	// a letter. Only letters, digits, and underscores (_) are allowed.
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the API resource. If omitted, the
	// provider-level region will be used. Changing this will create a new API resource.
	Region pulumi.StringPtrInput
	// Time when the API is registered, in UTC format.
	RegisterTime pulumi.StringPtrInput
	// Specifies the backend request method of the API. The valid types are **GET**,
	// **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
	RequestMethod pulumi.StringPtrInput
	// Specifies an array of one or more request parameters of the front-end. The maximum
	// of request parameters is 50. The object structure is documented below.
	RequestParams ApiRequestParamArrayInput
	// Specifies the request address, which can contain a maximum of 512 characters
	// request parameters enclosed with brackets ({}).
	// + The address can contain special characters, such as asterisks (), percent signs (%), hyphens (-), and
	//   underscores (_) and must comply with URI specifications.
	// + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
	//   Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
	RequestPath pulumi.StringPtrInput
	// Specifies the backend request protocol. The valid values are **HTTP** and
	// **HTTPS**, default to **HTTPS**.
	RequestProtocol pulumi.StringPtrInput
	// Specifies the APIG group response ID.
	ResponseId pulumi.StringPtrInput
	// Specifies the security authentication mode. The valid values are
	// **NONE**, **APP** and **IAM**, default to **NONE**.
	SecurityAuthentication pulumi.StringPtrInput
	// Specifies whether AppCode authentication is enabled. The applicaiton code
	// must located in the header when `simpleAuthentication` is true.
	SimpleAuthentication pulumi.BoolPtrInput
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	SuccessResponse pulumi.StringPtrInput
	// Specifies the condition type of the backend policy. The valid values are **Equal**,
	// **Enumerated** and **Matching**, default to **Equal**.
	Type pulumi.StringPtrInput
	// Time when the API was last modified, in UTC format.
	UpdateTime pulumi.StringPtrInput
	// Specifies the web backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Web ApiWebPtrInput
	// Specifies the example response for a failed request. The maximum of the policy is 5.
	// The object structure is documented below.
	WebPolicies ApiWebPolicyArrayInput
}

func (ApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiState)(nil)).Elem()
}

type apiArgs struct {
	// Specifies the ID of the backend custom authorization.
	AuthorizerId *string `pulumi:"authorizerId"`
	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams []ApiBackendParam `pulumi:"backendParams"`
	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters. The request body does not exceed 20,480 characters. Chinese characters must be
	// in UTF-8 or Unicode format.
	BodyDescription *string `pulumi:"bodyDescription"`
	// Specifies whether CORS is supported, default to false.
	Cors *bool `pulumi:"cors"`
	// Specifies the description of the constant or system parameter, which contain a
	// maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description *string `pulumi:"description"`
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	FailureResponse *string `pulumi:"failureResponse"`
	// Specifies the function graph backend details. The object
	// structure is documented below. Changing this will create a new API resource.
	FuncGraph *ApiFuncGraph `pulumi:"funcGraph"`
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicies []ApiFuncGraphPolicy `pulumi:"funcGraphPolicies"`
	// Specifies an ID of the APIG group to which the API belongs to.
	GroupId string `pulumi:"groupId"`
	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the route matching mode. The valid value are **Exact** and **Prefix**,
	// default to **Exact**.
	Matching *string `pulumi:"matching"`
	// Specifies the mock backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Mock *ApiMock `pulumi:"mock"`
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	MockPolicies []ApiMockPolicy `pulumi:"mockPolicies"`
	// Specifies the backend policy name, which can contains of 3 to 64 characters and start with
	// a letter. Only letters, digits, and underscores (_) are allowed.
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the API resource. If omitted, the
	// provider-level region will be used. Changing this will create a new API resource.
	Region *string `pulumi:"region"`
	// Specifies the backend request method of the API. The valid types are **GET**,
	// **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
	RequestMethod string `pulumi:"requestMethod"`
	// Specifies an array of one or more request parameters of the front-end. The maximum
	// of request parameters is 50. The object structure is documented below.
	RequestParams []ApiRequestParam `pulumi:"requestParams"`
	// Specifies the request address, which can contain a maximum of 512 characters
	// request parameters enclosed with brackets ({}).
	// + The address can contain special characters, such as asterisks (), percent signs (%), hyphens (-), and
	//   underscores (_) and must comply with URI specifications.
	// + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
	//   Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
	RequestPath string `pulumi:"requestPath"`
	// Specifies the backend request protocol. The valid values are **HTTP** and
	// **HTTPS**, default to **HTTPS**.
	RequestProtocol string `pulumi:"requestProtocol"`
	// Specifies the APIG group response ID.
	ResponseId *string `pulumi:"responseId"`
	// Specifies the security authentication mode. The valid values are
	// **NONE**, **APP** and **IAM**, default to **NONE**.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Specifies whether AppCode authentication is enabled. The applicaiton code
	// must located in the header when `simpleAuthentication` is true.
	SimpleAuthentication *bool `pulumi:"simpleAuthentication"`
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	SuccessResponse *string `pulumi:"successResponse"`
	// Specifies the condition type of the backend policy. The valid values are **Equal**,
	// **Enumerated** and **Matching**, default to **Equal**.
	Type string `pulumi:"type"`
	// Specifies the web backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Web *ApiWeb `pulumi:"web"`
	// Specifies the example response for a failed request. The maximum of the policy is 5.
	// The object structure is documented below.
	WebPolicies []ApiWebPolicy `pulumi:"webPolicies"`
}

// The set of arguments for constructing a Api resource.
type ApiArgs struct {
	// Specifies the ID of the backend custom authorization.
	AuthorizerId pulumi.StringPtrInput
	// Specifies an array of one or more backend parameters. The maximum of request
	// parameters is 50. The object structure is documented above.
	BackendParams ApiBackendParamArrayInput
	// Specifies the description of the API request body, which can be an example
	// request body, media type or parameters. The request body does not exceed 20,480 characters. Chinese characters must be
	// in UTF-8 or Unicode format.
	BodyDescription pulumi.StringPtrInput
	// Specifies whether CORS is supported, default to false.
	Cors pulumi.BoolPtrInput
	// Specifies the description of the constant or system parameter, which contain a
	// maximum of 255 characters, and the angle brackets (< and >) are not allowed.
	Description pulumi.StringPtrInput
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	FailureResponse pulumi.StringPtrInput
	// Specifies the function graph backend details. The object
	// structure is documented below. Changing this will create a new API resource.
	FuncGraph ApiFuncGraphPtrInput
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	FuncGraphPolicies ApiFuncGraphPolicyArrayInput
	// Specifies an ID of the APIG group to which the API belongs to.
	GroupId pulumi.StringInput
	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new API resource.
	InstanceId pulumi.StringInput
	// Specifies the route matching mode. The valid value are **Exact** and **Prefix**,
	// default to **Exact**.
	Matching pulumi.StringPtrInput
	// Specifies the mock backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Mock ApiMockPtrInput
	// Specifies the Mock policy backends. The maximum of the policy is 5.
	// The object structure is documented below.
	MockPolicies ApiMockPolicyArrayInput
	// Specifies the backend policy name, which can contains of 3 to 64 characters and start with
	// a letter. Only letters, digits, and underscores (_) are allowed.
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the API resource. If omitted, the
	// provider-level region will be used. Changing this will create a new API resource.
	Region pulumi.StringPtrInput
	// Specifies the backend request method of the API. The valid types are **GET**,
	// **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
	RequestMethod pulumi.StringInput
	// Specifies an array of one or more request parameters of the front-end. The maximum
	// of request parameters is 50. The object structure is documented below.
	RequestParams ApiRequestParamArrayInput
	// Specifies the request address, which can contain a maximum of 512 characters
	// request parameters enclosed with brackets ({}).
	// + The address can contain special characters, such as asterisks (), percent signs (%), hyphens (-), and
	//   underscores (_) and must comply with URI specifications.
	// + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
	//   Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
	RequestPath pulumi.StringInput
	// Specifies the backend request protocol. The valid values are **HTTP** and
	// **HTTPS**, default to **HTTPS**.
	RequestProtocol pulumi.StringInput
	// Specifies the APIG group response ID.
	ResponseId pulumi.StringPtrInput
	// Specifies the security authentication mode. The valid values are
	// **NONE**, **APP** and **IAM**, default to **NONE**.
	SecurityAuthentication pulumi.StringPtrInput
	// Specifies whether AppCode authentication is enabled. The applicaiton code
	// must located in the header when `simpleAuthentication` is true.
	SimpleAuthentication pulumi.BoolPtrInput
	// Specifies the example response for a successful request. Ensure that the
	// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
	SuccessResponse pulumi.StringPtrInput
	// Specifies the condition type of the backend policy. The valid values are **Equal**,
	// **Enumerated** and **Matching**, default to **Equal**.
	Type pulumi.StringInput
	// Specifies the web backend details. The object structure is documented
	// below. Changing this will create a new API resource.
	Web ApiWebPtrInput
	// Specifies the example response for a failed request. The maximum of the policy is 5.
	// The object structure is documented below.
	WebPolicies ApiWebPolicyArrayInput
}

func (ApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiArgs)(nil)).Elem()
}

type ApiInput interface {
	pulumi.Input

	ToApiOutput() ApiOutput
	ToApiOutputWithContext(ctx context.Context) ApiOutput
}

func (*Api) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (i *Api) ToApiOutput() ApiOutput {
	return i.ToApiOutputWithContext(context.Background())
}

func (i *Api) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOutput)
}

// ApiArrayInput is an input type that accepts ApiArray and ApiArrayOutput values.
// You can construct a concrete instance of `ApiArrayInput` via:
//
//	ApiArray{ ApiArgs{...} }
type ApiArrayInput interface {
	pulumi.Input

	ToApiArrayOutput() ApiArrayOutput
	ToApiArrayOutputWithContext(context.Context) ApiArrayOutput
}

type ApiArray []ApiInput

func (ApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Api)(nil)).Elem()
}

func (i ApiArray) ToApiArrayOutput() ApiArrayOutput {
	return i.ToApiArrayOutputWithContext(context.Background())
}

func (i ApiArray) ToApiArrayOutputWithContext(ctx context.Context) ApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiArrayOutput)
}

// ApiMapInput is an input type that accepts ApiMap and ApiMapOutput values.
// You can construct a concrete instance of `ApiMapInput` via:
//
//	ApiMap{ "key": ApiArgs{...} }
type ApiMapInput interface {
	pulumi.Input

	ToApiMapOutput() ApiMapOutput
	ToApiMapOutputWithContext(context.Context) ApiMapOutput
}

type ApiMap map[string]ApiInput

func (ApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Api)(nil)).Elem()
}

func (i ApiMap) ToApiMapOutput() ApiMapOutput {
	return i.ToApiMapOutputWithContext(context.Background())
}

func (i ApiMap) ToApiMapOutputWithContext(ctx context.Context) ApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiMapOutput)
}

type ApiOutput struct{ *pulumi.OutputState }

func (ApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (o ApiOutput) ToApiOutput() ApiOutput {
	return o
}

func (o ApiOutput) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return o
}

// Specifies the ID of the backend custom authorization.
func (o ApiOutput) AuthorizerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.AuthorizerId }).(pulumi.StringPtrOutput)
}

// Specifies an array of one or more backend parameters. The maximum of request
// parameters is 50. The object structure is documented above.
func (o ApiOutput) BackendParams() ApiBackendParamArrayOutput {
	return o.ApplyT(func(v *Api) ApiBackendParamArrayOutput { return v.BackendParams }).(ApiBackendParamArrayOutput)
}

// Specifies the description of the API request body, which can be an example
// request body, media type or parameters. The request body does not exceed 20,480 characters. Chinese characters must be
// in UTF-8 or Unicode format.
func (o ApiOutput) BodyDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.BodyDescription }).(pulumi.StringPtrOutput)
}

// Specifies whether CORS is supported, default to false.
func (o ApiOutput) Cors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolPtrOutput { return v.Cors }).(pulumi.BoolPtrOutput)
}

// Specifies the description of the constant or system parameter, which contain a
// maximum of 255 characters, and the angle brackets (< and >) are not allowed.
func (o ApiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the example response for a successful request. Ensure that the
// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
func (o ApiOutput) FailureResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.FailureResponse }).(pulumi.StringPtrOutput)
}

// Specifies the function graph backend details. The object
// structure is documented below. Changing this will create a new API resource.
func (o ApiOutput) FuncGraph() ApiFuncGraphOutput {
	return o.ApplyT(func(v *Api) ApiFuncGraphOutput { return v.FuncGraph }).(ApiFuncGraphOutput)
}

// Specifies the Mock policy backends. The maximum of the policy is 5.
// The object structure is documented below.
func (o ApiOutput) FuncGraphPolicies() ApiFuncGraphPolicyArrayOutput {
	return o.ApplyT(func(v *Api) ApiFuncGraphPolicyArrayOutput { return v.FuncGraphPolicies }).(ApiFuncGraphPolicyArrayOutput)
}

// Specifies an ID of the APIG group to which the API belongs to.
func (o ApiOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// Specifies an ID of the APIG dedicated instance to which the API belongs
// to. Changing this will create a new API resource.
func (o ApiOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the route matching mode. The valid value are **Exact** and **Prefix**,
// default to **Exact**.
func (o ApiOutput) Matching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.Matching }).(pulumi.StringPtrOutput)
}

// Specifies the mock backend details. The object structure is documented
// below. Changing this will create a new API resource.
func (o ApiOutput) Mock() ApiMockOutput {
	return o.ApplyT(func(v *Api) ApiMockOutput { return v.Mock }).(ApiMockOutput)
}

// Specifies the Mock policy backends. The maximum of the policy is 5.
// The object structure is documented below.
func (o ApiOutput) MockPolicies() ApiMockPolicyArrayOutput {
	return o.ApplyT(func(v *Api) ApiMockPolicyArrayOutput { return v.MockPolicies }).(ApiMockPolicyArrayOutput)
}

// Specifies the backend policy name, which can contains of 3 to 64 characters and start with
// a letter. Only letters, digits, and underscores (_) are allowed.
func (o ApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region in which to create the API resource. If omitted, the
// provider-level region will be used. Changing this will create a new API resource.
func (o ApiOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Time when the API is registered, in UTC format.
func (o ApiOutput) RegisterTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.RegisterTime }).(pulumi.StringOutput)
}

// Specifies the backend request method of the API. The valid types are **GET**,
// **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
func (o ApiOutput) RequestMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.RequestMethod }).(pulumi.StringOutput)
}

// Specifies an array of one or more request parameters of the front-end. The maximum
// of request parameters is 50. The object structure is documented below.
func (o ApiOutput) RequestParams() ApiRequestParamArrayOutput {
	return o.ApplyT(func(v *Api) ApiRequestParamArrayOutput { return v.RequestParams }).(ApiRequestParamArrayOutput)
}

// Specifies the request address, which can contain a maximum of 512 characters
// request parameters enclosed with brackets ({}).
//   - The address can contain special characters, such as asterisks (), percent signs (%), hyphens (-), and
//     underscores (_) and must comply with URI specifications.
//   - The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
//     Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
func (o ApiOutput) RequestPath() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.RequestPath }).(pulumi.StringOutput)
}

// Specifies the backend request protocol. The valid values are **HTTP** and
// **HTTPS**, default to **HTTPS**.
func (o ApiOutput) RequestProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.RequestProtocol }).(pulumi.StringOutput)
}

// Specifies the APIG group response ID.
func (o ApiOutput) ResponseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.ResponseId }).(pulumi.StringPtrOutput)
}

// Specifies the security authentication mode. The valid values are
// **NONE**, **APP** and **IAM**, default to **NONE**.
func (o ApiOutput) SecurityAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.SecurityAuthentication }).(pulumi.StringPtrOutput)
}

// Specifies whether AppCode authentication is enabled. The applicaiton code
// must located in the header when `simpleAuthentication` is true.
func (o ApiOutput) SimpleAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolOutput { return v.SimpleAuthentication }).(pulumi.BoolOutput)
}

// Specifies the example response for a successful request. Ensure that the
// response does not exceed 20,480 characters. Chinese characters must be in UTF-8 or Unicode format.
func (o ApiOutput) SuccessResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.SuccessResponse }).(pulumi.StringPtrOutput)
}

// Specifies the condition type of the backend policy. The valid values are **Equal**,
// **Enumerated** and **Matching**, default to **Equal**.
func (o ApiOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Time when the API was last modified, in UTC format.
func (o ApiOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Specifies the web backend details. The object structure is documented
// below. Changing this will create a new API resource.
func (o ApiOutput) Web() ApiWebOutput {
	return o.ApplyT(func(v *Api) ApiWebOutput { return v.Web }).(ApiWebOutput)
}

// Specifies the example response for a failed request. The maximum of the policy is 5.
// The object structure is documented below.
func (o ApiOutput) WebPolicies() ApiWebPolicyArrayOutput {
	return o.ApplyT(func(v *Api) ApiWebPolicyArrayOutput { return v.WebPolicies }).(ApiWebPolicyArrayOutput)
}

type ApiArrayOutput struct{ *pulumi.OutputState }

func (ApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Api)(nil)).Elem()
}

func (o ApiArrayOutput) ToApiArrayOutput() ApiArrayOutput {
	return o
}

func (o ApiArrayOutput) ToApiArrayOutputWithContext(ctx context.Context) ApiArrayOutput {
	return o
}

func (o ApiArrayOutput) Index(i pulumi.IntInput) ApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Api {
		return vs[0].([]*Api)[vs[1].(int)]
	}).(ApiOutput)
}

type ApiMapOutput struct{ *pulumi.OutputState }

func (ApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Api)(nil)).Elem()
}

func (o ApiMapOutput) ToApiMapOutput() ApiMapOutput {
	return o
}

func (o ApiMapOutput) ToApiMapOutputWithContext(ctx context.Context) ApiMapOutput {
	return o
}

func (o ApiMapOutput) MapIndex(k pulumi.StringInput) ApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Api {
		return vs[0].(map[string]*Api)[vs[1].(string)]
	}).(ApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiInput)(nil)).Elem(), &Api{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiArrayInput)(nil)).Elem(), ApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiMapInput)(nil)).Elem(), ApiMap{})
	pulumi.RegisterOutputType(ApiOutput{})
	pulumi.RegisterOutputType(ApiArrayOutput{})
	pulumi.RegisterOutputType(ApiMapOutput{})
}
