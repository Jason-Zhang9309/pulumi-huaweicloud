// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedapig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an APIG custom authorizer resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedApig"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedApig"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			instanceId := cfg.RequireObject("instanceId")
//			authorizerName := cfg.RequireObject("authorizerName")
//			functionUrn := cfg.RequireObject("functionUrn")
//			_, err := DedicatedApig.NewCustomAuthorizer(ctx, "test", &DedicatedApig.CustomAuthorizerArgs{
//				InstanceId:      pulumi.Any(instanceId),
//				FunctionUrn:     pulumi.Any(functionUrn),
//				FunctionVersion: pulumi.String("latest"),
//				Type:            pulumi.String("FRONTEND"),
//				CacheAge:        pulumi.Int(60),
//				Identities: dedicatedapig.CustomAuthorizerIdentityArray{
//					&dedicatedapig.CustomAuthorizerIdentityArgs{
//						Name:     pulumi.String("user_name"),
//						Location: pulumi.String("QUERY"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Custom Authorizers of the APIG can be imported using their `name` and related dedicated instance IDs, separated by a slash, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:DedicatedApig/customAuthorizer:CustomAuthorizer test <instance_id>/<name>
//
// ```
type CustomAuthorizer struct {
	pulumi.CustomResourceState

	// Specifies the maximum cache age.\
	// The valid value is range from `1` to `3,600`.
	CacheAge pulumi.IntPtrOutput `pulumi:"cacheAge"`
	// The creation time of the custom authorizer.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringOutput `pulumi:"functionAliasUri"`
	// Specifies the uniform function URN of the function graph resource.
	FunctionUrn pulumi.StringOutput `pulumi:"functionUrn"`
	// Specifies the version of the FGS function.
	FunctionVersion pulumi.StringOutput `pulumi:"functionVersion"`
	// Specifies an array of one or more parameter identities of the custom authorizer.
	// The object structure is documented below.
	Identities CustomAuthorizerIdentityArrayOutput `pulumi:"identities"`
	// Specifies an ID of the APIG dedicated instance to which the
	// custom authorizer belongs to.
	// Changing this will create a new custom authorizer resource.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Specifies whether to send the body.
	IsBodySend pulumi.BoolPtrOutput `pulumi:"isBodySend"`
	// Specifies the name of the parameter to be verified.
	// The parameter includes front-end and back-end parameters.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the framework type of the function.
	// + **V1**: Non-VPC network architecture.
	// + **V2**: VPC network architecture.
	NetworkType pulumi.StringOutput `pulumi:"networkType"`
	// Specifies the region in which to create the custom authorizer resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new custom authorizer resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the custom authorize type.
	// The valid values are **FRONTEND** and **BACKEND**. Defaults to **FRONTEND**.
	// Changing this will create a new custom authorizer resource.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Specifies the user data, which can contain a maximum of `2,048` characters.
	// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
}

// NewCustomAuthorizer registers a new resource with the given unique name, arguments, and options.
func NewCustomAuthorizer(ctx *pulumi.Context,
	name string, args *CustomAuthorizerArgs, opts ...pulumi.ResourceOption) (*CustomAuthorizer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionUrn == nil {
		return nil, errors.New("invalid value for required argument 'FunctionUrn'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CustomAuthorizer
	err := ctx.RegisterResource("huaweicloud:DedicatedApig/customAuthorizer:CustomAuthorizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomAuthorizer gets an existing CustomAuthorizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomAuthorizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomAuthorizerState, opts ...pulumi.ResourceOption) (*CustomAuthorizer, error) {
	var resource CustomAuthorizer
	err := ctx.ReadResource("huaweicloud:DedicatedApig/customAuthorizer:CustomAuthorizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomAuthorizer resources.
type customAuthorizerState struct {
	// Specifies the maximum cache age.\
	// The valid value is range from `1` to `3,600`.
	CacheAge *int `pulumi:"cacheAge"`
	// The creation time of the custom authorizer.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the version alias URI of the FGS function.
	FunctionAliasUri *string `pulumi:"functionAliasUri"`
	// Specifies the uniform function URN of the function graph resource.
	FunctionUrn *string `pulumi:"functionUrn"`
	// Specifies the version of the FGS function.
	FunctionVersion *string `pulumi:"functionVersion"`
	// Specifies an array of one or more parameter identities of the custom authorizer.
	// The object structure is documented below.
	Identities []CustomAuthorizerIdentity `pulumi:"identities"`
	// Specifies an ID of the APIG dedicated instance to which the
	// custom authorizer belongs to.
	// Changing this will create a new custom authorizer resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies whether to send the body.
	IsBodySend *bool `pulumi:"isBodySend"`
	// Specifies the name of the parameter to be verified.
	// The parameter includes front-end and back-end parameters.
	Name *string `pulumi:"name"`
	// Specifies the framework type of the function.
	// + **V1**: Non-VPC network architecture.
	// + **V2**: VPC network architecture.
	NetworkType *string `pulumi:"networkType"`
	// Specifies the region in which to create the custom authorizer resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new custom authorizer resource.
	Region *string `pulumi:"region"`
	// Specifies the custom authorize type.
	// The valid values are **FRONTEND** and **BACKEND**. Defaults to **FRONTEND**.
	// Changing this will create a new custom authorizer resource.
	Type *string `pulumi:"type"`
	// Specifies the user data, which can contain a maximum of `2,048` characters.
	// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
	UserData *string `pulumi:"userData"`
}

type CustomAuthorizerState struct {
	// Specifies the maximum cache age.\
	// The valid value is range from `1` to `3,600`.
	CacheAge pulumi.IntPtrInput
	// The creation time of the custom authorizer.
	CreatedAt pulumi.StringPtrInput
	// Specifies the version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringPtrInput
	// Specifies the uniform function URN of the function graph resource.
	FunctionUrn pulumi.StringPtrInput
	// Specifies the version of the FGS function.
	FunctionVersion pulumi.StringPtrInput
	// Specifies an array of one or more parameter identities of the custom authorizer.
	// The object structure is documented below.
	Identities CustomAuthorizerIdentityArrayInput
	// Specifies an ID of the APIG dedicated instance to which the
	// custom authorizer belongs to.
	// Changing this will create a new custom authorizer resource.
	InstanceId pulumi.StringPtrInput
	// Specifies whether to send the body.
	IsBodySend pulumi.BoolPtrInput
	// Specifies the name of the parameter to be verified.
	// The parameter includes front-end and back-end parameters.
	Name pulumi.StringPtrInput
	// Specifies the framework type of the function.
	// + **V1**: Non-VPC network architecture.
	// + **V2**: VPC network architecture.
	NetworkType pulumi.StringPtrInput
	// Specifies the region in which to create the custom authorizer resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new custom authorizer resource.
	Region pulumi.StringPtrInput
	// Specifies the custom authorize type.
	// The valid values are **FRONTEND** and **BACKEND**. Defaults to **FRONTEND**.
	// Changing this will create a new custom authorizer resource.
	Type pulumi.StringPtrInput
	// Specifies the user data, which can contain a maximum of `2,048` characters.
	// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
	UserData pulumi.StringPtrInput
}

func (CustomAuthorizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*customAuthorizerState)(nil)).Elem()
}

type customAuthorizerArgs struct {
	// Specifies the maximum cache age.\
	// The valid value is range from `1` to `3,600`.
	CacheAge *int `pulumi:"cacheAge"`
	// Specifies the version alias URI of the FGS function.
	FunctionAliasUri *string `pulumi:"functionAliasUri"`
	// Specifies the uniform function URN of the function graph resource.
	FunctionUrn string `pulumi:"functionUrn"`
	// Specifies the version of the FGS function.
	FunctionVersion *string `pulumi:"functionVersion"`
	// Specifies an array of one or more parameter identities of the custom authorizer.
	// The object structure is documented below.
	Identities []CustomAuthorizerIdentity `pulumi:"identities"`
	// Specifies an ID of the APIG dedicated instance to which the
	// custom authorizer belongs to.
	// Changing this will create a new custom authorizer resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies whether to send the body.
	IsBodySend *bool `pulumi:"isBodySend"`
	// Specifies the name of the parameter to be verified.
	// The parameter includes front-end and back-end parameters.
	Name *string `pulumi:"name"`
	// Specifies the framework type of the function.
	// + **V1**: Non-VPC network architecture.
	// + **V2**: VPC network architecture.
	NetworkType *string `pulumi:"networkType"`
	// Specifies the region in which to create the custom authorizer resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new custom authorizer resource.
	Region *string `pulumi:"region"`
	// Specifies the custom authorize type.
	// The valid values are **FRONTEND** and **BACKEND**. Defaults to **FRONTEND**.
	// Changing this will create a new custom authorizer resource.
	Type *string `pulumi:"type"`
	// Specifies the user data, which can contain a maximum of `2,048` characters.
	// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
	UserData *string `pulumi:"userData"`
}

// The set of arguments for constructing a CustomAuthorizer resource.
type CustomAuthorizerArgs struct {
	// Specifies the maximum cache age.\
	// The valid value is range from `1` to `3,600`.
	CacheAge pulumi.IntPtrInput
	// Specifies the version alias URI of the FGS function.
	FunctionAliasUri pulumi.StringPtrInput
	// Specifies the uniform function URN of the function graph resource.
	FunctionUrn pulumi.StringInput
	// Specifies the version of the FGS function.
	FunctionVersion pulumi.StringPtrInput
	// Specifies an array of one or more parameter identities of the custom authorizer.
	// The object structure is documented below.
	Identities CustomAuthorizerIdentityArrayInput
	// Specifies an ID of the APIG dedicated instance to which the
	// custom authorizer belongs to.
	// Changing this will create a new custom authorizer resource.
	InstanceId pulumi.StringInput
	// Specifies whether to send the body.
	IsBodySend pulumi.BoolPtrInput
	// Specifies the name of the parameter to be verified.
	// The parameter includes front-end and back-end parameters.
	Name pulumi.StringPtrInput
	// Specifies the framework type of the function.
	// + **V1**: Non-VPC network architecture.
	// + **V2**: VPC network architecture.
	NetworkType pulumi.StringPtrInput
	// Specifies the region in which to create the custom authorizer resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new custom authorizer resource.
	Region pulumi.StringPtrInput
	// Specifies the custom authorize type.
	// The valid values are **FRONTEND** and **BACKEND**. Defaults to **FRONTEND**.
	// Changing this will create a new custom authorizer resource.
	Type pulumi.StringPtrInput
	// Specifies the user data, which can contain a maximum of `2,048` characters.
	// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
	UserData pulumi.StringPtrInput
}

func (CustomAuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customAuthorizerArgs)(nil)).Elem()
}

type CustomAuthorizerInput interface {
	pulumi.Input

	ToCustomAuthorizerOutput() CustomAuthorizerOutput
	ToCustomAuthorizerOutputWithContext(ctx context.Context) CustomAuthorizerOutput
}

func (*CustomAuthorizer) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAuthorizer)(nil)).Elem()
}

func (i *CustomAuthorizer) ToCustomAuthorizerOutput() CustomAuthorizerOutput {
	return i.ToCustomAuthorizerOutputWithContext(context.Background())
}

func (i *CustomAuthorizer) ToCustomAuthorizerOutputWithContext(ctx context.Context) CustomAuthorizerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAuthorizerOutput)
}

// CustomAuthorizerArrayInput is an input type that accepts CustomAuthorizerArray and CustomAuthorizerArrayOutput values.
// You can construct a concrete instance of `CustomAuthorizerArrayInput` via:
//
//	CustomAuthorizerArray{ CustomAuthorizerArgs{...} }
type CustomAuthorizerArrayInput interface {
	pulumi.Input

	ToCustomAuthorizerArrayOutput() CustomAuthorizerArrayOutput
	ToCustomAuthorizerArrayOutputWithContext(context.Context) CustomAuthorizerArrayOutput
}

type CustomAuthorizerArray []CustomAuthorizerInput

func (CustomAuthorizerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAuthorizer)(nil)).Elem()
}

func (i CustomAuthorizerArray) ToCustomAuthorizerArrayOutput() CustomAuthorizerArrayOutput {
	return i.ToCustomAuthorizerArrayOutputWithContext(context.Background())
}

func (i CustomAuthorizerArray) ToCustomAuthorizerArrayOutputWithContext(ctx context.Context) CustomAuthorizerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAuthorizerArrayOutput)
}

// CustomAuthorizerMapInput is an input type that accepts CustomAuthorizerMap and CustomAuthorizerMapOutput values.
// You can construct a concrete instance of `CustomAuthorizerMapInput` via:
//
//	CustomAuthorizerMap{ "key": CustomAuthorizerArgs{...} }
type CustomAuthorizerMapInput interface {
	pulumi.Input

	ToCustomAuthorizerMapOutput() CustomAuthorizerMapOutput
	ToCustomAuthorizerMapOutputWithContext(context.Context) CustomAuthorizerMapOutput
}

type CustomAuthorizerMap map[string]CustomAuthorizerInput

func (CustomAuthorizerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAuthorizer)(nil)).Elem()
}

func (i CustomAuthorizerMap) ToCustomAuthorizerMapOutput() CustomAuthorizerMapOutput {
	return i.ToCustomAuthorizerMapOutputWithContext(context.Background())
}

func (i CustomAuthorizerMap) ToCustomAuthorizerMapOutputWithContext(ctx context.Context) CustomAuthorizerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAuthorizerMapOutput)
}

type CustomAuthorizerOutput struct{ *pulumi.OutputState }

func (CustomAuthorizerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAuthorizer)(nil)).Elem()
}

func (o CustomAuthorizerOutput) ToCustomAuthorizerOutput() CustomAuthorizerOutput {
	return o
}

func (o CustomAuthorizerOutput) ToCustomAuthorizerOutputWithContext(ctx context.Context) CustomAuthorizerOutput {
	return o
}

// Specifies the maximum cache age.\
// The valid value is range from `1` to `3,600`.
func (o CustomAuthorizerOutput) CacheAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.IntPtrOutput { return v.CacheAge }).(pulumi.IntPtrOutput)
}

// The creation time of the custom authorizer.
func (o CustomAuthorizerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the version alias URI of the FGS function.
func (o CustomAuthorizerOutput) FunctionAliasUri() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.FunctionAliasUri }).(pulumi.StringOutput)
}

// Specifies the uniform function URN of the function graph resource.
func (o CustomAuthorizerOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.FunctionUrn }).(pulumi.StringOutput)
}

// Specifies the version of the FGS function.
func (o CustomAuthorizerOutput) FunctionVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.FunctionVersion }).(pulumi.StringOutput)
}

// Specifies an array of one or more parameter identities of the custom authorizer.
// The object structure is documented below.
func (o CustomAuthorizerOutput) Identities() CustomAuthorizerIdentityArrayOutput {
	return o.ApplyT(func(v *CustomAuthorizer) CustomAuthorizerIdentityArrayOutput { return v.Identities }).(CustomAuthorizerIdentityArrayOutput)
}

// Specifies an ID of the APIG dedicated instance to which the
// custom authorizer belongs to.
// Changing this will create a new custom authorizer resource.
func (o CustomAuthorizerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies whether to send the body.
func (o CustomAuthorizerOutput) IsBodySend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.BoolPtrOutput { return v.IsBodySend }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the parameter to be verified.
// The parameter includes front-end and back-end parameters.
func (o CustomAuthorizerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the framework type of the function.
// + **V1**: Non-VPC network architecture.
// + **V2**: VPC network architecture.
func (o CustomAuthorizerOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.NetworkType }).(pulumi.StringOutput)
}

// Specifies the region in which to create the custom authorizer resource.
// If omitted, the provider-level region will be used.
// Changing this will create a new custom authorizer resource.
func (o CustomAuthorizerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the custom authorize type.
// The valid values are **FRONTEND** and **BACKEND**. Defaults to **FRONTEND**.
// Changing this will create a new custom authorizer resource.
func (o CustomAuthorizerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the user data, which can contain a maximum of `2,048` characters.
// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
func (o CustomAuthorizerOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAuthorizer) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

type CustomAuthorizerArrayOutput struct{ *pulumi.OutputState }

func (CustomAuthorizerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAuthorizer)(nil)).Elem()
}

func (o CustomAuthorizerArrayOutput) ToCustomAuthorizerArrayOutput() CustomAuthorizerArrayOutput {
	return o
}

func (o CustomAuthorizerArrayOutput) ToCustomAuthorizerArrayOutputWithContext(ctx context.Context) CustomAuthorizerArrayOutput {
	return o
}

func (o CustomAuthorizerArrayOutput) Index(i pulumi.IntInput) CustomAuthorizerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomAuthorizer {
		return vs[0].([]*CustomAuthorizer)[vs[1].(int)]
	}).(CustomAuthorizerOutput)
}

type CustomAuthorizerMapOutput struct{ *pulumi.OutputState }

func (CustomAuthorizerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAuthorizer)(nil)).Elem()
}

func (o CustomAuthorizerMapOutput) ToCustomAuthorizerMapOutput() CustomAuthorizerMapOutput {
	return o
}

func (o CustomAuthorizerMapOutput) ToCustomAuthorizerMapOutputWithContext(ctx context.Context) CustomAuthorizerMapOutput {
	return o
}

func (o CustomAuthorizerMapOutput) MapIndex(k pulumi.StringInput) CustomAuthorizerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomAuthorizer {
		return vs[0].(map[string]*CustomAuthorizer)[vs[1].(string)]
	}).(CustomAuthorizerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAuthorizerInput)(nil)).Elem(), &CustomAuthorizer{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAuthorizerArrayInput)(nil)).Elem(), CustomAuthorizerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAuthorizerMapInput)(nil)).Elem(), CustomAuthorizerMap{})
	pulumi.RegisterOutputType(CustomAuthorizerOutput{})
	pulumi.RegisterOutputType(CustomAuthorizerArrayOutput{})
	pulumi.RegisterOutputType(CustomAuthorizerMapOutput{})
}
