// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functiongraph

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to filter dependent packages of FGS from HuaweiCloud.
//
// ## Example Usage
// ### Obtain all public dependent packages
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FunctionGraph.GetDependencies(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Obtain specific public dependent package by name
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FunctionGraph.GetDependencies(ctx, &functiongraph.GetDependenciesArgs{
//				Name: pulumi.StringRef("obssdk-3.0.2"),
//				Type: pulumi.StringRef("public"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Obtain all public Python2.7 dependent packages
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := FunctionGraph.GetDependencies(ctx, &functiongraph.GetDependenciesArgs{
//				Runtime: pulumi.StringRef("Python2.7"),
//				Type:    pulumi.StringRef("public"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDependencies(ctx *pulumi.Context, args *GetDependenciesArgs, opts ...pulumi.InvokeOption) (*GetDependenciesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDependenciesResult
	err := ctx.Invoke("huaweicloud:FunctionGraph/getDependencies:getDependencies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDependencies.
type GetDependenciesArgs struct {
	// Specifies the dependent package runtime to match.
	Name *string `pulumi:"name"`
	// Specifies the region in which to obtain the dependent packages. If omitted, the
	// provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the dependent package runtime to match. Valid values: **Java8**,
	// **Node.js6.10**, **Node.js8.10**, **Node.js10.16**, **Node.js12.13**, **Python2.7**, **Python3.6**, **Go1.8**,
	// **Go1.x**, **C#(.NET Core 2.0)**, **C#(.NET Core 2.1)**, **C#(.NET Core 3.1)** and **PHP7.3**.
	Runtime *string `pulumi:"runtime"`
	// Specifies the dependent package type to match. Valid values: **public** and **private**.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getDependencies.
type GetDependenciesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Dependent package name.
	Name *string `pulumi:"name"`
	// All dependent packages that match.
	Packages []GetDependenciesPackage `pulumi:"packages"`
	Region   string                   `pulumi:"region"`
	// Dependent package runtime.
	Runtime *string `pulumi:"runtime"`
	Type    *string `pulumi:"type"`
}

func GetDependenciesOutput(ctx *pulumi.Context, args GetDependenciesOutputArgs, opts ...pulumi.InvokeOption) GetDependenciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDependenciesResult, error) {
			args := v.(GetDependenciesArgs)
			r, err := GetDependencies(ctx, &args, opts...)
			var s GetDependenciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDependenciesResultOutput)
}

// A collection of arguments for invoking getDependencies.
type GetDependenciesOutputArgs struct {
	// Specifies the dependent package runtime to match.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to obtain the dependent packages. If omitted, the
	// provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the dependent package runtime to match. Valid values: **Java8**,
	// **Node.js6.10**, **Node.js8.10**, **Node.js10.16**, **Node.js12.13**, **Python2.7**, **Python3.6**, **Go1.8**,
	// **Go1.x**, **C#(.NET Core 2.0)**, **C#(.NET Core 2.1)**, **C#(.NET Core 3.1)** and **PHP7.3**.
	Runtime pulumi.StringPtrInput `pulumi:"runtime"`
	// Specifies the dependent package type to match. Valid values: **public** and **private**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetDependenciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesArgs)(nil)).Elem()
}

// A collection of values returned by getDependencies.
type GetDependenciesResultOutput struct{ *pulumi.OutputState }

func (GetDependenciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesResult)(nil)).Elem()
}

func (o GetDependenciesResultOutput) ToGetDependenciesResultOutput() GetDependenciesResultOutput {
	return o
}

func (o GetDependenciesResultOutput) ToGetDependenciesResultOutputWithContext(ctx context.Context) GetDependenciesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDependenciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Dependent package name.
func (o GetDependenciesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDependenciesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// All dependent packages that match.
func (o GetDependenciesResultOutput) Packages() GetDependenciesPackageArrayOutput {
	return o.ApplyT(func(v GetDependenciesResult) []GetDependenciesPackage { return v.Packages }).(GetDependenciesPackageArrayOutput)
}

func (o GetDependenciesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Dependent package runtime.
func (o GetDependenciesResultOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDependenciesResult) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

func (o GetDependenciesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDependenciesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDependenciesResultOutput{})
}
