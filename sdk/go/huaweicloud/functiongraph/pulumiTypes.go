// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functiongraph

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FunctionCustomImage struct {
	// Specifies the command line arguments used to start the SWR image.\
	// If multiple arguments are separated by commas (,). e.g. `-args,value`.
	// If this parameter is not specified, the CMD in the image configuration will be used by default.
	Args *string `pulumi:"args"`
	// Specifies the startup commands of the SWR image.\
	// Multiple commands are separated by commas (,). e.g. `/bin/sh`.
	// If this parameter is not specified, the entrypoint or CMD in the image configuration will be used by default.
	Command *string `pulumi:"command"`
	// Specifies the URL of SWR image, the URL must start with `swr.`.
	Url         string  `pulumi:"url"`
	UserGroupId *string `pulumi:"userGroupId"`
	UserId      *string `pulumi:"userId"`
	// Specifies the working directory of the SWR image.\
	// If not specified, the default value is `/`.
	// Currently, the folder path can only be set to `/` and it cannot be created or modified.
	WorkingDir *string `pulumi:"workingDir"`
}

// FunctionCustomImageInput is an input type that accepts FunctionCustomImageArgs and FunctionCustomImageOutput values.
// You can construct a concrete instance of `FunctionCustomImageInput` via:
//
//	FunctionCustomImageArgs{...}
type FunctionCustomImageInput interface {
	pulumi.Input

	ToFunctionCustomImageOutput() FunctionCustomImageOutput
	ToFunctionCustomImageOutputWithContext(context.Context) FunctionCustomImageOutput
}

type FunctionCustomImageArgs struct {
	// Specifies the command line arguments used to start the SWR image.\
	// If multiple arguments are separated by commas (,). e.g. `-args,value`.
	// If this parameter is not specified, the CMD in the image configuration will be used by default.
	Args pulumi.StringPtrInput `pulumi:"args"`
	// Specifies the startup commands of the SWR image.\
	// Multiple commands are separated by commas (,). e.g. `/bin/sh`.
	// If this parameter is not specified, the entrypoint or CMD in the image configuration will be used by default.
	Command pulumi.StringPtrInput `pulumi:"command"`
	// Specifies the URL of SWR image, the URL must start with `swr.`.
	Url         pulumi.StringInput    `pulumi:"url"`
	UserGroupId pulumi.StringPtrInput `pulumi:"userGroupId"`
	UserId      pulumi.StringPtrInput `pulumi:"userId"`
	// Specifies the working directory of the SWR image.\
	// If not specified, the default value is `/`.
	// Currently, the folder path can only be set to `/` and it cannot be created or modified.
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (FunctionCustomImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionCustomImage)(nil)).Elem()
}

func (i FunctionCustomImageArgs) ToFunctionCustomImageOutput() FunctionCustomImageOutput {
	return i.ToFunctionCustomImageOutputWithContext(context.Background())
}

func (i FunctionCustomImageArgs) ToFunctionCustomImageOutputWithContext(ctx context.Context) FunctionCustomImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCustomImageOutput)
}

func (i FunctionCustomImageArgs) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return i.ToFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (i FunctionCustomImageArgs) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCustomImageOutput).ToFunctionCustomImagePtrOutputWithContext(ctx)
}

// FunctionCustomImagePtrInput is an input type that accepts FunctionCustomImageArgs, FunctionCustomImagePtr and FunctionCustomImagePtrOutput values.
// You can construct a concrete instance of `FunctionCustomImagePtrInput` via:
//
//	        FunctionCustomImageArgs{...}
//
//	or:
//
//	        nil
type FunctionCustomImagePtrInput interface {
	pulumi.Input

	ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput
	ToFunctionCustomImagePtrOutputWithContext(context.Context) FunctionCustomImagePtrOutput
}

type functionCustomImagePtrType FunctionCustomImageArgs

func FunctionCustomImagePtr(v *FunctionCustomImageArgs) FunctionCustomImagePtrInput {
	return (*functionCustomImagePtrType)(v)
}

func (*functionCustomImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionCustomImage)(nil)).Elem()
}

func (i *functionCustomImagePtrType) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return i.ToFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (i *functionCustomImagePtrType) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionCustomImagePtrOutput)
}

type FunctionCustomImageOutput struct{ *pulumi.OutputState }

func (FunctionCustomImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionCustomImage)(nil)).Elem()
}

func (o FunctionCustomImageOutput) ToFunctionCustomImageOutput() FunctionCustomImageOutput {
	return o
}

func (o FunctionCustomImageOutput) ToFunctionCustomImageOutputWithContext(ctx context.Context) FunctionCustomImageOutput {
	return o
}

func (o FunctionCustomImageOutput) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return o.ToFunctionCustomImagePtrOutputWithContext(context.Background())
}

func (o FunctionCustomImageOutput) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionCustomImage) *FunctionCustomImage {
		return &v
	}).(FunctionCustomImagePtrOutput)
}

// Specifies the command line arguments used to start the SWR image.\
// If multiple arguments are separated by commas (,). e.g. `-args,value`.
// If this parameter is not specified, the CMD in the image configuration will be used by default.
func (o FunctionCustomImageOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.Args }).(pulumi.StringPtrOutput)
}

// Specifies the startup commands of the SWR image.\
// Multiple commands are separated by commas (,). e.g. `/bin/sh`.
// If this parameter is not specified, the entrypoint or CMD in the image configuration will be used by default.
func (o FunctionCustomImageOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.Command }).(pulumi.StringPtrOutput)
}

// Specifies the URL of SWR image, the URL must start with `swr.`.
func (o FunctionCustomImageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionCustomImage) string { return v.Url }).(pulumi.StringOutput)
}

func (o FunctionCustomImageOutput) UserGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.UserGroupId }).(pulumi.StringPtrOutput)
}

func (o FunctionCustomImageOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// Specifies the working directory of the SWR image.\
// If not specified, the default value is `/`.
// Currently, the folder path can only be set to `/` and it cannot be created or modified.
func (o FunctionCustomImageOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionCustomImage) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type FunctionCustomImagePtrOutput struct{ *pulumi.OutputState }

func (FunctionCustomImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionCustomImage)(nil)).Elem()
}

func (o FunctionCustomImagePtrOutput) ToFunctionCustomImagePtrOutput() FunctionCustomImagePtrOutput {
	return o
}

func (o FunctionCustomImagePtrOutput) ToFunctionCustomImagePtrOutputWithContext(ctx context.Context) FunctionCustomImagePtrOutput {
	return o
}

func (o FunctionCustomImagePtrOutput) Elem() FunctionCustomImageOutput {
	return o.ApplyT(func(v *FunctionCustomImage) FunctionCustomImage {
		if v != nil {
			return *v
		}
		var ret FunctionCustomImage
		return ret
	}).(FunctionCustomImageOutput)
}

// Specifies the command line arguments used to start the SWR image.\
// If multiple arguments are separated by commas (,). e.g. `-args,value`.
// If this parameter is not specified, the CMD in the image configuration will be used by default.
func (o FunctionCustomImagePtrOutput) Args() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringPtrOutput)
}

// Specifies the startup commands of the SWR image.\
// Multiple commands are separated by commas (,). e.g. `/bin/sh`.
// If this parameter is not specified, the entrypoint or CMD in the image configuration will be used by default.
func (o FunctionCustomImagePtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringPtrOutput)
}

// Specifies the URL of SWR image, the URL must start with `swr.`.
func (o FunctionCustomImagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

func (o FunctionCustomImagePtrOutput) UserGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.UserGroupId
	}).(pulumi.StringPtrOutput)
}

func (o FunctionCustomImagePtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// Specifies the working directory of the SWR image.\
// If not specified, the default value is `/`.
// Currently, the folder path can only be set to `/` and it cannot be created or modified.
func (o FunctionCustomImagePtrOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionCustomImage) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDir
	}).(pulumi.StringPtrOutput)
}

type FunctionFuncMount struct {
	// Specifies the function access path.
	LocalMountPath string `pulumi:"localMountPath"`
	// Specifies the ID of the mounted resource (corresponding cloud service).
	MountResource string `pulumi:"mountResource"`
	// Specifies the remote mount path, e.g. **192.168.0.12:/data**.
	MountSharePath string `pulumi:"mountSharePath"`
	// Specifies the mount type.
	// + **sfs**
	// + **sfsTurbo**
	// + **ecs**
	MountType string `pulumi:"mountType"`
	// The mount status.
	Status *string `pulumi:"status"`
}

// FunctionFuncMountInput is an input type that accepts FunctionFuncMountArgs and FunctionFuncMountOutput values.
// You can construct a concrete instance of `FunctionFuncMountInput` via:
//
//	FunctionFuncMountArgs{...}
type FunctionFuncMountInput interface {
	pulumi.Input

	ToFunctionFuncMountOutput() FunctionFuncMountOutput
	ToFunctionFuncMountOutputWithContext(context.Context) FunctionFuncMountOutput
}

type FunctionFuncMountArgs struct {
	// Specifies the function access path.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// Specifies the ID of the mounted resource (corresponding cloud service).
	MountResource pulumi.StringInput `pulumi:"mountResource"`
	// Specifies the remote mount path, e.g. **192.168.0.12:/data**.
	MountSharePath pulumi.StringInput `pulumi:"mountSharePath"`
	// Specifies the mount type.
	// + **sfs**
	// + **sfsTurbo**
	// + **ecs**
	MountType pulumi.StringInput `pulumi:"mountType"`
	// The mount status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FunctionFuncMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFuncMount)(nil)).Elem()
}

func (i FunctionFuncMountArgs) ToFunctionFuncMountOutput() FunctionFuncMountOutput {
	return i.ToFunctionFuncMountOutputWithContext(context.Background())
}

func (i FunctionFuncMountArgs) ToFunctionFuncMountOutputWithContext(ctx context.Context) FunctionFuncMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFuncMountOutput)
}

// FunctionFuncMountArrayInput is an input type that accepts FunctionFuncMountArray and FunctionFuncMountArrayOutput values.
// You can construct a concrete instance of `FunctionFuncMountArrayInput` via:
//
//	FunctionFuncMountArray{ FunctionFuncMountArgs{...} }
type FunctionFuncMountArrayInput interface {
	pulumi.Input

	ToFunctionFuncMountArrayOutput() FunctionFuncMountArrayOutput
	ToFunctionFuncMountArrayOutputWithContext(context.Context) FunctionFuncMountArrayOutput
}

type FunctionFuncMountArray []FunctionFuncMountInput

func (FunctionFuncMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionFuncMount)(nil)).Elem()
}

func (i FunctionFuncMountArray) ToFunctionFuncMountArrayOutput() FunctionFuncMountArrayOutput {
	return i.ToFunctionFuncMountArrayOutputWithContext(context.Background())
}

func (i FunctionFuncMountArray) ToFunctionFuncMountArrayOutputWithContext(ctx context.Context) FunctionFuncMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionFuncMountArrayOutput)
}

type FunctionFuncMountOutput struct{ *pulumi.OutputState }

func (FunctionFuncMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionFuncMount)(nil)).Elem()
}

func (o FunctionFuncMountOutput) ToFunctionFuncMountOutput() FunctionFuncMountOutput {
	return o
}

func (o FunctionFuncMountOutput) ToFunctionFuncMountOutputWithContext(ctx context.Context) FunctionFuncMountOutput {
	return o
}

// Specifies the function access path.
func (o FunctionFuncMountOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// Specifies the ID of the mounted resource (corresponding cloud service).
func (o FunctionFuncMountOutput) MountResource() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.MountResource }).(pulumi.StringOutput)
}

// Specifies the remote mount path, e.g. **192.168.0.12:/data**.
func (o FunctionFuncMountOutput) MountSharePath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.MountSharePath }).(pulumi.StringOutput)
}

// Specifies the mount type.
// + **sfs**
// + **sfsTurbo**
// + **ecs**
func (o FunctionFuncMountOutput) MountType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionFuncMount) string { return v.MountType }).(pulumi.StringOutput)
}

// The mount status.
func (o FunctionFuncMountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionFuncMount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FunctionFuncMountArrayOutput struct{ *pulumi.OutputState }

func (FunctionFuncMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionFuncMount)(nil)).Elem()
}

func (o FunctionFuncMountArrayOutput) ToFunctionFuncMountArrayOutput() FunctionFuncMountArrayOutput {
	return o
}

func (o FunctionFuncMountArrayOutput) ToFunctionFuncMountArrayOutputWithContext(ctx context.Context) FunctionFuncMountArrayOutput {
	return o
}

func (o FunctionFuncMountArrayOutput) Index(i pulumi.IntInput) FunctionFuncMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionFuncMount {
		return vs[0].([]FunctionFuncMount)[vs[1].(int)]
	}).(FunctionFuncMountOutput)
}

type FunctionNetworkController struct {
	// Specifies whether to disable the public network access.
	DisablePublicNetwork *bool `pulumi:"disablePublicNetwork"`
	// Specifies the configuration of the VPCs that can trigger the function.\
	// The triggerAccessVpcs structure is documented below.
	TriggerAccessVpcs []FunctionNetworkControllerTriggerAccessVpc `pulumi:"triggerAccessVpcs"`
}

// FunctionNetworkControllerInput is an input type that accepts FunctionNetworkControllerArgs and FunctionNetworkControllerOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerInput` via:
//
//	FunctionNetworkControllerArgs{...}
type FunctionNetworkControllerInput interface {
	pulumi.Input

	ToFunctionNetworkControllerOutput() FunctionNetworkControllerOutput
	ToFunctionNetworkControllerOutputWithContext(context.Context) FunctionNetworkControllerOutput
}

type FunctionNetworkControllerArgs struct {
	// Specifies whether to disable the public network access.
	DisablePublicNetwork pulumi.BoolPtrInput `pulumi:"disablePublicNetwork"`
	// Specifies the configuration of the VPCs that can trigger the function.\
	// The triggerAccessVpcs structure is documented below.
	TriggerAccessVpcs FunctionNetworkControllerTriggerAccessVpcArrayInput `pulumi:"triggerAccessVpcs"`
}

func (FunctionNetworkControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkController)(nil)).Elem()
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerOutput() FunctionNetworkControllerOutput {
	return i.ToFunctionNetworkControllerOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerOutputWithContext(ctx context.Context) FunctionNetworkControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerOutput)
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return i.ToFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerArgs) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerOutput).ToFunctionNetworkControllerPtrOutputWithContext(ctx)
}

// FunctionNetworkControllerPtrInput is an input type that accepts FunctionNetworkControllerArgs, FunctionNetworkControllerPtr and FunctionNetworkControllerPtrOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerPtrInput` via:
//
//	        FunctionNetworkControllerArgs{...}
//
//	or:
//
//	        nil
type FunctionNetworkControllerPtrInput interface {
	pulumi.Input

	ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput
	ToFunctionNetworkControllerPtrOutputWithContext(context.Context) FunctionNetworkControllerPtrOutput
}

type functionNetworkControllerPtrType FunctionNetworkControllerArgs

func FunctionNetworkControllerPtr(v *FunctionNetworkControllerArgs) FunctionNetworkControllerPtrInput {
	return (*functionNetworkControllerPtrType)(v)
}

func (*functionNetworkControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionNetworkController)(nil)).Elem()
}

func (i *functionNetworkControllerPtrType) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return i.ToFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (i *functionNetworkControllerPtrType) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerPtrOutput)
}

type FunctionNetworkControllerOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkController)(nil)).Elem()
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerOutput() FunctionNetworkControllerOutput {
	return o
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerOutputWithContext(ctx context.Context) FunctionNetworkControllerOutput {
	return o
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return o.ToFunctionNetworkControllerPtrOutputWithContext(context.Background())
}

func (o FunctionNetworkControllerOutput) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionNetworkController) *FunctionNetworkController {
		return &v
	}).(FunctionNetworkControllerPtrOutput)
}

// Specifies whether to disable the public network access.
func (o FunctionNetworkControllerOutput) DisablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionNetworkController) *bool { return v.DisablePublicNetwork }).(pulumi.BoolPtrOutput)
}

// Specifies the configuration of the VPCs that can trigger the function.\
// The triggerAccessVpcs structure is documented below.
func (o FunctionNetworkControllerOutput) TriggerAccessVpcs() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o.ApplyT(func(v FunctionNetworkController) []FunctionNetworkControllerTriggerAccessVpc {
		return v.TriggerAccessVpcs
	}).(FunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FunctionNetworkControllerPtrOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionNetworkController)(nil)).Elem()
}

func (o FunctionNetworkControllerPtrOutput) ToFunctionNetworkControllerPtrOutput() FunctionNetworkControllerPtrOutput {
	return o
}

func (o FunctionNetworkControllerPtrOutput) ToFunctionNetworkControllerPtrOutputWithContext(ctx context.Context) FunctionNetworkControllerPtrOutput {
	return o
}

func (o FunctionNetworkControllerPtrOutput) Elem() FunctionNetworkControllerOutput {
	return o.ApplyT(func(v *FunctionNetworkController) FunctionNetworkController {
		if v != nil {
			return *v
		}
		var ret FunctionNetworkController
		return ret
	}).(FunctionNetworkControllerOutput)
}

// Specifies whether to disable the public network access.
func (o FunctionNetworkControllerPtrOutput) DisablePublicNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionNetworkController) *bool {
		if v == nil {
			return nil
		}
		return v.DisablePublicNetwork
	}).(pulumi.BoolPtrOutput)
}

// Specifies the configuration of the VPCs that can trigger the function.\
// The triggerAccessVpcs structure is documented below.
func (o FunctionNetworkControllerPtrOutput) TriggerAccessVpcs() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o.ApplyT(func(v *FunctionNetworkController) []FunctionNetworkControllerTriggerAccessVpc {
		if v == nil {
			return nil
		}
		return v.TriggerAccessVpcs
	}).(FunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FunctionNetworkControllerTriggerAccessVpc struct {
	// Specifies the ID of the VPC that can trigger the function.
	VpcId string `pulumi:"vpcId"`
}

// FunctionNetworkControllerTriggerAccessVpcInput is an input type that accepts FunctionNetworkControllerTriggerAccessVpcArgs and FunctionNetworkControllerTriggerAccessVpcOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerTriggerAccessVpcInput` via:
//
//	FunctionNetworkControllerTriggerAccessVpcArgs{...}
type FunctionNetworkControllerTriggerAccessVpcInput interface {
	pulumi.Input

	ToFunctionNetworkControllerTriggerAccessVpcOutput() FunctionNetworkControllerTriggerAccessVpcOutput
	ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(context.Context) FunctionNetworkControllerTriggerAccessVpcOutput
}

type FunctionNetworkControllerTriggerAccessVpcArgs struct {
	// Specifies the ID of the VPC that can trigger the function.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (FunctionNetworkControllerTriggerAccessVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (i FunctionNetworkControllerTriggerAccessVpcArgs) ToFunctionNetworkControllerTriggerAccessVpcOutput() FunctionNetworkControllerTriggerAccessVpcOutput {
	return i.ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerTriggerAccessVpcArgs) ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerTriggerAccessVpcOutput)
}

// FunctionNetworkControllerTriggerAccessVpcArrayInput is an input type that accepts FunctionNetworkControllerTriggerAccessVpcArray and FunctionNetworkControllerTriggerAccessVpcArrayOutput values.
// You can construct a concrete instance of `FunctionNetworkControllerTriggerAccessVpcArrayInput` via:
//
//	FunctionNetworkControllerTriggerAccessVpcArray{ FunctionNetworkControllerTriggerAccessVpcArgs{...} }
type FunctionNetworkControllerTriggerAccessVpcArrayInput interface {
	pulumi.Input

	ToFunctionNetworkControllerTriggerAccessVpcArrayOutput() FunctionNetworkControllerTriggerAccessVpcArrayOutput
	ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(context.Context) FunctionNetworkControllerTriggerAccessVpcArrayOutput
}

type FunctionNetworkControllerTriggerAccessVpcArray []FunctionNetworkControllerTriggerAccessVpcInput

func (FunctionNetworkControllerTriggerAccessVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (i FunctionNetworkControllerTriggerAccessVpcArray) ToFunctionNetworkControllerTriggerAccessVpcArrayOutput() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return i.ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(context.Background())
}

func (i FunctionNetworkControllerTriggerAccessVpcArray) ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNetworkControllerTriggerAccessVpcArrayOutput)
}

type FunctionNetworkControllerTriggerAccessVpcOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerTriggerAccessVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (o FunctionNetworkControllerTriggerAccessVpcOutput) ToFunctionNetworkControllerTriggerAccessVpcOutput() FunctionNetworkControllerTriggerAccessVpcOutput {
	return o
}

func (o FunctionNetworkControllerTriggerAccessVpcOutput) ToFunctionNetworkControllerTriggerAccessVpcOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcOutput {
	return o
}

// Specifies the ID of the VPC that can trigger the function.
func (o FunctionNetworkControllerTriggerAccessVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionNetworkControllerTriggerAccessVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

type FunctionNetworkControllerTriggerAccessVpcArrayOutput struct{ *pulumi.OutputState }

func (FunctionNetworkControllerTriggerAccessVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionNetworkControllerTriggerAccessVpc)(nil)).Elem()
}

func (o FunctionNetworkControllerTriggerAccessVpcArrayOutput) ToFunctionNetworkControllerTriggerAccessVpcArrayOutput() FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o
}

func (o FunctionNetworkControllerTriggerAccessVpcArrayOutput) ToFunctionNetworkControllerTriggerAccessVpcArrayOutputWithContext(ctx context.Context) FunctionNetworkControllerTriggerAccessVpcArrayOutput {
	return o
}

func (o FunctionNetworkControllerTriggerAccessVpcArrayOutput) Index(i pulumi.IntInput) FunctionNetworkControllerTriggerAccessVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionNetworkControllerTriggerAccessVpc {
		return vs[0].([]FunctionNetworkControllerTriggerAccessVpc)[vs[1].(int)]
	}).(FunctionNetworkControllerTriggerAccessVpcOutput)
}

type FunctionReservedInstance struct {
	// Specifies the number of reserved instance to which the policy belongs.\
	// The valid value is range from `0` to `1,000`.
	Count int `pulumi:"count"`
	// Specifies whether to enable the idle mode.\
	// Defaults to **false**.
	// If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
	// You will still be billed at the price of reserved instances for non-idle mode in this period.
	IdleMode *bool `pulumi:"idleMode"`
	// Specifies the version name or alias name.
	QualifierName string `pulumi:"qualifierName"`
	// Specifies the qualifier type of reserved instance.\
	// The valid values are as follows:
	// + **version**
	// + **alias**
	QualifierType string `pulumi:"qualifierType"`
	// Specifies the auto scaling policies for reserved instance.\
	// The tacticsConfig structure is documented below.
	TacticsConfig *FunctionReservedInstanceTacticsConfig `pulumi:"tacticsConfig"`
}

// FunctionReservedInstanceInput is an input type that accepts FunctionReservedInstanceArgs and FunctionReservedInstanceOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceInput` via:
//
//	FunctionReservedInstanceArgs{...}
type FunctionReservedInstanceInput interface {
	pulumi.Input

	ToFunctionReservedInstanceOutput() FunctionReservedInstanceOutput
	ToFunctionReservedInstanceOutputWithContext(context.Context) FunctionReservedInstanceOutput
}

type FunctionReservedInstanceArgs struct {
	// Specifies the number of reserved instance to which the policy belongs.\
	// The valid value is range from `0` to `1,000`.
	Count pulumi.IntInput `pulumi:"count"`
	// Specifies whether to enable the idle mode.\
	// Defaults to **false**.
	// If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
	// You will still be billed at the price of reserved instances for non-idle mode in this period.
	IdleMode pulumi.BoolPtrInput `pulumi:"idleMode"`
	// Specifies the version name or alias name.
	QualifierName pulumi.StringInput `pulumi:"qualifierName"`
	// Specifies the qualifier type of reserved instance.\
	// The valid values are as follows:
	// + **version**
	// + **alias**
	QualifierType pulumi.StringInput `pulumi:"qualifierType"`
	// Specifies the auto scaling policies for reserved instance.\
	// The tacticsConfig structure is documented below.
	TacticsConfig FunctionReservedInstanceTacticsConfigPtrInput `pulumi:"tacticsConfig"`
}

func (FunctionReservedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstance)(nil)).Elem()
}

func (i FunctionReservedInstanceArgs) ToFunctionReservedInstanceOutput() FunctionReservedInstanceOutput {
	return i.ToFunctionReservedInstanceOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceArgs) ToFunctionReservedInstanceOutputWithContext(ctx context.Context) FunctionReservedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceOutput)
}

// FunctionReservedInstanceArrayInput is an input type that accepts FunctionReservedInstanceArray and FunctionReservedInstanceArrayOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceArrayInput` via:
//
//	FunctionReservedInstanceArray{ FunctionReservedInstanceArgs{...} }
type FunctionReservedInstanceArrayInput interface {
	pulumi.Input

	ToFunctionReservedInstanceArrayOutput() FunctionReservedInstanceArrayOutput
	ToFunctionReservedInstanceArrayOutputWithContext(context.Context) FunctionReservedInstanceArrayOutput
}

type FunctionReservedInstanceArray []FunctionReservedInstanceInput

func (FunctionReservedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstance)(nil)).Elem()
}

func (i FunctionReservedInstanceArray) ToFunctionReservedInstanceArrayOutput() FunctionReservedInstanceArrayOutput {
	return i.ToFunctionReservedInstanceArrayOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceArray) ToFunctionReservedInstanceArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceArrayOutput)
}

type FunctionReservedInstanceOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstance)(nil)).Elem()
}

func (o FunctionReservedInstanceOutput) ToFunctionReservedInstanceOutput() FunctionReservedInstanceOutput {
	return o
}

func (o FunctionReservedInstanceOutput) ToFunctionReservedInstanceOutputWithContext(ctx context.Context) FunctionReservedInstanceOutput {
	return o
}

// Specifies the number of reserved instance to which the policy belongs.\
// The valid value is range from `0` to `1,000`.
func (o FunctionReservedInstanceOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstance) int { return v.Count }).(pulumi.IntOutput)
}

// Specifies whether to enable the idle mode.\
// Defaults to **false**.
// If this parameter is enabled, reserved instances are initialized and the mode change needs some time to take effect.
// You will still be billed at the price of reserved instances for non-idle mode in this period.
func (o FunctionReservedInstanceOutput) IdleMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionReservedInstance) *bool { return v.IdleMode }).(pulumi.BoolPtrOutput)
}

// Specifies the version name or alias name.
func (o FunctionReservedInstanceOutput) QualifierName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstance) string { return v.QualifierName }).(pulumi.StringOutput)
}

// Specifies the qualifier type of reserved instance.\
// The valid values are as follows:
// + **version**
// + **alias**
func (o FunctionReservedInstanceOutput) QualifierType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstance) string { return v.QualifierType }).(pulumi.StringOutput)
}

// Specifies the auto scaling policies for reserved instance.\
// The tacticsConfig structure is documented below.
func (o FunctionReservedInstanceOutput) TacticsConfig() FunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ApplyT(func(v FunctionReservedInstance) *FunctionReservedInstanceTacticsConfig { return v.TacticsConfig }).(FunctionReservedInstanceTacticsConfigPtrOutput)
}

type FunctionReservedInstanceArrayOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstance)(nil)).Elem()
}

func (o FunctionReservedInstanceArrayOutput) ToFunctionReservedInstanceArrayOutput() FunctionReservedInstanceArrayOutput {
	return o
}

func (o FunctionReservedInstanceArrayOutput) ToFunctionReservedInstanceArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceArrayOutput {
	return o
}

func (o FunctionReservedInstanceArrayOutput) Index(i pulumi.IntInput) FunctionReservedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionReservedInstance {
		return vs[0].([]FunctionReservedInstance)[vs[1].(int)]
	}).(FunctionReservedInstanceOutput)
}

type FunctionReservedInstanceTacticsConfig struct {
	// Specifies the list of scheduled policy configurations.\
	// The cronConfigs structure is documented below.
	CronConfigs []FunctionReservedInstanceTacticsConfigCronConfig `pulumi:"cronConfigs"`
	// Specifies the list of metric policy configurations.\
	// The metricConfigs structure is documented below.
	MetricConfigs []FunctionReservedInstanceTacticsConfigMetricConfig `pulumi:"metricConfigs"`
}

// FunctionReservedInstanceTacticsConfigInput is an input type that accepts FunctionReservedInstanceTacticsConfigArgs and FunctionReservedInstanceTacticsConfigOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigInput` via:
//
//	FunctionReservedInstanceTacticsConfigArgs{...}
type FunctionReservedInstanceTacticsConfigInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigOutput() FunctionReservedInstanceTacticsConfigOutput
	ToFunctionReservedInstanceTacticsConfigOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigOutput
}

type FunctionReservedInstanceTacticsConfigArgs struct {
	// Specifies the list of scheduled policy configurations.\
	// The cronConfigs structure is documented below.
	CronConfigs FunctionReservedInstanceTacticsConfigCronConfigArrayInput `pulumi:"cronConfigs"`
	// Specifies the list of metric policy configurations.\
	// The metricConfigs structure is documented below.
	MetricConfigs FunctionReservedInstanceTacticsConfigMetricConfigArrayInput `pulumi:"metricConfigs"`
}

func (FunctionReservedInstanceTacticsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigOutput() FunctionReservedInstanceTacticsConfigOutput {
	return i.ToFunctionReservedInstanceTacticsConfigOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigOutput)
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return i.ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigArgs) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigOutput).ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx)
}

// FunctionReservedInstanceTacticsConfigPtrInput is an input type that accepts FunctionReservedInstanceTacticsConfigArgs, FunctionReservedInstanceTacticsConfigPtr and FunctionReservedInstanceTacticsConfigPtrOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigPtrInput` via:
//
//	        FunctionReservedInstanceTacticsConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionReservedInstanceTacticsConfigPtrInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput
	ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigPtrOutput
}

type functionReservedInstanceTacticsConfigPtrType FunctionReservedInstanceTacticsConfigArgs

func FunctionReservedInstanceTacticsConfigPtr(v *FunctionReservedInstanceTacticsConfigArgs) FunctionReservedInstanceTacticsConfigPtrInput {
	return (*functionReservedInstanceTacticsConfigPtrType)(v)
}

func (*functionReservedInstanceTacticsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (i *functionReservedInstanceTacticsConfigPtrType) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return i.ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (i *functionReservedInstanceTacticsConfigPtrType) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigPtrOutput)
}

type FunctionReservedInstanceTacticsConfigOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigOutput() FunctionReservedInstanceTacticsConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(context.Background())
}

func (o FunctionReservedInstanceTacticsConfigOutput) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionReservedInstanceTacticsConfig) *FunctionReservedInstanceTacticsConfig {
		return &v
	}).(FunctionReservedInstanceTacticsConfigPtrOutput)
}

// Specifies the list of scheduled policy configurations.\
// The cronConfigs structure is documented below.
func (o FunctionReservedInstanceTacticsConfigOutput) CronConfigs() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigCronConfig {
		return v.CronConfigs
	}).(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

// Specifies the list of metric policy configurations.\
// The metricConfigs structure is documented below.
func (o FunctionReservedInstanceTacticsConfigOutput) MetricConfigs() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigMetricConfig {
		return v.MetricConfigs
	}).(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionReservedInstanceTacticsConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigPtrOutput) ToFunctionReservedInstanceTacticsConfigPtrOutput() FunctionReservedInstanceTacticsConfigPtrOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigPtrOutput) ToFunctionReservedInstanceTacticsConfigPtrOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigPtrOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigPtrOutput) Elem() FunctionReservedInstanceTacticsConfigOutput {
	return o.ApplyT(func(v *FunctionReservedInstanceTacticsConfig) FunctionReservedInstanceTacticsConfig {
		if v != nil {
			return *v
		}
		var ret FunctionReservedInstanceTacticsConfig
		return ret
	}).(FunctionReservedInstanceTacticsConfigOutput)
}

// Specifies the list of scheduled policy configurations.\
// The cronConfigs structure is documented below.
func (o FunctionReservedInstanceTacticsConfigPtrOutput) CronConfigs() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o.ApplyT(func(v *FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigCronConfig {
		if v == nil {
			return nil
		}
		return v.CronConfigs
	}).(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

// Specifies the list of metric policy configurations.\
// The metricConfigs structure is documented below.
func (o FunctionReservedInstanceTacticsConfigPtrOutput) MetricConfigs() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o.ApplyT(func(v *FunctionReservedInstanceTacticsConfig) []FunctionReservedInstanceTacticsConfigMetricConfig {
		if v == nil {
			return nil
		}
		return v.MetricConfigs
	}).(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigCronConfig struct {
	// Specifies the number of reserved instance to which the policy belongs.\
	// The valid value is range from `0` to `1,000`.
	Count int `pulumi:"count"`
	// Specifies the cron expression.\
	// For the syntax, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
	Cron string `pulumi:"cron"`
	// Specifies the expiration timestamp of the policy. The unit is `s`, e.g. **1740560074**.
	ExpiredTime int `pulumi:"expiredTime"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name string `pulumi:"name"`
	// Specifies the effective timestamp of policy. The unit is `s`, e.g. **1740560074**.
	StartTime int `pulumi:"startTime"`
}

// FunctionReservedInstanceTacticsConfigCronConfigInput is an input type that accepts FunctionReservedInstanceTacticsConfigCronConfigArgs and FunctionReservedInstanceTacticsConfigCronConfigOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigCronConfigInput` via:
//
//	FunctionReservedInstanceTacticsConfigCronConfigArgs{...}
type FunctionReservedInstanceTacticsConfigCronConfigInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigCronConfigOutput() FunctionReservedInstanceTacticsConfigCronConfigOutput
	ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigCronConfigOutput
}

type FunctionReservedInstanceTacticsConfigCronConfigArgs struct {
	// Specifies the number of reserved instance to which the policy belongs.\
	// The valid value is range from `0` to `1,000`.
	Count pulumi.IntInput `pulumi:"count"`
	// Specifies the cron expression.\
	// For the syntax, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
	Cron pulumi.StringInput `pulumi:"cron"`
	// Specifies the expiration timestamp of the policy. The unit is `s`, e.g. **1740560074**.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the effective timestamp of policy. The unit is `s`, e.g. **1740560074**.
	StartTime pulumi.IntInput `pulumi:"startTime"`
}

func (FunctionReservedInstanceTacticsConfigCronConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArgs) ToFunctionReservedInstanceTacticsConfigCronConfigOutput() FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return i.ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArgs) ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigCronConfigOutput)
}

// FunctionReservedInstanceTacticsConfigCronConfigArrayInput is an input type that accepts FunctionReservedInstanceTacticsConfigCronConfigArray and FunctionReservedInstanceTacticsConfigCronConfigArrayOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigCronConfigArrayInput` via:
//
//	FunctionReservedInstanceTacticsConfigCronConfigArray{ FunctionReservedInstanceTacticsConfigCronConfigArgs{...} }
type FunctionReservedInstanceTacticsConfigCronConfigArrayInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput
	ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigCronConfigArrayOutput
}

type FunctionReservedInstanceTacticsConfigCronConfigArray []FunctionReservedInstanceTacticsConfigCronConfigInput

func (FunctionReservedInstanceTacticsConfigCronConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArray) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return i.ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigCronConfigArray) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigCronConfigOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigCronConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) ToFunctionReservedInstanceTacticsConfigCronConfigOutput() FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) ToFunctionReservedInstanceTacticsConfigCronConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return o
}

// Specifies the number of reserved instance to which the policy belongs.\
// The valid value is range from `0` to `1,000`.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) int { return v.Count }).(pulumi.IntOutput)
}

// Specifies the cron expression.\
// For the syntax, please refer to the [documentation](https://support.huaweicloud.com/intl/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) string { return v.Cron }).(pulumi.StringOutput)
}

// Specifies the expiration timestamp of the policy. The unit is `s`, e.g. **1740560074**.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// Specifies the name of metric policy.\
// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
// allowed. The name must start with a letter and ending with a letter or digit.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the effective timestamp of policy. The unit is `s`, e.g. **1740560074**.
func (o FunctionReservedInstanceTacticsConfigCronConfigOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigCronConfig) int { return v.StartTime }).(pulumi.IntOutput)
}

type FunctionReservedInstanceTacticsConfigCronConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigCronConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutput() FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigCronConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigCronConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigCronConfigArrayOutput) Index(i pulumi.IntInput) FunctionReservedInstanceTacticsConfigCronConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionReservedInstanceTacticsConfigCronConfig {
		return vs[0].([]FunctionReservedInstanceTacticsConfigCronConfig)[vs[1].(int)]
	}).(FunctionReservedInstanceTacticsConfigCronConfigOutput)
}

type FunctionReservedInstanceTacticsConfigMetricConfig struct {
	// Specifies the minimun of traffic.\
	// The valid value is range from `0` to `1,000`.
	Min int `pulumi:"min"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name string `pulumi:"name"`
	// Specifies the metric policy threshold.\
	// The valid value is range from `1` to `99`.
	Threshold int `pulumi:"threshold"`
	// Specifies the type of metric policy.\
	// The valid value is as follows:
	// + **Concurrency**: Reserved instance usage.
	Type string `pulumi:"type"`
}

// FunctionReservedInstanceTacticsConfigMetricConfigInput is an input type that accepts FunctionReservedInstanceTacticsConfigMetricConfigArgs and FunctionReservedInstanceTacticsConfigMetricConfigOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigMetricConfigInput` via:
//
//	FunctionReservedInstanceTacticsConfigMetricConfigArgs{...}
type FunctionReservedInstanceTacticsConfigMetricConfigInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigMetricConfigOutput() FunctionReservedInstanceTacticsConfigMetricConfigOutput
	ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigMetricConfigOutput
}

type FunctionReservedInstanceTacticsConfigMetricConfigArgs struct {
	// Specifies the minimun of traffic.\
	// The valid value is range from `0` to `1,000`.
	Min pulumi.IntInput `pulumi:"min"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the metric policy threshold.\
	// The valid value is range from `1` to `99`.
	Threshold pulumi.IntInput `pulumi:"threshold"`
	// Specifies the type of metric policy.\
	// The valid value is as follows:
	// + **Concurrency**: Reserved instance usage.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FunctionReservedInstanceTacticsConfigMetricConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArgs) ToFunctionReservedInstanceTacticsConfigMetricConfigOutput() FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return i.ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArgs) ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigMetricConfigOutput)
}

// FunctionReservedInstanceTacticsConfigMetricConfigArrayInput is an input type that accepts FunctionReservedInstanceTacticsConfigMetricConfigArray and FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput values.
// You can construct a concrete instance of `FunctionReservedInstanceTacticsConfigMetricConfigArrayInput` via:
//
//	FunctionReservedInstanceTacticsConfigMetricConfigArray{ FunctionReservedInstanceTacticsConfigMetricConfigArgs{...} }
type FunctionReservedInstanceTacticsConfigMetricConfigArrayInput interface {
	pulumi.Input

	ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput
	ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(context.Context) FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput
}

type FunctionReservedInstanceTacticsConfigMetricConfigArray []FunctionReservedInstanceTacticsConfigMetricConfigInput

func (FunctionReservedInstanceTacticsConfigMetricConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArray) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return i.ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(context.Background())
}

func (i FunctionReservedInstanceTacticsConfigMetricConfigArray) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput)
}

type FunctionReservedInstanceTacticsConfigMetricConfigOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigMetricConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigOutput() FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return o
}

// Specifies the minimun of traffic.\
// The valid value is range from `0` to `1,000`.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) int { return v.Min }).(pulumi.IntOutput)
}

// Specifies the name of metric policy.\
// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
// allowed. The name must start with a letter and ending with a letter or digit.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the metric policy threshold.\
// The valid value is range from `1` to `99`.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Threshold() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) int { return v.Threshold }).(pulumi.IntOutput)
}

// Specifies the type of metric policy.\
// The valid value is as follows:
// + **Concurrency**: Reserved instance usage.
func (o FunctionReservedInstanceTacticsConfigMetricConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionReservedInstanceTacticsConfigMetricConfig) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionReservedInstanceTacticsConfigMetricConfig)(nil)).Elem()
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutput() FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) ToFunctionReservedInstanceTacticsConfigMetricConfigArrayOutputWithContext(ctx context.Context) FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput {
	return o
}

func (o FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput) Index(i pulumi.IntInput) FunctionReservedInstanceTacticsConfigMetricConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionReservedInstanceTacticsConfigMetricConfig {
		return vs[0].([]FunctionReservedInstanceTacticsConfigMetricConfig)[vs[1].(int)]
	}).(FunctionReservedInstanceTacticsConfigMetricConfigOutput)
}

type FunctionVersion struct {
	// Specifies the aliases management for specified version.\
	// The aliases structure is documented below.
	Aliases *FunctionVersionAliases `pulumi:"aliases"`
	// Specifies the description of the version alias.
	Description *string `pulumi:"description"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name string `pulumi:"name"`
}

// FunctionVersionInput is an input type that accepts FunctionVersionArgs and FunctionVersionOutput values.
// You can construct a concrete instance of `FunctionVersionInput` via:
//
//	FunctionVersionArgs{...}
type FunctionVersionInput interface {
	pulumi.Input

	ToFunctionVersionOutput() FunctionVersionOutput
	ToFunctionVersionOutputWithContext(context.Context) FunctionVersionOutput
}

type FunctionVersionArgs struct {
	// Specifies the aliases management for specified version.\
	// The aliases structure is documented below.
	Aliases FunctionVersionAliasesPtrInput `pulumi:"aliases"`
	// Specifies the description of the version alias.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FunctionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersion)(nil)).Elem()
}

func (i FunctionVersionArgs) ToFunctionVersionOutput() FunctionVersionOutput {
	return i.ToFunctionVersionOutputWithContext(context.Background())
}

func (i FunctionVersionArgs) ToFunctionVersionOutputWithContext(ctx context.Context) FunctionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionOutput)
}

// FunctionVersionArrayInput is an input type that accepts FunctionVersionArray and FunctionVersionArrayOutput values.
// You can construct a concrete instance of `FunctionVersionArrayInput` via:
//
//	FunctionVersionArray{ FunctionVersionArgs{...} }
type FunctionVersionArrayInput interface {
	pulumi.Input

	ToFunctionVersionArrayOutput() FunctionVersionArrayOutput
	ToFunctionVersionArrayOutputWithContext(context.Context) FunctionVersionArrayOutput
}

type FunctionVersionArray []FunctionVersionInput

func (FunctionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionVersion)(nil)).Elem()
}

func (i FunctionVersionArray) ToFunctionVersionArrayOutput() FunctionVersionArrayOutput {
	return i.ToFunctionVersionArrayOutputWithContext(context.Background())
}

func (i FunctionVersionArray) ToFunctionVersionArrayOutputWithContext(ctx context.Context) FunctionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionArrayOutput)
}

type FunctionVersionOutput struct{ *pulumi.OutputState }

func (FunctionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersion)(nil)).Elem()
}

func (o FunctionVersionOutput) ToFunctionVersionOutput() FunctionVersionOutput {
	return o
}

func (o FunctionVersionOutput) ToFunctionVersionOutputWithContext(ctx context.Context) FunctionVersionOutput {
	return o
}

// Specifies the aliases management for specified version.\
// The aliases structure is documented below.
func (o FunctionVersionOutput) Aliases() FunctionVersionAliasesPtrOutput {
	return o.ApplyT(func(v FunctionVersion) *FunctionVersionAliases { return v.Aliases }).(FunctionVersionAliasesPtrOutput)
}

// Specifies the description of the version alias.
func (o FunctionVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name of metric policy.\
// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
// allowed. The name must start with a letter and ending with a letter or digit.
func (o FunctionVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionVersion) string { return v.Name }).(pulumi.StringOutput)
}

type FunctionVersionArrayOutput struct{ *pulumi.OutputState }

func (FunctionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionVersion)(nil)).Elem()
}

func (o FunctionVersionArrayOutput) ToFunctionVersionArrayOutput() FunctionVersionArrayOutput {
	return o
}

func (o FunctionVersionArrayOutput) ToFunctionVersionArrayOutputWithContext(ctx context.Context) FunctionVersionArrayOutput {
	return o
}

func (o FunctionVersionArrayOutput) Index(i pulumi.IntInput) FunctionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionVersion {
		return vs[0].([]FunctionVersion)[vs[1].(int)]
	}).(FunctionVersionOutput)
}

type FunctionVersionAliases struct {
	// Specifies the rule grayscale configuration of the version
	// alias, in JSON format.
	AdditionalVersionStrategy *string `pulumi:"additionalVersionStrategy"`
	// Specifies the percentage grayscale configuration of the version
	// alias, in JSON format.
	AdditionalVersionWeights *string `pulumi:"additionalVersionWeights"`
	// Specifies the description of the version alias.
	Description *string `pulumi:"description"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name string `pulumi:"name"`
}

// FunctionVersionAliasesInput is an input type that accepts FunctionVersionAliasesArgs and FunctionVersionAliasesOutput values.
// You can construct a concrete instance of `FunctionVersionAliasesInput` via:
//
//	FunctionVersionAliasesArgs{...}
type FunctionVersionAliasesInput interface {
	pulumi.Input

	ToFunctionVersionAliasesOutput() FunctionVersionAliasesOutput
	ToFunctionVersionAliasesOutputWithContext(context.Context) FunctionVersionAliasesOutput
}

type FunctionVersionAliasesArgs struct {
	// Specifies the rule grayscale configuration of the version
	// alias, in JSON format.
	AdditionalVersionStrategy pulumi.StringPtrInput `pulumi:"additionalVersionStrategy"`
	// Specifies the percentage grayscale configuration of the version
	// alias, in JSON format.
	AdditionalVersionWeights pulumi.StringPtrInput `pulumi:"additionalVersionWeights"`
	// Specifies the description of the version alias.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of metric policy.\
	// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
	// allowed. The name must start with a letter and ending with a letter or digit.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FunctionVersionAliasesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersionAliases)(nil)).Elem()
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesOutput() FunctionVersionAliasesOutput {
	return i.ToFunctionVersionAliasesOutputWithContext(context.Background())
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesOutputWithContext(ctx context.Context) FunctionVersionAliasesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionAliasesOutput)
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return i.ToFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (i FunctionVersionAliasesArgs) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionAliasesOutput).ToFunctionVersionAliasesPtrOutputWithContext(ctx)
}

// FunctionVersionAliasesPtrInput is an input type that accepts FunctionVersionAliasesArgs, FunctionVersionAliasesPtr and FunctionVersionAliasesPtrOutput values.
// You can construct a concrete instance of `FunctionVersionAliasesPtrInput` via:
//
//	        FunctionVersionAliasesArgs{...}
//
//	or:
//
//	        nil
type FunctionVersionAliasesPtrInput interface {
	pulumi.Input

	ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput
	ToFunctionVersionAliasesPtrOutputWithContext(context.Context) FunctionVersionAliasesPtrOutput
}

type functionVersionAliasesPtrType FunctionVersionAliasesArgs

func FunctionVersionAliasesPtr(v *FunctionVersionAliasesArgs) FunctionVersionAliasesPtrInput {
	return (*functionVersionAliasesPtrType)(v)
}

func (*functionVersionAliasesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVersionAliases)(nil)).Elem()
}

func (i *functionVersionAliasesPtrType) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return i.ToFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (i *functionVersionAliasesPtrType) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVersionAliasesPtrOutput)
}

type FunctionVersionAliasesOutput struct{ *pulumi.OutputState }

func (FunctionVersionAliasesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVersionAliases)(nil)).Elem()
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesOutput() FunctionVersionAliasesOutput {
	return o
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesOutputWithContext(ctx context.Context) FunctionVersionAliasesOutput {
	return o
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return o.ToFunctionVersionAliasesPtrOutputWithContext(context.Background())
}

func (o FunctionVersionAliasesOutput) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionVersionAliases) *FunctionVersionAliases {
		return &v
	}).(FunctionVersionAliasesPtrOutput)
}

// Specifies the rule grayscale configuration of the version
// alias, in JSON format.
func (o FunctionVersionAliasesOutput) AdditionalVersionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersionAliases) *string { return v.AdditionalVersionStrategy }).(pulumi.StringPtrOutput)
}

// Specifies the percentage grayscale configuration of the version
// alias, in JSON format.
func (o FunctionVersionAliasesOutput) AdditionalVersionWeights() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersionAliases) *string { return v.AdditionalVersionWeights }).(pulumi.StringPtrOutput)
}

// Specifies the description of the version alias.
func (o FunctionVersionAliasesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVersionAliases) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name of metric policy.\
// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
// allowed. The name must start with a letter and ending with a letter or digit.
func (o FunctionVersionAliasesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionVersionAliases) string { return v.Name }).(pulumi.StringOutput)
}

type FunctionVersionAliasesPtrOutput struct{ *pulumi.OutputState }

func (FunctionVersionAliasesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVersionAliases)(nil)).Elem()
}

func (o FunctionVersionAliasesPtrOutput) ToFunctionVersionAliasesPtrOutput() FunctionVersionAliasesPtrOutput {
	return o
}

func (o FunctionVersionAliasesPtrOutput) ToFunctionVersionAliasesPtrOutputWithContext(ctx context.Context) FunctionVersionAliasesPtrOutput {
	return o
}

func (o FunctionVersionAliasesPtrOutput) Elem() FunctionVersionAliasesOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) FunctionVersionAliases {
		if v != nil {
			return *v
		}
		var ret FunctionVersionAliases
		return ret
	}).(FunctionVersionAliasesOutput)
}

// Specifies the rule grayscale configuration of the version
// alias, in JSON format.
func (o FunctionVersionAliasesPtrOutput) AdditionalVersionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionStrategy
	}).(pulumi.StringPtrOutput)
}

// Specifies the percentage grayscale configuration of the version
// alias, in JSON format.
func (o FunctionVersionAliasesPtrOutput) AdditionalVersionWeights() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalVersionWeights
	}).(pulumi.StringPtrOutput)
}

// Specifies the description of the version alias.
func (o FunctionVersionAliasesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of metric policy.\
// The valid length is limited from `1` to `60` characters, only letters, digits, hyphens (-), and underscores (_) are
// allowed. The name must start with a letter and ending with a letter or digit.
func (o FunctionVersionAliasesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVersionAliases) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type TriggerApig struct {
	// Specifies the API name. Changing this will create a new trigger resource.
	ApiName string `pulumi:"apiName"`
	// Specifies the API environment name.
	// Changing this will create a new trigger resource.
	EnvName string `pulumi:"envName"`
	// Specifies the ID of the APIG group to which the API belongs.
	// Changing this will create a new trigger resource.
	GroupId string `pulumi:"groupId"`
	// Specifies the ID of the APIG dedicated instance to which the API belongs.
	// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
	InstanceId *string `pulumi:"instanceId"`
	// Specifies the request protocol of the API. The valid value are
	// **HTTP** and **HTTPS**. Default to **HTTPS**. Changing this will create a new trigger resource.
	RequestProtocol *string `pulumi:"requestProtocol"`
	// Specifies the security authentication mode. The valid values
	// are **NONE**, **APP** and **IAM**, default to **IAM**. Changing this will create a new trigger resource.
	SecurityAuthentication *string `pulumi:"securityAuthentication"`
	// Specifies the timeout for request sending. The valid value is range form
	// `1` to `60,000`, default to `5,000`. Changing this will create a new trigger resource.
	Timeout *int `pulumi:"timeout"`
}

// TriggerApigInput is an input type that accepts TriggerApigArgs and TriggerApigOutput values.
// You can construct a concrete instance of `TriggerApigInput` via:
//
//	TriggerApigArgs{...}
type TriggerApigInput interface {
	pulumi.Input

	ToTriggerApigOutput() TriggerApigOutput
	ToTriggerApigOutputWithContext(context.Context) TriggerApigOutput
}

type TriggerApigArgs struct {
	// Specifies the API name. Changing this will create a new trigger resource.
	ApiName pulumi.StringInput `pulumi:"apiName"`
	// Specifies the API environment name.
	// Changing this will create a new trigger resource.
	EnvName pulumi.StringInput `pulumi:"envName"`
	// Specifies the ID of the APIG group to which the API belongs.
	// Changing this will create a new trigger resource.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Specifies the ID of the APIG dedicated instance to which the API belongs.
	// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Specifies the request protocol of the API. The valid value are
	// **HTTP** and **HTTPS**. Default to **HTTPS**. Changing this will create a new trigger resource.
	RequestProtocol pulumi.StringPtrInput `pulumi:"requestProtocol"`
	// Specifies the security authentication mode. The valid values
	// are **NONE**, **APP** and **IAM**, default to **IAM**. Changing this will create a new trigger resource.
	SecurityAuthentication pulumi.StringPtrInput `pulumi:"securityAuthentication"`
	// Specifies the timeout for request sending. The valid value is range form
	// `1` to `60,000`, default to `5,000`. Changing this will create a new trigger resource.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (TriggerApigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerApig)(nil)).Elem()
}

func (i TriggerApigArgs) ToTriggerApigOutput() TriggerApigOutput {
	return i.ToTriggerApigOutputWithContext(context.Background())
}

func (i TriggerApigArgs) ToTriggerApigOutputWithContext(ctx context.Context) TriggerApigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerApigOutput)
}

func (i TriggerApigArgs) ToTriggerApigPtrOutput() TriggerApigPtrOutput {
	return i.ToTriggerApigPtrOutputWithContext(context.Background())
}

func (i TriggerApigArgs) ToTriggerApigPtrOutputWithContext(ctx context.Context) TriggerApigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerApigOutput).ToTriggerApigPtrOutputWithContext(ctx)
}

// TriggerApigPtrInput is an input type that accepts TriggerApigArgs, TriggerApigPtr and TriggerApigPtrOutput values.
// You can construct a concrete instance of `TriggerApigPtrInput` via:
//
//	        TriggerApigArgs{...}
//
//	or:
//
//	        nil
type TriggerApigPtrInput interface {
	pulumi.Input

	ToTriggerApigPtrOutput() TriggerApigPtrOutput
	ToTriggerApigPtrOutputWithContext(context.Context) TriggerApigPtrOutput
}

type triggerApigPtrType TriggerApigArgs

func TriggerApigPtr(v *TriggerApigArgs) TriggerApigPtrInput {
	return (*triggerApigPtrType)(v)
}

func (*triggerApigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerApig)(nil)).Elem()
}

func (i *triggerApigPtrType) ToTriggerApigPtrOutput() TriggerApigPtrOutput {
	return i.ToTriggerApigPtrOutputWithContext(context.Background())
}

func (i *triggerApigPtrType) ToTriggerApigPtrOutputWithContext(ctx context.Context) TriggerApigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerApigPtrOutput)
}

type TriggerApigOutput struct{ *pulumi.OutputState }

func (TriggerApigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerApig)(nil)).Elem()
}

func (o TriggerApigOutput) ToTriggerApigOutput() TriggerApigOutput {
	return o
}

func (o TriggerApigOutput) ToTriggerApigOutputWithContext(ctx context.Context) TriggerApigOutput {
	return o
}

func (o TriggerApigOutput) ToTriggerApigPtrOutput() TriggerApigPtrOutput {
	return o.ToTriggerApigPtrOutputWithContext(context.Background())
}

func (o TriggerApigOutput) ToTriggerApigPtrOutputWithContext(ctx context.Context) TriggerApigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerApig) *TriggerApig {
		return &v
	}).(TriggerApigPtrOutput)
}

// Specifies the API name. Changing this will create a new trigger resource.
func (o TriggerApigOutput) ApiName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerApig) string { return v.ApiName }).(pulumi.StringOutput)
}

// Specifies the API environment name.
// Changing this will create a new trigger resource.
func (o TriggerApigOutput) EnvName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerApig) string { return v.EnvName }).(pulumi.StringOutput)
}

// Specifies the ID of the APIG group to which the API belongs.
// Changing this will create a new trigger resource.
func (o TriggerApigOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerApig) string { return v.GroupId }).(pulumi.StringOutput)
}

// Specifies the ID of the APIG dedicated instance to which the API belongs.
// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
func (o TriggerApigOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerApig) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Specifies the request protocol of the API. The valid value are
// **HTTP** and **HTTPS**. Default to **HTTPS**. Changing this will create a new trigger resource.
func (o TriggerApigOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerApig) *string { return v.RequestProtocol }).(pulumi.StringPtrOutput)
}

// Specifies the security authentication mode. The valid values
// are **NONE**, **APP** and **IAM**, default to **IAM**. Changing this will create a new trigger resource.
func (o TriggerApigOutput) SecurityAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerApig) *string { return v.SecurityAuthentication }).(pulumi.StringPtrOutput)
}

// Specifies the timeout for request sending. The valid value is range form
// `1` to `60,000`, default to `5,000`. Changing this will create a new trigger resource.
func (o TriggerApigOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TriggerApig) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type TriggerApigPtrOutput struct{ *pulumi.OutputState }

func (TriggerApigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerApig)(nil)).Elem()
}

func (o TriggerApigPtrOutput) ToTriggerApigPtrOutput() TriggerApigPtrOutput {
	return o
}

func (o TriggerApigPtrOutput) ToTriggerApigPtrOutputWithContext(ctx context.Context) TriggerApigPtrOutput {
	return o
}

func (o TriggerApigPtrOutput) Elem() TriggerApigOutput {
	return o.ApplyT(func(v *TriggerApig) TriggerApig {
		if v != nil {
			return *v
		}
		var ret TriggerApig
		return ret
	}).(TriggerApigOutput)
}

// Specifies the API name. Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) ApiName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *string {
		if v == nil {
			return nil
		}
		return &v.ApiName
	}).(pulumi.StringPtrOutput)
}

// Specifies the API environment name.
// Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) EnvName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *string {
		if v == nil {
			return nil
		}
		return &v.EnvName
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID of the APIG group to which the API belongs.
// Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies the ID of the APIG dedicated instance to which the API belongs.
// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// Specifies the request protocol of the API. The valid value are
// **HTTP** and **HTTPS**. Default to **HTTPS**. Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) RequestProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *string {
		if v == nil {
			return nil
		}
		return v.RequestProtocol
	}).(pulumi.StringPtrOutput)
}

// Specifies the security authentication mode. The valid values
// are **NONE**, **APP** and **IAM**, default to **IAM**. Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) SecurityAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *string {
		if v == nil {
			return nil
		}
		return v.SecurityAuthentication
	}).(pulumi.StringPtrOutput)
}

// Specifies the timeout for request sending. The valid value is range form
// `1` to `60,000`, default to `5,000`. Changing this will create a new trigger resource.
func (o TriggerApigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerApig) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type TriggerDis struct {
	// Specifies the maximum volume of data that can be obtained for a single
	// request, in Byte. Only the records with a size smaller than this value can be obtained.
	// The valid value is range from `1,024` to `4,194,304`.
	// Changing this will create a new trigger resource.
	MaxFetchBytes int `pulumi:"maxFetchBytes"`
	// Specifies the interval at which data is pulled from the specified stream.
	// The valid value is range from `2` to `60,000`.
	// Changing this will create a new trigger resource.
	PullPeriod int `pulumi:"pullPeriod"`
	// Specifies the determines whether to pull data only after the data pulled
	// in the last period has been processed.
	// Changing this will create a new trigger resource.
	SerialEnable bool `pulumi:"serialEnable"`
	// Specifies the type of starting position for DIS queue.
	// The valid values are as follows:
	// + **TRIM_HORIZON**: Starts reading from the earliest data stored in the partitions.
	// + **LATEST**: Starts reading from the latest data stored in the partitions.
	//   Changing this will create a new trigger resource.
	StartingPosition string `pulumi:"startingPosition"`
	// Specifies the name of the DIS stream resource.
	// Changing this will create a new trigger resource.
	StreamName string `pulumi:"streamName"`
}

// TriggerDisInput is an input type that accepts TriggerDisArgs and TriggerDisOutput values.
// You can construct a concrete instance of `TriggerDisInput` via:
//
//	TriggerDisArgs{...}
type TriggerDisInput interface {
	pulumi.Input

	ToTriggerDisOutput() TriggerDisOutput
	ToTriggerDisOutputWithContext(context.Context) TriggerDisOutput
}

type TriggerDisArgs struct {
	// Specifies the maximum volume of data that can be obtained for a single
	// request, in Byte. Only the records with a size smaller than this value can be obtained.
	// The valid value is range from `1,024` to `4,194,304`.
	// Changing this will create a new trigger resource.
	MaxFetchBytes pulumi.IntInput `pulumi:"maxFetchBytes"`
	// Specifies the interval at which data is pulled from the specified stream.
	// The valid value is range from `2` to `60,000`.
	// Changing this will create a new trigger resource.
	PullPeriod pulumi.IntInput `pulumi:"pullPeriod"`
	// Specifies the determines whether to pull data only after the data pulled
	// in the last period has been processed.
	// Changing this will create a new trigger resource.
	SerialEnable pulumi.BoolInput `pulumi:"serialEnable"`
	// Specifies the type of starting position for DIS queue.
	// The valid values are as follows:
	// + **TRIM_HORIZON**: Starts reading from the earliest data stored in the partitions.
	// + **LATEST**: Starts reading from the latest data stored in the partitions.
	//   Changing this will create a new trigger resource.
	StartingPosition pulumi.StringInput `pulumi:"startingPosition"`
	// Specifies the name of the DIS stream resource.
	// Changing this will create a new trigger resource.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (TriggerDisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerDis)(nil)).Elem()
}

func (i TriggerDisArgs) ToTriggerDisOutput() TriggerDisOutput {
	return i.ToTriggerDisOutputWithContext(context.Background())
}

func (i TriggerDisArgs) ToTriggerDisOutputWithContext(ctx context.Context) TriggerDisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerDisOutput)
}

func (i TriggerDisArgs) ToTriggerDisPtrOutput() TriggerDisPtrOutput {
	return i.ToTriggerDisPtrOutputWithContext(context.Background())
}

func (i TriggerDisArgs) ToTriggerDisPtrOutputWithContext(ctx context.Context) TriggerDisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerDisOutput).ToTriggerDisPtrOutputWithContext(ctx)
}

// TriggerDisPtrInput is an input type that accepts TriggerDisArgs, TriggerDisPtr and TriggerDisPtrOutput values.
// You can construct a concrete instance of `TriggerDisPtrInput` via:
//
//	        TriggerDisArgs{...}
//
//	or:
//
//	        nil
type TriggerDisPtrInput interface {
	pulumi.Input

	ToTriggerDisPtrOutput() TriggerDisPtrOutput
	ToTriggerDisPtrOutputWithContext(context.Context) TriggerDisPtrOutput
}

type triggerDisPtrType TriggerDisArgs

func TriggerDisPtr(v *TriggerDisArgs) TriggerDisPtrInput {
	return (*triggerDisPtrType)(v)
}

func (*triggerDisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerDis)(nil)).Elem()
}

func (i *triggerDisPtrType) ToTriggerDisPtrOutput() TriggerDisPtrOutput {
	return i.ToTriggerDisPtrOutputWithContext(context.Background())
}

func (i *triggerDisPtrType) ToTriggerDisPtrOutputWithContext(ctx context.Context) TriggerDisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerDisPtrOutput)
}

type TriggerDisOutput struct{ *pulumi.OutputState }

func (TriggerDisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerDis)(nil)).Elem()
}

func (o TriggerDisOutput) ToTriggerDisOutput() TriggerDisOutput {
	return o
}

func (o TriggerDisOutput) ToTriggerDisOutputWithContext(ctx context.Context) TriggerDisOutput {
	return o
}

func (o TriggerDisOutput) ToTriggerDisPtrOutput() TriggerDisPtrOutput {
	return o.ToTriggerDisPtrOutputWithContext(context.Background())
}

func (o TriggerDisOutput) ToTriggerDisPtrOutputWithContext(ctx context.Context) TriggerDisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerDis) *TriggerDis {
		return &v
	}).(TriggerDisPtrOutput)
}

// Specifies the maximum volume of data that can be obtained for a single
// request, in Byte. Only the records with a size smaller than this value can be obtained.
// The valid value is range from `1,024` to `4,194,304`.
// Changing this will create a new trigger resource.
func (o TriggerDisOutput) MaxFetchBytes() pulumi.IntOutput {
	return o.ApplyT(func(v TriggerDis) int { return v.MaxFetchBytes }).(pulumi.IntOutput)
}

// Specifies the interval at which data is pulled from the specified stream.
// The valid value is range from `2` to `60,000`.
// Changing this will create a new trigger resource.
func (o TriggerDisOutput) PullPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v TriggerDis) int { return v.PullPeriod }).(pulumi.IntOutput)
}

// Specifies the determines whether to pull data only after the data pulled
// in the last period has been processed.
// Changing this will create a new trigger resource.
func (o TriggerDisOutput) SerialEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v TriggerDis) bool { return v.SerialEnable }).(pulumi.BoolOutput)
}

// Specifies the type of starting position for DIS queue.
// The valid values are as follows:
//   - **TRIM_HORIZON**: Starts reading from the earliest data stored in the partitions.
//   - **LATEST**: Starts reading from the latest data stored in the partitions.
//     Changing this will create a new trigger resource.
func (o TriggerDisOutput) StartingPosition() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerDis) string { return v.StartingPosition }).(pulumi.StringOutput)
}

// Specifies the name of the DIS stream resource.
// Changing this will create a new trigger resource.
func (o TriggerDisOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerDis) string { return v.StreamName }).(pulumi.StringOutput)
}

type TriggerDisPtrOutput struct{ *pulumi.OutputState }

func (TriggerDisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerDis)(nil)).Elem()
}

func (o TriggerDisPtrOutput) ToTriggerDisPtrOutput() TriggerDisPtrOutput {
	return o
}

func (o TriggerDisPtrOutput) ToTriggerDisPtrOutputWithContext(ctx context.Context) TriggerDisPtrOutput {
	return o
}

func (o TriggerDisPtrOutput) Elem() TriggerDisOutput {
	return o.ApplyT(func(v *TriggerDis) TriggerDis {
		if v != nil {
			return *v
		}
		var ret TriggerDis
		return ret
	}).(TriggerDisOutput)
}

// Specifies the maximum volume of data that can be obtained for a single
// request, in Byte. Only the records with a size smaller than this value can be obtained.
// The valid value is range from `1,024` to `4,194,304`.
// Changing this will create a new trigger resource.
func (o TriggerDisPtrOutput) MaxFetchBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerDis) *int {
		if v == nil {
			return nil
		}
		return &v.MaxFetchBytes
	}).(pulumi.IntPtrOutput)
}

// Specifies the interval at which data is pulled from the specified stream.
// The valid value is range from `2` to `60,000`.
// Changing this will create a new trigger resource.
func (o TriggerDisPtrOutput) PullPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerDis) *int {
		if v == nil {
			return nil
		}
		return &v.PullPeriod
	}).(pulumi.IntPtrOutput)
}

// Specifies the determines whether to pull data only after the data pulled
// in the last period has been processed.
// Changing this will create a new trigger resource.
func (o TriggerDisPtrOutput) SerialEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TriggerDis) *bool {
		if v == nil {
			return nil
		}
		return &v.SerialEnable
	}).(pulumi.BoolPtrOutput)
}

// Specifies the type of starting position for DIS queue.
// The valid values are as follows:
//   - **TRIM_HORIZON**: Starts reading from the earliest data stored in the partitions.
//   - **LATEST**: Starts reading from the latest data stored in the partitions.
//     Changing this will create a new trigger resource.
func (o TriggerDisPtrOutput) StartingPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerDis) *string {
		if v == nil {
			return nil
		}
		return &v.StartingPosition
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the DIS stream resource.
// Changing this will create a new trigger resource.
func (o TriggerDisPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerDis) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

type TriggerKafka struct {
	// Specifies the The number of messages consumed from the topic each time.
	// The valid value is range from `1` to `1,000`. Defaults to `100`.
	// Changing this will create a new trigger resource.
	BatchSize *int `pulumi:"batchSize"`
	// Specifies the ID of the APIG dedicated instance to which the API belongs.
	// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
	InstanceId string `pulumi:"instanceId"`
	// Specifies the password for logging in to the Kafka Manager.
	// Changing this will create a new trigger resource.
	Password *string `pulumi:"password"`
	// Specifies one or more topic IDs of DMS kafka instance.
	// Changing this will create a new trigger resource.
	TopicIds []string `pulumi:"topicIds"`
	// Specifies the username for logging in to the Kafka Manager.
	// Changing this will create a new trigger resource.
	UserName *string `pulumi:"userName"`
}

// TriggerKafkaInput is an input type that accepts TriggerKafkaArgs and TriggerKafkaOutput values.
// You can construct a concrete instance of `TriggerKafkaInput` via:
//
//	TriggerKafkaArgs{...}
type TriggerKafkaInput interface {
	pulumi.Input

	ToTriggerKafkaOutput() TriggerKafkaOutput
	ToTriggerKafkaOutputWithContext(context.Context) TriggerKafkaOutput
}

type TriggerKafkaArgs struct {
	// Specifies the The number of messages consumed from the topic each time.
	// The valid value is range from `1` to `1,000`. Defaults to `100`.
	// Changing this will create a new trigger resource.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// Specifies the ID of the APIG dedicated instance to which the API belongs.
	// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Specifies the password for logging in to the Kafka Manager.
	// Changing this will create a new trigger resource.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specifies one or more topic IDs of DMS kafka instance.
	// Changing this will create a new trigger resource.
	TopicIds pulumi.StringArrayInput `pulumi:"topicIds"`
	// Specifies the username for logging in to the Kafka Manager.
	// Changing this will create a new trigger resource.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (TriggerKafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerKafka)(nil)).Elem()
}

func (i TriggerKafkaArgs) ToTriggerKafkaOutput() TriggerKafkaOutput {
	return i.ToTriggerKafkaOutputWithContext(context.Background())
}

func (i TriggerKafkaArgs) ToTriggerKafkaOutputWithContext(ctx context.Context) TriggerKafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerKafkaOutput)
}

func (i TriggerKafkaArgs) ToTriggerKafkaPtrOutput() TriggerKafkaPtrOutput {
	return i.ToTriggerKafkaPtrOutputWithContext(context.Background())
}

func (i TriggerKafkaArgs) ToTriggerKafkaPtrOutputWithContext(ctx context.Context) TriggerKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerKafkaOutput).ToTriggerKafkaPtrOutputWithContext(ctx)
}

// TriggerKafkaPtrInput is an input type that accepts TriggerKafkaArgs, TriggerKafkaPtr and TriggerKafkaPtrOutput values.
// You can construct a concrete instance of `TriggerKafkaPtrInput` via:
//
//	        TriggerKafkaArgs{...}
//
//	or:
//
//	        nil
type TriggerKafkaPtrInput interface {
	pulumi.Input

	ToTriggerKafkaPtrOutput() TriggerKafkaPtrOutput
	ToTriggerKafkaPtrOutputWithContext(context.Context) TriggerKafkaPtrOutput
}

type triggerKafkaPtrType TriggerKafkaArgs

func TriggerKafkaPtr(v *TriggerKafkaArgs) TriggerKafkaPtrInput {
	return (*triggerKafkaPtrType)(v)
}

func (*triggerKafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerKafka)(nil)).Elem()
}

func (i *triggerKafkaPtrType) ToTriggerKafkaPtrOutput() TriggerKafkaPtrOutput {
	return i.ToTriggerKafkaPtrOutputWithContext(context.Background())
}

func (i *triggerKafkaPtrType) ToTriggerKafkaPtrOutputWithContext(ctx context.Context) TriggerKafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerKafkaPtrOutput)
}

type TriggerKafkaOutput struct{ *pulumi.OutputState }

func (TriggerKafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerKafka)(nil)).Elem()
}

func (o TriggerKafkaOutput) ToTriggerKafkaOutput() TriggerKafkaOutput {
	return o
}

func (o TriggerKafkaOutput) ToTriggerKafkaOutputWithContext(ctx context.Context) TriggerKafkaOutput {
	return o
}

func (o TriggerKafkaOutput) ToTriggerKafkaPtrOutput() TriggerKafkaPtrOutput {
	return o.ToTriggerKafkaPtrOutputWithContext(context.Background())
}

func (o TriggerKafkaOutput) ToTriggerKafkaPtrOutputWithContext(ctx context.Context) TriggerKafkaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerKafka) *TriggerKafka {
		return &v
	}).(TriggerKafkaPtrOutput)
}

// Specifies the The number of messages consumed from the topic each time.
// The valid value is range from `1` to `1,000`. Defaults to `100`.
// Changing this will create a new trigger resource.
func (o TriggerKafkaOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TriggerKafka) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// Specifies the ID of the APIG dedicated instance to which the API belongs.
// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
func (o TriggerKafkaOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerKafka) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Specifies the password for logging in to the Kafka Manager.
// Changing this will create a new trigger resource.
func (o TriggerKafkaOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerKafka) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specifies one or more topic IDs of DMS kafka instance.
// Changing this will create a new trigger resource.
func (o TriggerKafkaOutput) TopicIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerKafka) []string { return v.TopicIds }).(pulumi.StringArrayOutput)
}

// Specifies the username for logging in to the Kafka Manager.
// Changing this will create a new trigger resource.
func (o TriggerKafkaOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerKafka) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type TriggerKafkaPtrOutput struct{ *pulumi.OutputState }

func (TriggerKafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerKafka)(nil)).Elem()
}

func (o TriggerKafkaPtrOutput) ToTriggerKafkaPtrOutput() TriggerKafkaPtrOutput {
	return o
}

func (o TriggerKafkaPtrOutput) ToTriggerKafkaPtrOutputWithContext(ctx context.Context) TriggerKafkaPtrOutput {
	return o
}

func (o TriggerKafkaPtrOutput) Elem() TriggerKafkaOutput {
	return o.ApplyT(func(v *TriggerKafka) TriggerKafka {
		if v != nil {
			return *v
		}
		var ret TriggerKafka
		return ret
	}).(TriggerKafkaOutput)
}

// Specifies the The number of messages consumed from the topic each time.
// The valid value is range from `1` to `1,000`. Defaults to `100`.
// Changing this will create a new trigger resource.
func (o TriggerKafkaPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TriggerKafka) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// Specifies the ID of the APIG dedicated instance to which the API belongs.
// Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
func (o TriggerKafkaPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerKafka) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

// Specifies the password for logging in to the Kafka Manager.
// Changing this will create a new trigger resource.
func (o TriggerKafkaPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerKafka) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Specifies one or more topic IDs of DMS kafka instance.
// Changing this will create a new trigger resource.
func (o TriggerKafkaPtrOutput) TopicIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerKafka) []string {
		if v == nil {
			return nil
		}
		return v.TopicIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the username for logging in to the Kafka Manager.
// Changing this will create a new trigger resource.
func (o TriggerKafkaPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerKafka) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type TriggerLts struct {
	// Specifies the log group ID.
	// Changing this will create a new trigger resource.
	LogGroupId string `pulumi:"logGroupId"`
	// Specifies the log stream ID.
	// Changing this will create a new trigger resource.
	LogTopicId string `pulumi:"logTopicId"`
}

// TriggerLtsInput is an input type that accepts TriggerLtsArgs and TriggerLtsOutput values.
// You can construct a concrete instance of `TriggerLtsInput` via:
//
//	TriggerLtsArgs{...}
type TriggerLtsInput interface {
	pulumi.Input

	ToTriggerLtsOutput() TriggerLtsOutput
	ToTriggerLtsOutputWithContext(context.Context) TriggerLtsOutput
}

type TriggerLtsArgs struct {
	// Specifies the log group ID.
	// Changing this will create a new trigger resource.
	LogGroupId pulumi.StringInput `pulumi:"logGroupId"`
	// Specifies the log stream ID.
	// Changing this will create a new trigger resource.
	LogTopicId pulumi.StringInput `pulumi:"logTopicId"`
}

func (TriggerLtsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerLts)(nil)).Elem()
}

func (i TriggerLtsArgs) ToTriggerLtsOutput() TriggerLtsOutput {
	return i.ToTriggerLtsOutputWithContext(context.Background())
}

func (i TriggerLtsArgs) ToTriggerLtsOutputWithContext(ctx context.Context) TriggerLtsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerLtsOutput)
}

func (i TriggerLtsArgs) ToTriggerLtsPtrOutput() TriggerLtsPtrOutput {
	return i.ToTriggerLtsPtrOutputWithContext(context.Background())
}

func (i TriggerLtsArgs) ToTriggerLtsPtrOutputWithContext(ctx context.Context) TriggerLtsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerLtsOutput).ToTriggerLtsPtrOutputWithContext(ctx)
}

// TriggerLtsPtrInput is an input type that accepts TriggerLtsArgs, TriggerLtsPtr and TriggerLtsPtrOutput values.
// You can construct a concrete instance of `TriggerLtsPtrInput` via:
//
//	        TriggerLtsArgs{...}
//
//	or:
//
//	        nil
type TriggerLtsPtrInput interface {
	pulumi.Input

	ToTriggerLtsPtrOutput() TriggerLtsPtrOutput
	ToTriggerLtsPtrOutputWithContext(context.Context) TriggerLtsPtrOutput
}

type triggerLtsPtrType TriggerLtsArgs

func TriggerLtsPtr(v *TriggerLtsArgs) TriggerLtsPtrInput {
	return (*triggerLtsPtrType)(v)
}

func (*triggerLtsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerLts)(nil)).Elem()
}

func (i *triggerLtsPtrType) ToTriggerLtsPtrOutput() TriggerLtsPtrOutput {
	return i.ToTriggerLtsPtrOutputWithContext(context.Background())
}

func (i *triggerLtsPtrType) ToTriggerLtsPtrOutputWithContext(ctx context.Context) TriggerLtsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerLtsPtrOutput)
}

type TriggerLtsOutput struct{ *pulumi.OutputState }

func (TriggerLtsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerLts)(nil)).Elem()
}

func (o TriggerLtsOutput) ToTriggerLtsOutput() TriggerLtsOutput {
	return o
}

func (o TriggerLtsOutput) ToTriggerLtsOutputWithContext(ctx context.Context) TriggerLtsOutput {
	return o
}

func (o TriggerLtsOutput) ToTriggerLtsPtrOutput() TriggerLtsPtrOutput {
	return o.ToTriggerLtsPtrOutputWithContext(context.Background())
}

func (o TriggerLtsOutput) ToTriggerLtsPtrOutputWithContext(ctx context.Context) TriggerLtsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerLts) *TriggerLts {
		return &v
	}).(TriggerLtsPtrOutput)
}

// Specifies the log group ID.
// Changing this will create a new trigger resource.
func (o TriggerLtsOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerLts) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// Specifies the log stream ID.
// Changing this will create a new trigger resource.
func (o TriggerLtsOutput) LogTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerLts) string { return v.LogTopicId }).(pulumi.StringOutput)
}

type TriggerLtsPtrOutput struct{ *pulumi.OutputState }

func (TriggerLtsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerLts)(nil)).Elem()
}

func (o TriggerLtsPtrOutput) ToTriggerLtsPtrOutput() TriggerLtsPtrOutput {
	return o
}

func (o TriggerLtsPtrOutput) ToTriggerLtsPtrOutputWithContext(ctx context.Context) TriggerLtsPtrOutput {
	return o
}

func (o TriggerLtsPtrOutput) Elem() TriggerLtsOutput {
	return o.ApplyT(func(v *TriggerLts) TriggerLts {
		if v != nil {
			return *v
		}
		var ret TriggerLts
		return ret
	}).(TriggerLtsOutput)
}

// Specifies the log group ID.
// Changing this will create a new trigger resource.
func (o TriggerLtsPtrOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerLts) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroupId
	}).(pulumi.StringPtrOutput)
}

// Specifies the log stream ID.
// Changing this will create a new trigger resource.
func (o TriggerLtsPtrOutput) LogTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerLts) *string {
		if v == nil {
			return nil
		}
		return &v.LogTopicId
	}).(pulumi.StringPtrOutput)
}

type TriggerObs struct {
	// Specifies the OBS bucket name.
	// Changing this will create a new trigger resource.
	BucketName string `pulumi:"bucketName"`
	// Specifies the event notification name.
	// Changing this will create a new trigger resource.
	EventNotificationName string `pulumi:"eventNotificationName"`
	// Specifies the events that can trigger functions.
	// Changing this will create a new trigger resource.
	// The valid values are as follows:
	// + **ObjectCreated**, **Put**, **Post**, **Copy** and **CompleteMultipartUpload**.
	// + **ObjectRemoved**, **Delete** and **DeleteMarkerCreated**.
	Events []string `pulumi:"events"`
	// Specifies the prefix to limit notifications to objects beginning with this keyword.
	// Changing this will create a new trigger resource.
	Prefix *string `pulumi:"prefix"`
	// Specifies the suffix to limit notifications to objects ending with this keyword.
	// Changing this will create a new trigger resource.
	Suffix *string `pulumi:"suffix"`
}

// TriggerObsInput is an input type that accepts TriggerObsArgs and TriggerObsOutput values.
// You can construct a concrete instance of `TriggerObsInput` via:
//
//	TriggerObsArgs{...}
type TriggerObsInput interface {
	pulumi.Input

	ToTriggerObsOutput() TriggerObsOutput
	ToTriggerObsOutputWithContext(context.Context) TriggerObsOutput
}

type TriggerObsArgs struct {
	// Specifies the OBS bucket name.
	// Changing this will create a new trigger resource.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Specifies the event notification name.
	// Changing this will create a new trigger resource.
	EventNotificationName pulumi.StringInput `pulumi:"eventNotificationName"`
	// Specifies the events that can trigger functions.
	// Changing this will create a new trigger resource.
	// The valid values are as follows:
	// + **ObjectCreated**, **Put**, **Post**, **Copy** and **CompleteMultipartUpload**.
	// + **ObjectRemoved**, **Delete** and **DeleteMarkerCreated**.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// Specifies the prefix to limit notifications to objects beginning with this keyword.
	// Changing this will create a new trigger resource.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies the suffix to limit notifications to objects ending with this keyword.
	// Changing this will create a new trigger resource.
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
}

func (TriggerObsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerObs)(nil)).Elem()
}

func (i TriggerObsArgs) ToTriggerObsOutput() TriggerObsOutput {
	return i.ToTriggerObsOutputWithContext(context.Background())
}

func (i TriggerObsArgs) ToTriggerObsOutputWithContext(ctx context.Context) TriggerObsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerObsOutput)
}

func (i TriggerObsArgs) ToTriggerObsPtrOutput() TriggerObsPtrOutput {
	return i.ToTriggerObsPtrOutputWithContext(context.Background())
}

func (i TriggerObsArgs) ToTriggerObsPtrOutputWithContext(ctx context.Context) TriggerObsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerObsOutput).ToTriggerObsPtrOutputWithContext(ctx)
}

// TriggerObsPtrInput is an input type that accepts TriggerObsArgs, TriggerObsPtr and TriggerObsPtrOutput values.
// You can construct a concrete instance of `TriggerObsPtrInput` via:
//
//	        TriggerObsArgs{...}
//
//	or:
//
//	        nil
type TriggerObsPtrInput interface {
	pulumi.Input

	ToTriggerObsPtrOutput() TriggerObsPtrOutput
	ToTriggerObsPtrOutputWithContext(context.Context) TriggerObsPtrOutput
}

type triggerObsPtrType TriggerObsArgs

func TriggerObsPtr(v *TriggerObsArgs) TriggerObsPtrInput {
	return (*triggerObsPtrType)(v)
}

func (*triggerObsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerObs)(nil)).Elem()
}

func (i *triggerObsPtrType) ToTriggerObsPtrOutput() TriggerObsPtrOutput {
	return i.ToTriggerObsPtrOutputWithContext(context.Background())
}

func (i *triggerObsPtrType) ToTriggerObsPtrOutputWithContext(ctx context.Context) TriggerObsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerObsPtrOutput)
}

type TriggerObsOutput struct{ *pulumi.OutputState }

func (TriggerObsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerObs)(nil)).Elem()
}

func (o TriggerObsOutput) ToTriggerObsOutput() TriggerObsOutput {
	return o
}

func (o TriggerObsOutput) ToTriggerObsOutputWithContext(ctx context.Context) TriggerObsOutput {
	return o
}

func (o TriggerObsOutput) ToTriggerObsPtrOutput() TriggerObsPtrOutput {
	return o.ToTriggerObsPtrOutputWithContext(context.Background())
}

func (o TriggerObsOutput) ToTriggerObsPtrOutputWithContext(ctx context.Context) TriggerObsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerObs) *TriggerObs {
		return &v
	}).(TriggerObsPtrOutput)
}

// Specifies the OBS bucket name.
// Changing this will create a new trigger resource.
func (o TriggerObsOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerObs) string { return v.BucketName }).(pulumi.StringOutput)
}

// Specifies the event notification name.
// Changing this will create a new trigger resource.
func (o TriggerObsOutput) EventNotificationName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerObs) string { return v.EventNotificationName }).(pulumi.StringOutput)
}

// Specifies the events that can trigger functions.
// Changing this will create a new trigger resource.
// The valid values are as follows:
// + **ObjectCreated**, **Put**, **Post**, **Copy** and **CompleteMultipartUpload**.
// + **ObjectRemoved**, **Delete** and **DeleteMarkerCreated**.
func (o TriggerObsOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerObs) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// Specifies the prefix to limit notifications to objects beginning with this keyword.
// Changing this will create a new trigger resource.
func (o TriggerObsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerObs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies the suffix to limit notifications to objects ending with this keyword.
// Changing this will create a new trigger resource.
func (o TriggerObsOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerObs) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

type TriggerObsPtrOutput struct{ *pulumi.OutputState }

func (TriggerObsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerObs)(nil)).Elem()
}

func (o TriggerObsPtrOutput) ToTriggerObsPtrOutput() TriggerObsPtrOutput {
	return o
}

func (o TriggerObsPtrOutput) ToTriggerObsPtrOutputWithContext(ctx context.Context) TriggerObsPtrOutput {
	return o
}

func (o TriggerObsPtrOutput) Elem() TriggerObsOutput {
	return o.ApplyT(func(v *TriggerObs) TriggerObs {
		if v != nil {
			return *v
		}
		var ret TriggerObs
		return ret
	}).(TriggerObsOutput)
}

// Specifies the OBS bucket name.
// Changing this will create a new trigger resource.
func (o TriggerObsPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerObs) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Specifies the event notification name.
// Changing this will create a new trigger resource.
func (o TriggerObsPtrOutput) EventNotificationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerObs) *string {
		if v == nil {
			return nil
		}
		return &v.EventNotificationName
	}).(pulumi.StringPtrOutput)
}

// Specifies the events that can trigger functions.
// Changing this will create a new trigger resource.
// The valid values are as follows:
// + **ObjectCreated**, **Put**, **Post**, **Copy** and **CompleteMultipartUpload**.
// + **ObjectRemoved**, **Delete** and **DeleteMarkerCreated**.
func (o TriggerObsPtrOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerObs) []string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringArrayOutput)
}

// Specifies the prefix to limit notifications to objects beginning with this keyword.
// Changing this will create a new trigger resource.
func (o TriggerObsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerObs) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the suffix to limit notifications to objects ending with this keyword.
// Changing this will create a new trigger resource.
func (o TriggerObsPtrOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerObs) *string {
		if v == nil {
			return nil
		}
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

type TriggerSmn struct {
	// Specifies the Uniform Resource Name (URN) for SMN topic.
	// Changing this will create a new trigger resource.
	TopicUrn string `pulumi:"topicUrn"`
}

// TriggerSmnInput is an input type that accepts TriggerSmnArgs and TriggerSmnOutput values.
// You can construct a concrete instance of `TriggerSmnInput` via:
//
//	TriggerSmnArgs{...}
type TriggerSmnInput interface {
	pulumi.Input

	ToTriggerSmnOutput() TriggerSmnOutput
	ToTriggerSmnOutputWithContext(context.Context) TriggerSmnOutput
}

type TriggerSmnArgs struct {
	// Specifies the Uniform Resource Name (URN) for SMN topic.
	// Changing this will create a new trigger resource.
	TopicUrn pulumi.StringInput `pulumi:"topicUrn"`
}

func (TriggerSmnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerSmn)(nil)).Elem()
}

func (i TriggerSmnArgs) ToTriggerSmnOutput() TriggerSmnOutput {
	return i.ToTriggerSmnOutputWithContext(context.Background())
}

func (i TriggerSmnArgs) ToTriggerSmnOutputWithContext(ctx context.Context) TriggerSmnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSmnOutput)
}

func (i TriggerSmnArgs) ToTriggerSmnPtrOutput() TriggerSmnPtrOutput {
	return i.ToTriggerSmnPtrOutputWithContext(context.Background())
}

func (i TriggerSmnArgs) ToTriggerSmnPtrOutputWithContext(ctx context.Context) TriggerSmnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSmnOutput).ToTriggerSmnPtrOutputWithContext(ctx)
}

// TriggerSmnPtrInput is an input type that accepts TriggerSmnArgs, TriggerSmnPtr and TriggerSmnPtrOutput values.
// You can construct a concrete instance of `TriggerSmnPtrInput` via:
//
//	        TriggerSmnArgs{...}
//
//	or:
//
//	        nil
type TriggerSmnPtrInput interface {
	pulumi.Input

	ToTriggerSmnPtrOutput() TriggerSmnPtrOutput
	ToTriggerSmnPtrOutputWithContext(context.Context) TriggerSmnPtrOutput
}

type triggerSmnPtrType TriggerSmnArgs

func TriggerSmnPtr(v *TriggerSmnArgs) TriggerSmnPtrInput {
	return (*triggerSmnPtrType)(v)
}

func (*triggerSmnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerSmn)(nil)).Elem()
}

func (i *triggerSmnPtrType) ToTriggerSmnPtrOutput() TriggerSmnPtrOutput {
	return i.ToTriggerSmnPtrOutputWithContext(context.Background())
}

func (i *triggerSmnPtrType) ToTriggerSmnPtrOutputWithContext(ctx context.Context) TriggerSmnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerSmnPtrOutput)
}

type TriggerSmnOutput struct{ *pulumi.OutputState }

func (TriggerSmnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerSmn)(nil)).Elem()
}

func (o TriggerSmnOutput) ToTriggerSmnOutput() TriggerSmnOutput {
	return o
}

func (o TriggerSmnOutput) ToTriggerSmnOutputWithContext(ctx context.Context) TriggerSmnOutput {
	return o
}

func (o TriggerSmnOutput) ToTriggerSmnPtrOutput() TriggerSmnPtrOutput {
	return o.ToTriggerSmnPtrOutputWithContext(context.Background())
}

func (o TriggerSmnOutput) ToTriggerSmnPtrOutputWithContext(ctx context.Context) TriggerSmnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerSmn) *TriggerSmn {
		return &v
	}).(TriggerSmnPtrOutput)
}

// Specifies the Uniform Resource Name (URN) for SMN topic.
// Changing this will create a new trigger resource.
func (o TriggerSmnOutput) TopicUrn() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerSmn) string { return v.TopicUrn }).(pulumi.StringOutput)
}

type TriggerSmnPtrOutput struct{ *pulumi.OutputState }

func (TriggerSmnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerSmn)(nil)).Elem()
}

func (o TriggerSmnPtrOutput) ToTriggerSmnPtrOutput() TriggerSmnPtrOutput {
	return o
}

func (o TriggerSmnPtrOutput) ToTriggerSmnPtrOutputWithContext(ctx context.Context) TriggerSmnPtrOutput {
	return o
}

func (o TriggerSmnPtrOutput) Elem() TriggerSmnOutput {
	return o.ApplyT(func(v *TriggerSmn) TriggerSmn {
		if v != nil {
			return *v
		}
		var ret TriggerSmn
		return ret
	}).(TriggerSmnOutput)
}

// Specifies the Uniform Resource Name (URN) for SMN topic.
// Changing this will create a new trigger resource.
func (o TriggerSmnPtrOutput) TopicUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerSmn) *string {
		if v == nil {
			return nil
		}
		return &v.TopicUrn
	}).(pulumi.StringPtrOutput)
}

type TriggerTimer struct {
	// Specifies the event used by the timer to trigger the function.
	// Changing this will create a new trigger resource.
	AdditionalInformation *string `pulumi:"additionalInformation"`
	// Specifies the trigger name, which can contains of `1` to `64` characters.
	// The name must start with a letter, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this will create a new trigger resource.
	Name string `pulumi:"name"`
	// Specifies the time schedule.
	// For the rate type, schedule is composed of time and time unit.
	// The time unit supports minutes (m), hours (h) and days (d).
	// For the corn expression, please refer to the HuaweiCloud
	// [document](https://support.huaweicloud.com/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
	// Changing this will create a new trigger resource.
	Schedule string `pulumi:"schedule"`
	// Specifies the type of the time schedule.
	// The valid values are **Rate** and **Cron**.
	// Changing this will create a new trigger resource.
	ScheduleType string `pulumi:"scheduleType"`
}

// TriggerTimerInput is an input type that accepts TriggerTimerArgs and TriggerTimerOutput values.
// You can construct a concrete instance of `TriggerTimerInput` via:
//
//	TriggerTimerArgs{...}
type TriggerTimerInput interface {
	pulumi.Input

	ToTriggerTimerOutput() TriggerTimerOutput
	ToTriggerTimerOutputWithContext(context.Context) TriggerTimerOutput
}

type TriggerTimerArgs struct {
	// Specifies the event used by the timer to trigger the function.
	// Changing this will create a new trigger resource.
	AdditionalInformation pulumi.StringPtrInput `pulumi:"additionalInformation"`
	// Specifies the trigger name, which can contains of `1` to `64` characters.
	// The name must start with a letter, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// Changing this will create a new trigger resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the time schedule.
	// For the rate type, schedule is composed of time and time unit.
	// The time unit supports minutes (m), hours (h) and days (d).
	// For the corn expression, please refer to the HuaweiCloud
	// [document](https://support.huaweicloud.com/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
	// Changing this will create a new trigger resource.
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// Specifies the type of the time schedule.
	// The valid values are **Rate** and **Cron**.
	// Changing this will create a new trigger resource.
	ScheduleType pulumi.StringInput `pulumi:"scheduleType"`
}

func (TriggerTimerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTimer)(nil)).Elem()
}

func (i TriggerTimerArgs) ToTriggerTimerOutput() TriggerTimerOutput {
	return i.ToTriggerTimerOutputWithContext(context.Background())
}

func (i TriggerTimerArgs) ToTriggerTimerOutputWithContext(ctx context.Context) TriggerTimerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTimerOutput)
}

func (i TriggerTimerArgs) ToTriggerTimerPtrOutput() TriggerTimerPtrOutput {
	return i.ToTriggerTimerPtrOutputWithContext(context.Background())
}

func (i TriggerTimerArgs) ToTriggerTimerPtrOutputWithContext(ctx context.Context) TriggerTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTimerOutput).ToTriggerTimerPtrOutputWithContext(ctx)
}

// TriggerTimerPtrInput is an input type that accepts TriggerTimerArgs, TriggerTimerPtr and TriggerTimerPtrOutput values.
// You can construct a concrete instance of `TriggerTimerPtrInput` via:
//
//	        TriggerTimerArgs{...}
//
//	or:
//
//	        nil
type TriggerTimerPtrInput interface {
	pulumi.Input

	ToTriggerTimerPtrOutput() TriggerTimerPtrOutput
	ToTriggerTimerPtrOutputWithContext(context.Context) TriggerTimerPtrOutput
}

type triggerTimerPtrType TriggerTimerArgs

func TriggerTimerPtr(v *TriggerTimerArgs) TriggerTimerPtrInput {
	return (*triggerTimerPtrType)(v)
}

func (*triggerTimerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTimer)(nil)).Elem()
}

func (i *triggerTimerPtrType) ToTriggerTimerPtrOutput() TriggerTimerPtrOutput {
	return i.ToTriggerTimerPtrOutputWithContext(context.Background())
}

func (i *triggerTimerPtrType) ToTriggerTimerPtrOutputWithContext(ctx context.Context) TriggerTimerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerTimerPtrOutput)
}

type TriggerTimerOutput struct{ *pulumi.OutputState }

func (TriggerTimerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerTimer)(nil)).Elem()
}

func (o TriggerTimerOutput) ToTriggerTimerOutput() TriggerTimerOutput {
	return o
}

func (o TriggerTimerOutput) ToTriggerTimerOutputWithContext(ctx context.Context) TriggerTimerOutput {
	return o
}

func (o TriggerTimerOutput) ToTriggerTimerPtrOutput() TriggerTimerPtrOutput {
	return o.ToTriggerTimerPtrOutputWithContext(context.Background())
}

func (o TriggerTimerOutput) ToTriggerTimerPtrOutputWithContext(ctx context.Context) TriggerTimerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerTimer) *TriggerTimer {
		return &v
	}).(TriggerTimerPtrOutput)
}

// Specifies the event used by the timer to trigger the function.
// Changing this will create a new trigger resource.
func (o TriggerTimerOutput) AdditionalInformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerTimer) *string { return v.AdditionalInformation }).(pulumi.StringPtrOutput)
}

// Specifies the trigger name, which can contains of `1` to `64` characters.
// The name must start with a letter, only letters, digits, hyphens (-) and underscores (_) are allowed.
// Changing this will create a new trigger resource.
func (o TriggerTimerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerTimer) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the time schedule.
// For the rate type, schedule is composed of time and time unit.
// The time unit supports minutes (m), hours (h) and days (d).
// For the corn expression, please refer to the HuaweiCloud
// [document](https://support.huaweicloud.com/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
// Changing this will create a new trigger resource.
func (o TriggerTimerOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerTimer) string { return v.Schedule }).(pulumi.StringOutput)
}

// Specifies the type of the time schedule.
// The valid values are **Rate** and **Cron**.
// Changing this will create a new trigger resource.
func (o TriggerTimerOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerTimer) string { return v.ScheduleType }).(pulumi.StringOutput)
}

type TriggerTimerPtrOutput struct{ *pulumi.OutputState }

func (TriggerTimerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerTimer)(nil)).Elem()
}

func (o TriggerTimerPtrOutput) ToTriggerTimerPtrOutput() TriggerTimerPtrOutput {
	return o
}

func (o TriggerTimerPtrOutput) ToTriggerTimerPtrOutputWithContext(ctx context.Context) TriggerTimerPtrOutput {
	return o
}

func (o TriggerTimerPtrOutput) Elem() TriggerTimerOutput {
	return o.ApplyT(func(v *TriggerTimer) TriggerTimer {
		if v != nil {
			return *v
		}
		var ret TriggerTimer
		return ret
	}).(TriggerTimerOutput)
}

// Specifies the event used by the timer to trigger the function.
// Changing this will create a new trigger resource.
func (o TriggerTimerPtrOutput) AdditionalInformation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTimer) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalInformation
	}).(pulumi.StringPtrOutput)
}

// Specifies the trigger name, which can contains of `1` to `64` characters.
// The name must start with a letter, only letters, digits, hyphens (-) and underscores (_) are allowed.
// Changing this will create a new trigger resource.
func (o TriggerTimerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTimer) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the time schedule.
// For the rate type, schedule is composed of time and time unit.
// The time unit supports minutes (m), hours (h) and days (d).
// For the corn expression, please refer to the HuaweiCloud
// [document](https://support.huaweicloud.com/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
// Changing this will create a new trigger resource.
func (o TriggerTimerPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTimer) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of the time schedule.
// The valid values are **Rate** and **Cron**.
// Changing this will create a new trigger resource.
func (o TriggerTimerPtrOutput) ScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerTimer) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleType
	}).(pulumi.StringPtrOutput)
}

type GetDependenciesPackage struct {
	// The unique ID of the dependency package.
	Etag string `pulumi:"etag"`
	// The file name of the stored dependency package.
	FileName string `pulumi:"fileName"`
	// The ID of the dependency package version.
	Id string `pulumi:"id"`
	// The OBS bucket path where the dependency package is located (FunctionGraph serivce side).
	Link string `pulumi:"link"`
	// Specifies the name of the dependency package.
	Name string `pulumi:"name"`
	// The owner of the dependency package.
	Owner string `pulumi:"owner"`
	// Specifies the runtime of the dependency package.\
	// The valid values are as follows:
	// + **Java8**
	// + **Java11**
	// + **Node.js6.10**
	// + **Node.js8.10**
	// + **Node.js10.16**
	// + **Node.js12.13**
	// + **Node.js14.18**
	// + **Node.js16.17**
	// + **Node.js18.15**
	// + **Python2.7**
	// + **Python3.6**
	// + **Python3.9**
	// + **Python3.10**
	// + **Go1.x**
	// + **C#(.NET Core 2.0)**
	// + **C#(.NET Core 2.1)**
	// + **C#(.NET Core 3.1)**
	// + **Custom**
	// + **PHP7.3**
	// + **Cangjie1.0**
	// + **http**
	// + **Custom Image**
	Runtime string `pulumi:"runtime"`
	// The size of the dependency package.
	Size int `pulumi:"size"`
	// The list of the versions for the dependency package.
	// The versions structure is documented below.
	Versions []GetDependenciesPackageVersion `pulumi:"versions"`
}

// GetDependenciesPackageInput is an input type that accepts GetDependenciesPackageArgs and GetDependenciesPackageOutput values.
// You can construct a concrete instance of `GetDependenciesPackageInput` via:
//
//	GetDependenciesPackageArgs{...}
type GetDependenciesPackageInput interface {
	pulumi.Input

	ToGetDependenciesPackageOutput() GetDependenciesPackageOutput
	ToGetDependenciesPackageOutputWithContext(context.Context) GetDependenciesPackageOutput
}

type GetDependenciesPackageArgs struct {
	// The unique ID of the dependency package.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The file name of the stored dependency package.
	FileName pulumi.StringInput `pulumi:"fileName"`
	// The ID of the dependency package version.
	Id pulumi.StringInput `pulumi:"id"`
	// The OBS bucket path where the dependency package is located (FunctionGraph serivce side).
	Link pulumi.StringInput `pulumi:"link"`
	// Specifies the name of the dependency package.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the dependency package.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Specifies the runtime of the dependency package.\
	// The valid values are as follows:
	// + **Java8**
	// + **Java11**
	// + **Node.js6.10**
	// + **Node.js8.10**
	// + **Node.js10.16**
	// + **Node.js12.13**
	// + **Node.js14.18**
	// + **Node.js16.17**
	// + **Node.js18.15**
	// + **Python2.7**
	// + **Python3.6**
	// + **Python3.9**
	// + **Python3.10**
	// + **Go1.x**
	// + **C#(.NET Core 2.0)**
	// + **C#(.NET Core 2.1)**
	// + **C#(.NET Core 3.1)**
	// + **Custom**
	// + **PHP7.3**
	// + **Cangjie1.0**
	// + **http**
	// + **Custom Image**
	Runtime pulumi.StringInput `pulumi:"runtime"`
	// The size of the dependency package.
	Size pulumi.IntInput `pulumi:"size"`
	// The list of the versions for the dependency package.
	// The versions structure is documented below.
	Versions GetDependenciesPackageVersionArrayInput `pulumi:"versions"`
}

func (GetDependenciesPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackage)(nil)).Elem()
}

func (i GetDependenciesPackageArgs) ToGetDependenciesPackageOutput() GetDependenciesPackageOutput {
	return i.ToGetDependenciesPackageOutputWithContext(context.Background())
}

func (i GetDependenciesPackageArgs) ToGetDependenciesPackageOutputWithContext(ctx context.Context) GetDependenciesPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageOutput)
}

// GetDependenciesPackageArrayInput is an input type that accepts GetDependenciesPackageArray and GetDependenciesPackageArrayOutput values.
// You can construct a concrete instance of `GetDependenciesPackageArrayInput` via:
//
//	GetDependenciesPackageArray{ GetDependenciesPackageArgs{...} }
type GetDependenciesPackageArrayInput interface {
	pulumi.Input

	ToGetDependenciesPackageArrayOutput() GetDependenciesPackageArrayOutput
	ToGetDependenciesPackageArrayOutputWithContext(context.Context) GetDependenciesPackageArrayOutput
}

type GetDependenciesPackageArray []GetDependenciesPackageInput

func (GetDependenciesPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackage)(nil)).Elem()
}

func (i GetDependenciesPackageArray) ToGetDependenciesPackageArrayOutput() GetDependenciesPackageArrayOutput {
	return i.ToGetDependenciesPackageArrayOutputWithContext(context.Background())
}

func (i GetDependenciesPackageArray) ToGetDependenciesPackageArrayOutputWithContext(ctx context.Context) GetDependenciesPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageArrayOutput)
}

type GetDependenciesPackageOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackage)(nil)).Elem()
}

func (o GetDependenciesPackageOutput) ToGetDependenciesPackageOutput() GetDependenciesPackageOutput {
	return o
}

func (o GetDependenciesPackageOutput) ToGetDependenciesPackageOutputWithContext(ctx context.Context) GetDependenciesPackageOutput {
	return o
}

// The unique ID of the dependency package.
func (o GetDependenciesPackageOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Etag }).(pulumi.StringOutput)
}

// The file name of the stored dependency package.
func (o GetDependenciesPackageOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.FileName }).(pulumi.StringOutput)
}

// The ID of the dependency package version.
func (o GetDependenciesPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The OBS bucket path where the dependency package is located (FunctionGraph serivce side).
func (o GetDependenciesPackageOutput) Link() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Link }).(pulumi.StringOutput)
}

// Specifies the name of the dependency package.
func (o GetDependenciesPackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the dependency package.
func (o GetDependenciesPackageOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Owner }).(pulumi.StringOutput)
}

// Specifies the runtime of the dependency package.\
// The valid values are as follows:
// + **Java8**
// + **Java11**
// + **Node.js6.10**
// + **Node.js8.10**
// + **Node.js10.16**
// + **Node.js12.13**
// + **Node.js14.18**
// + **Node.js16.17**
// + **Node.js18.15**
// + **Python2.7**
// + **Python3.6**
// + **Python3.9**
// + **Python3.10**
// + **Go1.x**
// + **C#(.NET Core 2.0)**
// + **C#(.NET Core 2.1)**
// + **C#(.NET Core 3.1)**
// + **Custom**
// + **PHP7.3**
// + **Cangjie1.0**
// + **http**
// + **Custom Image**
func (o GetDependenciesPackageOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackage) string { return v.Runtime }).(pulumi.StringOutput)
}

// The size of the dependency package.
func (o GetDependenciesPackageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDependenciesPackage) int { return v.Size }).(pulumi.IntOutput)
}

// The list of the versions for the dependency package.
// The versions structure is documented below.
func (o GetDependenciesPackageOutput) Versions() GetDependenciesPackageVersionArrayOutput {
	return o.ApplyT(func(v GetDependenciesPackage) []GetDependenciesPackageVersion { return v.Versions }).(GetDependenciesPackageVersionArrayOutput)
}

type GetDependenciesPackageArrayOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackage)(nil)).Elem()
}

func (o GetDependenciesPackageArrayOutput) ToGetDependenciesPackageArrayOutput() GetDependenciesPackageArrayOutput {
	return o
}

func (o GetDependenciesPackageArrayOutput) ToGetDependenciesPackageArrayOutputWithContext(ctx context.Context) GetDependenciesPackageArrayOutput {
	return o
}

func (o GetDependenciesPackageArrayOutput) Index(i pulumi.IntInput) GetDependenciesPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDependenciesPackage {
		return vs[0].([]GetDependenciesPackage)[vs[1].(int)]
	}).(GetDependenciesPackageOutput)
}

type GetDependenciesPackageVersion struct {
	// The ID of the dependency package version.
	Id string `pulumi:"id"`
	// The dependency package version.
	Version int `pulumi:"version"`
}

// GetDependenciesPackageVersionInput is an input type that accepts GetDependenciesPackageVersionArgs and GetDependenciesPackageVersionOutput values.
// You can construct a concrete instance of `GetDependenciesPackageVersionInput` via:
//
//	GetDependenciesPackageVersionArgs{...}
type GetDependenciesPackageVersionInput interface {
	pulumi.Input

	ToGetDependenciesPackageVersionOutput() GetDependenciesPackageVersionOutput
	ToGetDependenciesPackageVersionOutputWithContext(context.Context) GetDependenciesPackageVersionOutput
}

type GetDependenciesPackageVersionArgs struct {
	// The ID of the dependency package version.
	Id pulumi.StringInput `pulumi:"id"`
	// The dependency package version.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetDependenciesPackageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackageVersion)(nil)).Elem()
}

func (i GetDependenciesPackageVersionArgs) ToGetDependenciesPackageVersionOutput() GetDependenciesPackageVersionOutput {
	return i.ToGetDependenciesPackageVersionOutputWithContext(context.Background())
}

func (i GetDependenciesPackageVersionArgs) ToGetDependenciesPackageVersionOutputWithContext(ctx context.Context) GetDependenciesPackageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageVersionOutput)
}

// GetDependenciesPackageVersionArrayInput is an input type that accepts GetDependenciesPackageVersionArray and GetDependenciesPackageVersionArrayOutput values.
// You can construct a concrete instance of `GetDependenciesPackageVersionArrayInput` via:
//
//	GetDependenciesPackageVersionArray{ GetDependenciesPackageVersionArgs{...} }
type GetDependenciesPackageVersionArrayInput interface {
	pulumi.Input

	ToGetDependenciesPackageVersionArrayOutput() GetDependenciesPackageVersionArrayOutput
	ToGetDependenciesPackageVersionArrayOutputWithContext(context.Context) GetDependenciesPackageVersionArrayOutput
}

type GetDependenciesPackageVersionArray []GetDependenciesPackageVersionInput

func (GetDependenciesPackageVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackageVersion)(nil)).Elem()
}

func (i GetDependenciesPackageVersionArray) ToGetDependenciesPackageVersionArrayOutput() GetDependenciesPackageVersionArrayOutput {
	return i.ToGetDependenciesPackageVersionArrayOutputWithContext(context.Background())
}

func (i GetDependenciesPackageVersionArray) ToGetDependenciesPackageVersionArrayOutputWithContext(ctx context.Context) GetDependenciesPackageVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDependenciesPackageVersionArrayOutput)
}

type GetDependenciesPackageVersionOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDependenciesPackageVersion)(nil)).Elem()
}

func (o GetDependenciesPackageVersionOutput) ToGetDependenciesPackageVersionOutput() GetDependenciesPackageVersionOutput {
	return o
}

func (o GetDependenciesPackageVersionOutput) ToGetDependenciesPackageVersionOutputWithContext(ctx context.Context) GetDependenciesPackageVersionOutput {
	return o
}

// The ID of the dependency package version.
func (o GetDependenciesPackageVersionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDependenciesPackageVersion) string { return v.Id }).(pulumi.StringOutput)
}

// The dependency package version.
func (o GetDependenciesPackageVersionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetDependenciesPackageVersion) int { return v.Version }).(pulumi.IntOutput)
}

type GetDependenciesPackageVersionArrayOutput struct{ *pulumi.OutputState }

func (GetDependenciesPackageVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDependenciesPackageVersion)(nil)).Elem()
}

func (o GetDependenciesPackageVersionArrayOutput) ToGetDependenciesPackageVersionArrayOutput() GetDependenciesPackageVersionArrayOutput {
	return o
}

func (o GetDependenciesPackageVersionArrayOutput) ToGetDependenciesPackageVersionArrayOutputWithContext(ctx context.Context) GetDependenciesPackageVersionArrayOutput {
	return o
}

func (o GetDependenciesPackageVersionArrayOutput) Index(i pulumi.IntInput) GetDependenciesPackageVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDependenciesPackageVersion {
		return vs[0].([]GetDependenciesPackageVersion)[vs[1].(int)]
	}).(GetDependenciesPackageVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionCustomImageInput)(nil)).Elem(), FunctionCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionCustomImagePtrInput)(nil)).Elem(), FunctionCustomImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFuncMountInput)(nil)).Elem(), FunctionFuncMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionFuncMountArrayInput)(nil)).Elem(), FunctionFuncMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerInput)(nil)).Elem(), FunctionNetworkControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerPtrInput)(nil)).Elem(), FunctionNetworkControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpcInput)(nil)).Elem(), FunctionNetworkControllerTriggerAccessVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNetworkControllerTriggerAccessVpcArrayInput)(nil)).Elem(), FunctionNetworkControllerTriggerAccessVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceInput)(nil)).Elem(), FunctionReservedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceArrayInput)(nil)).Elem(), FunctionReservedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigPtrInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfigInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigCronConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigCronConfigArrayInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigCronConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfigInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigMetricConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionReservedInstanceTacticsConfigMetricConfigArrayInput)(nil)).Elem(), FunctionReservedInstanceTacticsConfigMetricConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionInput)(nil)).Elem(), FunctionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionArrayInput)(nil)).Elem(), FunctionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionAliasesInput)(nil)).Elem(), FunctionVersionAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVersionAliasesPtrInput)(nil)).Elem(), FunctionVersionAliasesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerApigInput)(nil)).Elem(), TriggerApigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerApigPtrInput)(nil)).Elem(), TriggerApigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerDisInput)(nil)).Elem(), TriggerDisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerDisPtrInput)(nil)).Elem(), TriggerDisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerKafkaInput)(nil)).Elem(), TriggerKafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerKafkaPtrInput)(nil)).Elem(), TriggerKafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerLtsInput)(nil)).Elem(), TriggerLtsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerLtsPtrInput)(nil)).Elem(), TriggerLtsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerObsInput)(nil)).Elem(), TriggerObsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerObsPtrInput)(nil)).Elem(), TriggerObsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerSmnInput)(nil)).Elem(), TriggerSmnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerSmnPtrInput)(nil)).Elem(), TriggerSmnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTimerInput)(nil)).Elem(), TriggerTimerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerTimerPtrInput)(nil)).Elem(), TriggerTimerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageInput)(nil)).Elem(), GetDependenciesPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageArrayInput)(nil)).Elem(), GetDependenciesPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageVersionInput)(nil)).Elem(), GetDependenciesPackageVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDependenciesPackageVersionArrayInput)(nil)).Elem(), GetDependenciesPackageVersionArray{})
	pulumi.RegisterOutputType(FunctionCustomImageOutput{})
	pulumi.RegisterOutputType(FunctionCustomImagePtrOutput{})
	pulumi.RegisterOutputType(FunctionFuncMountOutput{})
	pulumi.RegisterOutputType(FunctionFuncMountArrayOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerPtrOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerTriggerAccessVpcOutput{})
	pulumi.RegisterOutputType(FunctionNetworkControllerTriggerAccessVpcArrayOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceArrayOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigCronConfigOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigCronConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigMetricConfigOutput{})
	pulumi.RegisterOutputType(FunctionReservedInstanceTacticsConfigMetricConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionVersionOutput{})
	pulumi.RegisterOutputType(FunctionVersionArrayOutput{})
	pulumi.RegisterOutputType(FunctionVersionAliasesOutput{})
	pulumi.RegisterOutputType(FunctionVersionAliasesPtrOutput{})
	pulumi.RegisterOutputType(TriggerApigOutput{})
	pulumi.RegisterOutputType(TriggerApigPtrOutput{})
	pulumi.RegisterOutputType(TriggerDisOutput{})
	pulumi.RegisterOutputType(TriggerDisPtrOutput{})
	pulumi.RegisterOutputType(TriggerKafkaOutput{})
	pulumi.RegisterOutputType(TriggerKafkaPtrOutput{})
	pulumi.RegisterOutputType(TriggerLtsOutput{})
	pulumi.RegisterOutputType(TriggerLtsPtrOutput{})
	pulumi.RegisterOutputType(TriggerObsOutput{})
	pulumi.RegisterOutputType(TriggerObsPtrOutput{})
	pulumi.RegisterOutputType(TriggerSmnOutput{})
	pulumi.RegisterOutputType(TriggerSmnPtrOutput{})
	pulumi.RegisterOutputType(TriggerTimerOutput{})
	pulumi.RegisterOutputType(TriggerTimerPtrOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageArrayOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageVersionOutput{})
	pulumi.RegisterOutputType(GetDependenciesPackageVersionArrayOutput{})
}
