// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package functiongraph

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a trigger resource within HuaweiCloud FunctionGraph.
//
// ## Example Usage
// ### Create a Timing Trigger with rate schedule type
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			triggerName := cfg.RequireObject("triggerName")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("TIMER"),
//				Timer: &functiongraph.TriggerTimerArgs{
//					Name:         pulumi.Any(triggerName),
//					ScheduleType: pulumi.String("Rate"),
//					Schedule:     pulumi.String("1d"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Timing Trigger with cron schedule type
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			triggerName := cfg.RequireObject("triggerName")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("TIMER"),
//				Timer: &functiongraph.TriggerTimerArgs{
//					Name:         pulumi.Any(triggerName),
//					ScheduleType: pulumi.String("Cron"),
//					Schedule:     pulumi.String("@every 1h30m"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create an OBS trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			bucketName := cfg.RequireObject("bucketName")
//			triggerName := cfg.RequireObject("triggerName")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("OBS"),
//				Status:      pulumi.String("ACTIVE"),
//				Obs: &functiongraph.TriggerObsArgs{
//					BucketName:            pulumi.Any(bucketName),
//					EventNotificationName: pulumi.Any(triggerName),
//					Suffix:                pulumi.String(".json"),
//					Events: pulumi.StringArray{
//						pulumi.String("ObjectCreated"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create an SMN trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			topicUrn := cfg.RequireObject("topicUrn")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("SMN"),
//				Status:      pulumi.String("ACTIVE"),
//				Smn: &functiongraph.TriggerSmnArgs{
//					TopicUrn: pulumi.Any(topicUrn),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a DIS trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			streamName := cfg.RequireObject("streamName")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("DIS"),
//				Status:      pulumi.String("ACTIVE"),
//				Dis: &functiongraph.TriggerDisArgs{
//					StreamName:       pulumi.Any(streamName),
//					StartingPosition: pulumi.String("TRIM_HORIZON"),
//					MaxFetchBytes:    pulumi.Int(2097152),
//					PullPeriod:       pulumi.Int(30000),
//					SerialEnable:     pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a DMS Kafka trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			kafkaInstanceId := cfg.RequireObject("kafkaInstanceId")
//			kafkaTopicId := cfg.RequireObject("kafkaTopicId")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("KAFKA"),
//				Kafka: &functiongraph.TriggerKafkaArgs{
//					InstanceId: pulumi.Any(kafkaInstanceId),
//					BatchSize:  pulumi.Int(100),
//					TopicIds: pulumi.StringArray{
//						pulumi.Any(kafkaTopicId),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Dedicated APIG trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			instanceId := cfg.RequireObject("instanceId")
//			groupId := cfg.RequireObject("groupId")
//			apiName := cfg.RequireObject("apiName")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("DEDICATEDGATEWAY"),
//				Status:      pulumi.String("ACTIVE"),
//				Apig: &functiongraph.TriggerApigArgs{
//					InstanceId: pulumi.Any(instanceId),
//					GroupId:    pulumi.Any(groupId),
//					ApiName:    pulumi.Any(apiName),
//					EnvName:    pulumi.String("RELEASE"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a Shared APIG trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			functionUrn := cfg.RequireObject("functionUrn")
//			groupId := cfg.RequireObject("groupId")
//			apiName := cfg.RequireObject("apiName")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(functionUrn),
//				Type:        pulumi.String("APIG"),
//				Status:      pulumi.String("ACTIVE"),
//				Apig: &functiongraph.TriggerApigArgs{
//					GroupId: pulumi.Any(groupId),
//					ApiName: pulumi.Any(apiName),
//					EnvName: pulumi.String("RELEASE"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Create a LTS trigger
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/FunctionGraph"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			logGroupId := cfg.RequireObject("logGroupId")
//			logTopicId := cfg.RequireObject("logTopicId")
//			_, err := FunctionGraph.NewTrigger(ctx, "test", &FunctionGraph.TriggerArgs{
//				FunctionUrn: pulumi.Any(_var.Function_urn),
//				Type:        pulumi.String("LTS"),
//				Status:      pulumi.String("ACTIVE"),
//				Lts: &functiongraph.TriggerLtsArgs{
//					LogGroupId: pulumi.Any(logGroupId),
//					LogTopicId: pulumi.Any(logTopicId),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Trigger struct {
	pulumi.CustomResourceState

	// Specifies the configuration of the shared APIG and dedicated APIG trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Apig TriggerApigPtrOutput `pulumi:"apig"`
	// Specifies the configuration of the DIS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Dis TriggerDisPtrOutput `pulumi:"dis"`
	// Specifies the Uniform Resource Name (URN) of the function.
	// Changing this will create a new trigger resource.
	FunctionUrn pulumi.StringOutput `pulumi:"functionUrn"`
	// Specifies the configuration of the DMS trigger for Kafka.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Kafka TriggerKafkaPtrOutput `pulumi:"kafka"`
	// Specifies the configuration of the LTS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Lts TriggerLtsPtrOutput `pulumi:"lts"`
	// Specifies the configuration of the OBS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Obs TriggerObsPtrOutput `pulumi:"obs"`
	// Specifies the region in which to create the trigger resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new trigger resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the configuration of the SMN trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Smn TriggerSmnPtrOutput `pulumi:"smn"`
	// Specifies whether trigger is enabled. The valid values are **ACTIVE** and **DISABLED**.
	// About DMS kafka trigger, the default value is **ACTIVE**.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the configuration of the timing trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Timer TriggerTimerPtrOutput `pulumi:"timer"`
	// Specifies the type of the function.
	// The valid values currently only support **TIMER**, **OBS**, **SMN**, **DIS**, **KAFKA**, **APIG**, **LTS**, and
	// **DEDICATEDGATEWAY**. Changing this will create a new trigger resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewTrigger registers a new resource with the given unique name, arguments, and options.
func NewTrigger(ctx *pulumi.Context,
	name string, args *TriggerArgs, opts ...pulumi.ResourceOption) (*Trigger, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionUrn == nil {
		return nil, errors.New("invalid value for required argument 'FunctionUrn'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Trigger
	err := ctx.RegisterResource("huaweicloud:FunctionGraph/trigger:Trigger", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrigger gets an existing Trigger resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrigger(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TriggerState, opts ...pulumi.ResourceOption) (*Trigger, error) {
	var resource Trigger
	err := ctx.ReadResource("huaweicloud:FunctionGraph/trigger:Trigger", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Trigger resources.
type triggerState struct {
	// Specifies the configuration of the shared APIG and dedicated APIG trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Apig *TriggerApig `pulumi:"apig"`
	// Specifies the configuration of the DIS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Dis *TriggerDis `pulumi:"dis"`
	// Specifies the Uniform Resource Name (URN) of the function.
	// Changing this will create a new trigger resource.
	FunctionUrn *string `pulumi:"functionUrn"`
	// Specifies the configuration of the DMS trigger for Kafka.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Kafka *TriggerKafka `pulumi:"kafka"`
	// Specifies the configuration of the LTS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Lts *TriggerLts `pulumi:"lts"`
	// Specifies the configuration of the OBS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Obs *TriggerObs `pulumi:"obs"`
	// Specifies the region in which to create the trigger resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new trigger resource.
	Region *string `pulumi:"region"`
	// Specifies the configuration of the SMN trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Smn *TriggerSmn `pulumi:"smn"`
	// Specifies whether trigger is enabled. The valid values are **ACTIVE** and **DISABLED**.
	// About DMS kafka trigger, the default value is **ACTIVE**.
	Status *string `pulumi:"status"`
	// Specifies the configuration of the timing trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Timer *TriggerTimer `pulumi:"timer"`
	// Specifies the type of the function.
	// The valid values currently only support **TIMER**, **OBS**, **SMN**, **DIS**, **KAFKA**, **APIG**, **LTS**, and
	// **DEDICATEDGATEWAY**. Changing this will create a new trigger resource.
	Type *string `pulumi:"type"`
}

type TriggerState struct {
	// Specifies the configuration of the shared APIG and dedicated APIG trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Apig TriggerApigPtrInput
	// Specifies the configuration of the DIS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Dis TriggerDisPtrInput
	// Specifies the Uniform Resource Name (URN) of the function.
	// Changing this will create a new trigger resource.
	FunctionUrn pulumi.StringPtrInput
	// Specifies the configuration of the DMS trigger for Kafka.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Kafka TriggerKafkaPtrInput
	// Specifies the configuration of the LTS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Lts TriggerLtsPtrInput
	// Specifies the configuration of the OBS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Obs TriggerObsPtrInput
	// Specifies the region in which to create the trigger resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new trigger resource.
	Region pulumi.StringPtrInput
	// Specifies the configuration of the SMN trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Smn TriggerSmnPtrInput
	// Specifies whether trigger is enabled. The valid values are **ACTIVE** and **DISABLED**.
	// About DMS kafka trigger, the default value is **ACTIVE**.
	Status pulumi.StringPtrInput
	// Specifies the configuration of the timing trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Timer TriggerTimerPtrInput
	// Specifies the type of the function.
	// The valid values currently only support **TIMER**, **OBS**, **SMN**, **DIS**, **KAFKA**, **APIG**, **LTS**, and
	// **DEDICATEDGATEWAY**. Changing this will create a new trigger resource.
	Type pulumi.StringPtrInput
}

func (TriggerState) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerState)(nil)).Elem()
}

type triggerArgs struct {
	// Specifies the configuration of the shared APIG and dedicated APIG trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Apig *TriggerApig `pulumi:"apig"`
	// Specifies the configuration of the DIS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Dis *TriggerDis `pulumi:"dis"`
	// Specifies the Uniform Resource Name (URN) of the function.
	// Changing this will create a new trigger resource.
	FunctionUrn string `pulumi:"functionUrn"`
	// Specifies the configuration of the DMS trigger for Kafka.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Kafka *TriggerKafka `pulumi:"kafka"`
	// Specifies the configuration of the LTS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Lts *TriggerLts `pulumi:"lts"`
	// Specifies the configuration of the OBS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Obs *TriggerObs `pulumi:"obs"`
	// Specifies the region in which to create the trigger resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new trigger resource.
	Region *string `pulumi:"region"`
	// Specifies the configuration of the SMN trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Smn *TriggerSmn `pulumi:"smn"`
	// Specifies whether trigger is enabled. The valid values are **ACTIVE** and **DISABLED**.
	// About DMS kafka trigger, the default value is **ACTIVE**.
	Status *string `pulumi:"status"`
	// Specifies the configuration of the timing trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Timer *TriggerTimer `pulumi:"timer"`
	// Specifies the type of the function.
	// The valid values currently only support **TIMER**, **OBS**, **SMN**, **DIS**, **KAFKA**, **APIG**, **LTS**, and
	// **DEDICATEDGATEWAY**. Changing this will create a new trigger resource.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Trigger resource.
type TriggerArgs struct {
	// Specifies the configuration of the shared APIG and dedicated APIG trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Apig TriggerApigPtrInput
	// Specifies the configuration of the DIS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Dis TriggerDisPtrInput
	// Specifies the Uniform Resource Name (URN) of the function.
	// Changing this will create a new trigger resource.
	FunctionUrn pulumi.StringInput
	// Specifies the configuration of the DMS trigger for Kafka.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Kafka TriggerKafkaPtrInput
	// Specifies the configuration of the LTS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Lts TriggerLtsPtrInput
	// Specifies the configuration of the OBS trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Obs TriggerObsPtrInput
	// Specifies the region in which to create the trigger resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new trigger resource.
	Region pulumi.StringPtrInput
	// Specifies the configuration of the SMN trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Smn TriggerSmnPtrInput
	// Specifies whether trigger is enabled. The valid values are **ACTIVE** and **DISABLED**.
	// About DMS kafka trigger, the default value is **ACTIVE**.
	Status pulumi.StringPtrInput
	// Specifies the configuration of the timing trigger.
	// Changing this will create a new trigger resource.
	// The object structure is documented below.
	Timer TriggerTimerPtrInput
	// Specifies the type of the function.
	// The valid values currently only support **TIMER**, **OBS**, **SMN**, **DIS**, **KAFKA**, **APIG**, **LTS**, and
	// **DEDICATEDGATEWAY**. Changing this will create a new trigger resource.
	Type pulumi.StringInput
}

func (TriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerArgs)(nil)).Elem()
}

type TriggerInput interface {
	pulumi.Input

	ToTriggerOutput() TriggerOutput
	ToTriggerOutputWithContext(ctx context.Context) TriggerOutput
}

func (*Trigger) ElementType() reflect.Type {
	return reflect.TypeOf((**Trigger)(nil)).Elem()
}

func (i *Trigger) ToTriggerOutput() TriggerOutput {
	return i.ToTriggerOutputWithContext(context.Background())
}

func (i *Trigger) ToTriggerOutputWithContext(ctx context.Context) TriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerOutput)
}

// TriggerArrayInput is an input type that accepts TriggerArray and TriggerArrayOutput values.
// You can construct a concrete instance of `TriggerArrayInput` via:
//
//	TriggerArray{ TriggerArgs{...} }
type TriggerArrayInput interface {
	pulumi.Input

	ToTriggerArrayOutput() TriggerArrayOutput
	ToTriggerArrayOutputWithContext(context.Context) TriggerArrayOutput
}

type TriggerArray []TriggerInput

func (TriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Trigger)(nil)).Elem()
}

func (i TriggerArray) ToTriggerArrayOutput() TriggerArrayOutput {
	return i.ToTriggerArrayOutputWithContext(context.Background())
}

func (i TriggerArray) ToTriggerArrayOutputWithContext(ctx context.Context) TriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerArrayOutput)
}

// TriggerMapInput is an input type that accepts TriggerMap and TriggerMapOutput values.
// You can construct a concrete instance of `TriggerMapInput` via:
//
//	TriggerMap{ "key": TriggerArgs{...} }
type TriggerMapInput interface {
	pulumi.Input

	ToTriggerMapOutput() TriggerMapOutput
	ToTriggerMapOutputWithContext(context.Context) TriggerMapOutput
}

type TriggerMap map[string]TriggerInput

func (TriggerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Trigger)(nil)).Elem()
}

func (i TriggerMap) ToTriggerMapOutput() TriggerMapOutput {
	return i.ToTriggerMapOutputWithContext(context.Background())
}

func (i TriggerMap) ToTriggerMapOutputWithContext(ctx context.Context) TriggerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerMapOutput)
}

type TriggerOutput struct{ *pulumi.OutputState }

func (TriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Trigger)(nil)).Elem()
}

func (o TriggerOutput) ToTriggerOutput() TriggerOutput {
	return o
}

func (o TriggerOutput) ToTriggerOutputWithContext(ctx context.Context) TriggerOutput {
	return o
}

// Specifies the configuration of the shared APIG and dedicated APIG trigger.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Apig() TriggerApigPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerApigPtrOutput { return v.Apig }).(TriggerApigPtrOutput)
}

// Specifies the configuration of the DIS trigger.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Dis() TriggerDisPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerDisPtrOutput { return v.Dis }).(TriggerDisPtrOutput)
}

// Specifies the Uniform Resource Name (URN) of the function.
// Changing this will create a new trigger resource.
func (o TriggerOutput) FunctionUrn() pulumi.StringOutput {
	return o.ApplyT(func(v *Trigger) pulumi.StringOutput { return v.FunctionUrn }).(pulumi.StringOutput)
}

// Specifies the configuration of the DMS trigger for Kafka.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Kafka() TriggerKafkaPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerKafkaPtrOutput { return v.Kafka }).(TriggerKafkaPtrOutput)
}

// Specifies the configuration of the LTS trigger.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Lts() TriggerLtsPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerLtsPtrOutput { return v.Lts }).(TriggerLtsPtrOutput)
}

// Specifies the configuration of the OBS trigger.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Obs() TriggerObsPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerObsPtrOutput { return v.Obs }).(TriggerObsPtrOutput)
}

// Specifies the region in which to create the trigger resource.
// If omitted, the provider-level region will be used.
// Changing this will create a new trigger resource.
func (o TriggerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Trigger) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the configuration of the SMN trigger.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Smn() TriggerSmnPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerSmnPtrOutput { return v.Smn }).(TriggerSmnPtrOutput)
}

// Specifies whether trigger is enabled. The valid values are **ACTIVE** and **DISABLED**.
// About DMS kafka trigger, the default value is **ACTIVE**.
func (o TriggerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Trigger) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the configuration of the timing trigger.
// Changing this will create a new trigger resource.
// The object structure is documented below.
func (o TriggerOutput) Timer() TriggerTimerPtrOutput {
	return o.ApplyT(func(v *Trigger) TriggerTimerPtrOutput { return v.Timer }).(TriggerTimerPtrOutput)
}

// Specifies the type of the function.
// The valid values currently only support **TIMER**, **OBS**, **SMN**, **DIS**, **KAFKA**, **APIG**, **LTS**, and
// **DEDICATEDGATEWAY**. Changing this will create a new trigger resource.
func (o TriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Trigger) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type TriggerArrayOutput struct{ *pulumi.OutputState }

func (TriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Trigger)(nil)).Elem()
}

func (o TriggerArrayOutput) ToTriggerArrayOutput() TriggerArrayOutput {
	return o
}

func (o TriggerArrayOutput) ToTriggerArrayOutputWithContext(ctx context.Context) TriggerArrayOutput {
	return o
}

func (o TriggerArrayOutput) Index(i pulumi.IntInput) TriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Trigger {
		return vs[0].([]*Trigger)[vs[1].(int)]
	}).(TriggerOutput)
}

type TriggerMapOutput struct{ *pulumi.OutputState }

func (TriggerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Trigger)(nil)).Elem()
}

func (o TriggerMapOutput) ToTriggerMapOutput() TriggerMapOutput {
	return o
}

func (o TriggerMapOutput) ToTriggerMapOutputWithContext(ctx context.Context) TriggerMapOutput {
	return o
}

func (o TriggerMapOutput) MapIndex(k pulumi.StringInput) TriggerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Trigger {
		return vs[0].(map[string]*Trigger)[vs[1].(string)]
	}).(TriggerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerInput)(nil)).Elem(), &Trigger{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerArrayInput)(nil)).Elem(), TriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerMapInput)(nil)).Elem(), TriggerMap{})
	pulumi.RegisterOutputType(TriggerOutput{})
	pulumi.RegisterOutputType(TriggerArrayOutput{})
	pulumi.RegisterOutputType(TriggerMapOutput{})
}
