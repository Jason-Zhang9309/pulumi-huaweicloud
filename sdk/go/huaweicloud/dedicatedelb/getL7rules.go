// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedelb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of ELB L7 rules.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedElb"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedElb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			compareType := cfg.RequireObject("compareType")
//			_, err := DedicatedElb.GetL7rules(ctx, &dedicatedelb.GetL7rulesArgs{
//				CompareType: pulumi.StringRef(compareType),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetL7rules(ctx *pulumi.Context, args *GetL7rulesArgs, opts ...pulumi.InvokeOption) (*GetL7rulesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetL7rulesResult
	err := ctx.Invoke("huaweicloud:DedicatedElb/getL7rules:getL7rules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getL7rules.
type GetL7rulesArgs struct {
	// Specifies how requests are matched with the domain names or URL. Values options:
	// **EQUAL_TO**, **REGEX**, **STARTS_WITH**.
	CompareType *string `pulumi:"compareType"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the forwarding policy ID.
	L7policyId string `pulumi:"l7policyId"`
	// Specifies the forwarding rule ID.
	L7ruleId *string `pulumi:"l7ruleId"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the match type. Value options: **HOST_NAME**, **PATH**, **METHOD**, **HEADER**,
	// **QUERY_STRING**, **SOURCE_IP**, **COOKIE**.
	Type *string `pulumi:"type"`
	// Specifies the value of the match content.
	Value *string `pulumi:"value"`
}

// A collection of values returned by getL7rules.
type GetL7rulesResult struct {
	// How the requests are matched with the domain name or URL.
	CompareType         *string `pulumi:"compareType"`
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	L7policyId string  `pulumi:"l7policyId"`
	L7ruleId   *string `pulumi:"l7ruleId"`
	// Lists the L7 rules.
	// The l7rules structure is documented below.
	L7rules []GetL7rulesL7rule `pulumi:"l7rules"`
	Region  string             `pulumi:"region"`
	// The type of the forwarding rule.
	Type *string `pulumi:"type"`
	// The value of the match item.
	Value *string `pulumi:"value"`
}

func GetL7rulesOutput(ctx *pulumi.Context, args GetL7rulesOutputArgs, opts ...pulumi.InvokeOption) GetL7rulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetL7rulesResult, error) {
			args := v.(GetL7rulesArgs)
			r, err := GetL7rules(ctx, &args, opts...)
			var s GetL7rulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetL7rulesResultOutput)
}

// A collection of arguments for invoking getL7rules.
type GetL7rulesOutputArgs struct {
	// Specifies how requests are matched with the domain names or URL. Values options:
	// **EQUAL_TO**, **REGEX**, **STARTS_WITH**.
	CompareType pulumi.StringPtrInput `pulumi:"compareType"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the forwarding policy ID.
	L7policyId pulumi.StringInput `pulumi:"l7policyId"`
	// Specifies the forwarding rule ID.
	L7ruleId pulumi.StringPtrInput `pulumi:"l7ruleId"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the match type. Value options: **HOST_NAME**, **PATH**, **METHOD**, **HEADER**,
	// **QUERY_STRING**, **SOURCE_IP**, **COOKIE**.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the value of the match content.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetL7rulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetL7rulesArgs)(nil)).Elem()
}

// A collection of values returned by getL7rules.
type GetL7rulesResultOutput struct{ *pulumi.OutputState }

func (GetL7rulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetL7rulesResult)(nil)).Elem()
}

func (o GetL7rulesResultOutput) ToGetL7rulesResultOutput() GetL7rulesResultOutput {
	return o
}

func (o GetL7rulesResultOutput) ToGetL7rulesResultOutputWithContext(ctx context.Context) GetL7rulesResultOutput {
	return o
}

// How the requests are matched with the domain name or URL.
func (o GetL7rulesResultOutput) CompareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL7rulesResult) *string { return v.CompareType }).(pulumi.StringPtrOutput)
}

func (o GetL7rulesResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL7rulesResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetL7rulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetL7rulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetL7rulesResultOutput) L7policyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetL7rulesResult) string { return v.L7policyId }).(pulumi.StringOutput)
}

func (o GetL7rulesResultOutput) L7ruleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL7rulesResult) *string { return v.L7ruleId }).(pulumi.StringPtrOutput)
}

// Lists the L7 rules.
// The l7rules structure is documented below.
func (o GetL7rulesResultOutput) L7rules() GetL7rulesL7ruleArrayOutput {
	return o.ApplyT(func(v GetL7rulesResult) []GetL7rulesL7rule { return v.L7rules }).(GetL7rulesL7ruleArrayOutput)
}

func (o GetL7rulesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetL7rulesResult) string { return v.Region }).(pulumi.StringOutput)
}

// The type of the forwarding rule.
func (o GetL7rulesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL7rulesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the match item.
func (o GetL7rulesResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetL7rulesResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetL7rulesResultOutput{})
}
