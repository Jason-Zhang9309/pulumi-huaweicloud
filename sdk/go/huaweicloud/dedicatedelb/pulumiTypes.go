// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedelb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IpgroupIpList struct {
	// Human-readable description for the ip.
	Description *string `pulumi:"description"`
	// IP address or CIDR block.
	Ip string `pulumi:"ip"`
}

// IpgroupIpListInput is an input type that accepts IpgroupIpListArgs and IpgroupIpListOutput values.
// You can construct a concrete instance of `IpgroupIpListInput` via:
//
//	IpgroupIpListArgs{...}
type IpgroupIpListInput interface {
	pulumi.Input

	ToIpgroupIpListOutput() IpgroupIpListOutput
	ToIpgroupIpListOutputWithContext(context.Context) IpgroupIpListOutput
}

type IpgroupIpListArgs struct {
	// Human-readable description for the ip.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP address or CIDR block.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (IpgroupIpListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpgroupIpList)(nil)).Elem()
}

func (i IpgroupIpListArgs) ToIpgroupIpListOutput() IpgroupIpListOutput {
	return i.ToIpgroupIpListOutputWithContext(context.Background())
}

func (i IpgroupIpListArgs) ToIpgroupIpListOutputWithContext(ctx context.Context) IpgroupIpListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpgroupIpListOutput)
}

// IpgroupIpListArrayInput is an input type that accepts IpgroupIpListArray and IpgroupIpListArrayOutput values.
// You can construct a concrete instance of `IpgroupIpListArrayInput` via:
//
//	IpgroupIpListArray{ IpgroupIpListArgs{...} }
type IpgroupIpListArrayInput interface {
	pulumi.Input

	ToIpgroupIpListArrayOutput() IpgroupIpListArrayOutput
	ToIpgroupIpListArrayOutputWithContext(context.Context) IpgroupIpListArrayOutput
}

type IpgroupIpListArray []IpgroupIpListInput

func (IpgroupIpListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpgroupIpList)(nil)).Elem()
}

func (i IpgroupIpListArray) ToIpgroupIpListArrayOutput() IpgroupIpListArrayOutput {
	return i.ToIpgroupIpListArrayOutputWithContext(context.Background())
}

func (i IpgroupIpListArray) ToIpgroupIpListArrayOutputWithContext(ctx context.Context) IpgroupIpListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpgroupIpListArrayOutput)
}

type IpgroupIpListOutput struct{ *pulumi.OutputState }

func (IpgroupIpListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpgroupIpList)(nil)).Elem()
}

func (o IpgroupIpListOutput) ToIpgroupIpListOutput() IpgroupIpListOutput {
	return o
}

func (o IpgroupIpListOutput) ToIpgroupIpListOutputWithContext(ctx context.Context) IpgroupIpListOutput {
	return o
}

// Human-readable description for the ip.
func (o IpgroupIpListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpgroupIpList) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP address or CIDR block.
func (o IpgroupIpListOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v IpgroupIpList) string { return v.Ip }).(pulumi.StringOutput)
}

type IpgroupIpListArrayOutput struct{ *pulumi.OutputState }

func (IpgroupIpListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpgroupIpList)(nil)).Elem()
}

func (o IpgroupIpListArrayOutput) ToIpgroupIpListArrayOutput() IpgroupIpListArrayOutput {
	return o
}

func (o IpgroupIpListArrayOutput) ToIpgroupIpListArrayOutputWithContext(ctx context.Context) IpgroupIpListArrayOutput {
	return o
}

func (o IpgroupIpListArrayOutput) Index(i pulumi.IntInput) IpgroupIpListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpgroupIpList {
		return vs[0].([]IpgroupIpList)[vs[1].(int)]
	}).(IpgroupIpListOutput)
}

type PoolPersistence struct {
	// The name of the cookie if persistence mode is set appropriately. Required
	// if `type = APP_COOKIE`.
	CookieName *string `pulumi:"cookieName"`
	// Specifies the sticky session timeout duration in minutes. This parameter is
	// invalid when type is set to APP_COOKIE. The value range varies depending on the protocol of the backend server group:
	// + When the protocol of the backend server group is TCP or UDP, the value ranges from 1 to 60.
	// + When the protocol of the backend server group is HTTP or HTTPS, the value ranges from 1 to 1440.
	Timeout *int `pulumi:"timeout"`
	// The type of persistence mode. The current specification supports SOURCE_IP,
	// HTTP_COOKIE, and APP_COOKIE.
	Type string `pulumi:"type"`
}

// PoolPersistenceInput is an input type that accepts PoolPersistenceArgs and PoolPersistenceOutput values.
// You can construct a concrete instance of `PoolPersistenceInput` via:
//
//	PoolPersistenceArgs{...}
type PoolPersistenceInput interface {
	pulumi.Input

	ToPoolPersistenceOutput() PoolPersistenceOutput
	ToPoolPersistenceOutputWithContext(context.Context) PoolPersistenceOutput
}

type PoolPersistenceArgs struct {
	// The name of the cookie if persistence mode is set appropriately. Required
	// if `type = APP_COOKIE`.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// Specifies the sticky session timeout duration in minutes. This parameter is
	// invalid when type is set to APP_COOKIE. The value range varies depending on the protocol of the backend server group:
	// + When the protocol of the backend server group is TCP or UDP, the value ranges from 1 to 60.
	// + When the protocol of the backend server group is HTTP or HTTPS, the value ranges from 1 to 1440.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of persistence mode. The current specification supports SOURCE_IP,
	// HTTP_COOKIE, and APP_COOKIE.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPersistence)(nil)).Elem()
}

func (i PoolPersistenceArgs) ToPoolPersistenceOutput() PoolPersistenceOutput {
	return i.ToPoolPersistenceOutputWithContext(context.Background())
}

func (i PoolPersistenceArgs) ToPoolPersistenceOutputWithContext(ctx context.Context) PoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPersistenceOutput)
}

// PoolPersistenceArrayInput is an input type that accepts PoolPersistenceArray and PoolPersistenceArrayOutput values.
// You can construct a concrete instance of `PoolPersistenceArrayInput` via:
//
//	PoolPersistenceArray{ PoolPersistenceArgs{...} }
type PoolPersistenceArrayInput interface {
	pulumi.Input

	ToPoolPersistenceArrayOutput() PoolPersistenceArrayOutput
	ToPoolPersistenceArrayOutputWithContext(context.Context) PoolPersistenceArrayOutput
}

type PoolPersistenceArray []PoolPersistenceInput

func (PoolPersistenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolPersistence)(nil)).Elem()
}

func (i PoolPersistenceArray) ToPoolPersistenceArrayOutput() PoolPersistenceArrayOutput {
	return i.ToPoolPersistenceArrayOutputWithContext(context.Background())
}

func (i PoolPersistenceArray) ToPoolPersistenceArrayOutputWithContext(ctx context.Context) PoolPersistenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolPersistenceArrayOutput)
}

type PoolPersistenceOutput struct{ *pulumi.OutputState }

func (PoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolPersistence)(nil)).Elem()
}

func (o PoolPersistenceOutput) ToPoolPersistenceOutput() PoolPersistenceOutput {
	return o
}

func (o PoolPersistenceOutput) ToPoolPersistenceOutputWithContext(ctx context.Context) PoolPersistenceOutput {
	return o
}

// The name of the cookie if persistence mode is set appropriately. Required
// if `type = APP_COOKIE`.
func (o PoolPersistenceOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolPersistence) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// Specifies the sticky session timeout duration in minutes. This parameter is
// invalid when type is set to APP_COOKIE. The value range varies depending on the protocol of the backend server group:
// + When the protocol of the backend server group is TCP or UDP, the value ranges from 1 to 60.
// + When the protocol of the backend server group is HTTP or HTTPS, the value ranges from 1 to 1440.
func (o PoolPersistenceOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolPersistence) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of persistence mode. The current specification supports SOURCE_IP,
// HTTP_COOKIE, and APP_COOKIE.
func (o PoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type PoolPersistenceArrayOutput struct{ *pulumi.OutputState }

func (PoolPersistenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolPersistence)(nil)).Elem()
}

func (o PoolPersistenceArrayOutput) ToPoolPersistenceArrayOutput() PoolPersistenceArrayOutput {
	return o
}

func (o PoolPersistenceArrayOutput) ToPoolPersistenceArrayOutputWithContext(ctx context.Context) PoolPersistenceArrayOutput {
	return o
}

func (o PoolPersistenceArrayOutput) Index(i pulumi.IntInput) PoolPersistenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolPersistence {
		return vs[0].([]PoolPersistence)[vs[1].(int)]
	}).(PoolPersistenceOutput)
}

type GetFlavorsFlavor struct {
	// Specifies the bandwidth size(Mbit/s) in the flavor.
	Bandwidth int `pulumi:"bandwidth"`
	// Specifies the cps in the flavor.
	Cps int `pulumi:"cps"`
	// ID of the flavor.
	Id string `pulumi:"id"`
	// Specifies the maximum connections in the flavor.
	MaxConnections int `pulumi:"maxConnections"`
	// Name of the flavor.
	Name string `pulumi:"name"`
	// Specifies the qps in the L7 flavor.
	Qps int `pulumi:"qps"`
	// Specifies the flavor type. Valid values are L4 and L7.
	Type string `pulumi:"type"`
}

// GetFlavorsFlavorInput is an input type that accepts GetFlavorsFlavorArgs and GetFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetFlavorsFlavorInput` via:
//
//	GetFlavorsFlavorArgs{...}
type GetFlavorsFlavorInput interface {
	pulumi.Input

	ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput
	ToGetFlavorsFlavorOutputWithContext(context.Context) GetFlavorsFlavorOutput
}

type GetFlavorsFlavorArgs struct {
	// Specifies the bandwidth size(Mbit/s) in the flavor.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Specifies the cps in the flavor.
	Cps pulumi.IntInput `pulumi:"cps"`
	// ID of the flavor.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the maximum connections in the flavor.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Name of the flavor.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the qps in the L7 flavor.
	Qps pulumi.IntInput `pulumi:"qps"`
	// Specifies the flavor type. Valid values are L4 and L7.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsFlavor)(nil)).Elem()
}

func (i GetFlavorsFlavorArgs) ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput {
	return i.ToGetFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetFlavorsFlavorArgs) ToGetFlavorsFlavorOutputWithContext(ctx context.Context) GetFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlavorsFlavorOutput)
}

// GetFlavorsFlavorArrayInput is an input type that accepts GetFlavorsFlavorArray and GetFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetFlavorsFlavorArrayInput` via:
//
//	GetFlavorsFlavorArray{ GetFlavorsFlavorArgs{...} }
type GetFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput
	ToGetFlavorsFlavorArrayOutputWithContext(context.Context) GetFlavorsFlavorArrayOutput
}

type GetFlavorsFlavorArray []GetFlavorsFlavorInput

func (GetFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlavorsFlavor)(nil)).Elem()
}

func (i GetFlavorsFlavorArray) ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput {
	return i.ToGetFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetFlavorsFlavorArray) ToGetFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlavorsFlavorArrayOutput)
}

type GetFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsFlavor)(nil)).Elem()
}

func (o GetFlavorsFlavorOutput) ToGetFlavorsFlavorOutput() GetFlavorsFlavorOutput {
	return o
}

func (o GetFlavorsFlavorOutput) ToGetFlavorsFlavorOutputWithContext(ctx context.Context) GetFlavorsFlavorOutput {
	return o
}

// Specifies the bandwidth size(Mbit/s) in the flavor.
func (o GetFlavorsFlavorOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Specifies the cps in the flavor.
func (o GetFlavorsFlavorOutput) Cps() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Cps }).(pulumi.IntOutput)
}

// ID of the flavor.
func (o GetFlavorsFlavorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the maximum connections in the flavor.
func (o GetFlavorsFlavorOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Name of the flavor.
func (o GetFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the qps in the L7 flavor.
func (o GetFlavorsFlavorOutput) Qps() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) int { return v.Qps }).(pulumi.IntOutput)
}

// Specifies the flavor type. Valid values are L4 and L7.
func (o GetFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

type GetFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlavorsFlavor)(nil)).Elem()
}

func (o GetFlavorsFlavorArrayOutput) ToGetFlavorsFlavorArrayOutput() GetFlavorsFlavorArrayOutput {
	return o
}

func (o GetFlavorsFlavorArrayOutput) ToGetFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetFlavorsFlavorArrayOutput {
	return o
}

func (o GetFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlavorsFlavor {
		return vs[0].([]GetFlavorsFlavor)[vs[1].(int)]
	}).(GetFlavorsFlavorOutput)
}

type GetPoolsPool struct {
	// Specifies the description of the ELB pool.
	Description string `pulumi:"description"`
	// Specifies the health monitor ID of the ELB pool.
	HealthmonitorId string `pulumi:"healthmonitorId"`
	// The listener, loadbalancer or member ID.
	Id string `pulumi:"id"`
	// The IP version of the LB pool.
	IpVersion string `pulumi:"ipVersion"`
	// Specifies the method of the ELB pool. Must be one of ROUND_ROBIN, LEAST_CONNECTIONS,
	// or SOURCE_IP.
	LbMethod string `pulumi:"lbMethod"`
	// The listener list. The object structure is documented below.
	Listeners []GetPoolsPoolListener `pulumi:"listeners"`
	// The loadbalancer list. The object structure is documented below.
	Loadbalancers []GetPoolsPoolLoadbalancer `pulumi:"loadbalancers"`
	// The member list. The object structure is documented below.
	Members []GetPoolsPoolMember `pulumi:"members"`
	// Specifies the name of the ELB pool.
	Name string `pulumi:"name"`
	// Indicates whether connections in the same session will be processed by the same pool member or not.
	// The object structure is documented below.
	Persistences []GetPoolsPoolPersistence `pulumi:"persistences"`
	// Specifies the protocol of the ELB pool. This can either be TCP, UDP or HTTP.
	Protocol string `pulumi:"protocol"`
}

// GetPoolsPoolInput is an input type that accepts GetPoolsPoolArgs and GetPoolsPoolOutput values.
// You can construct a concrete instance of `GetPoolsPoolInput` via:
//
//	GetPoolsPoolArgs{...}
type GetPoolsPoolInput interface {
	pulumi.Input

	ToGetPoolsPoolOutput() GetPoolsPoolOutput
	ToGetPoolsPoolOutputWithContext(context.Context) GetPoolsPoolOutput
}

type GetPoolsPoolArgs struct {
	// Specifies the description of the ELB pool.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the health monitor ID of the ELB pool.
	HealthmonitorId pulumi.StringInput `pulumi:"healthmonitorId"`
	// The listener, loadbalancer or member ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The IP version of the LB pool.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Specifies the method of the ELB pool. Must be one of ROUND_ROBIN, LEAST_CONNECTIONS,
	// or SOURCE_IP.
	LbMethod pulumi.StringInput `pulumi:"lbMethod"`
	// The listener list. The object structure is documented below.
	Listeners GetPoolsPoolListenerArrayInput `pulumi:"listeners"`
	// The loadbalancer list. The object structure is documented below.
	Loadbalancers GetPoolsPoolLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// The member list. The object structure is documented below.
	Members GetPoolsPoolMemberArrayInput `pulumi:"members"`
	// Specifies the name of the ELB pool.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether connections in the same session will be processed by the same pool member or not.
	// The object structure is documented below.
	Persistences GetPoolsPoolPersistenceArrayInput `pulumi:"persistences"`
	// Specifies the protocol of the ELB pool. This can either be TCP, UDP or HTTP.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetPoolsPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPool)(nil)).Elem()
}

func (i GetPoolsPoolArgs) ToGetPoolsPoolOutput() GetPoolsPoolOutput {
	return i.ToGetPoolsPoolOutputWithContext(context.Background())
}

func (i GetPoolsPoolArgs) ToGetPoolsPoolOutputWithContext(ctx context.Context) GetPoolsPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolOutput)
}

// GetPoolsPoolArrayInput is an input type that accepts GetPoolsPoolArray and GetPoolsPoolArrayOutput values.
// You can construct a concrete instance of `GetPoolsPoolArrayInput` via:
//
//	GetPoolsPoolArray{ GetPoolsPoolArgs{...} }
type GetPoolsPoolArrayInput interface {
	pulumi.Input

	ToGetPoolsPoolArrayOutput() GetPoolsPoolArrayOutput
	ToGetPoolsPoolArrayOutputWithContext(context.Context) GetPoolsPoolArrayOutput
}

type GetPoolsPoolArray []GetPoolsPoolInput

func (GetPoolsPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPool)(nil)).Elem()
}

func (i GetPoolsPoolArray) ToGetPoolsPoolArrayOutput() GetPoolsPoolArrayOutput {
	return i.ToGetPoolsPoolArrayOutputWithContext(context.Background())
}

func (i GetPoolsPoolArray) ToGetPoolsPoolArrayOutputWithContext(ctx context.Context) GetPoolsPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolArrayOutput)
}

type GetPoolsPoolOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPool)(nil)).Elem()
}

func (o GetPoolsPoolOutput) ToGetPoolsPoolOutput() GetPoolsPoolOutput {
	return o
}

func (o GetPoolsPoolOutput) ToGetPoolsPoolOutputWithContext(ctx context.Context) GetPoolsPoolOutput {
	return o
}

// Specifies the description of the ELB pool.
func (o GetPoolsPoolOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the health monitor ID of the ELB pool.
func (o GetPoolsPoolOutput) HealthmonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.HealthmonitorId }).(pulumi.StringOutput)
}

// The listener, loadbalancer or member ID.
func (o GetPoolsPoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.Id }).(pulumi.StringOutput)
}

// The IP version of the LB pool.
func (o GetPoolsPoolOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Specifies the method of the ELB pool. Must be one of ROUND_ROBIN, LEAST_CONNECTIONS,
// or SOURCE_IP.
func (o GetPoolsPoolOutput) LbMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.LbMethod }).(pulumi.StringOutput)
}

// The listener list. The object structure is documented below.
func (o GetPoolsPoolOutput) Listeners() GetPoolsPoolListenerArrayOutput {
	return o.ApplyT(func(v GetPoolsPool) []GetPoolsPoolListener { return v.Listeners }).(GetPoolsPoolListenerArrayOutput)
}

// The loadbalancer list. The object structure is documented below.
func (o GetPoolsPoolOutput) Loadbalancers() GetPoolsPoolLoadbalancerArrayOutput {
	return o.ApplyT(func(v GetPoolsPool) []GetPoolsPoolLoadbalancer { return v.Loadbalancers }).(GetPoolsPoolLoadbalancerArrayOutput)
}

// The member list. The object structure is documented below.
func (o GetPoolsPoolOutput) Members() GetPoolsPoolMemberArrayOutput {
	return o.ApplyT(func(v GetPoolsPool) []GetPoolsPoolMember { return v.Members }).(GetPoolsPoolMemberArrayOutput)
}

// Specifies the name of the ELB pool.
func (o GetPoolsPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether connections in the same session will be processed by the same pool member or not.
// The object structure is documented below.
func (o GetPoolsPoolOutput) Persistences() GetPoolsPoolPersistenceArrayOutput {
	return o.ApplyT(func(v GetPoolsPool) []GetPoolsPoolPersistence { return v.Persistences }).(GetPoolsPoolPersistenceArrayOutput)
}

// Specifies the protocol of the ELB pool. This can either be TCP, UDP or HTTP.
func (o GetPoolsPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPool) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetPoolsPoolArrayOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPool)(nil)).Elem()
}

func (o GetPoolsPoolArrayOutput) ToGetPoolsPoolArrayOutput() GetPoolsPoolArrayOutput {
	return o
}

func (o GetPoolsPoolArrayOutput) ToGetPoolsPoolArrayOutputWithContext(ctx context.Context) GetPoolsPoolArrayOutput {
	return o
}

func (o GetPoolsPoolArrayOutput) Index(i pulumi.IntInput) GetPoolsPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolsPool {
		return vs[0].([]GetPoolsPool)[vs[1].(int)]
	}).(GetPoolsPoolOutput)
}

type GetPoolsPoolListener struct {
	// The listener, loadbalancer or member ID.
	Id string `pulumi:"id"`
}

// GetPoolsPoolListenerInput is an input type that accepts GetPoolsPoolListenerArgs and GetPoolsPoolListenerOutput values.
// You can construct a concrete instance of `GetPoolsPoolListenerInput` via:
//
//	GetPoolsPoolListenerArgs{...}
type GetPoolsPoolListenerInput interface {
	pulumi.Input

	ToGetPoolsPoolListenerOutput() GetPoolsPoolListenerOutput
	ToGetPoolsPoolListenerOutputWithContext(context.Context) GetPoolsPoolListenerOutput
}

type GetPoolsPoolListenerArgs struct {
	// The listener, loadbalancer or member ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPoolsPoolListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolListener)(nil)).Elem()
}

func (i GetPoolsPoolListenerArgs) ToGetPoolsPoolListenerOutput() GetPoolsPoolListenerOutput {
	return i.ToGetPoolsPoolListenerOutputWithContext(context.Background())
}

func (i GetPoolsPoolListenerArgs) ToGetPoolsPoolListenerOutputWithContext(ctx context.Context) GetPoolsPoolListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolListenerOutput)
}

// GetPoolsPoolListenerArrayInput is an input type that accepts GetPoolsPoolListenerArray and GetPoolsPoolListenerArrayOutput values.
// You can construct a concrete instance of `GetPoolsPoolListenerArrayInput` via:
//
//	GetPoolsPoolListenerArray{ GetPoolsPoolListenerArgs{...} }
type GetPoolsPoolListenerArrayInput interface {
	pulumi.Input

	ToGetPoolsPoolListenerArrayOutput() GetPoolsPoolListenerArrayOutput
	ToGetPoolsPoolListenerArrayOutputWithContext(context.Context) GetPoolsPoolListenerArrayOutput
}

type GetPoolsPoolListenerArray []GetPoolsPoolListenerInput

func (GetPoolsPoolListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolListener)(nil)).Elem()
}

func (i GetPoolsPoolListenerArray) ToGetPoolsPoolListenerArrayOutput() GetPoolsPoolListenerArrayOutput {
	return i.ToGetPoolsPoolListenerArrayOutputWithContext(context.Background())
}

func (i GetPoolsPoolListenerArray) ToGetPoolsPoolListenerArrayOutputWithContext(ctx context.Context) GetPoolsPoolListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolListenerArrayOutput)
}

type GetPoolsPoolListenerOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolListener)(nil)).Elem()
}

func (o GetPoolsPoolListenerOutput) ToGetPoolsPoolListenerOutput() GetPoolsPoolListenerOutput {
	return o
}

func (o GetPoolsPoolListenerOutput) ToGetPoolsPoolListenerOutputWithContext(ctx context.Context) GetPoolsPoolListenerOutput {
	return o
}

// The listener, loadbalancer or member ID.
func (o GetPoolsPoolListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPoolListener) string { return v.Id }).(pulumi.StringOutput)
}

type GetPoolsPoolListenerArrayOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolListener)(nil)).Elem()
}

func (o GetPoolsPoolListenerArrayOutput) ToGetPoolsPoolListenerArrayOutput() GetPoolsPoolListenerArrayOutput {
	return o
}

func (o GetPoolsPoolListenerArrayOutput) ToGetPoolsPoolListenerArrayOutputWithContext(ctx context.Context) GetPoolsPoolListenerArrayOutput {
	return o
}

func (o GetPoolsPoolListenerArrayOutput) Index(i pulumi.IntInput) GetPoolsPoolListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolsPoolListener {
		return vs[0].([]GetPoolsPoolListener)[vs[1].(int)]
	}).(GetPoolsPoolListenerOutput)
}

type GetPoolsPoolLoadbalancer struct {
	// The listener, loadbalancer or member ID.
	Id string `pulumi:"id"`
}

// GetPoolsPoolLoadbalancerInput is an input type that accepts GetPoolsPoolLoadbalancerArgs and GetPoolsPoolLoadbalancerOutput values.
// You can construct a concrete instance of `GetPoolsPoolLoadbalancerInput` via:
//
//	GetPoolsPoolLoadbalancerArgs{...}
type GetPoolsPoolLoadbalancerInput interface {
	pulumi.Input

	ToGetPoolsPoolLoadbalancerOutput() GetPoolsPoolLoadbalancerOutput
	ToGetPoolsPoolLoadbalancerOutputWithContext(context.Context) GetPoolsPoolLoadbalancerOutput
}

type GetPoolsPoolLoadbalancerArgs struct {
	// The listener, loadbalancer or member ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPoolsPoolLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolLoadbalancer)(nil)).Elem()
}

func (i GetPoolsPoolLoadbalancerArgs) ToGetPoolsPoolLoadbalancerOutput() GetPoolsPoolLoadbalancerOutput {
	return i.ToGetPoolsPoolLoadbalancerOutputWithContext(context.Background())
}

func (i GetPoolsPoolLoadbalancerArgs) ToGetPoolsPoolLoadbalancerOutputWithContext(ctx context.Context) GetPoolsPoolLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolLoadbalancerOutput)
}

// GetPoolsPoolLoadbalancerArrayInput is an input type that accepts GetPoolsPoolLoadbalancerArray and GetPoolsPoolLoadbalancerArrayOutput values.
// You can construct a concrete instance of `GetPoolsPoolLoadbalancerArrayInput` via:
//
//	GetPoolsPoolLoadbalancerArray{ GetPoolsPoolLoadbalancerArgs{...} }
type GetPoolsPoolLoadbalancerArrayInput interface {
	pulumi.Input

	ToGetPoolsPoolLoadbalancerArrayOutput() GetPoolsPoolLoadbalancerArrayOutput
	ToGetPoolsPoolLoadbalancerArrayOutputWithContext(context.Context) GetPoolsPoolLoadbalancerArrayOutput
}

type GetPoolsPoolLoadbalancerArray []GetPoolsPoolLoadbalancerInput

func (GetPoolsPoolLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolLoadbalancer)(nil)).Elem()
}

func (i GetPoolsPoolLoadbalancerArray) ToGetPoolsPoolLoadbalancerArrayOutput() GetPoolsPoolLoadbalancerArrayOutput {
	return i.ToGetPoolsPoolLoadbalancerArrayOutputWithContext(context.Background())
}

func (i GetPoolsPoolLoadbalancerArray) ToGetPoolsPoolLoadbalancerArrayOutputWithContext(ctx context.Context) GetPoolsPoolLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolLoadbalancerArrayOutput)
}

type GetPoolsPoolLoadbalancerOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolLoadbalancer)(nil)).Elem()
}

func (o GetPoolsPoolLoadbalancerOutput) ToGetPoolsPoolLoadbalancerOutput() GetPoolsPoolLoadbalancerOutput {
	return o
}

func (o GetPoolsPoolLoadbalancerOutput) ToGetPoolsPoolLoadbalancerOutputWithContext(ctx context.Context) GetPoolsPoolLoadbalancerOutput {
	return o
}

// The listener, loadbalancer or member ID.
func (o GetPoolsPoolLoadbalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPoolLoadbalancer) string { return v.Id }).(pulumi.StringOutput)
}

type GetPoolsPoolLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolLoadbalancer)(nil)).Elem()
}

func (o GetPoolsPoolLoadbalancerArrayOutput) ToGetPoolsPoolLoadbalancerArrayOutput() GetPoolsPoolLoadbalancerArrayOutput {
	return o
}

func (o GetPoolsPoolLoadbalancerArrayOutput) ToGetPoolsPoolLoadbalancerArrayOutputWithContext(ctx context.Context) GetPoolsPoolLoadbalancerArrayOutput {
	return o
}

func (o GetPoolsPoolLoadbalancerArrayOutput) Index(i pulumi.IntInput) GetPoolsPoolLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolsPoolLoadbalancer {
		return vs[0].([]GetPoolsPoolLoadbalancer)[vs[1].(int)]
	}).(GetPoolsPoolLoadbalancerOutput)
}

type GetPoolsPoolMember struct {
	// The listener, loadbalancer or member ID.
	Id string `pulumi:"id"`
}

// GetPoolsPoolMemberInput is an input type that accepts GetPoolsPoolMemberArgs and GetPoolsPoolMemberOutput values.
// You can construct a concrete instance of `GetPoolsPoolMemberInput` via:
//
//	GetPoolsPoolMemberArgs{...}
type GetPoolsPoolMemberInput interface {
	pulumi.Input

	ToGetPoolsPoolMemberOutput() GetPoolsPoolMemberOutput
	ToGetPoolsPoolMemberOutputWithContext(context.Context) GetPoolsPoolMemberOutput
}

type GetPoolsPoolMemberArgs struct {
	// The listener, loadbalancer or member ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPoolsPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolMember)(nil)).Elem()
}

func (i GetPoolsPoolMemberArgs) ToGetPoolsPoolMemberOutput() GetPoolsPoolMemberOutput {
	return i.ToGetPoolsPoolMemberOutputWithContext(context.Background())
}

func (i GetPoolsPoolMemberArgs) ToGetPoolsPoolMemberOutputWithContext(ctx context.Context) GetPoolsPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolMemberOutput)
}

// GetPoolsPoolMemberArrayInput is an input type that accepts GetPoolsPoolMemberArray and GetPoolsPoolMemberArrayOutput values.
// You can construct a concrete instance of `GetPoolsPoolMemberArrayInput` via:
//
//	GetPoolsPoolMemberArray{ GetPoolsPoolMemberArgs{...} }
type GetPoolsPoolMemberArrayInput interface {
	pulumi.Input

	ToGetPoolsPoolMemberArrayOutput() GetPoolsPoolMemberArrayOutput
	ToGetPoolsPoolMemberArrayOutputWithContext(context.Context) GetPoolsPoolMemberArrayOutput
}

type GetPoolsPoolMemberArray []GetPoolsPoolMemberInput

func (GetPoolsPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolMember)(nil)).Elem()
}

func (i GetPoolsPoolMemberArray) ToGetPoolsPoolMemberArrayOutput() GetPoolsPoolMemberArrayOutput {
	return i.ToGetPoolsPoolMemberArrayOutputWithContext(context.Background())
}

func (i GetPoolsPoolMemberArray) ToGetPoolsPoolMemberArrayOutputWithContext(ctx context.Context) GetPoolsPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolMemberArrayOutput)
}

type GetPoolsPoolMemberOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolMember)(nil)).Elem()
}

func (o GetPoolsPoolMemberOutput) ToGetPoolsPoolMemberOutput() GetPoolsPoolMemberOutput {
	return o
}

func (o GetPoolsPoolMemberOutput) ToGetPoolsPoolMemberOutputWithContext(ctx context.Context) GetPoolsPoolMemberOutput {
	return o
}

// The listener, loadbalancer or member ID.
func (o GetPoolsPoolMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPoolMember) string { return v.Id }).(pulumi.StringOutput)
}

type GetPoolsPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolMember)(nil)).Elem()
}

func (o GetPoolsPoolMemberArrayOutput) ToGetPoolsPoolMemberArrayOutput() GetPoolsPoolMemberArrayOutput {
	return o
}

func (o GetPoolsPoolMemberArrayOutput) ToGetPoolsPoolMemberArrayOutputWithContext(ctx context.Context) GetPoolsPoolMemberArrayOutput {
	return o
}

func (o GetPoolsPoolMemberArrayOutput) Index(i pulumi.IntInput) GetPoolsPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolsPoolMember {
		return vs[0].([]GetPoolsPoolMember)[vs[1].(int)]
	}).(GetPoolsPoolMemberOutput)
}

type GetPoolsPoolPersistence struct {
	// The name of the cookie if persistence mode is set appropriately.
	CookieName string `pulumi:"cookieName"`
	// The type of persistence mode.
	Type string `pulumi:"type"`
}

// GetPoolsPoolPersistenceInput is an input type that accepts GetPoolsPoolPersistenceArgs and GetPoolsPoolPersistenceOutput values.
// You can construct a concrete instance of `GetPoolsPoolPersistenceInput` via:
//
//	GetPoolsPoolPersistenceArgs{...}
type GetPoolsPoolPersistenceInput interface {
	pulumi.Input

	ToGetPoolsPoolPersistenceOutput() GetPoolsPoolPersistenceOutput
	ToGetPoolsPoolPersistenceOutputWithContext(context.Context) GetPoolsPoolPersistenceOutput
}

type GetPoolsPoolPersistenceArgs struct {
	// The name of the cookie if persistence mode is set appropriately.
	CookieName pulumi.StringInput `pulumi:"cookieName"`
	// The type of persistence mode.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPoolsPoolPersistenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolPersistence)(nil)).Elem()
}

func (i GetPoolsPoolPersistenceArgs) ToGetPoolsPoolPersistenceOutput() GetPoolsPoolPersistenceOutput {
	return i.ToGetPoolsPoolPersistenceOutputWithContext(context.Background())
}

func (i GetPoolsPoolPersistenceArgs) ToGetPoolsPoolPersistenceOutputWithContext(ctx context.Context) GetPoolsPoolPersistenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolPersistenceOutput)
}

// GetPoolsPoolPersistenceArrayInput is an input type that accepts GetPoolsPoolPersistenceArray and GetPoolsPoolPersistenceArrayOutput values.
// You can construct a concrete instance of `GetPoolsPoolPersistenceArrayInput` via:
//
//	GetPoolsPoolPersistenceArray{ GetPoolsPoolPersistenceArgs{...} }
type GetPoolsPoolPersistenceArrayInput interface {
	pulumi.Input

	ToGetPoolsPoolPersistenceArrayOutput() GetPoolsPoolPersistenceArrayOutput
	ToGetPoolsPoolPersistenceArrayOutputWithContext(context.Context) GetPoolsPoolPersistenceArrayOutput
}

type GetPoolsPoolPersistenceArray []GetPoolsPoolPersistenceInput

func (GetPoolsPoolPersistenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolPersistence)(nil)).Elem()
}

func (i GetPoolsPoolPersistenceArray) ToGetPoolsPoolPersistenceArrayOutput() GetPoolsPoolPersistenceArrayOutput {
	return i.ToGetPoolsPoolPersistenceArrayOutputWithContext(context.Background())
}

func (i GetPoolsPoolPersistenceArray) ToGetPoolsPoolPersistenceArrayOutputWithContext(ctx context.Context) GetPoolsPoolPersistenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolsPoolPersistenceArrayOutput)
}

type GetPoolsPoolPersistenceOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolPersistenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolsPoolPersistence)(nil)).Elem()
}

func (o GetPoolsPoolPersistenceOutput) ToGetPoolsPoolPersistenceOutput() GetPoolsPoolPersistenceOutput {
	return o
}

func (o GetPoolsPoolPersistenceOutput) ToGetPoolsPoolPersistenceOutputWithContext(ctx context.Context) GetPoolsPoolPersistenceOutput {
	return o
}

// The name of the cookie if persistence mode is set appropriately.
func (o GetPoolsPoolPersistenceOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPoolPersistence) string { return v.CookieName }).(pulumi.StringOutput)
}

// The type of persistence mode.
func (o GetPoolsPoolPersistenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolsPoolPersistence) string { return v.Type }).(pulumi.StringOutput)
}

type GetPoolsPoolPersistenceArrayOutput struct{ *pulumi.OutputState }

func (GetPoolsPoolPersistenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolsPoolPersistence)(nil)).Elem()
}

func (o GetPoolsPoolPersistenceArrayOutput) ToGetPoolsPoolPersistenceArrayOutput() GetPoolsPoolPersistenceArrayOutput {
	return o
}

func (o GetPoolsPoolPersistenceArrayOutput) ToGetPoolsPoolPersistenceArrayOutputWithContext(ctx context.Context) GetPoolsPoolPersistenceArrayOutput {
	return o
}

func (o GetPoolsPoolPersistenceArrayOutput) Index(i pulumi.IntInput) GetPoolsPoolPersistenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolsPoolPersistence {
		return vs[0].([]GetPoolsPoolPersistence)[vs[1].(int)]
	}).(GetPoolsPoolPersistenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpgroupIpListInput)(nil)).Elem(), IpgroupIpListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpgroupIpListArrayInput)(nil)).Elem(), IpgroupIpListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolPersistenceInput)(nil)).Elem(), PoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolPersistenceArrayInput)(nil)).Elem(), PoolPersistenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlavorsFlavorInput)(nil)).Elem(), GetFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlavorsFlavorArrayInput)(nil)).Elem(), GetFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolInput)(nil)).Elem(), GetPoolsPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolArrayInput)(nil)).Elem(), GetPoolsPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolListenerInput)(nil)).Elem(), GetPoolsPoolListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolListenerArrayInput)(nil)).Elem(), GetPoolsPoolListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolLoadbalancerInput)(nil)).Elem(), GetPoolsPoolLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolLoadbalancerArrayInput)(nil)).Elem(), GetPoolsPoolLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolMemberInput)(nil)).Elem(), GetPoolsPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolMemberArrayInput)(nil)).Elem(), GetPoolsPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolPersistenceInput)(nil)).Elem(), GetPoolsPoolPersistenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolsPoolPersistenceArrayInput)(nil)).Elem(), GetPoolsPoolPersistenceArray{})
	pulumi.RegisterOutputType(IpgroupIpListOutput{})
	pulumi.RegisterOutputType(IpgroupIpListArrayOutput{})
	pulumi.RegisterOutputType(PoolPersistenceOutput{})
	pulumi.RegisterOutputType(PoolPersistenceArrayOutput{})
	pulumi.RegisterOutputType(GetFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolArrayOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolListenerOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolListenerArrayOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolLoadbalancerOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolMemberOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolPersistenceOutput{})
	pulumi.RegisterOutputType(GetPoolsPoolPersistenceArrayOutput{})
}
