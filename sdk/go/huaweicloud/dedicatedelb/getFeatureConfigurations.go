// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedelb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of feature configurations of ELB of a tenant.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedElb"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedElb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := DedicatedElb.GetFeatureConfigurations(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFeatureConfigurations(ctx *pulumi.Context, args *GetFeatureConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetFeatureConfigurationsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetFeatureConfigurationsResult
	err := ctx.Invoke("huaweicloud:DedicatedElb/getFeatureConfigurations:getFeatureConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFeatureConfigurations.
type GetFeatureConfigurationsArgs struct {
	// Specifies the feature name.
	Feature *string `pulumi:"feature"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getFeatureConfigurations.
type GetFeatureConfigurationsResult struct {
	// Indicates the feature configuration list.
	Configs []GetFeatureConfigurationsConfig `pulumi:"configs"`
	// Indicates the feature name.
	Feature *string `pulumi:"feature"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
}

func GetFeatureConfigurationsOutput(ctx *pulumi.Context, args GetFeatureConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetFeatureConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFeatureConfigurationsResult, error) {
			args := v.(GetFeatureConfigurationsArgs)
			r, err := GetFeatureConfigurations(ctx, &args, opts...)
			var s GetFeatureConfigurationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFeatureConfigurationsResultOutput)
}

// A collection of arguments for invoking getFeatureConfigurations.
type GetFeatureConfigurationsOutputArgs struct {
	// Specifies the feature name.
	Feature pulumi.StringPtrInput `pulumi:"feature"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetFeatureConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFeatureConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getFeatureConfigurations.
type GetFeatureConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetFeatureConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFeatureConfigurationsResult)(nil)).Elem()
}

func (o GetFeatureConfigurationsResultOutput) ToGetFeatureConfigurationsResultOutput() GetFeatureConfigurationsResultOutput {
	return o
}

func (o GetFeatureConfigurationsResultOutput) ToGetFeatureConfigurationsResultOutputWithContext(ctx context.Context) GetFeatureConfigurationsResultOutput {
	return o
}

// Indicates the feature configuration list.
func (o GetFeatureConfigurationsResultOutput) Configs() GetFeatureConfigurationsConfigArrayOutput {
	return o.ApplyT(func(v GetFeatureConfigurationsResult) []GetFeatureConfigurationsConfig { return v.Configs }).(GetFeatureConfigurationsConfigArrayOutput)
}

// Indicates the feature name.
func (o GetFeatureConfigurationsResultOutput) Feature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFeatureConfigurationsResult) *string { return v.Feature }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFeatureConfigurationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeatureConfigurationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFeatureConfigurationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFeatureConfigurationsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFeatureConfigurationsResultOutput{})
}
