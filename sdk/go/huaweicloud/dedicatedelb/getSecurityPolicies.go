// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicatedelb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of ELB security policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedElb"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/DedicatedElb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			securityPoliciesName := cfg.RequireObject("securityPoliciesName")
//			_, err := DedicatedElb.GetSecurityPolicies(ctx, &dedicatedelb.GetSecurityPoliciesArgs{
//				Name: pulumi.StringRef(securityPoliciesName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityPolicies(ctx *pulumi.Context, args *GetSecurityPoliciesArgs, opts ...pulumi.InvokeOption) (*GetSecurityPoliciesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecurityPoliciesResult
	err := ctx.Invoke("huaweicloud:DedicatedElb/getSecurityPolicies:getSecurityPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityPolicies.
type GetSecurityPoliciesArgs struct {
	// Specifies the cipher suite supported by the security policy.
	Cipher *string `pulumi:"cipher"`
	// Specifies the description of the security policy.
	Description *string `pulumi:"description"`
	// Specifies the name of the security policy.
	Name *string `pulumi:"name"`
	// Specifies the TLS protocol supported by the security policy.
	Protocol *string `pulumi:"protocol"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the ID of the security policy.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// Specifies the type of the security policy. Value options: **system**, **custom**.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getSecurityPolicies.
type GetSecurityPoliciesResult struct {
	Cipher *string `pulumi:"cipher"`
	// The description of the security policy.
	Description *string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the security policy.
	Name     *string `pulumi:"name"`
	Protocol *string `pulumi:"protocol"`
	Region   string  `pulumi:"region"`
	// Lists the security policies.
	// The securityPolicies structure is documented below.
	SecurityPolicies []GetSecurityPoliciesSecurityPolicy `pulumi:"securityPolicies"`
	SecurityPolicyId *string                             `pulumi:"securityPolicyId"`
	// The type of the security policy.
	Type *string `pulumi:"type"`
}

func GetSecurityPoliciesOutput(ctx *pulumi.Context, args GetSecurityPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityPoliciesResult, error) {
			args := v.(GetSecurityPoliciesArgs)
			r, err := GetSecurityPolicies(ctx, &args, opts...)
			var s GetSecurityPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityPoliciesResultOutput)
}

// A collection of arguments for invoking getSecurityPolicies.
type GetSecurityPoliciesOutputArgs struct {
	// Specifies the cipher suite supported by the security policy.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// Specifies the description of the security policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of the security policy.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the TLS protocol supported by the security policy.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specifies the region in which to query the data source.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the ID of the security policy.
	SecurityPolicyId pulumi.StringPtrInput `pulumi:"securityPolicyId"`
	// Specifies the type of the security policy. Value options: **system**, **custom**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSecurityPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityPolicies.
type GetSecurityPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesResult)(nil)).Elem()
}

func (o GetSecurityPoliciesResultOutput) ToGetSecurityPoliciesResultOutput() GetSecurityPoliciesResultOutput {
	return o
}

func (o GetSecurityPoliciesResultOutput) ToGetSecurityPoliciesResultOutputWithContext(ctx context.Context) GetSecurityPoliciesResultOutput {
	return o
}

func (o GetSecurityPoliciesResultOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// The description of the security policy.
func (o GetSecurityPoliciesResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the security policy.
func (o GetSecurityPoliciesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetSecurityPoliciesResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o GetSecurityPoliciesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Lists the security policies.
// The securityPolicies structure is documented below.
func (o GetSecurityPoliciesResultOutput) SecurityPolicies() GetSecurityPoliciesSecurityPolicyArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) []GetSecurityPoliciesSecurityPolicy { return v.SecurityPolicies }).(GetSecurityPoliciesSecurityPolicyArrayOutput)
}

func (o GetSecurityPoliciesResultOutput) SecurityPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.SecurityPolicyId }).(pulumi.StringPtrOutput)
}

// The type of the security policy.
func (o GetSecurityPoliciesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityPoliciesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityPoliciesResultOutput{})
}
