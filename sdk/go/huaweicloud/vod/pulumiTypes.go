// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MediaAssetThumbnail struct {
	// Specifies the screenshot aspect ratio. The value can be:
	// + **0**: adaptive (maintain the original aspect ratio).
	// + **1**: 16:9.
	AspectRatio *int `pulumi:"aspectRatio"`
	// Specifies the number of screenshots as the cover. Defaults to: **1**.
	// Changing this creates a new resource.
	CoverPosition *int `pulumi:"coverPosition"`
	// Specifies an array of time points of screenshot. Required when `type` is **dots**.
	// Changing this creates a new resource.
	Dots []int `pulumi:"dots"`
	// Specifies the screenshot file format. Currently, only **1** (jpg) is supported.
	// Defaults to: **1**. Changing this creates a new resource.
	Format *int `pulumi:"format"`
	// Specifies the size of the longest side of the screenshot. Unit: pixel.
	// The width dimension is calculated by scaling the dimension proportional to the original video pixels.
	// Changing this creates a new resource.
	MaxLength *int `pulumi:"maxLength"`
	// Specifies the screenshot time interval (unit: second). The value range is 1 to 12.
	// Required when `type` is **time**. Changing this creates a new resource.
	Time *int `pulumi:"time"`
	// Specifies the screenshot type. Valid values are: **time** and **dots**.
	// Changing this creates a new resource.
	Type string `pulumi:"type"`
}

// MediaAssetThumbnailInput is an input type that accepts MediaAssetThumbnailArgs and MediaAssetThumbnailOutput values.
// You can construct a concrete instance of `MediaAssetThumbnailInput` via:
//
//	MediaAssetThumbnailArgs{...}
type MediaAssetThumbnailInput interface {
	pulumi.Input

	ToMediaAssetThumbnailOutput() MediaAssetThumbnailOutput
	ToMediaAssetThumbnailOutputWithContext(context.Context) MediaAssetThumbnailOutput
}

type MediaAssetThumbnailArgs struct {
	// Specifies the screenshot aspect ratio. The value can be:
	// + **0**: adaptive (maintain the original aspect ratio).
	// + **1**: 16:9.
	AspectRatio pulumi.IntPtrInput `pulumi:"aspectRatio"`
	// Specifies the number of screenshots as the cover. Defaults to: **1**.
	// Changing this creates a new resource.
	CoverPosition pulumi.IntPtrInput `pulumi:"coverPosition"`
	// Specifies an array of time points of screenshot. Required when `type` is **dots**.
	// Changing this creates a new resource.
	Dots pulumi.IntArrayInput `pulumi:"dots"`
	// Specifies the screenshot file format. Currently, only **1** (jpg) is supported.
	// Defaults to: **1**. Changing this creates a new resource.
	Format pulumi.IntPtrInput `pulumi:"format"`
	// Specifies the size of the longest side of the screenshot. Unit: pixel.
	// The width dimension is calculated by scaling the dimension proportional to the original video pixels.
	// Changing this creates a new resource.
	MaxLength pulumi.IntPtrInput `pulumi:"maxLength"`
	// Specifies the screenshot time interval (unit: second). The value range is 1 to 12.
	// Required when `type` is **time**. Changing this creates a new resource.
	Time pulumi.IntPtrInput `pulumi:"time"`
	// Specifies the screenshot type. Valid values are: **time** and **dots**.
	// Changing this creates a new resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MediaAssetThumbnailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetThumbnail)(nil)).Elem()
}

func (i MediaAssetThumbnailArgs) ToMediaAssetThumbnailOutput() MediaAssetThumbnailOutput {
	return i.ToMediaAssetThumbnailOutputWithContext(context.Background())
}

func (i MediaAssetThumbnailArgs) ToMediaAssetThumbnailOutputWithContext(ctx context.Context) MediaAssetThumbnailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetThumbnailOutput)
}

func (i MediaAssetThumbnailArgs) ToMediaAssetThumbnailPtrOutput() MediaAssetThumbnailPtrOutput {
	return i.ToMediaAssetThumbnailPtrOutputWithContext(context.Background())
}

func (i MediaAssetThumbnailArgs) ToMediaAssetThumbnailPtrOutputWithContext(ctx context.Context) MediaAssetThumbnailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetThumbnailOutput).ToMediaAssetThumbnailPtrOutputWithContext(ctx)
}

// MediaAssetThumbnailPtrInput is an input type that accepts MediaAssetThumbnailArgs, MediaAssetThumbnailPtr and MediaAssetThumbnailPtrOutput values.
// You can construct a concrete instance of `MediaAssetThumbnailPtrInput` via:
//
//	        MediaAssetThumbnailArgs{...}
//
//	or:
//
//	        nil
type MediaAssetThumbnailPtrInput interface {
	pulumi.Input

	ToMediaAssetThumbnailPtrOutput() MediaAssetThumbnailPtrOutput
	ToMediaAssetThumbnailPtrOutputWithContext(context.Context) MediaAssetThumbnailPtrOutput
}

type mediaAssetThumbnailPtrType MediaAssetThumbnailArgs

func MediaAssetThumbnailPtr(v *MediaAssetThumbnailArgs) MediaAssetThumbnailPtrInput {
	return (*mediaAssetThumbnailPtrType)(v)
}

func (*mediaAssetThumbnailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaAssetThumbnail)(nil)).Elem()
}

func (i *mediaAssetThumbnailPtrType) ToMediaAssetThumbnailPtrOutput() MediaAssetThumbnailPtrOutput {
	return i.ToMediaAssetThumbnailPtrOutputWithContext(context.Background())
}

func (i *mediaAssetThumbnailPtrType) ToMediaAssetThumbnailPtrOutputWithContext(ctx context.Context) MediaAssetThumbnailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MediaAssetThumbnailPtrOutput)
}

type MediaAssetThumbnailOutput struct{ *pulumi.OutputState }

func (MediaAssetThumbnailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MediaAssetThumbnail)(nil)).Elem()
}

func (o MediaAssetThumbnailOutput) ToMediaAssetThumbnailOutput() MediaAssetThumbnailOutput {
	return o
}

func (o MediaAssetThumbnailOutput) ToMediaAssetThumbnailOutputWithContext(ctx context.Context) MediaAssetThumbnailOutput {
	return o
}

func (o MediaAssetThumbnailOutput) ToMediaAssetThumbnailPtrOutput() MediaAssetThumbnailPtrOutput {
	return o.ToMediaAssetThumbnailPtrOutputWithContext(context.Background())
}

func (o MediaAssetThumbnailOutput) ToMediaAssetThumbnailPtrOutputWithContext(ctx context.Context) MediaAssetThumbnailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MediaAssetThumbnail) *MediaAssetThumbnail {
		return &v
	}).(MediaAssetThumbnailPtrOutput)
}

// Specifies the screenshot aspect ratio. The value can be:
// + **0**: adaptive (maintain the original aspect ratio).
// + **1**: 16:9.
func (o MediaAssetThumbnailOutput) AspectRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) *int { return v.AspectRatio }).(pulumi.IntPtrOutput)
}

// Specifies the number of screenshots as the cover. Defaults to: **1**.
// Changing this creates a new resource.
func (o MediaAssetThumbnailOutput) CoverPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) *int { return v.CoverPosition }).(pulumi.IntPtrOutput)
}

// Specifies an array of time points of screenshot. Required when `type` is **dots**.
// Changing this creates a new resource.
func (o MediaAssetThumbnailOutput) Dots() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) []int { return v.Dots }).(pulumi.IntArrayOutput)
}

// Specifies the screenshot file format. Currently, only **1** (jpg) is supported.
// Defaults to: **1**. Changing this creates a new resource.
func (o MediaAssetThumbnailOutput) Format() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) *int { return v.Format }).(pulumi.IntPtrOutput)
}

// Specifies the size of the longest side of the screenshot. Unit: pixel.
// The width dimension is calculated by scaling the dimension proportional to the original video pixels.
// Changing this creates a new resource.
func (o MediaAssetThumbnailOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

// Specifies the screenshot time interval (unit: second). The value range is 1 to 12.
// Required when `type` is **time**. Changing this creates a new resource.
func (o MediaAssetThumbnailOutput) Time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) *int { return v.Time }).(pulumi.IntPtrOutput)
}

// Specifies the screenshot type. Valid values are: **time** and **dots**.
// Changing this creates a new resource.
func (o MediaAssetThumbnailOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MediaAssetThumbnail) string { return v.Type }).(pulumi.StringOutput)
}

type MediaAssetThumbnailPtrOutput struct{ *pulumi.OutputState }

func (MediaAssetThumbnailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MediaAssetThumbnail)(nil)).Elem()
}

func (o MediaAssetThumbnailPtrOutput) ToMediaAssetThumbnailPtrOutput() MediaAssetThumbnailPtrOutput {
	return o
}

func (o MediaAssetThumbnailPtrOutput) ToMediaAssetThumbnailPtrOutputWithContext(ctx context.Context) MediaAssetThumbnailPtrOutput {
	return o
}

func (o MediaAssetThumbnailPtrOutput) Elem() MediaAssetThumbnailOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) MediaAssetThumbnail {
		if v != nil {
			return *v
		}
		var ret MediaAssetThumbnail
		return ret
	}).(MediaAssetThumbnailOutput)
}

// Specifies the screenshot aspect ratio. The value can be:
// + **0**: adaptive (maintain the original aspect ratio).
// + **1**: 16:9.
func (o MediaAssetThumbnailPtrOutput) AspectRatio() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) *int {
		if v == nil {
			return nil
		}
		return v.AspectRatio
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of screenshots as the cover. Defaults to: **1**.
// Changing this creates a new resource.
func (o MediaAssetThumbnailPtrOutput) CoverPosition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) *int {
		if v == nil {
			return nil
		}
		return v.CoverPosition
	}).(pulumi.IntPtrOutput)
}

// Specifies an array of time points of screenshot. Required when `type` is **dots**.
// Changing this creates a new resource.
func (o MediaAssetThumbnailPtrOutput) Dots() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) []int {
		if v == nil {
			return nil
		}
		return v.Dots
	}).(pulumi.IntArrayOutput)
}

// Specifies the screenshot file format. Currently, only **1** (jpg) is supported.
// Defaults to: **1**. Changing this creates a new resource.
func (o MediaAssetThumbnailPtrOutput) Format() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) *int {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.IntPtrOutput)
}

// Specifies the size of the longest side of the screenshot. Unit: pixel.
// The width dimension is calculated by scaling the dimension proportional to the original video pixels.
// Changing this creates a new resource.
func (o MediaAssetThumbnailPtrOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) *int {
		if v == nil {
			return nil
		}
		return v.MaxLength
	}).(pulumi.IntPtrOutput)
}

// Specifies the screenshot time interval (unit: second). The value range is 1 to 12.
// Required when `type` is **time**. Changing this creates a new resource.
func (o MediaAssetThumbnailPtrOutput) Time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) *int {
		if v == nil {
			return nil
		}
		return v.Time
	}).(pulumi.IntPtrOutput)
}

// Specifies the screenshot type. Valid values are: **time** and **dots**.
// Changing this creates a new resource.
func (o MediaAssetThumbnailPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MediaAssetThumbnail) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TranscodingTemplateGroupQualityInfo struct {
	// Specifies the audio configurations.
	// The object structure is documented below.
	Audio *TranscodingTemplateGroupQualityInfoAudio `pulumi:"audio"`
	// Specifies the output format. The value can be: **HLS**, **MP4**, **DASH**,
	// **DASH_HLS**, **MP3** and **ADTS**.
	OutputFormat string `pulumi:"outputFormat"`
	// Specifies the video configurations.
	// The object structure is documented below.
	Video *TranscodingTemplateGroupQualityInfoVideo `pulumi:"video"`
}

// TranscodingTemplateGroupQualityInfoInput is an input type that accepts TranscodingTemplateGroupQualityInfoArgs and TranscodingTemplateGroupQualityInfoOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupQualityInfoInput` via:
//
//	TranscodingTemplateGroupQualityInfoArgs{...}
type TranscodingTemplateGroupQualityInfoInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupQualityInfoOutput() TranscodingTemplateGroupQualityInfoOutput
	ToTranscodingTemplateGroupQualityInfoOutputWithContext(context.Context) TranscodingTemplateGroupQualityInfoOutput
}

type TranscodingTemplateGroupQualityInfoArgs struct {
	// Specifies the audio configurations.
	// The object structure is documented below.
	Audio TranscodingTemplateGroupQualityInfoAudioPtrInput `pulumi:"audio"`
	// Specifies the output format. The value can be: **HLS**, **MP4**, **DASH**,
	// **DASH_HLS**, **MP3** and **ADTS**.
	OutputFormat pulumi.StringInput `pulumi:"outputFormat"`
	// Specifies the video configurations.
	// The object structure is documented below.
	Video TranscodingTemplateGroupQualityInfoVideoPtrInput `pulumi:"video"`
}

func (TranscodingTemplateGroupQualityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupQualityInfo)(nil)).Elem()
}

func (i TranscodingTemplateGroupQualityInfoArgs) ToTranscodingTemplateGroupQualityInfoOutput() TranscodingTemplateGroupQualityInfoOutput {
	return i.ToTranscodingTemplateGroupQualityInfoOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupQualityInfoArgs) ToTranscodingTemplateGroupQualityInfoOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoOutput)
}

// TranscodingTemplateGroupQualityInfoArrayInput is an input type that accepts TranscodingTemplateGroupQualityInfoArray and TranscodingTemplateGroupQualityInfoArrayOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupQualityInfoArrayInput` via:
//
//	TranscodingTemplateGroupQualityInfoArray{ TranscodingTemplateGroupQualityInfoArgs{...} }
type TranscodingTemplateGroupQualityInfoArrayInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupQualityInfoArrayOutput() TranscodingTemplateGroupQualityInfoArrayOutput
	ToTranscodingTemplateGroupQualityInfoArrayOutputWithContext(context.Context) TranscodingTemplateGroupQualityInfoArrayOutput
}

type TranscodingTemplateGroupQualityInfoArray []TranscodingTemplateGroupQualityInfoInput

func (TranscodingTemplateGroupQualityInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TranscodingTemplateGroupQualityInfo)(nil)).Elem()
}

func (i TranscodingTemplateGroupQualityInfoArray) ToTranscodingTemplateGroupQualityInfoArrayOutput() TranscodingTemplateGroupQualityInfoArrayOutput {
	return i.ToTranscodingTemplateGroupQualityInfoArrayOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupQualityInfoArray) ToTranscodingTemplateGroupQualityInfoArrayOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoArrayOutput)
}

type TranscodingTemplateGroupQualityInfoOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupQualityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupQualityInfo)(nil)).Elem()
}

func (o TranscodingTemplateGroupQualityInfoOutput) ToTranscodingTemplateGroupQualityInfoOutput() TranscodingTemplateGroupQualityInfoOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoOutput) ToTranscodingTemplateGroupQualityInfoOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoOutput {
	return o
}

// Specifies the audio configurations.
// The object structure is documented below.
func (o TranscodingTemplateGroupQualityInfoOutput) Audio() TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfo) *TranscodingTemplateGroupQualityInfoAudio { return v.Audio }).(TranscodingTemplateGroupQualityInfoAudioPtrOutput)
}

// Specifies the output format. The value can be: **HLS**, **MP4**, **DASH**,
// **DASH_HLS**, **MP3** and **ADTS**.
func (o TranscodingTemplateGroupQualityInfoOutput) OutputFormat() pulumi.StringOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfo) string { return v.OutputFormat }).(pulumi.StringOutput)
}

// Specifies the video configurations.
// The object structure is documented below.
func (o TranscodingTemplateGroupQualityInfoOutput) Video() TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfo) *TranscodingTemplateGroupQualityInfoVideo { return v.Video }).(TranscodingTemplateGroupQualityInfoVideoPtrOutput)
}

type TranscodingTemplateGroupQualityInfoArrayOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupQualityInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TranscodingTemplateGroupQualityInfo)(nil)).Elem()
}

func (o TranscodingTemplateGroupQualityInfoArrayOutput) ToTranscodingTemplateGroupQualityInfoArrayOutput() TranscodingTemplateGroupQualityInfoArrayOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoArrayOutput) ToTranscodingTemplateGroupQualityInfoArrayOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoArrayOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoArrayOutput) Index(i pulumi.IntInput) TranscodingTemplateGroupQualityInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TranscodingTemplateGroupQualityInfo {
		return vs[0].([]TranscodingTemplateGroupQualityInfo)[vs[1].(int)]
	}).(TranscodingTemplateGroupQualityInfoOutput)
}

type TranscodingTemplateGroupQualityInfoAudio struct {
	// Specifies the audio bitrate. The value can be **0** or range from
	// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
	Bitrate *int `pulumi:"bitrate"`
	// Specifies the audio channels. The value can be:
	// + **1**: Mono
	// + **2**: Stereo
	Channels int `pulumi:"channels"`
	// Specifies the audio sample rate. The value can be:
	// + **1**: AUTO
	// + **2**: 22,050 Hz
	// + **3**: 32,000 Hz
	// + **4**: 44,100 Hz
	// + **5**: 48,000 Hz
	// + **6**: 96,000 Hz
	SampleRate int `pulumi:"sampleRate"`
}

// TranscodingTemplateGroupQualityInfoAudioInput is an input type that accepts TranscodingTemplateGroupQualityInfoAudioArgs and TranscodingTemplateGroupQualityInfoAudioOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupQualityInfoAudioInput` via:
//
//	TranscodingTemplateGroupQualityInfoAudioArgs{...}
type TranscodingTemplateGroupQualityInfoAudioInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupQualityInfoAudioOutput() TranscodingTemplateGroupQualityInfoAudioOutput
	ToTranscodingTemplateGroupQualityInfoAudioOutputWithContext(context.Context) TranscodingTemplateGroupQualityInfoAudioOutput
}

type TranscodingTemplateGroupQualityInfoAudioArgs struct {
	// Specifies the audio bitrate. The value can be **0** or range from
	// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
	Bitrate pulumi.IntPtrInput `pulumi:"bitrate"`
	// Specifies the audio channels. The value can be:
	// + **1**: Mono
	// + **2**: Stereo
	Channels pulumi.IntInput `pulumi:"channels"`
	// Specifies the audio sample rate. The value can be:
	// + **1**: AUTO
	// + **2**: 22,050 Hz
	// + **3**: 32,000 Hz
	// + **4**: 44,100 Hz
	// + **5**: 48,000 Hz
	// + **6**: 96,000 Hz
	SampleRate pulumi.IntInput `pulumi:"sampleRate"`
}

func (TranscodingTemplateGroupQualityInfoAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupQualityInfoAudio)(nil)).Elem()
}

func (i TranscodingTemplateGroupQualityInfoAudioArgs) ToTranscodingTemplateGroupQualityInfoAudioOutput() TranscodingTemplateGroupQualityInfoAudioOutput {
	return i.ToTranscodingTemplateGroupQualityInfoAudioOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupQualityInfoAudioArgs) ToTranscodingTemplateGroupQualityInfoAudioOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoAudioOutput)
}

func (i TranscodingTemplateGroupQualityInfoAudioArgs) ToTranscodingTemplateGroupQualityInfoAudioPtrOutput() TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return i.ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupQualityInfoAudioArgs) ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoAudioOutput).ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(ctx)
}

// TranscodingTemplateGroupQualityInfoAudioPtrInput is an input type that accepts TranscodingTemplateGroupQualityInfoAudioArgs, TranscodingTemplateGroupQualityInfoAudioPtr and TranscodingTemplateGroupQualityInfoAudioPtrOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupQualityInfoAudioPtrInput` via:
//
//	        TranscodingTemplateGroupQualityInfoAudioArgs{...}
//
//	or:
//
//	        nil
type TranscodingTemplateGroupQualityInfoAudioPtrInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupQualityInfoAudioPtrOutput() TranscodingTemplateGroupQualityInfoAudioPtrOutput
	ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(context.Context) TranscodingTemplateGroupQualityInfoAudioPtrOutput
}

type transcodingTemplateGroupQualityInfoAudioPtrType TranscodingTemplateGroupQualityInfoAudioArgs

func TranscodingTemplateGroupQualityInfoAudioPtr(v *TranscodingTemplateGroupQualityInfoAudioArgs) TranscodingTemplateGroupQualityInfoAudioPtrInput {
	return (*transcodingTemplateGroupQualityInfoAudioPtrType)(v)
}

func (*transcodingTemplateGroupQualityInfoAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupQualityInfoAudio)(nil)).Elem()
}

func (i *transcodingTemplateGroupQualityInfoAudioPtrType) ToTranscodingTemplateGroupQualityInfoAudioPtrOutput() TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return i.ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(context.Background())
}

func (i *transcodingTemplateGroupQualityInfoAudioPtrType) ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoAudioPtrOutput)
}

type TranscodingTemplateGroupQualityInfoAudioOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupQualityInfoAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupQualityInfoAudio)(nil)).Elem()
}

func (o TranscodingTemplateGroupQualityInfoAudioOutput) ToTranscodingTemplateGroupQualityInfoAudioOutput() TranscodingTemplateGroupQualityInfoAudioOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoAudioOutput) ToTranscodingTemplateGroupQualityInfoAudioOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoAudioOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoAudioOutput) ToTranscodingTemplateGroupQualityInfoAudioPtrOutput() TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return o.ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(context.Background())
}

func (o TranscodingTemplateGroupQualityInfoAudioOutput) ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TranscodingTemplateGroupQualityInfoAudio) *TranscodingTemplateGroupQualityInfoAudio {
		return &v
	}).(TranscodingTemplateGroupQualityInfoAudioPtrOutput)
}

// Specifies the audio bitrate. The value can be **0** or range from
// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
func (o TranscodingTemplateGroupQualityInfoAudioOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoAudio) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

// Specifies the audio channels. The value can be:
// + **1**: Mono
// + **2**: Stereo
func (o TranscodingTemplateGroupQualityInfoAudioOutput) Channels() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoAudio) int { return v.Channels }).(pulumi.IntOutput)
}

// Specifies the audio sample rate. The value can be:
// + **1**: AUTO
// + **2**: 22,050 Hz
// + **3**: 32,000 Hz
// + **4**: 44,100 Hz
// + **5**: 48,000 Hz
// + **6**: 96,000 Hz
func (o TranscodingTemplateGroupQualityInfoAudioOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoAudio) int { return v.SampleRate }).(pulumi.IntOutput)
}

type TranscodingTemplateGroupQualityInfoAudioPtrOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupQualityInfoAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupQualityInfoAudio)(nil)).Elem()
}

func (o TranscodingTemplateGroupQualityInfoAudioPtrOutput) ToTranscodingTemplateGroupQualityInfoAudioPtrOutput() TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoAudioPtrOutput) ToTranscodingTemplateGroupQualityInfoAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoAudioPtrOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoAudioPtrOutput) Elem() TranscodingTemplateGroupQualityInfoAudioOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoAudio) TranscodingTemplateGroupQualityInfoAudio {
		if v != nil {
			return *v
		}
		var ret TranscodingTemplateGroupQualityInfoAudio
		return ret
	}).(TranscodingTemplateGroupQualityInfoAudioOutput)
}

// Specifies the audio bitrate. The value can be **0** or range from
// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
func (o TranscodingTemplateGroupQualityInfoAudioPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoAudio) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

// Specifies the audio channels. The value can be:
// + **1**: Mono
// + **2**: Stereo
func (o TranscodingTemplateGroupQualityInfoAudioPtrOutput) Channels() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoAudio) *int {
		if v == nil {
			return nil
		}
		return &v.Channels
	}).(pulumi.IntPtrOutput)
}

// Specifies the audio sample rate. The value can be:
// + **1**: AUTO
// + **2**: 22,050 Hz
// + **3**: 32,000 Hz
// + **4**: 44,100 Hz
// + **5**: 48,000 Hz
// + **6**: 96,000 Hz
func (o TranscodingTemplateGroupQualityInfoAudioPtrOutput) SampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoAudio) *int {
		if v == nil {
			return nil
		}
		return &v.SampleRate
	}).(pulumi.IntPtrOutput)
}

type TranscodingTemplateGroupQualityInfoVideo struct {
	// Specifies the audio bitrate. The value can be **0** or range from
	// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
	Bitrate *int `pulumi:"bitrate"`
	// Specifies the video frame rate. The value ranges from **1** to **75**.
	// Defaults to: **1**. If set to **1**, the frame rate of the transcoded video is the same as that of the
	// untransocded video.
	FrameRate *int `pulumi:"frameRate"`
	// Specifies the video height. The value can be **0** or range from **128** to **2160**.
	// Defaults to: **0**. If set to **0**, the system will automatically adjust the `height` according to the `width`.
	Height *int `pulumi:"height"`
	// Specifies the video quality.
	// The value can be: **4K**, **2K**, **FHD**, **SD**, **LD** and **HD**.
	Quality string `pulumi:"quality"`
	// Specifies the video width. The value can be **0** or range from **128** to **3840**.
	// Defaults to: **0**. If set to **0**, the system will automatically adjust the `width` according to the `height`.
	Width *int `pulumi:"width"`
}

// TranscodingTemplateGroupQualityInfoVideoInput is an input type that accepts TranscodingTemplateGroupQualityInfoVideoArgs and TranscodingTemplateGroupQualityInfoVideoOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupQualityInfoVideoInput` via:
//
//	TranscodingTemplateGroupQualityInfoVideoArgs{...}
type TranscodingTemplateGroupQualityInfoVideoInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupQualityInfoVideoOutput() TranscodingTemplateGroupQualityInfoVideoOutput
	ToTranscodingTemplateGroupQualityInfoVideoOutputWithContext(context.Context) TranscodingTemplateGroupQualityInfoVideoOutput
}

type TranscodingTemplateGroupQualityInfoVideoArgs struct {
	// Specifies the audio bitrate. The value can be **0** or range from
	// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
	Bitrate pulumi.IntPtrInput `pulumi:"bitrate"`
	// Specifies the video frame rate. The value ranges from **1** to **75**.
	// Defaults to: **1**. If set to **1**, the frame rate of the transcoded video is the same as that of the
	// untransocded video.
	FrameRate pulumi.IntPtrInput `pulumi:"frameRate"`
	// Specifies the video height. The value can be **0** or range from **128** to **2160**.
	// Defaults to: **0**. If set to **0**, the system will automatically adjust the `height` according to the `width`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Specifies the video quality.
	// The value can be: **4K**, **2K**, **FHD**, **SD**, **LD** and **HD**.
	Quality pulumi.StringInput `pulumi:"quality"`
	// Specifies the video width. The value can be **0** or range from **128** to **3840**.
	// Defaults to: **0**. If set to **0**, the system will automatically adjust the `width` according to the `height`.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (TranscodingTemplateGroupQualityInfoVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupQualityInfoVideo)(nil)).Elem()
}

func (i TranscodingTemplateGroupQualityInfoVideoArgs) ToTranscodingTemplateGroupQualityInfoVideoOutput() TranscodingTemplateGroupQualityInfoVideoOutput {
	return i.ToTranscodingTemplateGroupQualityInfoVideoOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupQualityInfoVideoArgs) ToTranscodingTemplateGroupQualityInfoVideoOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoVideoOutput)
}

func (i TranscodingTemplateGroupQualityInfoVideoArgs) ToTranscodingTemplateGroupQualityInfoVideoPtrOutput() TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return i.ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupQualityInfoVideoArgs) ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoVideoOutput).ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(ctx)
}

// TranscodingTemplateGroupQualityInfoVideoPtrInput is an input type that accepts TranscodingTemplateGroupQualityInfoVideoArgs, TranscodingTemplateGroupQualityInfoVideoPtr and TranscodingTemplateGroupQualityInfoVideoPtrOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupQualityInfoVideoPtrInput` via:
//
//	        TranscodingTemplateGroupQualityInfoVideoArgs{...}
//
//	or:
//
//	        nil
type TranscodingTemplateGroupQualityInfoVideoPtrInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupQualityInfoVideoPtrOutput() TranscodingTemplateGroupQualityInfoVideoPtrOutput
	ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(context.Context) TranscodingTemplateGroupQualityInfoVideoPtrOutput
}

type transcodingTemplateGroupQualityInfoVideoPtrType TranscodingTemplateGroupQualityInfoVideoArgs

func TranscodingTemplateGroupQualityInfoVideoPtr(v *TranscodingTemplateGroupQualityInfoVideoArgs) TranscodingTemplateGroupQualityInfoVideoPtrInput {
	return (*transcodingTemplateGroupQualityInfoVideoPtrType)(v)
}

func (*transcodingTemplateGroupQualityInfoVideoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupQualityInfoVideo)(nil)).Elem()
}

func (i *transcodingTemplateGroupQualityInfoVideoPtrType) ToTranscodingTemplateGroupQualityInfoVideoPtrOutput() TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return i.ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(context.Background())
}

func (i *transcodingTemplateGroupQualityInfoVideoPtrType) ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupQualityInfoVideoPtrOutput)
}

type TranscodingTemplateGroupQualityInfoVideoOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupQualityInfoVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupQualityInfoVideo)(nil)).Elem()
}

func (o TranscodingTemplateGroupQualityInfoVideoOutput) ToTranscodingTemplateGroupQualityInfoVideoOutput() TranscodingTemplateGroupQualityInfoVideoOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoVideoOutput) ToTranscodingTemplateGroupQualityInfoVideoOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoVideoOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoVideoOutput) ToTranscodingTemplateGroupQualityInfoVideoPtrOutput() TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return o.ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(context.Background())
}

func (o TranscodingTemplateGroupQualityInfoVideoOutput) ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TranscodingTemplateGroupQualityInfoVideo) *TranscodingTemplateGroupQualityInfoVideo {
		return &v
	}).(TranscodingTemplateGroupQualityInfoVideoPtrOutput)
}

// Specifies the audio bitrate. The value can be **0** or range from
// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
func (o TranscodingTemplateGroupQualityInfoVideoOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoVideo) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

// Specifies the video frame rate. The value ranges from **1** to **75**.
// Defaults to: **1**. If set to **1**, the frame rate of the transcoded video is the same as that of the
// untransocded video.
func (o TranscodingTemplateGroupQualityInfoVideoOutput) FrameRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoVideo) *int { return v.FrameRate }).(pulumi.IntPtrOutput)
}

// Specifies the video height. The value can be **0** or range from **128** to **2160**.
// Defaults to: **0**. If set to **0**, the system will automatically adjust the `height` according to the `width`.
func (o TranscodingTemplateGroupQualityInfoVideoOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoVideo) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Specifies the video quality.
// The value can be: **4K**, **2K**, **FHD**, **SD**, **LD** and **HD**.
func (o TranscodingTemplateGroupQualityInfoVideoOutput) Quality() pulumi.StringOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoVideo) string { return v.Quality }).(pulumi.StringOutput)
}

// Specifies the video width. The value can be **0** or range from **128** to **3840**.
// Defaults to: **0**. If set to **0**, the system will automatically adjust the `width` according to the `height`.
func (o TranscodingTemplateGroupQualityInfoVideoOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupQualityInfoVideo) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type TranscodingTemplateGroupQualityInfoVideoPtrOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupQualityInfoVideoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupQualityInfoVideo)(nil)).Elem()
}

func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) ToTranscodingTemplateGroupQualityInfoVideoPtrOutput() TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) ToTranscodingTemplateGroupQualityInfoVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupQualityInfoVideoPtrOutput {
	return o
}

func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) Elem() TranscodingTemplateGroupQualityInfoVideoOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoVideo) TranscodingTemplateGroupQualityInfoVideo {
		if v != nil {
			return *v
		}
		var ret TranscodingTemplateGroupQualityInfoVideo
		return ret
	}).(TranscodingTemplateGroupQualityInfoVideoOutput)
}

// Specifies the audio bitrate. The value can be **0** or range from
// **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoVideo) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

// Specifies the video frame rate. The value ranges from **1** to **75**.
// Defaults to: **1**. If set to **1**, the frame rate of the transcoded video is the same as that of the
// untransocded video.
func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) FrameRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoVideo) *int {
		if v == nil {
			return nil
		}
		return v.FrameRate
	}).(pulumi.IntPtrOutput)
}

// Specifies the video height. The value can be **0** or range from **128** to **2160**.
// Defaults to: **0**. If set to **0**, the system will automatically adjust the `height` according to the `width`.
func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoVideo) *int {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.IntPtrOutput)
}

// Specifies the video quality.
// The value can be: **4K**, **2K**, **FHD**, **SD**, **LD** and **HD**.
func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) Quality() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoVideo) *string {
		if v == nil {
			return nil
		}
		return &v.Quality
	}).(pulumi.StringPtrOutput)
}

// Specifies the video width. The value can be **0** or range from **128** to **3840**.
// Defaults to: **0**. If set to **0**, the system will automatically adjust the `width` according to the `height`.
func (o TranscodingTemplateGroupQualityInfoVideoPtrOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupQualityInfoVideo) *int {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetThumbnailInput)(nil)).Elem(), MediaAssetThumbnailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MediaAssetThumbnailPtrInput)(nil)).Elem(), MediaAssetThumbnailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupQualityInfoInput)(nil)).Elem(), TranscodingTemplateGroupQualityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupQualityInfoArrayInput)(nil)).Elem(), TranscodingTemplateGroupQualityInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupQualityInfoAudioInput)(nil)).Elem(), TranscodingTemplateGroupQualityInfoAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupQualityInfoAudioPtrInput)(nil)).Elem(), TranscodingTemplateGroupQualityInfoAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupQualityInfoVideoInput)(nil)).Elem(), TranscodingTemplateGroupQualityInfoVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupQualityInfoVideoPtrInput)(nil)).Elem(), TranscodingTemplateGroupQualityInfoVideoArgs{})
	pulumi.RegisterOutputType(MediaAssetThumbnailOutput{})
	pulumi.RegisterOutputType(MediaAssetThumbnailPtrOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupQualityInfoOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupQualityInfoArrayOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupQualityInfoAudioOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupQualityInfoAudioPtrOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupQualityInfoVideoOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupQualityInfoVideoPtrOutput{})
}
