// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the details of available DDS flavors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Dds"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Dds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dds.GetFlavors(ctx, &dds.GetFlavorsArgs{
//				EngineName: "DDS-Community",
//				Vcpus:      pulumi.StringRef("8"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFlavors(ctx *pulumi.Context, args *GetFlavorsArgs, opts ...pulumi.InvokeOption) (*GetFlavorsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetFlavorsResult
	err := ctx.Invoke("huaweicloud:Dds/getFlavors:getFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlavors.
type GetFlavorsArgs struct {
	// Specifies the engine name of the dds, "DDS-Community" and "DDS-Enhanced" are
	// supported.
	EngineName string `pulumi:"engineName"`
	// Specifies the ram of the dds flavor in GB.
	Memory *string `pulumi:"memory"`
	// Specifies the region in which to obtain the flavors. If omitted,
	// the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the type of the dds falvor. "mongos", "shard", "config", "replica" and "single"
	// are supported.
	Type *string `pulumi:"type"`
	// Specifies the vcpus of the dds flavor.
	Vcpus *string `pulumi:"vcpus"`
}

// A collection of values returned by getFlavors.
type GetFlavorsResult struct {
	EngineName string `pulumi:"engineName"`
	// Indicates the flavors information. Structure is documented below.
	Flavors []GetFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// See `memory` above.
	Memory *string `pulumi:"memory"`
	Region string  `pulumi:"region"`
	// See `type` above.
	Type *string `pulumi:"type"`
	// See `vcpus` above.
	Vcpus *string `pulumi:"vcpus"`
}

func GetFlavorsOutput(ctx *pulumi.Context, args GetFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetFlavorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFlavorsResult, error) {
			args := v.(GetFlavorsArgs)
			r, err := GetFlavors(ctx, &args, opts...)
			var s GetFlavorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFlavorsResultOutput)
}

// A collection of arguments for invoking getFlavors.
type GetFlavorsOutputArgs struct {
	// Specifies the engine name of the dds, "DDS-Community" and "DDS-Enhanced" are
	// supported.
	EngineName pulumi.StringInput `pulumi:"engineName"`
	// Specifies the ram of the dds flavor in GB.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
	// Specifies the region in which to obtain the flavors. If omitted,
	// the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the type of the dds falvor. "mongos", "shard", "config", "replica" and "single"
	// are supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the vcpus of the dds flavor.
	Vcpus pulumi.StringPtrInput `pulumi:"vcpus"`
}

func (GetFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getFlavors.
type GetFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlavorsResult)(nil)).Elem()
}

func (o GetFlavorsResultOutput) ToGetFlavorsResultOutput() GetFlavorsResultOutput {
	return o
}

func (o GetFlavorsResultOutput) ToGetFlavorsResultOutputWithContext(ctx context.Context) GetFlavorsResultOutput {
	return o
}

func (o GetFlavorsResultOutput) EngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsResult) string { return v.EngineName }).(pulumi.StringOutput)
}

// Indicates the flavors information. Structure is documented below.
func (o GetFlavorsResultOutput) Flavors() GetFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetFlavorsResult) []GetFlavorsFlavor { return v.Flavors }).(GetFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// See `memory` above.
func (o GetFlavorsResultOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlavorsResult) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

func (o GetFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

// See `type` above.
func (o GetFlavorsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlavorsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// See `vcpus` above.
func (o GetFlavorsResultOutput) Vcpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlavorsResult) *string { return v.Vcpus }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlavorsResultOutput{})
}
