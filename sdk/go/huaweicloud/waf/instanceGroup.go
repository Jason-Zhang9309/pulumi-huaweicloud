// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceGroup struct {
	pulumi.CustomResourceState

	BodyLimit         pulumi.IntOutput         `pulumi:"bodyLimit"`
	ConnectionTimeout pulumi.IntOutput         `pulumi:"connectionTimeout"`
	Description       pulumi.StringPtrOutput   `pulumi:"description"`
	HeaderLimit       pulumi.IntOutput         `pulumi:"headerLimit"`
	LoadBalancers     pulumi.StringArrayOutput `pulumi:"loadBalancers"`
	Name              pulumi.StringOutput      `pulumi:"name"`
	ReadTimeout       pulumi.IntOutput         `pulumi:"readTimeout"`
	Region            pulumi.StringOutput      `pulumi:"region"`
	VpcId             pulumi.StringOutput      `pulumi:"vpcId"`
	WriteTimeout      pulumi.IntOutput         `pulumi:"writeTimeout"`
}

// NewInstanceGroup registers a new resource with the given unique name, arguments, and options.
func NewInstanceGroup(ctx *pulumi.Context,
	name string, args *InstanceGroupArgs, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource InstanceGroup
	err := ctx.RegisterResource("huaweicloud:Waf/instanceGroup:InstanceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGroup gets an existing InstanceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceGroupState, opts ...pulumi.ResourceOption) (*InstanceGroup, error) {
	var resource InstanceGroup
	err := ctx.ReadResource("huaweicloud:Waf/instanceGroup:InstanceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceGroup resources.
type instanceGroupState struct {
	BodyLimit         *int     `pulumi:"bodyLimit"`
	ConnectionTimeout *int     `pulumi:"connectionTimeout"`
	Description       *string  `pulumi:"description"`
	HeaderLimit       *int     `pulumi:"headerLimit"`
	LoadBalancers     []string `pulumi:"loadBalancers"`
	Name              *string  `pulumi:"name"`
	ReadTimeout       *int     `pulumi:"readTimeout"`
	Region            *string  `pulumi:"region"`
	VpcId             *string  `pulumi:"vpcId"`
	WriteTimeout      *int     `pulumi:"writeTimeout"`
}

type InstanceGroupState struct {
	BodyLimit         pulumi.IntPtrInput
	ConnectionTimeout pulumi.IntPtrInput
	Description       pulumi.StringPtrInput
	HeaderLimit       pulumi.IntPtrInput
	LoadBalancers     pulumi.StringArrayInput
	Name              pulumi.StringPtrInput
	ReadTimeout       pulumi.IntPtrInput
	Region            pulumi.StringPtrInput
	VpcId             pulumi.StringPtrInput
	WriteTimeout      pulumi.IntPtrInput
}

func (InstanceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupState)(nil)).Elem()
}

type instanceGroupArgs struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Region      *string `pulumi:"region"`
	VpcId       string  `pulumi:"vpcId"`
}

// The set of arguments for constructing a InstanceGroup resource.
type InstanceGroupArgs struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Region      pulumi.StringPtrInput
	VpcId       pulumi.StringInput
}

func (InstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGroupArgs)(nil)).Elem()
}

type InstanceGroupInput interface {
	pulumi.Input

	ToInstanceGroupOutput() InstanceGroupOutput
	ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput
}

func (*InstanceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroup)(nil)).Elem()
}

func (i *InstanceGroup) ToInstanceGroupOutput() InstanceGroupOutput {
	return i.ToInstanceGroupOutputWithContext(context.Background())
}

func (i *InstanceGroup) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupOutput)
}

// InstanceGroupArrayInput is an input type that accepts InstanceGroupArray and InstanceGroupArrayOutput values.
// You can construct a concrete instance of `InstanceGroupArrayInput` via:
//
//	InstanceGroupArray{ InstanceGroupArgs{...} }
type InstanceGroupArrayInput interface {
	pulumi.Input

	ToInstanceGroupArrayOutput() InstanceGroupArrayOutput
	ToInstanceGroupArrayOutputWithContext(context.Context) InstanceGroupArrayOutput
}

type InstanceGroupArray []InstanceGroupInput

func (InstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceGroup)(nil)).Elem()
}

func (i InstanceGroupArray) ToInstanceGroupArrayOutput() InstanceGroupArrayOutput {
	return i.ToInstanceGroupArrayOutputWithContext(context.Background())
}

func (i InstanceGroupArray) ToInstanceGroupArrayOutputWithContext(ctx context.Context) InstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupArrayOutput)
}

// InstanceGroupMapInput is an input type that accepts InstanceGroupMap and InstanceGroupMapOutput values.
// You can construct a concrete instance of `InstanceGroupMapInput` via:
//
//	InstanceGroupMap{ "key": InstanceGroupArgs{...} }
type InstanceGroupMapInput interface {
	pulumi.Input

	ToInstanceGroupMapOutput() InstanceGroupMapOutput
	ToInstanceGroupMapOutputWithContext(context.Context) InstanceGroupMapOutput
}

type InstanceGroupMap map[string]InstanceGroupInput

func (InstanceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceGroup)(nil)).Elem()
}

func (i InstanceGroupMap) ToInstanceGroupMapOutput() InstanceGroupMapOutput {
	return i.ToInstanceGroupMapOutputWithContext(context.Background())
}

func (i InstanceGroupMap) ToInstanceGroupMapOutputWithContext(ctx context.Context) InstanceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceGroupMapOutput)
}

type InstanceGroupOutput struct{ *pulumi.OutputState }

func (InstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupOutput) ToInstanceGroupOutput() InstanceGroupOutput {
	return o
}

func (o InstanceGroupOutput) ToInstanceGroupOutputWithContext(ctx context.Context) InstanceGroupOutput {
	return o
}

func (o InstanceGroupOutput) BodyLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.IntOutput { return v.BodyLimit }).(pulumi.IntOutput)
}

func (o InstanceGroupOutput) ConnectionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.IntOutput { return v.ConnectionTimeout }).(pulumi.IntOutput)
}

func (o InstanceGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o InstanceGroupOutput) HeaderLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.IntOutput { return v.HeaderLimit }).(pulumi.IntOutput)
}

func (o InstanceGroupOutput) LoadBalancers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringArrayOutput { return v.LoadBalancers }).(pulumi.StringArrayOutput)
}

func (o InstanceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o InstanceGroupOutput) ReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.IntOutput { return v.ReadTimeout }).(pulumi.IntOutput)
}

func (o InstanceGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o InstanceGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o InstanceGroupOutput) WriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceGroup) pulumi.IntOutput { return v.WriteTimeout }).(pulumi.IntOutput)
}

type InstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (InstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupArrayOutput) ToInstanceGroupArrayOutput() InstanceGroupArrayOutput {
	return o
}

func (o InstanceGroupArrayOutput) ToInstanceGroupArrayOutputWithContext(ctx context.Context) InstanceGroupArrayOutput {
	return o
}

func (o InstanceGroupArrayOutput) Index(i pulumi.IntInput) InstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceGroup {
		return vs[0].([]*InstanceGroup)[vs[1].(int)]
	}).(InstanceGroupOutput)
}

type InstanceGroupMapOutput struct{ *pulumi.OutputState }

func (InstanceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceGroup)(nil)).Elem()
}

func (o InstanceGroupMapOutput) ToInstanceGroupMapOutput() InstanceGroupMapOutput {
	return o
}

func (o InstanceGroupMapOutput) ToInstanceGroupMapOutputWithContext(ctx context.Context) InstanceGroupMapOutput {
	return o
}

func (o InstanceGroupMapOutput) MapIndex(k pulumi.StringInput) InstanceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceGroup {
		return vs[0].(map[string]*InstanceGroup)[vs[1].(string)]
	}).(InstanceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupInput)(nil)).Elem(), &InstanceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupArrayInput)(nil)).Elem(), InstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceGroupMapInput)(nil)).Elem(), InstanceGroupMap{})
	pulumi.RegisterOutputType(InstanceGroupOutput{})
	pulumi.RegisterOutputType(InstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(InstanceGroupMapOutput{})
}
