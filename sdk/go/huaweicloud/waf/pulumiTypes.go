// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DedicatedDomainConnectionProtection struct {
	// Specifies the protection duration (s) for connection protection. During this period, WAF
	// stops forwarding website requests. Valid value ranges from `0` to `2,147,483,647`.
	Duration *int `pulumi:"duration"`
	// Specifies the `502`/`504` error percentage. A breakdown protection is triggered
	// when the `502`/`504` error threshold and percentage threshold have been reached. Valid value ranges from `0` to `99`.
	ErrorPercentage *float64 `pulumi:"errorPercentage"`
	// Specifies the `502`/`504` error threshold for every 30 seconds. Valid value ranges
	// from `0` to `2,147,483,647`.
	ErrorThreshold *int `pulumi:"errorThreshold"`
	// Specifies the breakdown duration (s) when the breakdown is triggered for the first
	// time. Valid value ranges from `0` to `2,147,483,647`.
	InitialDowntime *int `pulumi:"initialDowntime"`
	// Specifies the maximum multiplier for consecutive breakdowns
	// that occur within an hour. Valid value ranges from `0` to `2,147,483,647`.
	// For example: Assume that you set the initial downtime to `180s` and the maximum multiplier to `3`. If the breakdown
	// protection is triggered for the second time, the website downtime is 360s (180s X 2).
	// If the breakdown protection is triggered for the third or fourth time, the website downtime is 540s (180s x 3).
	// The breakdowns are calculated every one hour.
	MultiplierForConsecutiveBreakdowns *int `pulumi:"multiplierForConsecutiveBreakdowns"`
	// Specifies the pending URL request threshold. Connection protection
	// is triggered when the number of read URL requests reaches the threshold you configure. Valid value ranges from `0` to
	// `2,147,483,647`.
	PendingUrlRequestThreshold *int `pulumi:"pendingUrlRequestThreshold"`
	// Specifies whether to enable connection protection. Defaults to **false**.
	Status *bool `pulumi:"status"`
}

// DedicatedDomainConnectionProtectionInput is an input type that accepts DedicatedDomainConnectionProtectionArgs and DedicatedDomainConnectionProtectionOutput values.
// You can construct a concrete instance of `DedicatedDomainConnectionProtectionInput` via:
//
//	DedicatedDomainConnectionProtectionArgs{...}
type DedicatedDomainConnectionProtectionInput interface {
	pulumi.Input

	ToDedicatedDomainConnectionProtectionOutput() DedicatedDomainConnectionProtectionOutput
	ToDedicatedDomainConnectionProtectionOutputWithContext(context.Context) DedicatedDomainConnectionProtectionOutput
}

type DedicatedDomainConnectionProtectionArgs struct {
	// Specifies the protection duration (s) for connection protection. During this period, WAF
	// stops forwarding website requests. Valid value ranges from `0` to `2,147,483,647`.
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// Specifies the `502`/`504` error percentage. A breakdown protection is triggered
	// when the `502`/`504` error threshold and percentage threshold have been reached. Valid value ranges from `0` to `99`.
	ErrorPercentage pulumi.Float64PtrInput `pulumi:"errorPercentage"`
	// Specifies the `502`/`504` error threshold for every 30 seconds. Valid value ranges
	// from `0` to `2,147,483,647`.
	ErrorThreshold pulumi.IntPtrInput `pulumi:"errorThreshold"`
	// Specifies the breakdown duration (s) when the breakdown is triggered for the first
	// time. Valid value ranges from `0` to `2,147,483,647`.
	InitialDowntime pulumi.IntPtrInput `pulumi:"initialDowntime"`
	// Specifies the maximum multiplier for consecutive breakdowns
	// that occur within an hour. Valid value ranges from `0` to `2,147,483,647`.
	// For example: Assume that you set the initial downtime to `180s` and the maximum multiplier to `3`. If the breakdown
	// protection is triggered for the second time, the website downtime is 360s (180s X 2).
	// If the breakdown protection is triggered for the third or fourth time, the website downtime is 540s (180s x 3).
	// The breakdowns are calculated every one hour.
	MultiplierForConsecutiveBreakdowns pulumi.IntPtrInput `pulumi:"multiplierForConsecutiveBreakdowns"`
	// Specifies the pending URL request threshold. Connection protection
	// is triggered when the number of read URL requests reaches the threshold you configure. Valid value ranges from `0` to
	// `2,147,483,647`.
	PendingUrlRequestThreshold pulumi.IntPtrInput `pulumi:"pendingUrlRequestThreshold"`
	// Specifies whether to enable connection protection. Defaults to **false**.
	Status pulumi.BoolPtrInput `pulumi:"status"`
}

func (DedicatedDomainConnectionProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainConnectionProtection)(nil)).Elem()
}

func (i DedicatedDomainConnectionProtectionArgs) ToDedicatedDomainConnectionProtectionOutput() DedicatedDomainConnectionProtectionOutput {
	return i.ToDedicatedDomainConnectionProtectionOutputWithContext(context.Background())
}

func (i DedicatedDomainConnectionProtectionArgs) ToDedicatedDomainConnectionProtectionOutputWithContext(ctx context.Context) DedicatedDomainConnectionProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainConnectionProtectionOutput)
}

func (i DedicatedDomainConnectionProtectionArgs) ToDedicatedDomainConnectionProtectionPtrOutput() DedicatedDomainConnectionProtectionPtrOutput {
	return i.ToDedicatedDomainConnectionProtectionPtrOutputWithContext(context.Background())
}

func (i DedicatedDomainConnectionProtectionArgs) ToDedicatedDomainConnectionProtectionPtrOutputWithContext(ctx context.Context) DedicatedDomainConnectionProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainConnectionProtectionOutput).ToDedicatedDomainConnectionProtectionPtrOutputWithContext(ctx)
}

// DedicatedDomainConnectionProtectionPtrInput is an input type that accepts DedicatedDomainConnectionProtectionArgs, DedicatedDomainConnectionProtectionPtr and DedicatedDomainConnectionProtectionPtrOutput values.
// You can construct a concrete instance of `DedicatedDomainConnectionProtectionPtrInput` via:
//
//	        DedicatedDomainConnectionProtectionArgs{...}
//
//	or:
//
//	        nil
type DedicatedDomainConnectionProtectionPtrInput interface {
	pulumi.Input

	ToDedicatedDomainConnectionProtectionPtrOutput() DedicatedDomainConnectionProtectionPtrOutput
	ToDedicatedDomainConnectionProtectionPtrOutputWithContext(context.Context) DedicatedDomainConnectionProtectionPtrOutput
}

type dedicatedDomainConnectionProtectionPtrType DedicatedDomainConnectionProtectionArgs

func DedicatedDomainConnectionProtectionPtr(v *DedicatedDomainConnectionProtectionArgs) DedicatedDomainConnectionProtectionPtrInput {
	return (*dedicatedDomainConnectionProtectionPtrType)(v)
}

func (*dedicatedDomainConnectionProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainConnectionProtection)(nil)).Elem()
}

func (i *dedicatedDomainConnectionProtectionPtrType) ToDedicatedDomainConnectionProtectionPtrOutput() DedicatedDomainConnectionProtectionPtrOutput {
	return i.ToDedicatedDomainConnectionProtectionPtrOutputWithContext(context.Background())
}

func (i *dedicatedDomainConnectionProtectionPtrType) ToDedicatedDomainConnectionProtectionPtrOutputWithContext(ctx context.Context) DedicatedDomainConnectionProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainConnectionProtectionPtrOutput)
}

type DedicatedDomainConnectionProtectionOutput struct{ *pulumi.OutputState }

func (DedicatedDomainConnectionProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainConnectionProtection)(nil)).Elem()
}

func (o DedicatedDomainConnectionProtectionOutput) ToDedicatedDomainConnectionProtectionOutput() DedicatedDomainConnectionProtectionOutput {
	return o
}

func (o DedicatedDomainConnectionProtectionOutput) ToDedicatedDomainConnectionProtectionOutputWithContext(ctx context.Context) DedicatedDomainConnectionProtectionOutput {
	return o
}

func (o DedicatedDomainConnectionProtectionOutput) ToDedicatedDomainConnectionProtectionPtrOutput() DedicatedDomainConnectionProtectionPtrOutput {
	return o.ToDedicatedDomainConnectionProtectionPtrOutputWithContext(context.Background())
}

func (o DedicatedDomainConnectionProtectionOutput) ToDedicatedDomainConnectionProtectionPtrOutputWithContext(ctx context.Context) DedicatedDomainConnectionProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DedicatedDomainConnectionProtection) *DedicatedDomainConnectionProtection {
		return &v
	}).(DedicatedDomainConnectionProtectionPtrOutput)
}

// Specifies the protection duration (s) for connection protection. During this period, WAF
// stops forwarding website requests. Valid value ranges from `0` to `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// Specifies the `502`/`504` error percentage. A breakdown protection is triggered
// when the `502`/`504` error threshold and percentage threshold have been reached. Valid value ranges from `0` to `99`.
func (o DedicatedDomainConnectionProtectionOutput) ErrorPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *float64 { return v.ErrorPercentage }).(pulumi.Float64PtrOutput)
}

// Specifies the `502`/`504` error threshold for every 30 seconds. Valid value ranges
// from `0` to `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *int { return v.ErrorThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the breakdown duration (s) when the breakdown is triggered for the first
// time. Valid value ranges from `0` to `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionOutput) InitialDowntime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *int { return v.InitialDowntime }).(pulumi.IntPtrOutput)
}

// Specifies the maximum multiplier for consecutive breakdowns
// that occur within an hour. Valid value ranges from `0` to `2,147,483,647`.
// For example: Assume that you set the initial downtime to `180s` and the maximum multiplier to `3`. If the breakdown
// protection is triggered for the second time, the website downtime is 360s (180s X 2).
// If the breakdown protection is triggered for the third or fourth time, the website downtime is 540s (180s x 3).
// The breakdowns are calculated every one hour.
func (o DedicatedDomainConnectionProtectionOutput) MultiplierForConsecutiveBreakdowns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *int { return v.MultiplierForConsecutiveBreakdowns }).(pulumi.IntPtrOutput)
}

// Specifies the pending URL request threshold. Connection protection
// is triggered when the number of read URL requests reaches the threshold you configure. Valid value ranges from `0` to
// `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionOutput) PendingUrlRequestThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *int { return v.PendingUrlRequestThreshold }).(pulumi.IntPtrOutput)
}

// Specifies whether to enable connection protection. Defaults to **false**.
func (o DedicatedDomainConnectionProtectionOutput) Status() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DedicatedDomainConnectionProtection) *bool { return v.Status }).(pulumi.BoolPtrOutput)
}

type DedicatedDomainConnectionProtectionPtrOutput struct{ *pulumi.OutputState }

func (DedicatedDomainConnectionProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainConnectionProtection)(nil)).Elem()
}

func (o DedicatedDomainConnectionProtectionPtrOutput) ToDedicatedDomainConnectionProtectionPtrOutput() DedicatedDomainConnectionProtectionPtrOutput {
	return o
}

func (o DedicatedDomainConnectionProtectionPtrOutput) ToDedicatedDomainConnectionProtectionPtrOutputWithContext(ctx context.Context) DedicatedDomainConnectionProtectionPtrOutput {
	return o
}

func (o DedicatedDomainConnectionProtectionPtrOutput) Elem() DedicatedDomainConnectionProtectionOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) DedicatedDomainConnectionProtection {
		if v != nil {
			return *v
		}
		var ret DedicatedDomainConnectionProtection
		return ret
	}).(DedicatedDomainConnectionProtectionOutput)
}

// Specifies the protection duration (s) for connection protection. During this period, WAF
// stops forwarding website requests. Valid value ranges from `0` to `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// Specifies the `502`/`504` error percentage. A breakdown protection is triggered
// when the `502`/`504` error threshold and percentage threshold have been reached. Valid value ranges from `0` to `99`.
func (o DedicatedDomainConnectionProtectionPtrOutput) ErrorPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *float64 {
		if v == nil {
			return nil
		}
		return v.ErrorPercentage
	}).(pulumi.Float64PtrOutput)
}

// Specifies the `502`/`504` error threshold for every 30 seconds. Valid value ranges
// from `0` to `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionPtrOutput) ErrorThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *int {
		if v == nil {
			return nil
		}
		return v.ErrorThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the breakdown duration (s) when the breakdown is triggered for the first
// time. Valid value ranges from `0` to `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionPtrOutput) InitialDowntime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *int {
		if v == nil {
			return nil
		}
		return v.InitialDowntime
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum multiplier for consecutive breakdowns
// that occur within an hour. Valid value ranges from `0` to `2,147,483,647`.
// For example: Assume that you set the initial downtime to `180s` and the maximum multiplier to `3`. If the breakdown
// protection is triggered for the second time, the website downtime is 360s (180s X 2).
// If the breakdown protection is triggered for the third or fourth time, the website downtime is 540s (180s x 3).
// The breakdowns are calculated every one hour.
func (o DedicatedDomainConnectionProtectionPtrOutput) MultiplierForConsecutiveBreakdowns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *int {
		if v == nil {
			return nil
		}
		return v.MultiplierForConsecutiveBreakdowns
	}).(pulumi.IntPtrOutput)
}

// Specifies the pending URL request threshold. Connection protection
// is triggered when the number of read URL requests reaches the threshold you configure. Valid value ranges from `0` to
// `2,147,483,647`.
func (o DedicatedDomainConnectionProtectionPtrOutput) PendingUrlRequestThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *int {
		if v == nil {
			return nil
		}
		return v.PendingUrlRequestThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies whether to enable connection protection. Defaults to **false**.
func (o DedicatedDomainConnectionProtectionPtrOutput) Status() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainConnectionProtection) *bool {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.BoolPtrOutput)
}

type DedicatedDomainCustomPage struct {
	// Specifies the content type of the custom alarm page.
	// The value can be **text/html**, **text/xml** or **application/json**.
	BlockPageType string `pulumi:"blockPageType"`
	// Specifies the HTTP return code.
	// The value can be a positive integer in the range of `200`-`599` except `408`, `444` and `499`.
	HttpReturnCode string `pulumi:"httpReturnCode"`
	// Specifies the page content. The page content based on the selected page type.
	// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
	// can be available.
	PageContent string `pulumi:"pageContent"`
}

// DedicatedDomainCustomPageInput is an input type that accepts DedicatedDomainCustomPageArgs and DedicatedDomainCustomPageOutput values.
// You can construct a concrete instance of `DedicatedDomainCustomPageInput` via:
//
//	DedicatedDomainCustomPageArgs{...}
type DedicatedDomainCustomPageInput interface {
	pulumi.Input

	ToDedicatedDomainCustomPageOutput() DedicatedDomainCustomPageOutput
	ToDedicatedDomainCustomPageOutputWithContext(context.Context) DedicatedDomainCustomPageOutput
}

type DedicatedDomainCustomPageArgs struct {
	// Specifies the content type of the custom alarm page.
	// The value can be **text/html**, **text/xml** or **application/json**.
	BlockPageType pulumi.StringInput `pulumi:"blockPageType"`
	// Specifies the HTTP return code.
	// The value can be a positive integer in the range of `200`-`599` except `408`, `444` and `499`.
	HttpReturnCode pulumi.StringInput `pulumi:"httpReturnCode"`
	// Specifies the page content. The page content based on the selected page type.
	// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
	// can be available.
	PageContent pulumi.StringInput `pulumi:"pageContent"`
}

func (DedicatedDomainCustomPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainCustomPage)(nil)).Elem()
}

func (i DedicatedDomainCustomPageArgs) ToDedicatedDomainCustomPageOutput() DedicatedDomainCustomPageOutput {
	return i.ToDedicatedDomainCustomPageOutputWithContext(context.Background())
}

func (i DedicatedDomainCustomPageArgs) ToDedicatedDomainCustomPageOutputWithContext(ctx context.Context) DedicatedDomainCustomPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainCustomPageOutput)
}

func (i DedicatedDomainCustomPageArgs) ToDedicatedDomainCustomPagePtrOutput() DedicatedDomainCustomPagePtrOutput {
	return i.ToDedicatedDomainCustomPagePtrOutputWithContext(context.Background())
}

func (i DedicatedDomainCustomPageArgs) ToDedicatedDomainCustomPagePtrOutputWithContext(ctx context.Context) DedicatedDomainCustomPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainCustomPageOutput).ToDedicatedDomainCustomPagePtrOutputWithContext(ctx)
}

// DedicatedDomainCustomPagePtrInput is an input type that accepts DedicatedDomainCustomPageArgs, DedicatedDomainCustomPagePtr and DedicatedDomainCustomPagePtrOutput values.
// You can construct a concrete instance of `DedicatedDomainCustomPagePtrInput` via:
//
//	        DedicatedDomainCustomPageArgs{...}
//
//	or:
//
//	        nil
type DedicatedDomainCustomPagePtrInput interface {
	pulumi.Input

	ToDedicatedDomainCustomPagePtrOutput() DedicatedDomainCustomPagePtrOutput
	ToDedicatedDomainCustomPagePtrOutputWithContext(context.Context) DedicatedDomainCustomPagePtrOutput
}

type dedicatedDomainCustomPagePtrType DedicatedDomainCustomPageArgs

func DedicatedDomainCustomPagePtr(v *DedicatedDomainCustomPageArgs) DedicatedDomainCustomPagePtrInput {
	return (*dedicatedDomainCustomPagePtrType)(v)
}

func (*dedicatedDomainCustomPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainCustomPage)(nil)).Elem()
}

func (i *dedicatedDomainCustomPagePtrType) ToDedicatedDomainCustomPagePtrOutput() DedicatedDomainCustomPagePtrOutput {
	return i.ToDedicatedDomainCustomPagePtrOutputWithContext(context.Background())
}

func (i *dedicatedDomainCustomPagePtrType) ToDedicatedDomainCustomPagePtrOutputWithContext(ctx context.Context) DedicatedDomainCustomPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainCustomPagePtrOutput)
}

type DedicatedDomainCustomPageOutput struct{ *pulumi.OutputState }

func (DedicatedDomainCustomPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainCustomPage)(nil)).Elem()
}

func (o DedicatedDomainCustomPageOutput) ToDedicatedDomainCustomPageOutput() DedicatedDomainCustomPageOutput {
	return o
}

func (o DedicatedDomainCustomPageOutput) ToDedicatedDomainCustomPageOutputWithContext(ctx context.Context) DedicatedDomainCustomPageOutput {
	return o
}

func (o DedicatedDomainCustomPageOutput) ToDedicatedDomainCustomPagePtrOutput() DedicatedDomainCustomPagePtrOutput {
	return o.ToDedicatedDomainCustomPagePtrOutputWithContext(context.Background())
}

func (o DedicatedDomainCustomPageOutput) ToDedicatedDomainCustomPagePtrOutputWithContext(ctx context.Context) DedicatedDomainCustomPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DedicatedDomainCustomPage) *DedicatedDomainCustomPage {
		return &v
	}).(DedicatedDomainCustomPagePtrOutput)
}

// Specifies the content type of the custom alarm page.
// The value can be **text/html**, **text/xml** or **application/json**.
func (o DedicatedDomainCustomPageOutput) BlockPageType() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainCustomPage) string { return v.BlockPageType }).(pulumi.StringOutput)
}

// Specifies the HTTP return code.
// The value can be a positive integer in the range of `200`-`599` except `408`, `444` and `499`.
func (o DedicatedDomainCustomPageOutput) HttpReturnCode() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainCustomPage) string { return v.HttpReturnCode }).(pulumi.StringOutput)
}

// Specifies the page content. The page content based on the selected page type.
// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
// can be available.
func (o DedicatedDomainCustomPageOutput) PageContent() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainCustomPage) string { return v.PageContent }).(pulumi.StringOutput)
}

type DedicatedDomainCustomPagePtrOutput struct{ *pulumi.OutputState }

func (DedicatedDomainCustomPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainCustomPage)(nil)).Elem()
}

func (o DedicatedDomainCustomPagePtrOutput) ToDedicatedDomainCustomPagePtrOutput() DedicatedDomainCustomPagePtrOutput {
	return o
}

func (o DedicatedDomainCustomPagePtrOutput) ToDedicatedDomainCustomPagePtrOutputWithContext(ctx context.Context) DedicatedDomainCustomPagePtrOutput {
	return o
}

func (o DedicatedDomainCustomPagePtrOutput) Elem() DedicatedDomainCustomPageOutput {
	return o.ApplyT(func(v *DedicatedDomainCustomPage) DedicatedDomainCustomPage {
		if v != nil {
			return *v
		}
		var ret DedicatedDomainCustomPage
		return ret
	}).(DedicatedDomainCustomPageOutput)
}

// Specifies the content type of the custom alarm page.
// The value can be **text/html**, **text/xml** or **application/json**.
func (o DedicatedDomainCustomPagePtrOutput) BlockPageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainCustomPage) *string {
		if v == nil {
			return nil
		}
		return &v.BlockPageType
	}).(pulumi.StringPtrOutput)
}

// Specifies the HTTP return code.
// The value can be a positive integer in the range of `200`-`599` except `408`, `444` and `499`.
func (o DedicatedDomainCustomPagePtrOutput) HttpReturnCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainCustomPage) *string {
		if v == nil {
			return nil
		}
		return &v.HttpReturnCode
	}).(pulumi.StringPtrOutput)
}

// Specifies the page content. The page content based on the selected page type.
// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
// can be available.
func (o DedicatedDomainCustomPagePtrOutput) PageContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainCustomPage) *string {
		if v == nil {
			return nil
		}
		return &v.PageContent
	}).(pulumi.StringPtrOutput)
}

type DedicatedDomainServer struct {
	// Specifies the IP address or domain name of the web server accessed by the
	// client. For example, `192.168.1.1` or `www.example.com`. Changing this creates a new service.
	Address string `pulumi:"address"`
	// Specifies the protocol type of the client. The options include **HTTP**
	// and **HTTPS**. Changing this creates a new service.
	ClientProtocol string `pulumi:"clientProtocol"`
	// Specifies the port number used by the web server. The value ranges from `0` to
	// `65,535`. Changing this creates a new service.
	Port int `pulumi:"port"`
	// Specifies the protocol used by WAF to forward client requests to the
	// server. The valid values are **HTTP** and **HTTPS**. Changing this creates a new service.
	ServerProtocol string `pulumi:"serverProtocol"`
	// Specifies the server network type, IPv4 or IPv6.
	// Valid values are **ipv4** and **ipv6**. Changing this creates a new service.
	Type string `pulumi:"type"`
	// Specifies the ID of the VPC used by the server. Changing this creates a service.
	VpcId string `pulumi:"vpcId"`
}

// DedicatedDomainServerInput is an input type that accepts DedicatedDomainServerArgs and DedicatedDomainServerOutput values.
// You can construct a concrete instance of `DedicatedDomainServerInput` via:
//
//	DedicatedDomainServerArgs{...}
type DedicatedDomainServerInput interface {
	pulumi.Input

	ToDedicatedDomainServerOutput() DedicatedDomainServerOutput
	ToDedicatedDomainServerOutputWithContext(context.Context) DedicatedDomainServerOutput
}

type DedicatedDomainServerArgs struct {
	// Specifies the IP address or domain name of the web server accessed by the
	// client. For example, `192.168.1.1` or `www.example.com`. Changing this creates a new service.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the protocol type of the client. The options include **HTTP**
	// and **HTTPS**. Changing this creates a new service.
	ClientProtocol pulumi.StringInput `pulumi:"clientProtocol"`
	// Specifies the port number used by the web server. The value ranges from `0` to
	// `65,535`. Changing this creates a new service.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the protocol used by WAF to forward client requests to the
	// server. The valid values are **HTTP** and **HTTPS**. Changing this creates a new service.
	ServerProtocol pulumi.StringInput `pulumi:"serverProtocol"`
	// Specifies the server network type, IPv4 or IPv6.
	// Valid values are **ipv4** and **ipv6**. Changing this creates a new service.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the ID of the VPC used by the server. Changing this creates a service.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DedicatedDomainServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainServer)(nil)).Elem()
}

func (i DedicatedDomainServerArgs) ToDedicatedDomainServerOutput() DedicatedDomainServerOutput {
	return i.ToDedicatedDomainServerOutputWithContext(context.Background())
}

func (i DedicatedDomainServerArgs) ToDedicatedDomainServerOutputWithContext(ctx context.Context) DedicatedDomainServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainServerOutput)
}

// DedicatedDomainServerArrayInput is an input type that accepts DedicatedDomainServerArray and DedicatedDomainServerArrayOutput values.
// You can construct a concrete instance of `DedicatedDomainServerArrayInput` via:
//
//	DedicatedDomainServerArray{ DedicatedDomainServerArgs{...} }
type DedicatedDomainServerArrayInput interface {
	pulumi.Input

	ToDedicatedDomainServerArrayOutput() DedicatedDomainServerArrayOutput
	ToDedicatedDomainServerArrayOutputWithContext(context.Context) DedicatedDomainServerArrayOutput
}

type DedicatedDomainServerArray []DedicatedDomainServerInput

func (DedicatedDomainServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedDomainServer)(nil)).Elem()
}

func (i DedicatedDomainServerArray) ToDedicatedDomainServerArrayOutput() DedicatedDomainServerArrayOutput {
	return i.ToDedicatedDomainServerArrayOutputWithContext(context.Background())
}

func (i DedicatedDomainServerArray) ToDedicatedDomainServerArrayOutputWithContext(ctx context.Context) DedicatedDomainServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainServerArrayOutput)
}

type DedicatedDomainServerOutput struct{ *pulumi.OutputState }

func (DedicatedDomainServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainServer)(nil)).Elem()
}

func (o DedicatedDomainServerOutput) ToDedicatedDomainServerOutput() DedicatedDomainServerOutput {
	return o
}

func (o DedicatedDomainServerOutput) ToDedicatedDomainServerOutputWithContext(ctx context.Context) DedicatedDomainServerOutput {
	return o
}

// Specifies the IP address or domain name of the web server accessed by the
// client. For example, `192.168.1.1` or `www.example.com`. Changing this creates a new service.
func (o DedicatedDomainServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the protocol type of the client. The options include **HTTP**
// and **HTTPS**. Changing this creates a new service.
func (o DedicatedDomainServerOutput) ClientProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.ClientProtocol }).(pulumi.StringOutput)
}

// Specifies the port number used by the web server. The value ranges from `0` to
// `65,535`. Changing this creates a new service.
func (o DedicatedDomainServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DedicatedDomainServer) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the protocol used by WAF to forward client requests to the
// server. The valid values are **HTTP** and **HTTPS**. Changing this creates a new service.
func (o DedicatedDomainServerOutput) ServerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.ServerProtocol }).(pulumi.StringOutput)
}

// Specifies the server network type, IPv4 or IPv6.
// Valid values are **ipv4** and **ipv6**. Changing this creates a new service.
func (o DedicatedDomainServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the ID of the VPC used by the server. Changing this creates a service.
func (o DedicatedDomainServerOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.VpcId }).(pulumi.StringOutput)
}

type DedicatedDomainServerArrayOutput struct{ *pulumi.OutputState }

func (DedicatedDomainServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedDomainServer)(nil)).Elem()
}

func (o DedicatedDomainServerArrayOutput) ToDedicatedDomainServerArrayOutput() DedicatedDomainServerArrayOutput {
	return o
}

func (o DedicatedDomainServerArrayOutput) ToDedicatedDomainServerArrayOutputWithContext(ctx context.Context) DedicatedDomainServerArrayOutput {
	return o
}

func (o DedicatedDomainServerArrayOutput) Index(i pulumi.IntInput) DedicatedDomainServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DedicatedDomainServer {
		return vs[0].([]DedicatedDomainServer)[vs[1].(int)]
	}).(DedicatedDomainServerOutput)
}

type DedicatedDomainTimeoutSettings struct {
	// Specifies the timeout for WAF to connect to the origin server. The unit is second.
	// Valid value ranges from `0` to `180`.
	ConnectionTimeout *int `pulumi:"connectionTimeout"`
	// Specifies the timeout for WAF to receive responses from the origin server.
	// The unit is second. Valid value ranges from `0` to `3,600`.
	ReadTimeout *int `pulumi:"readTimeout"`
	// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
	// Valid value ranges from `0` to `3,600`.
	WriteTimeout *int `pulumi:"writeTimeout"`
}

// DedicatedDomainTimeoutSettingsInput is an input type that accepts DedicatedDomainTimeoutSettingsArgs and DedicatedDomainTimeoutSettingsOutput values.
// You can construct a concrete instance of `DedicatedDomainTimeoutSettingsInput` via:
//
//	DedicatedDomainTimeoutSettingsArgs{...}
type DedicatedDomainTimeoutSettingsInput interface {
	pulumi.Input

	ToDedicatedDomainTimeoutSettingsOutput() DedicatedDomainTimeoutSettingsOutput
	ToDedicatedDomainTimeoutSettingsOutputWithContext(context.Context) DedicatedDomainTimeoutSettingsOutput
}

type DedicatedDomainTimeoutSettingsArgs struct {
	// Specifies the timeout for WAF to connect to the origin server. The unit is second.
	// Valid value ranges from `0` to `180`.
	ConnectionTimeout pulumi.IntPtrInput `pulumi:"connectionTimeout"`
	// Specifies the timeout for WAF to receive responses from the origin server.
	// The unit is second. Valid value ranges from `0` to `3,600`.
	ReadTimeout pulumi.IntPtrInput `pulumi:"readTimeout"`
	// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
	// Valid value ranges from `0` to `3,600`.
	WriteTimeout pulumi.IntPtrInput `pulumi:"writeTimeout"`
}

func (DedicatedDomainTimeoutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainTimeoutSettings)(nil)).Elem()
}

func (i DedicatedDomainTimeoutSettingsArgs) ToDedicatedDomainTimeoutSettingsOutput() DedicatedDomainTimeoutSettingsOutput {
	return i.ToDedicatedDomainTimeoutSettingsOutputWithContext(context.Background())
}

func (i DedicatedDomainTimeoutSettingsArgs) ToDedicatedDomainTimeoutSettingsOutputWithContext(ctx context.Context) DedicatedDomainTimeoutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainTimeoutSettingsOutput)
}

func (i DedicatedDomainTimeoutSettingsArgs) ToDedicatedDomainTimeoutSettingsPtrOutput() DedicatedDomainTimeoutSettingsPtrOutput {
	return i.ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i DedicatedDomainTimeoutSettingsArgs) ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DedicatedDomainTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainTimeoutSettingsOutput).ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(ctx)
}

// DedicatedDomainTimeoutSettingsPtrInput is an input type that accepts DedicatedDomainTimeoutSettingsArgs, DedicatedDomainTimeoutSettingsPtr and DedicatedDomainTimeoutSettingsPtrOutput values.
// You can construct a concrete instance of `DedicatedDomainTimeoutSettingsPtrInput` via:
//
//	        DedicatedDomainTimeoutSettingsArgs{...}
//
//	or:
//
//	        nil
type DedicatedDomainTimeoutSettingsPtrInput interface {
	pulumi.Input

	ToDedicatedDomainTimeoutSettingsPtrOutput() DedicatedDomainTimeoutSettingsPtrOutput
	ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(context.Context) DedicatedDomainTimeoutSettingsPtrOutput
}

type dedicatedDomainTimeoutSettingsPtrType DedicatedDomainTimeoutSettingsArgs

func DedicatedDomainTimeoutSettingsPtr(v *DedicatedDomainTimeoutSettingsArgs) DedicatedDomainTimeoutSettingsPtrInput {
	return (*dedicatedDomainTimeoutSettingsPtrType)(v)
}

func (*dedicatedDomainTimeoutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainTimeoutSettings)(nil)).Elem()
}

func (i *dedicatedDomainTimeoutSettingsPtrType) ToDedicatedDomainTimeoutSettingsPtrOutput() DedicatedDomainTimeoutSettingsPtrOutput {
	return i.ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i *dedicatedDomainTimeoutSettingsPtrType) ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DedicatedDomainTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainTimeoutSettingsPtrOutput)
}

type DedicatedDomainTimeoutSettingsOutput struct{ *pulumi.OutputState }

func (DedicatedDomainTimeoutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainTimeoutSettings)(nil)).Elem()
}

func (o DedicatedDomainTimeoutSettingsOutput) ToDedicatedDomainTimeoutSettingsOutput() DedicatedDomainTimeoutSettingsOutput {
	return o
}

func (o DedicatedDomainTimeoutSettingsOutput) ToDedicatedDomainTimeoutSettingsOutputWithContext(ctx context.Context) DedicatedDomainTimeoutSettingsOutput {
	return o
}

func (o DedicatedDomainTimeoutSettingsOutput) ToDedicatedDomainTimeoutSettingsPtrOutput() DedicatedDomainTimeoutSettingsPtrOutput {
	return o.ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (o DedicatedDomainTimeoutSettingsOutput) ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DedicatedDomainTimeoutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DedicatedDomainTimeoutSettings) *DedicatedDomainTimeoutSettings {
		return &v
	}).(DedicatedDomainTimeoutSettingsPtrOutput)
}

// Specifies the timeout for WAF to connect to the origin server. The unit is second.
// Valid value ranges from `0` to `180`.
func (o DedicatedDomainTimeoutSettingsOutput) ConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainTimeoutSettings) *int { return v.ConnectionTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to receive responses from the origin server.
// The unit is second. Valid value ranges from `0` to `3,600`.
func (o DedicatedDomainTimeoutSettingsOutput) ReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainTimeoutSettings) *int { return v.ReadTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
// Valid value ranges from `0` to `3,600`.
func (o DedicatedDomainTimeoutSettingsOutput) WriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DedicatedDomainTimeoutSettings) *int { return v.WriteTimeout }).(pulumi.IntPtrOutput)
}

type DedicatedDomainTimeoutSettingsPtrOutput struct{ *pulumi.OutputState }

func (DedicatedDomainTimeoutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainTimeoutSettings)(nil)).Elem()
}

func (o DedicatedDomainTimeoutSettingsPtrOutput) ToDedicatedDomainTimeoutSettingsPtrOutput() DedicatedDomainTimeoutSettingsPtrOutput {
	return o
}

func (o DedicatedDomainTimeoutSettingsPtrOutput) ToDedicatedDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DedicatedDomainTimeoutSettingsPtrOutput {
	return o
}

func (o DedicatedDomainTimeoutSettingsPtrOutput) Elem() DedicatedDomainTimeoutSettingsOutput {
	return o.ApplyT(func(v *DedicatedDomainTimeoutSettings) DedicatedDomainTimeoutSettings {
		if v != nil {
			return *v
		}
		var ret DedicatedDomainTimeoutSettings
		return ret
	}).(DedicatedDomainTimeoutSettingsOutput)
}

// Specifies the timeout for WAF to connect to the origin server. The unit is second.
// Valid value ranges from `0` to `180`.
func (o DedicatedDomainTimeoutSettingsPtrOutput) ConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to receive responses from the origin server.
// The unit is second. Valid value ranges from `0` to `3,600`.
func (o DedicatedDomainTimeoutSettingsPtrOutput) ReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReadTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
// Valid value ranges from `0` to `3,600`.
func (o DedicatedDomainTimeoutSettingsPtrOutput) WriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.WriteTimeout
	}).(pulumi.IntPtrOutput)
}

type DedicatedDomainTrafficMark struct {
	// Specifies the IP tags. HTTP request header field of the original client IP address.
	// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
	// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
	// address list in order. Note:
	// + If you want to use a TCP connection IP address as the client IP address, set IP Tag to `$remote_addr`.
	// + If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the `cdn-src-ip`,
	//   `x-real-ip`, `x-forwarded-for` and `$remote_addr` fields in sequence to read the client IP address.
	IpTags []string `pulumi:"ipTags"`
	// Specifies the session tag. This tag is used by known attack source rules to block
	// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
	// requests based on cookie attributes.
	SessionTag *string `pulumi:"sessionTag"`
	// Specifies the user tag. This tag is used by known attack source rules to block malicious
	// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
	UserTag *string `pulumi:"userTag"`
}

// DedicatedDomainTrafficMarkInput is an input type that accepts DedicatedDomainTrafficMarkArgs and DedicatedDomainTrafficMarkOutput values.
// You can construct a concrete instance of `DedicatedDomainTrafficMarkInput` via:
//
//	DedicatedDomainTrafficMarkArgs{...}
type DedicatedDomainTrafficMarkInput interface {
	pulumi.Input

	ToDedicatedDomainTrafficMarkOutput() DedicatedDomainTrafficMarkOutput
	ToDedicatedDomainTrafficMarkOutputWithContext(context.Context) DedicatedDomainTrafficMarkOutput
}

type DedicatedDomainTrafficMarkArgs struct {
	// Specifies the IP tags. HTTP request header field of the original client IP address.
	// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
	// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
	// address list in order. Note:
	// + If you want to use a TCP connection IP address as the client IP address, set IP Tag to `$remote_addr`.
	// + If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the `cdn-src-ip`,
	//   `x-real-ip`, `x-forwarded-for` and `$remote_addr` fields in sequence to read the client IP address.
	IpTags pulumi.StringArrayInput `pulumi:"ipTags"`
	// Specifies the session tag. This tag is used by known attack source rules to block
	// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
	// requests based on cookie attributes.
	SessionTag pulumi.StringPtrInput `pulumi:"sessionTag"`
	// Specifies the user tag. This tag is used by known attack source rules to block malicious
	// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
	UserTag pulumi.StringPtrInput `pulumi:"userTag"`
}

func (DedicatedDomainTrafficMarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainTrafficMark)(nil)).Elem()
}

func (i DedicatedDomainTrafficMarkArgs) ToDedicatedDomainTrafficMarkOutput() DedicatedDomainTrafficMarkOutput {
	return i.ToDedicatedDomainTrafficMarkOutputWithContext(context.Background())
}

func (i DedicatedDomainTrafficMarkArgs) ToDedicatedDomainTrafficMarkOutputWithContext(ctx context.Context) DedicatedDomainTrafficMarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainTrafficMarkOutput)
}

func (i DedicatedDomainTrafficMarkArgs) ToDedicatedDomainTrafficMarkPtrOutput() DedicatedDomainTrafficMarkPtrOutput {
	return i.ToDedicatedDomainTrafficMarkPtrOutputWithContext(context.Background())
}

func (i DedicatedDomainTrafficMarkArgs) ToDedicatedDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DedicatedDomainTrafficMarkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainTrafficMarkOutput).ToDedicatedDomainTrafficMarkPtrOutputWithContext(ctx)
}

// DedicatedDomainTrafficMarkPtrInput is an input type that accepts DedicatedDomainTrafficMarkArgs, DedicatedDomainTrafficMarkPtr and DedicatedDomainTrafficMarkPtrOutput values.
// You can construct a concrete instance of `DedicatedDomainTrafficMarkPtrInput` via:
//
//	        DedicatedDomainTrafficMarkArgs{...}
//
//	or:
//
//	        nil
type DedicatedDomainTrafficMarkPtrInput interface {
	pulumi.Input

	ToDedicatedDomainTrafficMarkPtrOutput() DedicatedDomainTrafficMarkPtrOutput
	ToDedicatedDomainTrafficMarkPtrOutputWithContext(context.Context) DedicatedDomainTrafficMarkPtrOutput
}

type dedicatedDomainTrafficMarkPtrType DedicatedDomainTrafficMarkArgs

func DedicatedDomainTrafficMarkPtr(v *DedicatedDomainTrafficMarkArgs) DedicatedDomainTrafficMarkPtrInput {
	return (*dedicatedDomainTrafficMarkPtrType)(v)
}

func (*dedicatedDomainTrafficMarkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainTrafficMark)(nil)).Elem()
}

func (i *dedicatedDomainTrafficMarkPtrType) ToDedicatedDomainTrafficMarkPtrOutput() DedicatedDomainTrafficMarkPtrOutput {
	return i.ToDedicatedDomainTrafficMarkPtrOutputWithContext(context.Background())
}

func (i *dedicatedDomainTrafficMarkPtrType) ToDedicatedDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DedicatedDomainTrafficMarkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainTrafficMarkPtrOutput)
}

type DedicatedDomainTrafficMarkOutput struct{ *pulumi.OutputState }

func (DedicatedDomainTrafficMarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainTrafficMark)(nil)).Elem()
}

func (o DedicatedDomainTrafficMarkOutput) ToDedicatedDomainTrafficMarkOutput() DedicatedDomainTrafficMarkOutput {
	return o
}

func (o DedicatedDomainTrafficMarkOutput) ToDedicatedDomainTrafficMarkOutputWithContext(ctx context.Context) DedicatedDomainTrafficMarkOutput {
	return o
}

func (o DedicatedDomainTrafficMarkOutput) ToDedicatedDomainTrafficMarkPtrOutput() DedicatedDomainTrafficMarkPtrOutput {
	return o.ToDedicatedDomainTrafficMarkPtrOutputWithContext(context.Background())
}

func (o DedicatedDomainTrafficMarkOutput) ToDedicatedDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DedicatedDomainTrafficMarkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DedicatedDomainTrafficMark) *DedicatedDomainTrafficMark {
		return &v
	}).(DedicatedDomainTrafficMarkPtrOutput)
}

// Specifies the IP tags. HTTP request header field of the original client IP address.
// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
// address list in order. Note:
//   - If you want to use a TCP connection IP address as the client IP address, set IP Tag to `$remote_addr`.
//   - If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the `cdn-src-ip`,
//     `x-real-ip`, `x-forwarded-for` and `$remote_addr` fields in sequence to read the client IP address.
func (o DedicatedDomainTrafficMarkOutput) IpTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DedicatedDomainTrafficMark) []string { return v.IpTags }).(pulumi.StringArrayOutput)
}

// Specifies the session tag. This tag is used by known attack source rules to block
// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
// requests based on cookie attributes.
func (o DedicatedDomainTrafficMarkOutput) SessionTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DedicatedDomainTrafficMark) *string { return v.SessionTag }).(pulumi.StringPtrOutput)
}

// Specifies the user tag. This tag is used by known attack source rules to block malicious
// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
func (o DedicatedDomainTrafficMarkOutput) UserTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DedicatedDomainTrafficMark) *string { return v.UserTag }).(pulumi.StringPtrOutput)
}

type DedicatedDomainTrafficMarkPtrOutput struct{ *pulumi.OutputState }

func (DedicatedDomainTrafficMarkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedDomainTrafficMark)(nil)).Elem()
}

func (o DedicatedDomainTrafficMarkPtrOutput) ToDedicatedDomainTrafficMarkPtrOutput() DedicatedDomainTrafficMarkPtrOutput {
	return o
}

func (o DedicatedDomainTrafficMarkPtrOutput) ToDedicatedDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DedicatedDomainTrafficMarkPtrOutput {
	return o
}

func (o DedicatedDomainTrafficMarkPtrOutput) Elem() DedicatedDomainTrafficMarkOutput {
	return o.ApplyT(func(v *DedicatedDomainTrafficMark) DedicatedDomainTrafficMark {
		if v != nil {
			return *v
		}
		var ret DedicatedDomainTrafficMark
		return ret
	}).(DedicatedDomainTrafficMarkOutput)
}

// Specifies the IP tags. HTTP request header field of the original client IP address.
// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
// address list in order. Note:
//   - If you want to use a TCP connection IP address as the client IP address, set IP Tag to `$remote_addr`.
//   - If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the `cdn-src-ip`,
//     `x-real-ip`, `x-forwarded-for` and `$remote_addr` fields in sequence to read the client IP address.
func (o DedicatedDomainTrafficMarkPtrOutput) IpTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DedicatedDomainTrafficMark) []string {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(pulumi.StringArrayOutput)
}

// Specifies the session tag. This tag is used by known attack source rules to block
// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
// requests based on cookie attributes.
func (o DedicatedDomainTrafficMarkPtrOutput) SessionTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainTrafficMark) *string {
		if v == nil {
			return nil
		}
		return v.SessionTag
	}).(pulumi.StringPtrOutput)
}

// Specifies the user tag. This tag is used by known attack source rules to block malicious
// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
func (o DedicatedDomainTrafficMarkPtrOutput) UserTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DedicatedDomainTrafficMark) *string {
		if v == nil {
			return nil
		}
		return v.UserTag
	}).(pulumi.StringPtrOutput)
}

type DomainCustomPage struct {
	// Specifies the content type of the custom alarm page.
	// The value can be **text/html**, **text/xml** or **application/json**.
	BlockPageType string `pulumi:"blockPageType"`
	// Specifies the HTTP return code.
	// The value can be a positive integer in the range of `200` to `599` except `408`, `444` and `499`.
	HttpReturnCode string `pulumi:"httpReturnCode"`
	// Specifies the page content. The page content based on the selected page type.
	// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
	// can be available.
	PageContent string `pulumi:"pageContent"`
}

// DomainCustomPageInput is an input type that accepts DomainCustomPageArgs and DomainCustomPageOutput values.
// You can construct a concrete instance of `DomainCustomPageInput` via:
//
//	DomainCustomPageArgs{...}
type DomainCustomPageInput interface {
	pulumi.Input

	ToDomainCustomPageOutput() DomainCustomPageOutput
	ToDomainCustomPageOutputWithContext(context.Context) DomainCustomPageOutput
}

type DomainCustomPageArgs struct {
	// Specifies the content type of the custom alarm page.
	// The value can be **text/html**, **text/xml** or **application/json**.
	BlockPageType pulumi.StringInput `pulumi:"blockPageType"`
	// Specifies the HTTP return code.
	// The value can be a positive integer in the range of `200` to `599` except `408`, `444` and `499`.
	HttpReturnCode pulumi.StringInput `pulumi:"httpReturnCode"`
	// Specifies the page content. The page content based on the selected page type.
	// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
	// can be available.
	PageContent pulumi.StringInput `pulumi:"pageContent"`
}

func (DomainCustomPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomPage)(nil)).Elem()
}

func (i DomainCustomPageArgs) ToDomainCustomPageOutput() DomainCustomPageOutput {
	return i.ToDomainCustomPageOutputWithContext(context.Background())
}

func (i DomainCustomPageArgs) ToDomainCustomPageOutputWithContext(ctx context.Context) DomainCustomPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomPageOutput)
}

func (i DomainCustomPageArgs) ToDomainCustomPagePtrOutput() DomainCustomPagePtrOutput {
	return i.ToDomainCustomPagePtrOutputWithContext(context.Background())
}

func (i DomainCustomPageArgs) ToDomainCustomPagePtrOutputWithContext(ctx context.Context) DomainCustomPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomPageOutput).ToDomainCustomPagePtrOutputWithContext(ctx)
}

// DomainCustomPagePtrInput is an input type that accepts DomainCustomPageArgs, DomainCustomPagePtr and DomainCustomPagePtrOutput values.
// You can construct a concrete instance of `DomainCustomPagePtrInput` via:
//
//	        DomainCustomPageArgs{...}
//
//	or:
//
//	        nil
type DomainCustomPagePtrInput interface {
	pulumi.Input

	ToDomainCustomPagePtrOutput() DomainCustomPagePtrOutput
	ToDomainCustomPagePtrOutputWithContext(context.Context) DomainCustomPagePtrOutput
}

type domainCustomPagePtrType DomainCustomPageArgs

func DomainCustomPagePtr(v *DomainCustomPageArgs) DomainCustomPagePtrInput {
	return (*domainCustomPagePtrType)(v)
}

func (*domainCustomPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCustomPage)(nil)).Elem()
}

func (i *domainCustomPagePtrType) ToDomainCustomPagePtrOutput() DomainCustomPagePtrOutput {
	return i.ToDomainCustomPagePtrOutputWithContext(context.Background())
}

func (i *domainCustomPagePtrType) ToDomainCustomPagePtrOutputWithContext(ctx context.Context) DomainCustomPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCustomPagePtrOutput)
}

type DomainCustomPageOutput struct{ *pulumi.OutputState }

func (DomainCustomPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCustomPage)(nil)).Elem()
}

func (o DomainCustomPageOutput) ToDomainCustomPageOutput() DomainCustomPageOutput {
	return o
}

func (o DomainCustomPageOutput) ToDomainCustomPageOutputWithContext(ctx context.Context) DomainCustomPageOutput {
	return o
}

func (o DomainCustomPageOutput) ToDomainCustomPagePtrOutput() DomainCustomPagePtrOutput {
	return o.ToDomainCustomPagePtrOutputWithContext(context.Background())
}

func (o DomainCustomPageOutput) ToDomainCustomPagePtrOutputWithContext(ctx context.Context) DomainCustomPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCustomPage) *DomainCustomPage {
		return &v
	}).(DomainCustomPagePtrOutput)
}

// Specifies the content type of the custom alarm page.
// The value can be **text/html**, **text/xml** or **application/json**.
func (o DomainCustomPageOutput) BlockPageType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCustomPage) string { return v.BlockPageType }).(pulumi.StringOutput)
}

// Specifies the HTTP return code.
// The value can be a positive integer in the range of `200` to `599` except `408`, `444` and `499`.
func (o DomainCustomPageOutput) HttpReturnCode() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCustomPage) string { return v.HttpReturnCode }).(pulumi.StringOutput)
}

// Specifies the page content. The page content based on the selected page type.
// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
// can be available.
func (o DomainCustomPageOutput) PageContent() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCustomPage) string { return v.PageContent }).(pulumi.StringOutput)
}

type DomainCustomPagePtrOutput struct{ *pulumi.OutputState }

func (DomainCustomPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCustomPage)(nil)).Elem()
}

func (o DomainCustomPagePtrOutput) ToDomainCustomPagePtrOutput() DomainCustomPagePtrOutput {
	return o
}

func (o DomainCustomPagePtrOutput) ToDomainCustomPagePtrOutputWithContext(ctx context.Context) DomainCustomPagePtrOutput {
	return o
}

func (o DomainCustomPagePtrOutput) Elem() DomainCustomPageOutput {
	return o.ApplyT(func(v *DomainCustomPage) DomainCustomPage {
		if v != nil {
			return *v
		}
		var ret DomainCustomPage
		return ret
	}).(DomainCustomPageOutput)
}

// Specifies the content type of the custom alarm page.
// The value can be **text/html**, **text/xml** or **application/json**.
func (o DomainCustomPagePtrOutput) BlockPageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCustomPage) *string {
		if v == nil {
			return nil
		}
		return &v.BlockPageType
	}).(pulumi.StringPtrOutput)
}

// Specifies the HTTP return code.
// The value can be a positive integer in the range of `200` to `599` except `408`, `444` and `499`.
func (o DomainCustomPagePtrOutput) HttpReturnCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCustomPage) *string {
		if v == nil {
			return nil
		}
		return &v.HttpReturnCode
	}).(pulumi.StringPtrOutput)
}

// Specifies the page content. The page content based on the selected page type.
// The available **${waf_event_id}** in the page content indicates an event ID, and only one **${waf_event_id}** variable
// can be available.
func (o DomainCustomPagePtrOutput) PageContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCustomPage) *string {
		if v == nil {
			return nil
		}
		return &v.PageContent
	}).(pulumi.StringPtrOutput)
}

type DomainServer struct {
	// Specifies the IP address or domain name of the web server that the client accesses.
	Address string `pulumi:"address"`
	// Specifies the protocol type of the client. The options include **HTTP** and **HTTPS**.
	ClientProtocol string `pulumi:"clientProtocol"`
	// Specifies the port number used by the web server. The value ranges from `0` to `65,535`,
	// for example, `8,080`.
	Port int `pulumi:"port"`
	// Specifies the protocol used by WAF to forward client requests to the server.
	// The options include **HTTP** and **HTTPS**.
	ServerProtocol string `pulumi:"serverProtocol"`
	// Specifies the server network type. Valid values are: **ipv4** and **ipv6**.
	// + When this field is set to **ipv4**, `address` must be set to an IPv4 address.
	// + When this field is set to **ipv6**, `address` must be set to an IPv6 address.
	Type *string `pulumi:"type"`
	// Specifies the load balancing algorithm will assign requests to the origin
	// site according to this weight.
	// Defaults to `1`.
	Weight *int `pulumi:"weight"`
}

// DomainServerInput is an input type that accepts DomainServerArgs and DomainServerOutput values.
// You can construct a concrete instance of `DomainServerInput` via:
//
//	DomainServerArgs{...}
type DomainServerInput interface {
	pulumi.Input

	ToDomainServerOutput() DomainServerOutput
	ToDomainServerOutputWithContext(context.Context) DomainServerOutput
}

type DomainServerArgs struct {
	// Specifies the IP address or domain name of the web server that the client accesses.
	Address pulumi.StringInput `pulumi:"address"`
	// Specifies the protocol type of the client. The options include **HTTP** and **HTTPS**.
	ClientProtocol pulumi.StringInput `pulumi:"clientProtocol"`
	// Specifies the port number used by the web server. The value ranges from `0` to `65,535`,
	// for example, `8,080`.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the protocol used by WAF to forward client requests to the server.
	// The options include **HTTP** and **HTTPS**.
	ServerProtocol pulumi.StringInput `pulumi:"serverProtocol"`
	// Specifies the server network type. Valid values are: **ipv4** and **ipv6**.
	// + When this field is set to **ipv4**, `address` must be set to an IPv4 address.
	// + When this field is set to **ipv6**, `address` must be set to an IPv6 address.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the load balancing algorithm will assign requests to the origin
	// site according to this weight.
	// Defaults to `1`.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DomainServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainServer)(nil)).Elem()
}

func (i DomainServerArgs) ToDomainServerOutput() DomainServerOutput {
	return i.ToDomainServerOutputWithContext(context.Background())
}

func (i DomainServerArgs) ToDomainServerOutputWithContext(ctx context.Context) DomainServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServerOutput)
}

// DomainServerArrayInput is an input type that accepts DomainServerArray and DomainServerArrayOutput values.
// You can construct a concrete instance of `DomainServerArrayInput` via:
//
//	DomainServerArray{ DomainServerArgs{...} }
type DomainServerArrayInput interface {
	pulumi.Input

	ToDomainServerArrayOutput() DomainServerArrayOutput
	ToDomainServerArrayOutputWithContext(context.Context) DomainServerArrayOutput
}

type DomainServerArray []DomainServerInput

func (DomainServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainServer)(nil)).Elem()
}

func (i DomainServerArray) ToDomainServerArrayOutput() DomainServerArrayOutput {
	return i.ToDomainServerArrayOutputWithContext(context.Background())
}

func (i DomainServerArray) ToDomainServerArrayOutputWithContext(ctx context.Context) DomainServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServerArrayOutput)
}

type DomainServerOutput struct{ *pulumi.OutputState }

func (DomainServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainServer)(nil)).Elem()
}

func (o DomainServerOutput) ToDomainServerOutput() DomainServerOutput {
	return o
}

func (o DomainServerOutput) ToDomainServerOutputWithContext(ctx context.Context) DomainServerOutput {
	return o
}

// Specifies the IP address or domain name of the web server that the client accesses.
func (o DomainServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DomainServer) string { return v.Address }).(pulumi.StringOutput)
}

// Specifies the protocol type of the client. The options include **HTTP** and **HTTPS**.
func (o DomainServerOutput) ClientProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DomainServer) string { return v.ClientProtocol }).(pulumi.StringOutput)
}

// Specifies the port number used by the web server. The value ranges from `0` to `65,535`,
// for example, `8,080`.
func (o DomainServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DomainServer) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the protocol used by WAF to forward client requests to the server.
// The options include **HTTP** and **HTTPS**.
func (o DomainServerOutput) ServerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DomainServer) string { return v.ServerProtocol }).(pulumi.StringOutput)
}

// Specifies the server network type. Valid values are: **ipv4** and **ipv6**.
// + When this field is set to **ipv4**, `address` must be set to an IPv4 address.
// + When this field is set to **ipv6**, `address` must be set to an IPv6 address.
func (o DomainServerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServer) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Specifies the load balancing algorithm will assign requests to the origin
// site according to this weight.
// Defaults to `1`.
func (o DomainServerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainServer) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DomainServerArrayOutput struct{ *pulumi.OutputState }

func (DomainServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainServer)(nil)).Elem()
}

func (o DomainServerArrayOutput) ToDomainServerArrayOutput() DomainServerArrayOutput {
	return o
}

func (o DomainServerArrayOutput) ToDomainServerArrayOutputWithContext(ctx context.Context) DomainServerArrayOutput {
	return o
}

func (o DomainServerArrayOutput) Index(i pulumi.IntInput) DomainServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainServer {
		return vs[0].([]DomainServer)[vs[1].(int)]
	}).(DomainServerOutput)
}

type DomainTimeoutSettings struct {
	// Specifies the timeout for WAF to connect to the origin server. The unit is second.
	// Valid value ranges from `0` to `180`.
	ConnectionTimeout *int `pulumi:"connectionTimeout"`
	// Specifies the timeout for WAF to receive responses from the origin server.
	// The unit is second. Valid value ranges from `0` to `3,600`.
	ReadTimeout *int `pulumi:"readTimeout"`
	// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
	// Valid value ranges from `0` to `3,600`.
	WriteTimeout *int `pulumi:"writeTimeout"`
}

// DomainTimeoutSettingsInput is an input type that accepts DomainTimeoutSettingsArgs and DomainTimeoutSettingsOutput values.
// You can construct a concrete instance of `DomainTimeoutSettingsInput` via:
//
//	DomainTimeoutSettingsArgs{...}
type DomainTimeoutSettingsInput interface {
	pulumi.Input

	ToDomainTimeoutSettingsOutput() DomainTimeoutSettingsOutput
	ToDomainTimeoutSettingsOutputWithContext(context.Context) DomainTimeoutSettingsOutput
}

type DomainTimeoutSettingsArgs struct {
	// Specifies the timeout for WAF to connect to the origin server. The unit is second.
	// Valid value ranges from `0` to `180`.
	ConnectionTimeout pulumi.IntPtrInput `pulumi:"connectionTimeout"`
	// Specifies the timeout for WAF to receive responses from the origin server.
	// The unit is second. Valid value ranges from `0` to `3,600`.
	ReadTimeout pulumi.IntPtrInput `pulumi:"readTimeout"`
	// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
	// Valid value ranges from `0` to `3,600`.
	WriteTimeout pulumi.IntPtrInput `pulumi:"writeTimeout"`
}

func (DomainTimeoutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTimeoutSettings)(nil)).Elem()
}

func (i DomainTimeoutSettingsArgs) ToDomainTimeoutSettingsOutput() DomainTimeoutSettingsOutput {
	return i.ToDomainTimeoutSettingsOutputWithContext(context.Background())
}

func (i DomainTimeoutSettingsArgs) ToDomainTimeoutSettingsOutputWithContext(ctx context.Context) DomainTimeoutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTimeoutSettingsOutput)
}

func (i DomainTimeoutSettingsArgs) ToDomainTimeoutSettingsPtrOutput() DomainTimeoutSettingsPtrOutput {
	return i.ToDomainTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i DomainTimeoutSettingsArgs) ToDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DomainTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTimeoutSettingsOutput).ToDomainTimeoutSettingsPtrOutputWithContext(ctx)
}

// DomainTimeoutSettingsPtrInput is an input type that accepts DomainTimeoutSettingsArgs, DomainTimeoutSettingsPtr and DomainTimeoutSettingsPtrOutput values.
// You can construct a concrete instance of `DomainTimeoutSettingsPtrInput` via:
//
//	        DomainTimeoutSettingsArgs{...}
//
//	or:
//
//	        nil
type DomainTimeoutSettingsPtrInput interface {
	pulumi.Input

	ToDomainTimeoutSettingsPtrOutput() DomainTimeoutSettingsPtrOutput
	ToDomainTimeoutSettingsPtrOutputWithContext(context.Context) DomainTimeoutSettingsPtrOutput
}

type domainTimeoutSettingsPtrType DomainTimeoutSettingsArgs

func DomainTimeoutSettingsPtr(v *DomainTimeoutSettingsArgs) DomainTimeoutSettingsPtrInput {
	return (*domainTimeoutSettingsPtrType)(v)
}

func (*domainTimeoutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainTimeoutSettings)(nil)).Elem()
}

func (i *domainTimeoutSettingsPtrType) ToDomainTimeoutSettingsPtrOutput() DomainTimeoutSettingsPtrOutput {
	return i.ToDomainTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i *domainTimeoutSettingsPtrType) ToDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DomainTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTimeoutSettingsPtrOutput)
}

type DomainTimeoutSettingsOutput struct{ *pulumi.OutputState }

func (DomainTimeoutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTimeoutSettings)(nil)).Elem()
}

func (o DomainTimeoutSettingsOutput) ToDomainTimeoutSettingsOutput() DomainTimeoutSettingsOutput {
	return o
}

func (o DomainTimeoutSettingsOutput) ToDomainTimeoutSettingsOutputWithContext(ctx context.Context) DomainTimeoutSettingsOutput {
	return o
}

func (o DomainTimeoutSettingsOutput) ToDomainTimeoutSettingsPtrOutput() DomainTimeoutSettingsPtrOutput {
	return o.ToDomainTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (o DomainTimeoutSettingsOutput) ToDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DomainTimeoutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainTimeoutSettings) *DomainTimeoutSettings {
		return &v
	}).(DomainTimeoutSettingsPtrOutput)
}

// Specifies the timeout for WAF to connect to the origin server. The unit is second.
// Valid value ranges from `0` to `180`.
func (o DomainTimeoutSettingsOutput) ConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainTimeoutSettings) *int { return v.ConnectionTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to receive responses from the origin server.
// The unit is second. Valid value ranges from `0` to `3,600`.
func (o DomainTimeoutSettingsOutput) ReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainTimeoutSettings) *int { return v.ReadTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
// Valid value ranges from `0` to `3,600`.
func (o DomainTimeoutSettingsOutput) WriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainTimeoutSettings) *int { return v.WriteTimeout }).(pulumi.IntPtrOutput)
}

type DomainTimeoutSettingsPtrOutput struct{ *pulumi.OutputState }

func (DomainTimeoutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainTimeoutSettings)(nil)).Elem()
}

func (o DomainTimeoutSettingsPtrOutput) ToDomainTimeoutSettingsPtrOutput() DomainTimeoutSettingsPtrOutput {
	return o
}

func (o DomainTimeoutSettingsPtrOutput) ToDomainTimeoutSettingsPtrOutputWithContext(ctx context.Context) DomainTimeoutSettingsPtrOutput {
	return o
}

func (o DomainTimeoutSettingsPtrOutput) Elem() DomainTimeoutSettingsOutput {
	return o.ApplyT(func(v *DomainTimeoutSettings) DomainTimeoutSettings {
		if v != nil {
			return *v
		}
		var ret DomainTimeoutSettings
		return ret
	}).(DomainTimeoutSettingsOutput)
}

// Specifies the timeout for WAF to connect to the origin server. The unit is second.
// Valid value ranges from `0` to `180`.
func (o DomainTimeoutSettingsPtrOutput) ConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to receive responses from the origin server.
// The unit is second. Valid value ranges from `0` to `3,600`.
func (o DomainTimeoutSettingsPtrOutput) ReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.ReadTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the timeout for WAF to send requests to the origin server. The unit is second.
// Valid value ranges from `0` to `3,600`.
func (o DomainTimeoutSettingsPtrOutput) WriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return v.WriteTimeout
	}).(pulumi.IntPtrOutput)
}

type DomainTrafficMark struct {
	// Specifies the IP tags. HTTP request header field of the original client IP address.
	// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
	// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
	// address list in order. Note:
	// + If you want to use a TCP connection IP address as the client IP address, set IP Tag to **$remote_addr**.
	// + If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the **cdn-src-ip**,
	//   **x-real-ip**, **x-forwarded-for** and **$remote_addr** fields in sequence to read the client IP address.
	// + When the website setting `proxy` is configured as **false**, this field does not take effect,
	//   and the client IP is only obtained through the `$remote_addr` field.
	IpTags []string `pulumi:"ipTags"`
	// Specifies the session tag. This tag is used by known attack source rules to block
	// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
	// requests based on cookie attributes.
	SessionTag *string `pulumi:"sessionTag"`
	// Specifies the user tag. This tag is used by known attack source rules to block malicious
	// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
	UserTag *string `pulumi:"userTag"`
}

// DomainTrafficMarkInput is an input type that accepts DomainTrafficMarkArgs and DomainTrafficMarkOutput values.
// You can construct a concrete instance of `DomainTrafficMarkInput` via:
//
//	DomainTrafficMarkArgs{...}
type DomainTrafficMarkInput interface {
	pulumi.Input

	ToDomainTrafficMarkOutput() DomainTrafficMarkOutput
	ToDomainTrafficMarkOutputWithContext(context.Context) DomainTrafficMarkOutput
}

type DomainTrafficMarkArgs struct {
	// Specifies the IP tags. HTTP request header field of the original client IP address.
	// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
	// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
	// address list in order. Note:
	// + If you want to use a TCP connection IP address as the client IP address, set IP Tag to **$remote_addr**.
	// + If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the **cdn-src-ip**,
	//   **x-real-ip**, **x-forwarded-for** and **$remote_addr** fields in sequence to read the client IP address.
	// + When the website setting `proxy` is configured as **false**, this field does not take effect,
	//   and the client IP is only obtained through the `$remote_addr` field.
	IpTags pulumi.StringArrayInput `pulumi:"ipTags"`
	// Specifies the session tag. This tag is used by known attack source rules to block
	// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
	// requests based on cookie attributes.
	SessionTag pulumi.StringPtrInput `pulumi:"sessionTag"`
	// Specifies the user tag. This tag is used by known attack source rules to block malicious
	// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
	UserTag pulumi.StringPtrInput `pulumi:"userTag"`
}

func (DomainTrafficMarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTrafficMark)(nil)).Elem()
}

func (i DomainTrafficMarkArgs) ToDomainTrafficMarkOutput() DomainTrafficMarkOutput {
	return i.ToDomainTrafficMarkOutputWithContext(context.Background())
}

func (i DomainTrafficMarkArgs) ToDomainTrafficMarkOutputWithContext(ctx context.Context) DomainTrafficMarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTrafficMarkOutput)
}

func (i DomainTrafficMarkArgs) ToDomainTrafficMarkPtrOutput() DomainTrafficMarkPtrOutput {
	return i.ToDomainTrafficMarkPtrOutputWithContext(context.Background())
}

func (i DomainTrafficMarkArgs) ToDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DomainTrafficMarkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTrafficMarkOutput).ToDomainTrafficMarkPtrOutputWithContext(ctx)
}

// DomainTrafficMarkPtrInput is an input type that accepts DomainTrafficMarkArgs, DomainTrafficMarkPtr and DomainTrafficMarkPtrOutput values.
// You can construct a concrete instance of `DomainTrafficMarkPtrInput` via:
//
//	        DomainTrafficMarkArgs{...}
//
//	or:
//
//	        nil
type DomainTrafficMarkPtrInput interface {
	pulumi.Input

	ToDomainTrafficMarkPtrOutput() DomainTrafficMarkPtrOutput
	ToDomainTrafficMarkPtrOutputWithContext(context.Context) DomainTrafficMarkPtrOutput
}

type domainTrafficMarkPtrType DomainTrafficMarkArgs

func DomainTrafficMarkPtr(v *DomainTrafficMarkArgs) DomainTrafficMarkPtrInput {
	return (*domainTrafficMarkPtrType)(v)
}

func (*domainTrafficMarkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainTrafficMark)(nil)).Elem()
}

func (i *domainTrafficMarkPtrType) ToDomainTrafficMarkPtrOutput() DomainTrafficMarkPtrOutput {
	return i.ToDomainTrafficMarkPtrOutputWithContext(context.Background())
}

func (i *domainTrafficMarkPtrType) ToDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DomainTrafficMarkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTrafficMarkPtrOutput)
}

type DomainTrafficMarkOutput struct{ *pulumi.OutputState }

func (DomainTrafficMarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTrafficMark)(nil)).Elem()
}

func (o DomainTrafficMarkOutput) ToDomainTrafficMarkOutput() DomainTrafficMarkOutput {
	return o
}

func (o DomainTrafficMarkOutput) ToDomainTrafficMarkOutputWithContext(ctx context.Context) DomainTrafficMarkOutput {
	return o
}

func (o DomainTrafficMarkOutput) ToDomainTrafficMarkPtrOutput() DomainTrafficMarkPtrOutput {
	return o.ToDomainTrafficMarkPtrOutputWithContext(context.Background())
}

func (o DomainTrafficMarkOutput) ToDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DomainTrafficMarkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainTrafficMark) *DomainTrafficMark {
		return &v
	}).(DomainTrafficMarkPtrOutput)
}

// Specifies the IP tags. HTTP request header field of the original client IP address.
// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
// address list in order. Note:
//   - If you want to use a TCP connection IP address as the client IP address, set IP Tag to **$remote_addr**.
//   - If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the **cdn-src-ip**,
//     **x-real-ip**, **x-forwarded-for** and **$remote_addr** fields in sequence to read the client IP address.
//   - When the website setting `proxy` is configured as **false**, this field does not take effect,
//     and the client IP is only obtained through the `$remote_addr` field.
func (o DomainTrafficMarkOutput) IpTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainTrafficMark) []string { return v.IpTags }).(pulumi.StringArrayOutput)
}

// Specifies the session tag. This tag is used by known attack source rules to block
// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
// requests based on cookie attributes.
func (o DomainTrafficMarkOutput) SessionTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainTrafficMark) *string { return v.SessionTag }).(pulumi.StringPtrOutput)
}

// Specifies the user tag. This tag is used by known attack source rules to block malicious
// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
func (o DomainTrafficMarkOutput) UserTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainTrafficMark) *string { return v.UserTag }).(pulumi.StringPtrOutput)
}

type DomainTrafficMarkPtrOutput struct{ *pulumi.OutputState }

func (DomainTrafficMarkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainTrafficMark)(nil)).Elem()
}

func (o DomainTrafficMarkPtrOutput) ToDomainTrafficMarkPtrOutput() DomainTrafficMarkPtrOutput {
	return o
}

func (o DomainTrafficMarkPtrOutput) ToDomainTrafficMarkPtrOutputWithContext(ctx context.Context) DomainTrafficMarkPtrOutput {
	return o
}

func (o DomainTrafficMarkPtrOutput) Elem() DomainTrafficMarkOutput {
	return o.ApplyT(func(v *DomainTrafficMark) DomainTrafficMark {
		if v != nil {
			return *v
		}
		var ret DomainTrafficMark
		return ret
	}).(DomainTrafficMarkOutput)
}

// Specifies the IP tags. HTTP request header field of the original client IP address.
// This field is used to store the real IP address of the client. After the configuration, WAF preferentially reads the
// configured field to obtain the real IP address of the client. If multiple fields are configured, WAF reads the IP
// address list in order. Note:
//   - If you want to use a TCP connection IP address as the client IP address, set IP Tag to **$remote_addr**.
//   - If WAF does not obtain the real IP address of a client from fields you configure, WAF reads the **cdn-src-ip**,
//     **x-real-ip**, **x-forwarded-for** and **$remote_addr** fields in sequence to read the client IP address.
//   - When the website setting `proxy` is configured as **false**, this field does not take effect,
//     and the client IP is only obtained through the `$remote_addr` field.
func (o DomainTrafficMarkPtrOutput) IpTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainTrafficMark) []string {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(pulumi.StringArrayOutput)
}

// Specifies the session tag. This tag is used by known attack source rules to block
// malicious attacks based on cookie attributes. This parameter must be configured in known attack source rules to block
// requests based on cookie attributes.
func (o DomainTrafficMarkPtrOutput) SessionTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainTrafficMark) *string {
		if v == nil {
			return nil
		}
		return v.SessionTag
	}).(pulumi.StringPtrOutput)
}

// Specifies the user tag. This tag is used by known attack source rules to block malicious
// attacks based on params attributes. This parameter must be configured to block requests based on the params attributes.
func (o DomainTrafficMarkPtrOutput) UserTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainTrafficMark) *string {
		if v == nil {
			return nil
		}
		return v.UserTag
	}).(pulumi.StringPtrOutput)
}

type PolicyBindHost struct {
	// The domain name.
	Hostname *string `pulumi:"hostname"`
	// The domain name ID.
	Id *string `pulumi:"id"`
	// The special domain name mode. This attribute is only valid for dedicated mode.
	Mode *string `pulumi:"mode"`
	// The deployment mode of WAF instance that is used for the domain name. The value can be **cloud** for
	// cloud WAF or **premium** for dedicated WAF instances.
	WafType *string `pulumi:"wafType"`
}

// PolicyBindHostInput is an input type that accepts PolicyBindHostArgs and PolicyBindHostOutput values.
// You can construct a concrete instance of `PolicyBindHostInput` via:
//
//	PolicyBindHostArgs{...}
type PolicyBindHostInput interface {
	pulumi.Input

	ToPolicyBindHostOutput() PolicyBindHostOutput
	ToPolicyBindHostOutputWithContext(context.Context) PolicyBindHostOutput
}

type PolicyBindHostArgs struct {
	// The domain name.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The domain name ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The special domain name mode. This attribute is only valid for dedicated mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// The deployment mode of WAF instance that is used for the domain name. The value can be **cloud** for
	// cloud WAF or **premium** for dedicated WAF instances.
	WafType pulumi.StringPtrInput `pulumi:"wafType"`
}

func (PolicyBindHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBindHost)(nil)).Elem()
}

func (i PolicyBindHostArgs) ToPolicyBindHostOutput() PolicyBindHostOutput {
	return i.ToPolicyBindHostOutputWithContext(context.Background())
}

func (i PolicyBindHostArgs) ToPolicyBindHostOutputWithContext(ctx context.Context) PolicyBindHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindHostOutput)
}

// PolicyBindHostArrayInput is an input type that accepts PolicyBindHostArray and PolicyBindHostArrayOutput values.
// You can construct a concrete instance of `PolicyBindHostArrayInput` via:
//
//	PolicyBindHostArray{ PolicyBindHostArgs{...} }
type PolicyBindHostArrayInput interface {
	pulumi.Input

	ToPolicyBindHostArrayOutput() PolicyBindHostArrayOutput
	ToPolicyBindHostArrayOutputWithContext(context.Context) PolicyBindHostArrayOutput
}

type PolicyBindHostArray []PolicyBindHostInput

func (PolicyBindHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBindHost)(nil)).Elem()
}

func (i PolicyBindHostArray) ToPolicyBindHostArrayOutput() PolicyBindHostArrayOutput {
	return i.ToPolicyBindHostArrayOutputWithContext(context.Background())
}

func (i PolicyBindHostArray) ToPolicyBindHostArrayOutputWithContext(ctx context.Context) PolicyBindHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyBindHostArrayOutput)
}

type PolicyBindHostOutput struct{ *pulumi.OutputState }

func (PolicyBindHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyBindHost)(nil)).Elem()
}

func (o PolicyBindHostOutput) ToPolicyBindHostOutput() PolicyBindHostOutput {
	return o
}

func (o PolicyBindHostOutput) ToPolicyBindHostOutputWithContext(ctx context.Context) PolicyBindHostOutput {
	return o
}

// The domain name.
func (o PolicyBindHostOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBindHost) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The domain name ID.
func (o PolicyBindHostOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBindHost) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The special domain name mode. This attribute is only valid for dedicated mode.
func (o PolicyBindHostOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBindHost) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// The deployment mode of WAF instance that is used for the domain name. The value can be **cloud** for
// cloud WAF or **premium** for dedicated WAF instances.
func (o PolicyBindHostOutput) WafType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyBindHost) *string { return v.WafType }).(pulumi.StringPtrOutput)
}

type PolicyBindHostArrayOutput struct{ *pulumi.OutputState }

func (PolicyBindHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyBindHost)(nil)).Elem()
}

func (o PolicyBindHostArrayOutput) ToPolicyBindHostArrayOutput() PolicyBindHostArrayOutput {
	return o
}

func (o PolicyBindHostArrayOutput) ToPolicyBindHostArrayOutputWithContext(ctx context.Context) PolicyBindHostArrayOutput {
	return o
}

func (o PolicyBindHostArrayOutput) Index(i pulumi.IntInput) PolicyBindHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyBindHost {
		return vs[0].([]PolicyBindHost)[vs[1].(int)]
	}).(PolicyBindHostOutput)
}

type PolicyOption struct {
	// Specifies whether the javascript anti-crawler is enabled. Defaults to **false**.
	AntiCrawler *bool `pulumi:"antiCrawler"`
	// Specifies whether basic web protection is enabled. Defaults to **false**.
	BasicWebProtection *bool `pulumi:"basicWebProtection"`
	// Specifies whether the blacklist and whitelist protection is enabled.
	// Defaults to **false**.
	Blacklist *bool `pulumi:"blacklist"`
	// Specifies whether the anti-crawler protection is enabled. Defaults to **false**.
	BotEnable *bool `pulumi:"botEnable"`
	// Specifies whether the cc attack protection rules are enabled.
	// Defaults to **false**.
	CcAttackProtection *bool `pulumi:"ccAttackProtection"`
	Crawler            *bool `pulumi:"crawler"`
	// Specifies whether the search engine is enabled. Defaults to **false**.
	CrawlerEngine *bool `pulumi:"crawlerEngine"`
	// Specifies whether other crawler check is enabled. Defaults to **false**.
	CrawlerOther *bool `pulumi:"crawlerOther"`
	// Specifies whether the anti-crawler detection is enabled. Defaults to **false**.
	CrawlerScanner *bool `pulumi:"crawlerScanner"`
	// Specifies whether the script tool is enabled. Defaults to **false**.
	CrawlerScript *bool `pulumi:"crawlerScript"`
	// Specifies whether data masking is enabled. Defaults to **false**.
	DataMasking *bool `pulumi:"dataMasking"`
	// Specifies whether false alarm masking is enabled. Defaults to **false**.
	FalseAlarmMasking *bool `pulumi:"falseAlarmMasking"`
	// Specifies whether the general check in basic web protection is enabled.
	// Defaults to **false**.
	GeneralCheck *bool `pulumi:"generalCheck"`
	// Specifies whether the geolocation access control is enabled.
	// Defaults to **false**.
	GeolocationAccessControl *bool `pulumi:"geolocationAccessControl"`
	// Specifies whether the information leakage prevention is enabled.
	// Defaults to **false**.
	InformationLeakagePrevention *bool `pulumi:"informationLeakagePrevention"`
	// Specifies whether the known attack source is enabled. Defaults to **false**.
	KnownAttackSource *bool `pulumi:"knownAttackSource"`
	// Specifies whether the precise protection is enabled. Defaults to **false**.
	PreciseProtection *bool `pulumi:"preciseProtection"`
	// Specifies whether the web tamper protection is enabled.
	// Defaults to **false**.
	WebTamperProtection *bool `pulumi:"webTamperProtection"`
	// Specifies whether the web shell detection in basic web protection is enabled.
	// Defaults to **false**.
	Webshell *bool `pulumi:"webshell"`
}

// PolicyOptionInput is an input type that accepts PolicyOptionArgs and PolicyOptionOutput values.
// You can construct a concrete instance of `PolicyOptionInput` via:
//
//	PolicyOptionArgs{...}
type PolicyOptionInput interface {
	pulumi.Input

	ToPolicyOptionOutput() PolicyOptionOutput
	ToPolicyOptionOutputWithContext(context.Context) PolicyOptionOutput
}

type PolicyOptionArgs struct {
	// Specifies whether the javascript anti-crawler is enabled. Defaults to **false**.
	AntiCrawler pulumi.BoolPtrInput `pulumi:"antiCrawler"`
	// Specifies whether basic web protection is enabled. Defaults to **false**.
	BasicWebProtection pulumi.BoolPtrInput `pulumi:"basicWebProtection"`
	// Specifies whether the blacklist and whitelist protection is enabled.
	// Defaults to **false**.
	Blacklist pulumi.BoolPtrInput `pulumi:"blacklist"`
	// Specifies whether the anti-crawler protection is enabled. Defaults to **false**.
	BotEnable pulumi.BoolPtrInput `pulumi:"botEnable"`
	// Specifies whether the cc attack protection rules are enabled.
	// Defaults to **false**.
	CcAttackProtection pulumi.BoolPtrInput `pulumi:"ccAttackProtection"`
	Crawler            pulumi.BoolPtrInput `pulumi:"crawler"`
	// Specifies whether the search engine is enabled. Defaults to **false**.
	CrawlerEngine pulumi.BoolPtrInput `pulumi:"crawlerEngine"`
	// Specifies whether other crawler check is enabled. Defaults to **false**.
	CrawlerOther pulumi.BoolPtrInput `pulumi:"crawlerOther"`
	// Specifies whether the anti-crawler detection is enabled. Defaults to **false**.
	CrawlerScanner pulumi.BoolPtrInput `pulumi:"crawlerScanner"`
	// Specifies whether the script tool is enabled. Defaults to **false**.
	CrawlerScript pulumi.BoolPtrInput `pulumi:"crawlerScript"`
	// Specifies whether data masking is enabled. Defaults to **false**.
	DataMasking pulumi.BoolPtrInput `pulumi:"dataMasking"`
	// Specifies whether false alarm masking is enabled. Defaults to **false**.
	FalseAlarmMasking pulumi.BoolPtrInput `pulumi:"falseAlarmMasking"`
	// Specifies whether the general check in basic web protection is enabled.
	// Defaults to **false**.
	GeneralCheck pulumi.BoolPtrInput `pulumi:"generalCheck"`
	// Specifies whether the geolocation access control is enabled.
	// Defaults to **false**.
	GeolocationAccessControl pulumi.BoolPtrInput `pulumi:"geolocationAccessControl"`
	// Specifies whether the information leakage prevention is enabled.
	// Defaults to **false**.
	InformationLeakagePrevention pulumi.BoolPtrInput `pulumi:"informationLeakagePrevention"`
	// Specifies whether the known attack source is enabled. Defaults to **false**.
	KnownAttackSource pulumi.BoolPtrInput `pulumi:"knownAttackSource"`
	// Specifies whether the precise protection is enabled. Defaults to **false**.
	PreciseProtection pulumi.BoolPtrInput `pulumi:"preciseProtection"`
	// Specifies whether the web tamper protection is enabled.
	// Defaults to **false**.
	WebTamperProtection pulumi.BoolPtrInput `pulumi:"webTamperProtection"`
	// Specifies whether the web shell detection in basic web protection is enabled.
	// Defaults to **false**.
	Webshell pulumi.BoolPtrInput `pulumi:"webshell"`
}

func (PolicyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyOption)(nil)).Elem()
}

func (i PolicyOptionArgs) ToPolicyOptionOutput() PolicyOptionOutput {
	return i.ToPolicyOptionOutputWithContext(context.Background())
}

func (i PolicyOptionArgs) ToPolicyOptionOutputWithContext(ctx context.Context) PolicyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionOutput)
}

// PolicyOptionArrayInput is an input type that accepts PolicyOptionArray and PolicyOptionArrayOutput values.
// You can construct a concrete instance of `PolicyOptionArrayInput` via:
//
//	PolicyOptionArray{ PolicyOptionArgs{...} }
type PolicyOptionArrayInput interface {
	pulumi.Input

	ToPolicyOptionArrayOutput() PolicyOptionArrayOutput
	ToPolicyOptionArrayOutputWithContext(context.Context) PolicyOptionArrayOutput
}

type PolicyOptionArray []PolicyOptionInput

func (PolicyOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyOption)(nil)).Elem()
}

func (i PolicyOptionArray) ToPolicyOptionArrayOutput() PolicyOptionArrayOutput {
	return i.ToPolicyOptionArrayOutputWithContext(context.Background())
}

func (i PolicyOptionArray) ToPolicyOptionArrayOutputWithContext(ctx context.Context) PolicyOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionArrayOutput)
}

type PolicyOptionOutput struct{ *pulumi.OutputState }

func (PolicyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyOption)(nil)).Elem()
}

func (o PolicyOptionOutput) ToPolicyOptionOutput() PolicyOptionOutput {
	return o
}

func (o PolicyOptionOutput) ToPolicyOptionOutputWithContext(ctx context.Context) PolicyOptionOutput {
	return o
}

// Specifies whether the javascript anti-crawler is enabled. Defaults to **false**.
func (o PolicyOptionOutput) AntiCrawler() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.AntiCrawler }).(pulumi.BoolPtrOutput)
}

// Specifies whether basic web protection is enabled. Defaults to **false**.
func (o PolicyOptionOutput) BasicWebProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.BasicWebProtection }).(pulumi.BoolPtrOutput)
}

// Specifies whether the blacklist and whitelist protection is enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) Blacklist() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.Blacklist }).(pulumi.BoolPtrOutput)
}

// Specifies whether the anti-crawler protection is enabled. Defaults to **false**.
func (o PolicyOptionOutput) BotEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.BotEnable }).(pulumi.BoolPtrOutput)
}

// Specifies whether the cc attack protection rules are enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) CcAttackProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CcAttackProtection }).(pulumi.BoolPtrOutput)
}

func (o PolicyOptionOutput) Crawler() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.Crawler }).(pulumi.BoolPtrOutput)
}

// Specifies whether the search engine is enabled. Defaults to **false**.
func (o PolicyOptionOutput) CrawlerEngine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerEngine }).(pulumi.BoolPtrOutput)
}

// Specifies whether other crawler check is enabled. Defaults to **false**.
func (o PolicyOptionOutput) CrawlerOther() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerOther }).(pulumi.BoolPtrOutput)
}

// Specifies whether the anti-crawler detection is enabled. Defaults to **false**.
func (o PolicyOptionOutput) CrawlerScanner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerScanner }).(pulumi.BoolPtrOutput)
}

// Specifies whether the script tool is enabled. Defaults to **false**.
func (o PolicyOptionOutput) CrawlerScript() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerScript }).(pulumi.BoolPtrOutput)
}

// Specifies whether data masking is enabled. Defaults to **false**.
func (o PolicyOptionOutput) DataMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.DataMasking }).(pulumi.BoolPtrOutput)
}

// Specifies whether false alarm masking is enabled. Defaults to **false**.
func (o PolicyOptionOutput) FalseAlarmMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.FalseAlarmMasking }).(pulumi.BoolPtrOutput)
}

// Specifies whether the general check in basic web protection is enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) GeneralCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.GeneralCheck }).(pulumi.BoolPtrOutput)
}

// Specifies whether the geolocation access control is enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) GeolocationAccessControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.GeolocationAccessControl }).(pulumi.BoolPtrOutput)
}

// Specifies whether the information leakage prevention is enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) InformationLeakagePrevention() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.InformationLeakagePrevention }).(pulumi.BoolPtrOutput)
}

// Specifies whether the known attack source is enabled. Defaults to **false**.
func (o PolicyOptionOutput) KnownAttackSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.KnownAttackSource }).(pulumi.BoolPtrOutput)
}

// Specifies whether the precise protection is enabled. Defaults to **false**.
func (o PolicyOptionOutput) PreciseProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.PreciseProtection }).(pulumi.BoolPtrOutput)
}

// Specifies whether the web tamper protection is enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) WebTamperProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.WebTamperProtection }).(pulumi.BoolPtrOutput)
}

// Specifies whether the web shell detection in basic web protection is enabled.
// Defaults to **false**.
func (o PolicyOptionOutput) Webshell() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.Webshell }).(pulumi.BoolPtrOutput)
}

type PolicyOptionArrayOutput struct{ *pulumi.OutputState }

func (PolicyOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyOption)(nil)).Elem()
}

func (o PolicyOptionArrayOutput) ToPolicyOptionArrayOutput() PolicyOptionArrayOutput {
	return o
}

func (o PolicyOptionArrayOutput) ToPolicyOptionArrayOutputWithContext(ctx context.Context) PolicyOptionArrayOutput {
	return o
}

func (o PolicyOptionArrayOutput) Index(i pulumi.IntInput) PolicyOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyOption {
		return vs[0].([]PolicyOption)[vs[1].(int)]
	}).(PolicyOptionOutput)
}

type GetDedicatedInstancesInstance struct {
	// The access status of the instance. `0`: inaccessible, `1`: accessible.
	AccessStatus int `pulumi:"accessStatus"`
	// The available zone name of the WAF dedicated instance.
	AvailableZone string `pulumi:"availableZone"`
	// The ECS CPU architecture of WAF dedicated instance.
	CpuArchitecture string `pulumi:"cpuArchitecture"`
	// The flavor of the ECS used by the WAF instance.
	EcsFlavor string `pulumi:"ecsFlavor"`
	GroupId   string `pulumi:"groupId"`
	// Specifies the ID of WAF dedicated instance.
	Id string `pulumi:"id"`
	// Specifies the name of WAF dedicated instance.
	Name string `pulumi:"name"`
	// The running status of the instance. Values are:
	RunStatus int `pulumi:"runStatus"`
	// The security group of the instance. This is an array of security group IDs.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The ID of the ECS hosting the dedicated engine.
	ServerId string `pulumi:"serverId"`
	// The service plane IP address of the dedicated WAF instance.
	ServiceIp string `pulumi:"serviceIp"`
	// The subnet ID of WAF dedicated instance VPC.
	SubnetId string `pulumi:"subnetId"`
	// Whether the dedicated WAF instance can be upgraded. `0`: Cannot be upgraded; `1`: Can be upgraded.
	Upgradable int `pulumi:"upgradable"`
	// The VPC ID of WAF dedicated instance.
	VpcId string `pulumi:"vpcId"`
}

// GetDedicatedInstancesInstanceInput is an input type that accepts GetDedicatedInstancesInstanceArgs and GetDedicatedInstancesInstanceOutput values.
// You can construct a concrete instance of `GetDedicatedInstancesInstanceInput` via:
//
//	GetDedicatedInstancesInstanceArgs{...}
type GetDedicatedInstancesInstanceInput interface {
	pulumi.Input

	ToGetDedicatedInstancesInstanceOutput() GetDedicatedInstancesInstanceOutput
	ToGetDedicatedInstancesInstanceOutputWithContext(context.Context) GetDedicatedInstancesInstanceOutput
}

type GetDedicatedInstancesInstanceArgs struct {
	// The access status of the instance. `0`: inaccessible, `1`: accessible.
	AccessStatus pulumi.IntInput `pulumi:"accessStatus"`
	// The available zone name of the WAF dedicated instance.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// The ECS CPU architecture of WAF dedicated instance.
	CpuArchitecture pulumi.StringInput `pulumi:"cpuArchitecture"`
	// The flavor of the ECS used by the WAF instance.
	EcsFlavor pulumi.StringInput `pulumi:"ecsFlavor"`
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	// Specifies the ID of WAF dedicated instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of WAF dedicated instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The running status of the instance. Values are:
	RunStatus pulumi.IntInput `pulumi:"runStatus"`
	// The security group of the instance. This is an array of security group IDs.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The ID of the ECS hosting the dedicated engine.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The service plane IP address of the dedicated WAF instance.
	ServiceIp pulumi.StringInput `pulumi:"serviceIp"`
	// The subnet ID of WAF dedicated instance VPC.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Whether the dedicated WAF instance can be upgraded. `0`: Cannot be upgraded; `1`: Can be upgraded.
	Upgradable pulumi.IntInput `pulumi:"upgradable"`
	// The VPC ID of WAF dedicated instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetDedicatedInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedInstancesInstance)(nil)).Elem()
}

func (i GetDedicatedInstancesInstanceArgs) ToGetDedicatedInstancesInstanceOutput() GetDedicatedInstancesInstanceOutput {
	return i.ToGetDedicatedInstancesInstanceOutputWithContext(context.Background())
}

func (i GetDedicatedInstancesInstanceArgs) ToGetDedicatedInstancesInstanceOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedInstancesInstanceOutput)
}

// GetDedicatedInstancesInstanceArrayInput is an input type that accepts GetDedicatedInstancesInstanceArray and GetDedicatedInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetDedicatedInstancesInstanceArrayInput` via:
//
//	GetDedicatedInstancesInstanceArray{ GetDedicatedInstancesInstanceArgs{...} }
type GetDedicatedInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetDedicatedInstancesInstanceArrayOutput() GetDedicatedInstancesInstanceArrayOutput
	ToGetDedicatedInstancesInstanceArrayOutputWithContext(context.Context) GetDedicatedInstancesInstanceArrayOutput
}

type GetDedicatedInstancesInstanceArray []GetDedicatedInstancesInstanceInput

func (GetDedicatedInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedInstancesInstance)(nil)).Elem()
}

func (i GetDedicatedInstancesInstanceArray) ToGetDedicatedInstancesInstanceArrayOutput() GetDedicatedInstancesInstanceArrayOutput {
	return i.ToGetDedicatedInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetDedicatedInstancesInstanceArray) ToGetDedicatedInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedInstancesInstanceArrayOutput)
}

type GetDedicatedInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetDedicatedInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedInstancesInstance)(nil)).Elem()
}

func (o GetDedicatedInstancesInstanceOutput) ToGetDedicatedInstancesInstanceOutput() GetDedicatedInstancesInstanceOutput {
	return o
}

func (o GetDedicatedInstancesInstanceOutput) ToGetDedicatedInstancesInstanceOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceOutput {
	return o
}

// The access status of the instance. `0`: inaccessible, `1`: accessible.
func (o GetDedicatedInstancesInstanceOutput) AccessStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) int { return v.AccessStatus }).(pulumi.IntOutput)
}

// The available zone name of the WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// The ECS CPU architecture of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) CpuArchitecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.CpuArchitecture }).(pulumi.StringOutput)
}

// The flavor of the ECS used by the WAF instance.
func (o GetDedicatedInstancesInstanceOutput) EcsFlavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.EcsFlavor }).(pulumi.StringOutput)
}

func (o GetDedicatedInstancesInstanceOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.GroupId }).(pulumi.StringOutput)
}

// Specifies the ID of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The running status of the instance. Values are:
func (o GetDedicatedInstancesInstanceOutput) RunStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) int { return v.RunStatus }).(pulumi.IntOutput)
}

// The security group of the instance. This is an array of security group IDs.
func (o GetDedicatedInstancesInstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The ID of the ECS hosting the dedicated engine.
func (o GetDedicatedInstancesInstanceOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.ServerId }).(pulumi.StringOutput)
}

// The service plane IP address of the dedicated WAF instance.
func (o GetDedicatedInstancesInstanceOutput) ServiceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.ServiceIp }).(pulumi.StringOutput)
}

// The subnet ID of WAF dedicated instance VPC.
func (o GetDedicatedInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Whether the dedicated WAF instance can be upgraded. `0`: Cannot be upgraded; `1`: Can be upgraded.
func (o GetDedicatedInstancesInstanceOutput) Upgradable() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) int { return v.Upgradable }).(pulumi.IntOutput)
}

// The VPC ID of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDedicatedInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedInstancesInstance)(nil)).Elem()
}

func (o GetDedicatedInstancesInstanceArrayOutput) ToGetDedicatedInstancesInstanceArrayOutput() GetDedicatedInstancesInstanceArrayOutput {
	return o
}

func (o GetDedicatedInstancesInstanceArrayOutput) ToGetDedicatedInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceArrayOutput {
	return o
}

func (o GetDedicatedInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetDedicatedInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedInstancesInstance {
		return vs[0].([]GetDedicatedInstancesInstance)[vs[1].(int)]
	}).(GetDedicatedInstancesInstanceOutput)
}

type GetInstanceGroupsGroup struct {
	BodyLimit          int                                       `pulumi:"bodyLimit"`
	ConnectionTimeout  int                                       `pulumi:"connectionTimeout"`
	DedicatedInstances []GetInstanceGroupsGroupDedicatedInstance `pulumi:"dedicatedInstances"`
	Description        string                                    `pulumi:"description"`
	DomainNames        []GetInstanceGroupsGroupDomainName        `pulumi:"domainNames"`
	HeaderLimit        int                                       `pulumi:"headerLimit"`
	LoadBalancers      []string                                  `pulumi:"loadBalancers"`
	Name               string                                    `pulumi:"name"`
	ReadTimeout        int                                       `pulumi:"readTimeout"`
	Region             string                                    `pulumi:"region"`
	VpcId              string                                    `pulumi:"vpcId"`
	WriteTimeout       int                                       `pulumi:"writeTimeout"`
}

// GetInstanceGroupsGroupInput is an input type that accepts GetInstanceGroupsGroupArgs and GetInstanceGroupsGroupOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupInput` via:
//
//	GetInstanceGroupsGroupArgs{...}
type GetInstanceGroupsGroupInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupOutput() GetInstanceGroupsGroupOutput
	ToGetInstanceGroupsGroupOutputWithContext(context.Context) GetInstanceGroupsGroupOutput
}

type GetInstanceGroupsGroupArgs struct {
	BodyLimit          pulumi.IntInput                                   `pulumi:"bodyLimit"`
	ConnectionTimeout  pulumi.IntInput                                   `pulumi:"connectionTimeout"`
	DedicatedInstances GetInstanceGroupsGroupDedicatedInstanceArrayInput `pulumi:"dedicatedInstances"`
	Description        pulumi.StringInput                                `pulumi:"description"`
	DomainNames        GetInstanceGroupsGroupDomainNameArrayInput        `pulumi:"domainNames"`
	HeaderLimit        pulumi.IntInput                                   `pulumi:"headerLimit"`
	LoadBalancers      pulumi.StringArrayInput                           `pulumi:"loadBalancers"`
	Name               pulumi.StringInput                                `pulumi:"name"`
	ReadTimeout        pulumi.IntInput                                   `pulumi:"readTimeout"`
	Region             pulumi.StringInput                                `pulumi:"region"`
	VpcId              pulumi.StringInput                                `pulumi:"vpcId"`
	WriteTimeout       pulumi.IntInput                                   `pulumi:"writeTimeout"`
}

func (GetInstanceGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroup)(nil)).Elem()
}

func (i GetInstanceGroupsGroupArgs) ToGetInstanceGroupsGroupOutput() GetInstanceGroupsGroupOutput {
	return i.ToGetInstanceGroupsGroupOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupArgs) ToGetInstanceGroupsGroupOutputWithContext(ctx context.Context) GetInstanceGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupOutput)
}

// GetInstanceGroupsGroupArrayInput is an input type that accepts GetInstanceGroupsGroupArray and GetInstanceGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupArrayInput` via:
//
//	GetInstanceGroupsGroupArray{ GetInstanceGroupsGroupArgs{...} }
type GetInstanceGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupArrayOutput() GetInstanceGroupsGroupArrayOutput
	ToGetInstanceGroupsGroupArrayOutputWithContext(context.Context) GetInstanceGroupsGroupArrayOutput
}

type GetInstanceGroupsGroupArray []GetInstanceGroupsGroupInput

func (GetInstanceGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroup)(nil)).Elem()
}

func (i GetInstanceGroupsGroupArray) ToGetInstanceGroupsGroupArrayOutput() GetInstanceGroupsGroupArrayOutput {
	return i.ToGetInstanceGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupArray) ToGetInstanceGroupsGroupArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupArrayOutput)
}

type GetInstanceGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroup)(nil)).Elem()
}

func (o GetInstanceGroupsGroupOutput) ToGetInstanceGroupsGroupOutput() GetInstanceGroupsGroupOutput {
	return o
}

func (o GetInstanceGroupsGroupOutput) ToGetInstanceGroupsGroupOutputWithContext(ctx context.Context) GetInstanceGroupsGroupOutput {
	return o
}

func (o GetInstanceGroupsGroupOutput) BodyLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.BodyLimit }).(pulumi.IntOutput)
}

func (o GetInstanceGroupsGroupOutput) ConnectionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.ConnectionTimeout }).(pulumi.IntOutput)
}

func (o GetInstanceGroupsGroupOutput) DedicatedInstances() GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) []GetInstanceGroupsGroupDedicatedInstance { return v.DedicatedInstances }).(GetInstanceGroupsGroupDedicatedInstanceArrayOutput)
}

func (o GetInstanceGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupOutput) DomainNames() GetInstanceGroupsGroupDomainNameArrayOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) []GetInstanceGroupsGroupDomainName { return v.DomainNames }).(GetInstanceGroupsGroupDomainNameArrayOutput)
}

func (o GetInstanceGroupsGroupOutput) HeaderLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.HeaderLimit }).(pulumi.IntOutput)
}

func (o GetInstanceGroupsGroupOutput) LoadBalancers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) []string { return v.LoadBalancers }).(pulumi.StringArrayOutput)
}

func (o GetInstanceGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupOutput) ReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.ReadTimeout }).(pulumi.IntOutput)
}

func (o GetInstanceGroupsGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupOutput) WriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.WriteTimeout }).(pulumi.IntOutput)
}

type GetInstanceGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroup)(nil)).Elem()
}

func (o GetInstanceGroupsGroupArrayOutput) ToGetInstanceGroupsGroupArrayOutput() GetInstanceGroupsGroupArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupArrayOutput) ToGetInstanceGroupsGroupArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetInstanceGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceGroupsGroup {
		return vs[0].([]GetInstanceGroupsGroup)[vs[1].(int)]
	}).(GetInstanceGroupsGroupOutput)
}

type GetInstanceGroupsGroupDedicatedInstance struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetInstanceGroupsGroupDedicatedInstanceInput is an input type that accepts GetInstanceGroupsGroupDedicatedInstanceArgs and GetInstanceGroupsGroupDedicatedInstanceOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDedicatedInstanceInput` via:
//
//	GetInstanceGroupsGroupDedicatedInstanceArgs{...}
type GetInstanceGroupsGroupDedicatedInstanceInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDedicatedInstanceOutput() GetInstanceGroupsGroupDedicatedInstanceOutput
	ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(context.Context) GetInstanceGroupsGroupDedicatedInstanceOutput
}

type GetInstanceGroupsGroupDedicatedInstanceArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInstanceGroupsGroupDedicatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDedicatedInstanceArgs) ToGetInstanceGroupsGroupDedicatedInstanceOutput() GetInstanceGroupsGroupDedicatedInstanceOutput {
	return i.ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDedicatedInstanceArgs) ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDedicatedInstanceOutput)
}

// GetInstanceGroupsGroupDedicatedInstanceArrayInput is an input type that accepts GetInstanceGroupsGroupDedicatedInstanceArray and GetInstanceGroupsGroupDedicatedInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDedicatedInstanceArrayInput` via:
//
//	GetInstanceGroupsGroupDedicatedInstanceArray{ GetInstanceGroupsGroupDedicatedInstanceArgs{...} }
type GetInstanceGroupsGroupDedicatedInstanceArrayInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDedicatedInstanceArrayOutput() GetInstanceGroupsGroupDedicatedInstanceArrayOutput
	ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(context.Context) GetInstanceGroupsGroupDedicatedInstanceArrayOutput
}

type GetInstanceGroupsGroupDedicatedInstanceArray []GetInstanceGroupsGroupDedicatedInstanceInput

func (GetInstanceGroupsGroupDedicatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDedicatedInstanceArray) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutput() GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return i.ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDedicatedInstanceArray) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDedicatedInstanceArrayOutput)
}

type GetInstanceGroupsGroupDedicatedInstanceOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDedicatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) ToGetInstanceGroupsGroupDedicatedInstanceOutput() GetInstanceGroupsGroupDedicatedInstanceOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDedicatedInstance) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDedicatedInstance) string { return v.Name }).(pulumi.StringOutput)
}

type GetInstanceGroupsGroupDedicatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDedicatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDedicatedInstanceArrayOutput) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutput() GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceArrayOutput) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceArrayOutput) Index(i pulumi.IntInput) GetInstanceGroupsGroupDedicatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceGroupsGroupDedicatedInstance {
		return vs[0].([]GetInstanceGroupsGroupDedicatedInstance)[vs[1].(int)]
	}).(GetInstanceGroupsGroupDedicatedInstanceOutput)
}

type GetInstanceGroupsGroupDomainName struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetInstanceGroupsGroupDomainNameInput is an input type that accepts GetInstanceGroupsGroupDomainNameArgs and GetInstanceGroupsGroupDomainNameOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDomainNameInput` via:
//
//	GetInstanceGroupsGroupDomainNameArgs{...}
type GetInstanceGroupsGroupDomainNameInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDomainNameOutput() GetInstanceGroupsGroupDomainNameOutput
	ToGetInstanceGroupsGroupDomainNameOutputWithContext(context.Context) GetInstanceGroupsGroupDomainNameOutput
}

type GetInstanceGroupsGroupDomainNameArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInstanceGroupsGroupDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDomainNameArgs) ToGetInstanceGroupsGroupDomainNameOutput() GetInstanceGroupsGroupDomainNameOutput {
	return i.ToGetInstanceGroupsGroupDomainNameOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDomainNameArgs) ToGetInstanceGroupsGroupDomainNameOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDomainNameOutput)
}

// GetInstanceGroupsGroupDomainNameArrayInput is an input type that accepts GetInstanceGroupsGroupDomainNameArray and GetInstanceGroupsGroupDomainNameArrayOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDomainNameArrayInput` via:
//
//	GetInstanceGroupsGroupDomainNameArray{ GetInstanceGroupsGroupDomainNameArgs{...} }
type GetInstanceGroupsGroupDomainNameArrayInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDomainNameArrayOutput() GetInstanceGroupsGroupDomainNameArrayOutput
	ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(context.Context) GetInstanceGroupsGroupDomainNameArrayOutput
}

type GetInstanceGroupsGroupDomainNameArray []GetInstanceGroupsGroupDomainNameInput

func (GetInstanceGroupsGroupDomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDomainNameArray) ToGetInstanceGroupsGroupDomainNameArrayOutput() GetInstanceGroupsGroupDomainNameArrayOutput {
	return i.ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDomainNameArray) ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDomainNameArrayOutput)
}

type GetInstanceGroupsGroupDomainNameOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDomainNameOutput) ToGetInstanceGroupsGroupDomainNameOutput() GetInstanceGroupsGroupDomainNameOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameOutput) ToGetInstanceGroupsGroupDomainNameOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDomainName) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupDomainNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDomainName) string { return v.Name }).(pulumi.StringOutput)
}

type GetInstanceGroupsGroupDomainNameArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDomainNameArrayOutput) ToGetInstanceGroupsGroupDomainNameArrayOutput() GetInstanceGroupsGroupDomainNameArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameArrayOutput) ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameArrayOutput) Index(i pulumi.IntInput) GetInstanceGroupsGroupDomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceGroupsGroupDomainName {
		return vs[0].([]GetInstanceGroupsGroupDomainName)[vs[1].(int)]
	}).(GetInstanceGroupsGroupDomainNameOutput)
}

type GetPoliciesPolicy struct {
	// The protection switches. The object structure is documented below.
	BindHosts []GetPoliciesPolicyBindHost `pulumi:"bindHosts"`
	// The deep inspection in basic web protection.
	DeepInspection bool `pulumi:"deepInspection"`
	// The detection mode in precise protection.
	// + **false**: Instant detection. When a request hits the blocking conditions in precise protection, WAF terminates
	//   checks and blocks the request immediately.
	// + **true**: Full detection. If a request hits the blocking conditions in precise protection, WAF does not block the
	//   request immediately. Instead, it blocks the requests until other checks are finished.
	FullDetection bool `pulumi:"fullDetection"`
	// The header inspection in basic web protection.
	HeaderInspection bool `pulumi:"headerInspection"`
	// The domain name ID.
	Id string `pulumi:"id"`
	// The protection level. Valid values are:
	// + **1**: Low. At this protection level, WAF blocks only requests with obvious attack features. If a large number of
	//   false alarms have been reported, this value is recommended.
	// + **2**: Medium. This protection level meets web protection requirements in most scenarios.
	// + **3**: High. At this protection level, WAF provides the finest granular protection and can intercept attacks with
	//   complex bypass features, such as Jolokia cyberattacks, common gateway interface (CGI) vulnerability detection,
	//   and Druid SQL injection attacks.
	Level int `pulumi:"level"`
	// Specifies the policy name used for matching. The value is case-sensitive and supports
	// fuzzy matching.
	Name string `pulumi:"name"`
	// The protection switches. The options object structure is documented below.
	Options []GetPoliciesPolicyOption `pulumi:"options"`
	// The protective action after a rule is matched. Valid values are:
	// + **block**: WAF blocks and logs detected attacks.
	// + **log**: WAF logs detected attacks only.
	ProtectionMode string `pulumi:"protectionMode"`
	// The protective actions for each rule in anti-crawler protection. Valid values are:
	// + **block**: WAF blocks discovered attacks.
	// + **log**: WAF only logs discovered attacks.
	RobotAction string `pulumi:"robotAction"`
	// The shiro decryption check in basic web protection.
	ShiroDecryptionCheck bool `pulumi:"shiroDecryptionCheck"`
}

// GetPoliciesPolicyInput is an input type that accepts GetPoliciesPolicyArgs and GetPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyInput` via:
//
//	GetPoliciesPolicyArgs{...}
type GetPoliciesPolicyInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput
	ToGetPoliciesPolicyOutputWithContext(context.Context) GetPoliciesPolicyOutput
}

type GetPoliciesPolicyArgs struct {
	// The protection switches. The object structure is documented below.
	BindHosts GetPoliciesPolicyBindHostArrayInput `pulumi:"bindHosts"`
	// The deep inspection in basic web protection.
	DeepInspection pulumi.BoolInput `pulumi:"deepInspection"`
	// The detection mode in precise protection.
	// + **false**: Instant detection. When a request hits the blocking conditions in precise protection, WAF terminates
	//   checks and blocks the request immediately.
	// + **true**: Full detection. If a request hits the blocking conditions in precise protection, WAF does not block the
	//   request immediately. Instead, it blocks the requests until other checks are finished.
	FullDetection pulumi.BoolInput `pulumi:"fullDetection"`
	// The header inspection in basic web protection.
	HeaderInspection pulumi.BoolInput `pulumi:"headerInspection"`
	// The domain name ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The protection level. Valid values are:
	// + **1**: Low. At this protection level, WAF blocks only requests with obvious attack features. If a large number of
	//   false alarms have been reported, this value is recommended.
	// + **2**: Medium. This protection level meets web protection requirements in most scenarios.
	// + **3**: High. At this protection level, WAF provides the finest granular protection and can intercept attacks with
	//   complex bypass features, such as Jolokia cyberattacks, common gateway interface (CGI) vulnerability detection,
	//   and Druid SQL injection attacks.
	Level pulumi.IntInput `pulumi:"level"`
	// Specifies the policy name used for matching. The value is case-sensitive and supports
	// fuzzy matching.
	Name pulumi.StringInput `pulumi:"name"`
	// The protection switches. The options object structure is documented below.
	Options GetPoliciesPolicyOptionArrayInput `pulumi:"options"`
	// The protective action after a rule is matched. Valid values are:
	// + **block**: WAF blocks and logs detected attacks.
	// + **log**: WAF logs detected attacks only.
	ProtectionMode pulumi.StringInput `pulumi:"protectionMode"`
	// The protective actions for each rule in anti-crawler protection. Valid values are:
	// + **block**: WAF blocks discovered attacks.
	// + **log**: WAF only logs discovered attacks.
	RobotAction pulumi.StringInput `pulumi:"robotAction"`
	// The shiro decryption check in basic web protection.
	ShiroDecryptionCheck pulumi.BoolInput `pulumi:"shiroDecryptionCheck"`
}

func (GetPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return i.ToGetPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOutput)
}

// GetPoliciesPolicyArrayInput is an input type that accepts GetPoliciesPolicyArray and GetPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyArrayInput` via:
//
//	GetPoliciesPolicyArray{ GetPoliciesPolicyArgs{...} }
type GetPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput
	ToGetPoliciesPolicyArrayOutputWithContext(context.Context) GetPoliciesPolicyArrayOutput
}

type GetPoliciesPolicyArray []GetPoliciesPolicyInput

func (GetPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return i.ToGetPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyArrayOutput)
}

type GetPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return o
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return o
}

// The protection switches. The object structure is documented below.
func (o GetPoliciesPolicyOutput) BindHosts() GetPoliciesPolicyBindHostArrayOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) []GetPoliciesPolicyBindHost { return v.BindHosts }).(GetPoliciesPolicyBindHostArrayOutput)
}

// The deep inspection in basic web protection.
func (o GetPoliciesPolicyOutput) DeepInspection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) bool { return v.DeepInspection }).(pulumi.BoolOutput)
}

// The detection mode in precise protection.
//   - **false**: Instant detection. When a request hits the blocking conditions in precise protection, WAF terminates
//     checks and blocks the request immediately.
//   - **true**: Full detection. If a request hits the blocking conditions in precise protection, WAF does not block the
//     request immediately. Instead, it blocks the requests until other checks are finished.
func (o GetPoliciesPolicyOutput) FullDetection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) bool { return v.FullDetection }).(pulumi.BoolOutput)
}

// The header inspection in basic web protection.
func (o GetPoliciesPolicyOutput) HeaderInspection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) bool { return v.HeaderInspection }).(pulumi.BoolOutput)
}

// The domain name ID.
func (o GetPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The protection level. Valid values are:
//   - **1**: Low. At this protection level, WAF blocks only requests with obvious attack features. If a large number of
//     false alarms have been reported, this value is recommended.
//   - **2**: Medium. This protection level meets web protection requirements in most scenarios.
//   - **3**: High. At this protection level, WAF provides the finest granular protection and can intercept attacks with
//     complex bypass features, such as Jolokia cyberattacks, common gateway interface (CGI) vulnerability detection,
//     and Druid SQL injection attacks.
func (o GetPoliciesPolicyOutput) Level() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) int { return v.Level }).(pulumi.IntOutput)
}

// Specifies the policy name used for matching. The value is case-sensitive and supports
// fuzzy matching.
func (o GetPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The protection switches. The options object structure is documented below.
func (o GetPoliciesPolicyOutput) Options() GetPoliciesPolicyOptionArrayOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) []GetPoliciesPolicyOption { return v.Options }).(GetPoliciesPolicyOptionArrayOutput)
}

// The protective action after a rule is matched. Valid values are:
// + **block**: WAF blocks and logs detected attacks.
// + **log**: WAF logs detected attacks only.
func (o GetPoliciesPolicyOutput) ProtectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.ProtectionMode }).(pulumi.StringOutput)
}

// The protective actions for each rule in anti-crawler protection. Valid values are:
// + **block**: WAF blocks discovered attacks.
// + **log**: WAF only logs discovered attacks.
func (o GetPoliciesPolicyOutput) RobotAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.RobotAction }).(pulumi.StringOutput)
}

// The shiro decryption check in basic web protection.
func (o GetPoliciesPolicyOutput) ShiroDecryptionCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) bool { return v.ShiroDecryptionCheck }).(pulumi.BoolOutput)
}

type GetPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicy {
		return vs[0].([]GetPoliciesPolicy)[vs[1].(int)]
	}).(GetPoliciesPolicyOutput)
}

type GetPoliciesPolicyBindHost struct {
	// The domain name.
	Hostname string `pulumi:"hostname"`
	// The domain name ID.
	Id string `pulumi:"id"`
	// The special domain name mode. This attribute is only valid for dedicated mode.
	Mode string `pulumi:"mode"`
	// The deployment mode of WAF instance that is used for the domain name. The value can be **cloud** for
	// cloud WAF or **premium** for dedicated WAF instances.
	WafType string `pulumi:"wafType"`
}

// GetPoliciesPolicyBindHostInput is an input type that accepts GetPoliciesPolicyBindHostArgs and GetPoliciesPolicyBindHostOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyBindHostInput` via:
//
//	GetPoliciesPolicyBindHostArgs{...}
type GetPoliciesPolicyBindHostInput interface {
	pulumi.Input

	ToGetPoliciesPolicyBindHostOutput() GetPoliciesPolicyBindHostOutput
	ToGetPoliciesPolicyBindHostOutputWithContext(context.Context) GetPoliciesPolicyBindHostOutput
}

type GetPoliciesPolicyBindHostArgs struct {
	// The domain name.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The domain name ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The special domain name mode. This attribute is only valid for dedicated mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The deployment mode of WAF instance that is used for the domain name. The value can be **cloud** for
	// cloud WAF or **premium** for dedicated WAF instances.
	WafType pulumi.StringInput `pulumi:"wafType"`
}

func (GetPoliciesPolicyBindHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyBindHost)(nil)).Elem()
}

func (i GetPoliciesPolicyBindHostArgs) ToGetPoliciesPolicyBindHostOutput() GetPoliciesPolicyBindHostOutput {
	return i.ToGetPoliciesPolicyBindHostOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyBindHostArgs) ToGetPoliciesPolicyBindHostOutputWithContext(ctx context.Context) GetPoliciesPolicyBindHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyBindHostOutput)
}

// GetPoliciesPolicyBindHostArrayInput is an input type that accepts GetPoliciesPolicyBindHostArray and GetPoliciesPolicyBindHostArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyBindHostArrayInput` via:
//
//	GetPoliciesPolicyBindHostArray{ GetPoliciesPolicyBindHostArgs{...} }
type GetPoliciesPolicyBindHostArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyBindHostArrayOutput() GetPoliciesPolicyBindHostArrayOutput
	ToGetPoliciesPolicyBindHostArrayOutputWithContext(context.Context) GetPoliciesPolicyBindHostArrayOutput
}

type GetPoliciesPolicyBindHostArray []GetPoliciesPolicyBindHostInput

func (GetPoliciesPolicyBindHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyBindHost)(nil)).Elem()
}

func (i GetPoliciesPolicyBindHostArray) ToGetPoliciesPolicyBindHostArrayOutput() GetPoliciesPolicyBindHostArrayOutput {
	return i.ToGetPoliciesPolicyBindHostArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyBindHostArray) ToGetPoliciesPolicyBindHostArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyBindHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyBindHostArrayOutput)
}

type GetPoliciesPolicyBindHostOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyBindHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyBindHost)(nil)).Elem()
}

func (o GetPoliciesPolicyBindHostOutput) ToGetPoliciesPolicyBindHostOutput() GetPoliciesPolicyBindHostOutput {
	return o
}

func (o GetPoliciesPolicyBindHostOutput) ToGetPoliciesPolicyBindHostOutputWithContext(ctx context.Context) GetPoliciesPolicyBindHostOutput {
	return o
}

// The domain name.
func (o GetPoliciesPolicyBindHostOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyBindHost) string { return v.Hostname }).(pulumi.StringOutput)
}

// The domain name ID.
func (o GetPoliciesPolicyBindHostOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyBindHost) string { return v.Id }).(pulumi.StringOutput)
}

// The special domain name mode. This attribute is only valid for dedicated mode.
func (o GetPoliciesPolicyBindHostOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyBindHost) string { return v.Mode }).(pulumi.StringOutput)
}

// The deployment mode of WAF instance that is used for the domain name. The value can be **cloud** for
// cloud WAF or **premium** for dedicated WAF instances.
func (o GetPoliciesPolicyBindHostOutput) WafType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicyBindHost) string { return v.WafType }).(pulumi.StringOutput)
}

type GetPoliciesPolicyBindHostArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyBindHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyBindHost)(nil)).Elem()
}

func (o GetPoliciesPolicyBindHostArrayOutput) ToGetPoliciesPolicyBindHostArrayOutput() GetPoliciesPolicyBindHostArrayOutput {
	return o
}

func (o GetPoliciesPolicyBindHostArrayOutput) ToGetPoliciesPolicyBindHostArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyBindHostArrayOutput {
	return o
}

func (o GetPoliciesPolicyBindHostArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyBindHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicyBindHost {
		return vs[0].([]GetPoliciesPolicyBindHost)[vs[1].(int)]
	}).(GetPoliciesPolicyBindHostOutput)
}

type GetPoliciesPolicyOption struct {
	// Indicates whether the javascript anti-crawler is enabled.
	AntiCrawler bool `pulumi:"antiCrawler"`
	// Indicates whether Basic Web Protection is enabled.
	BasicWebProtection bool `pulumi:"basicWebProtection"`
	// Indicates whether the blacklist and whitelist protection is enabled.
	Blacklist bool `pulumi:"blacklist"`
	// Indicates whether the anti-crawler protection is enabled.
	BotEnable bool `pulumi:"botEnable"`
	// Indicates whether the cc attack protection rules are enabled.
	CcAttackProtection bool `pulumi:"ccAttackProtection"`
	Crawler            bool `pulumi:"crawler"`
	// Indicates whether the search engine is enabled.
	CrawlerEngine bool `pulumi:"crawlerEngine"`
	// Indicates whether other crawler check is enabled.
	CrawlerOther bool `pulumi:"crawlerOther"`
	// Indicates whether the anti-crawler detection is enabled.
	CrawlerScanner bool `pulumi:"crawlerScanner"`
	// Indicates whether the script tool is enabled.
	CrawlerScript bool `pulumi:"crawlerScript"`
	// Indicates whether data masking is enabled.
	DataMasking bool `pulumi:"dataMasking"`
	// Indicates whether false alarm masking is enabled.
	FalseAlarmMasking bool `pulumi:"falseAlarmMasking"`
	// Indicates whether General Check in Basic Web Protection is enabled.
	GeneralCheck bool `pulumi:"generalCheck"`
	// Indicates whether the geolocation access control is enabled.
	GeolocationAccessControl bool `pulumi:"geolocationAccessControl"`
	// Indicates whether the information leakage prevention is enabled.
	InformationLeakagePrevention bool `pulumi:"informationLeakagePrevention"`
	// Indicates whether the known attack source is enabled.
	KnownAttackSource bool `pulumi:"knownAttackSource"`
	// Indicates whether the precise protection is enabled.
	PreciseProtection bool `pulumi:"preciseProtection"`
	// Indicates whether the web tamper protection is enabled.
	WebTamperProtection bool `pulumi:"webTamperProtection"`
	// Indicates whether the web shell detection in basic web protection is enabled.
	Webshell bool `pulumi:"webshell"`
}

// GetPoliciesPolicyOptionInput is an input type that accepts GetPoliciesPolicyOptionArgs and GetPoliciesPolicyOptionOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyOptionInput` via:
//
//	GetPoliciesPolicyOptionArgs{...}
type GetPoliciesPolicyOptionInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOptionOutput() GetPoliciesPolicyOptionOutput
	ToGetPoliciesPolicyOptionOutputWithContext(context.Context) GetPoliciesPolicyOptionOutput
}

type GetPoliciesPolicyOptionArgs struct {
	// Indicates whether the javascript anti-crawler is enabled.
	AntiCrawler pulumi.BoolInput `pulumi:"antiCrawler"`
	// Indicates whether Basic Web Protection is enabled.
	BasicWebProtection pulumi.BoolInput `pulumi:"basicWebProtection"`
	// Indicates whether the blacklist and whitelist protection is enabled.
	Blacklist pulumi.BoolInput `pulumi:"blacklist"`
	// Indicates whether the anti-crawler protection is enabled.
	BotEnable pulumi.BoolInput `pulumi:"botEnable"`
	// Indicates whether the cc attack protection rules are enabled.
	CcAttackProtection pulumi.BoolInput `pulumi:"ccAttackProtection"`
	Crawler            pulumi.BoolInput `pulumi:"crawler"`
	// Indicates whether the search engine is enabled.
	CrawlerEngine pulumi.BoolInput `pulumi:"crawlerEngine"`
	// Indicates whether other crawler check is enabled.
	CrawlerOther pulumi.BoolInput `pulumi:"crawlerOther"`
	// Indicates whether the anti-crawler detection is enabled.
	CrawlerScanner pulumi.BoolInput `pulumi:"crawlerScanner"`
	// Indicates whether the script tool is enabled.
	CrawlerScript pulumi.BoolInput `pulumi:"crawlerScript"`
	// Indicates whether data masking is enabled.
	DataMasking pulumi.BoolInput `pulumi:"dataMasking"`
	// Indicates whether false alarm masking is enabled.
	FalseAlarmMasking pulumi.BoolInput `pulumi:"falseAlarmMasking"`
	// Indicates whether General Check in Basic Web Protection is enabled.
	GeneralCheck pulumi.BoolInput `pulumi:"generalCheck"`
	// Indicates whether the geolocation access control is enabled.
	GeolocationAccessControl pulumi.BoolInput `pulumi:"geolocationAccessControl"`
	// Indicates whether the information leakage prevention is enabled.
	InformationLeakagePrevention pulumi.BoolInput `pulumi:"informationLeakagePrevention"`
	// Indicates whether the known attack source is enabled.
	KnownAttackSource pulumi.BoolInput `pulumi:"knownAttackSource"`
	// Indicates whether the precise protection is enabled.
	PreciseProtection pulumi.BoolInput `pulumi:"preciseProtection"`
	// Indicates whether the web tamper protection is enabled.
	WebTamperProtection pulumi.BoolInput `pulumi:"webTamperProtection"`
	// Indicates whether the web shell detection in basic web protection is enabled.
	Webshell pulumi.BoolInput `pulumi:"webshell"`
}

func (GetPoliciesPolicyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyOption)(nil)).Elem()
}

func (i GetPoliciesPolicyOptionArgs) ToGetPoliciesPolicyOptionOutput() GetPoliciesPolicyOptionOutput {
	return i.ToGetPoliciesPolicyOptionOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyOptionArgs) ToGetPoliciesPolicyOptionOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOptionOutput)
}

// GetPoliciesPolicyOptionArrayInput is an input type that accepts GetPoliciesPolicyOptionArray and GetPoliciesPolicyOptionArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyOptionArrayInput` via:
//
//	GetPoliciesPolicyOptionArray{ GetPoliciesPolicyOptionArgs{...} }
type GetPoliciesPolicyOptionArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOptionArrayOutput() GetPoliciesPolicyOptionArrayOutput
	ToGetPoliciesPolicyOptionArrayOutputWithContext(context.Context) GetPoliciesPolicyOptionArrayOutput
}

type GetPoliciesPolicyOptionArray []GetPoliciesPolicyOptionInput

func (GetPoliciesPolicyOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyOption)(nil)).Elem()
}

func (i GetPoliciesPolicyOptionArray) ToGetPoliciesPolicyOptionArrayOutput() GetPoliciesPolicyOptionArrayOutput {
	return i.ToGetPoliciesPolicyOptionArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyOptionArray) ToGetPoliciesPolicyOptionArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOptionArrayOutput)
}

type GetPoliciesPolicyOptionOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyOption)(nil)).Elem()
}

func (o GetPoliciesPolicyOptionOutput) ToGetPoliciesPolicyOptionOutput() GetPoliciesPolicyOptionOutput {
	return o
}

func (o GetPoliciesPolicyOptionOutput) ToGetPoliciesPolicyOptionOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionOutput {
	return o
}

// Indicates whether the javascript anti-crawler is enabled.
func (o GetPoliciesPolicyOptionOutput) AntiCrawler() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.AntiCrawler }).(pulumi.BoolOutput)
}

// Indicates whether Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) BasicWebProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.BasicWebProtection }).(pulumi.BoolOutput)
}

// Indicates whether the blacklist and whitelist protection is enabled.
func (o GetPoliciesPolicyOptionOutput) Blacklist() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.Blacklist }).(pulumi.BoolOutput)
}

// Indicates whether the anti-crawler protection is enabled.
func (o GetPoliciesPolicyOptionOutput) BotEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.BotEnable }).(pulumi.BoolOutput)
}

// Indicates whether the cc attack protection rules are enabled.
func (o GetPoliciesPolicyOptionOutput) CcAttackProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CcAttackProtection }).(pulumi.BoolOutput)
}

func (o GetPoliciesPolicyOptionOutput) Crawler() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.Crawler }).(pulumi.BoolOutput)
}

// Indicates whether the search engine is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerEngine() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerEngine }).(pulumi.BoolOutput)
}

// Indicates whether other crawler check is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerOther() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerOther }).(pulumi.BoolOutput)
}

// Indicates whether the anti-crawler detection is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerScanner() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerScanner }).(pulumi.BoolOutput)
}

// Indicates whether the script tool is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerScript() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerScript }).(pulumi.BoolOutput)
}

// Indicates whether data masking is enabled.
func (o GetPoliciesPolicyOptionOutput) DataMasking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.DataMasking }).(pulumi.BoolOutput)
}

// Indicates whether false alarm masking is enabled.
func (o GetPoliciesPolicyOptionOutput) FalseAlarmMasking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.FalseAlarmMasking }).(pulumi.BoolOutput)
}

// Indicates whether General Check in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) GeneralCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.GeneralCheck }).(pulumi.BoolOutput)
}

// Indicates whether the geolocation access control is enabled.
func (o GetPoliciesPolicyOptionOutput) GeolocationAccessControl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.GeolocationAccessControl }).(pulumi.BoolOutput)
}

// Indicates whether the information leakage prevention is enabled.
func (o GetPoliciesPolicyOptionOutput) InformationLeakagePrevention() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.InformationLeakagePrevention }).(pulumi.BoolOutput)
}

// Indicates whether the known attack source is enabled.
func (o GetPoliciesPolicyOptionOutput) KnownAttackSource() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.KnownAttackSource }).(pulumi.BoolOutput)
}

// Indicates whether the precise protection is enabled.
func (o GetPoliciesPolicyOptionOutput) PreciseProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.PreciseProtection }).(pulumi.BoolOutput)
}

// Indicates whether the web tamper protection is enabled.
func (o GetPoliciesPolicyOptionOutput) WebTamperProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.WebTamperProtection }).(pulumi.BoolOutput)
}

// Indicates whether the web shell detection in basic web protection is enabled.
func (o GetPoliciesPolicyOptionOutput) Webshell() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.Webshell }).(pulumi.BoolOutput)
}

type GetPoliciesPolicyOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyOption)(nil)).Elem()
}

func (o GetPoliciesPolicyOptionArrayOutput) ToGetPoliciesPolicyOptionArrayOutput() GetPoliciesPolicyOptionArrayOutput {
	return o
}

func (o GetPoliciesPolicyOptionArrayOutput) ToGetPoliciesPolicyOptionArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionArrayOutput {
	return o
}

func (o GetPoliciesPolicyOptionArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicyOption {
		return vs[0].([]GetPoliciesPolicyOption)[vs[1].(int)]
	}).(GetPoliciesPolicyOptionOutput)
}

type GetReferenceTablesTable struct {
	// The conditions of the reference table.
	Conditions []string `pulumi:"conditions"`
	// The server time when reference table was created.
	CreationTime string `pulumi:"creationTime"`
	// The description of the reference table.
	Description string `pulumi:"description"`
	// The ID of the reference table.
	Id string `pulumi:"id"`
	// Specifies the name of the reference table. The value is case-sensitive and matches exactly.
	Name string `pulumi:"name"`
	// The type of the reference table, The options are: `url`, `user-agent`, `ip`, `params`, `cookie`, `referer`
	// and `header`.
	Type string `pulumi:"type"`
}

// GetReferenceTablesTableInput is an input type that accepts GetReferenceTablesTableArgs and GetReferenceTablesTableOutput values.
// You can construct a concrete instance of `GetReferenceTablesTableInput` via:
//
//	GetReferenceTablesTableArgs{...}
type GetReferenceTablesTableInput interface {
	pulumi.Input

	ToGetReferenceTablesTableOutput() GetReferenceTablesTableOutput
	ToGetReferenceTablesTableOutputWithContext(context.Context) GetReferenceTablesTableOutput
}

type GetReferenceTablesTableArgs struct {
	// The conditions of the reference table.
	Conditions pulumi.StringArrayInput `pulumi:"conditions"`
	// The server time when reference table was created.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the reference table.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the reference table.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the reference table. The value is case-sensitive and matches exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the reference table, The options are: `url`, `user-agent`, `ip`, `params`, `cookie`, `referer`
	// and `header`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReferenceTablesTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReferenceTablesTable)(nil)).Elem()
}

func (i GetReferenceTablesTableArgs) ToGetReferenceTablesTableOutput() GetReferenceTablesTableOutput {
	return i.ToGetReferenceTablesTableOutputWithContext(context.Background())
}

func (i GetReferenceTablesTableArgs) ToGetReferenceTablesTableOutputWithContext(ctx context.Context) GetReferenceTablesTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReferenceTablesTableOutput)
}

// GetReferenceTablesTableArrayInput is an input type that accepts GetReferenceTablesTableArray and GetReferenceTablesTableArrayOutput values.
// You can construct a concrete instance of `GetReferenceTablesTableArrayInput` via:
//
//	GetReferenceTablesTableArray{ GetReferenceTablesTableArgs{...} }
type GetReferenceTablesTableArrayInput interface {
	pulumi.Input

	ToGetReferenceTablesTableArrayOutput() GetReferenceTablesTableArrayOutput
	ToGetReferenceTablesTableArrayOutputWithContext(context.Context) GetReferenceTablesTableArrayOutput
}

type GetReferenceTablesTableArray []GetReferenceTablesTableInput

func (GetReferenceTablesTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReferenceTablesTable)(nil)).Elem()
}

func (i GetReferenceTablesTableArray) ToGetReferenceTablesTableArrayOutput() GetReferenceTablesTableArrayOutput {
	return i.ToGetReferenceTablesTableArrayOutputWithContext(context.Background())
}

func (i GetReferenceTablesTableArray) ToGetReferenceTablesTableArrayOutputWithContext(ctx context.Context) GetReferenceTablesTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReferenceTablesTableArrayOutput)
}

type GetReferenceTablesTableOutput struct{ *pulumi.OutputState }

func (GetReferenceTablesTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReferenceTablesTable)(nil)).Elem()
}

func (o GetReferenceTablesTableOutput) ToGetReferenceTablesTableOutput() GetReferenceTablesTableOutput {
	return o
}

func (o GetReferenceTablesTableOutput) ToGetReferenceTablesTableOutputWithContext(ctx context.Context) GetReferenceTablesTableOutput {
	return o
}

// The conditions of the reference table.
func (o GetReferenceTablesTableOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) []string { return v.Conditions }).(pulumi.StringArrayOutput)
}

// The server time when reference table was created.
func (o GetReferenceTablesTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the reference table.
func (o GetReferenceTablesTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the reference table.
func (o GetReferenceTablesTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the reference table. The value is case-sensitive and matches exactly.
func (o GetReferenceTablesTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the reference table, The options are: `url`, `user-agent`, `ip`, `params`, `cookie`, `referer`
// and `header`.
func (o GetReferenceTablesTableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Type }).(pulumi.StringOutput)
}

type GetReferenceTablesTableArrayOutput struct{ *pulumi.OutputState }

func (GetReferenceTablesTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReferenceTablesTable)(nil)).Elem()
}

func (o GetReferenceTablesTableArrayOutput) ToGetReferenceTablesTableArrayOutput() GetReferenceTablesTableArrayOutput {
	return o
}

func (o GetReferenceTablesTableArrayOutput) ToGetReferenceTablesTableArrayOutputWithContext(ctx context.Context) GetReferenceTablesTableArrayOutput {
	return o
}

func (o GetReferenceTablesTableArrayOutput) Index(i pulumi.IntInput) GetReferenceTablesTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReferenceTablesTable {
		return vs[0].([]GetReferenceTablesTable)[vs[1].(int)]
	}).(GetReferenceTablesTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainConnectionProtectionInput)(nil)).Elem(), DedicatedDomainConnectionProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainConnectionProtectionPtrInput)(nil)).Elem(), DedicatedDomainConnectionProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainCustomPageInput)(nil)).Elem(), DedicatedDomainCustomPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainCustomPagePtrInput)(nil)).Elem(), DedicatedDomainCustomPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainServerInput)(nil)).Elem(), DedicatedDomainServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainServerArrayInput)(nil)).Elem(), DedicatedDomainServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainTimeoutSettingsInput)(nil)).Elem(), DedicatedDomainTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainTimeoutSettingsPtrInput)(nil)).Elem(), DedicatedDomainTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainTrafficMarkInput)(nil)).Elem(), DedicatedDomainTrafficMarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainTrafficMarkPtrInput)(nil)).Elem(), DedicatedDomainTrafficMarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomPageInput)(nil)).Elem(), DomainCustomPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCustomPagePtrInput)(nil)).Elem(), DomainCustomPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServerInput)(nil)).Elem(), DomainServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServerArrayInput)(nil)).Elem(), DomainServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTimeoutSettingsInput)(nil)).Elem(), DomainTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTimeoutSettingsPtrInput)(nil)).Elem(), DomainTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTrafficMarkInput)(nil)).Elem(), DomainTrafficMarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTrafficMarkPtrInput)(nil)).Elem(), DomainTrafficMarkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindHostInput)(nil)).Elem(), PolicyBindHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyBindHostArrayInput)(nil)).Elem(), PolicyBindHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyOptionInput)(nil)).Elem(), PolicyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyOptionArrayInput)(nil)).Elem(), PolicyOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedInstancesInstanceInput)(nil)).Elem(), GetDedicatedInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedInstancesInstanceArrayInput)(nil)).Elem(), GetDedicatedInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupInput)(nil)).Elem(), GetInstanceGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupArrayInput)(nil)).Elem(), GetInstanceGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstanceInput)(nil)).Elem(), GetInstanceGroupsGroupDedicatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstanceArrayInput)(nil)).Elem(), GetInstanceGroupsGroupDedicatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDomainNameInput)(nil)).Elem(), GetInstanceGroupsGroupDomainNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDomainNameArrayInput)(nil)).Elem(), GetInstanceGroupsGroupDomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyInput)(nil)).Elem(), GetPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyArrayInput)(nil)).Elem(), GetPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyBindHostInput)(nil)).Elem(), GetPoliciesPolicyBindHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyBindHostArrayInput)(nil)).Elem(), GetPoliciesPolicyBindHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyOptionInput)(nil)).Elem(), GetPoliciesPolicyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyOptionArrayInput)(nil)).Elem(), GetPoliciesPolicyOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReferenceTablesTableInput)(nil)).Elem(), GetReferenceTablesTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReferenceTablesTableArrayInput)(nil)).Elem(), GetReferenceTablesTableArray{})
	pulumi.RegisterOutputType(DedicatedDomainConnectionProtectionOutput{})
	pulumi.RegisterOutputType(DedicatedDomainConnectionProtectionPtrOutput{})
	pulumi.RegisterOutputType(DedicatedDomainCustomPageOutput{})
	pulumi.RegisterOutputType(DedicatedDomainCustomPagePtrOutput{})
	pulumi.RegisterOutputType(DedicatedDomainServerOutput{})
	pulumi.RegisterOutputType(DedicatedDomainServerArrayOutput{})
	pulumi.RegisterOutputType(DedicatedDomainTimeoutSettingsOutput{})
	pulumi.RegisterOutputType(DedicatedDomainTimeoutSettingsPtrOutput{})
	pulumi.RegisterOutputType(DedicatedDomainTrafficMarkOutput{})
	pulumi.RegisterOutputType(DedicatedDomainTrafficMarkPtrOutput{})
	pulumi.RegisterOutputType(DomainCustomPageOutput{})
	pulumi.RegisterOutputType(DomainCustomPagePtrOutput{})
	pulumi.RegisterOutputType(DomainServerOutput{})
	pulumi.RegisterOutputType(DomainServerArrayOutput{})
	pulumi.RegisterOutputType(DomainTimeoutSettingsOutput{})
	pulumi.RegisterOutputType(DomainTimeoutSettingsPtrOutput{})
	pulumi.RegisterOutputType(DomainTrafficMarkOutput{})
	pulumi.RegisterOutputType(DomainTrafficMarkPtrOutput{})
	pulumi.RegisterOutputType(PolicyBindHostOutput{})
	pulumi.RegisterOutputType(PolicyBindHostArrayOutput{})
	pulumi.RegisterOutputType(PolicyOptionOutput{})
	pulumi.RegisterOutputType(PolicyOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetDedicatedInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDedicatedInstanceOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDedicatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDomainNameOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDomainNameArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyBindHostOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyBindHostArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOptionOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOptionArrayOutput{})
	pulumi.RegisterOutputType(GetReferenceTablesTableOutput{})
	pulumi.RegisterOutputType(GetReferenceTablesTableArrayOutput{})
}
