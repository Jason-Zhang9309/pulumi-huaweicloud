// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DedicatedDomainServer struct {
	// IP address or domain name of the web server that the client accesses. For
	// example, 192.168.1.1 or www.example.com. Changing this creates a new service.
	Address string `pulumi:"address"`
	// Protocol type of the client. The options include `HTTP` and `HTTPS`.
	// Changing this creates a new service.
	ClientProtocol string `pulumi:"clientProtocol"`
	// Port number used by the web server. The value ranges from 0 to 65535. Changing this
	// creates a new service.
	Port int `pulumi:"port"`
	// Protocol used by WAF to forward client requests to the server. The
	// options include `HTTP` and `HTTPS`. Changing this creates a new service.
	ServerProtocol string `pulumi:"serverProtocol"`
	// Server network type, IPv4 or IPv6. Valid values are: `ipv4` and `ipv6`. Changing
	// this creates a new service.
	Type string `pulumi:"type"`
	// The id of the vpc used by the server. Changing this creates a service.
	VpcId string `pulumi:"vpcId"`
}

// DedicatedDomainServerInput is an input type that accepts DedicatedDomainServerArgs and DedicatedDomainServerOutput values.
// You can construct a concrete instance of `DedicatedDomainServerInput` via:
//
//	DedicatedDomainServerArgs{...}
type DedicatedDomainServerInput interface {
	pulumi.Input

	ToDedicatedDomainServerOutput() DedicatedDomainServerOutput
	ToDedicatedDomainServerOutputWithContext(context.Context) DedicatedDomainServerOutput
}

type DedicatedDomainServerArgs struct {
	// IP address or domain name of the web server that the client accesses. For
	// example, 192.168.1.1 or www.example.com. Changing this creates a new service.
	Address pulumi.StringInput `pulumi:"address"`
	// Protocol type of the client. The options include `HTTP` and `HTTPS`.
	// Changing this creates a new service.
	ClientProtocol pulumi.StringInput `pulumi:"clientProtocol"`
	// Port number used by the web server. The value ranges from 0 to 65535. Changing this
	// creates a new service.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol used by WAF to forward client requests to the server. The
	// options include `HTTP` and `HTTPS`. Changing this creates a new service.
	ServerProtocol pulumi.StringInput `pulumi:"serverProtocol"`
	// Server network type, IPv4 or IPv6. Valid values are: `ipv4` and `ipv6`. Changing
	// this creates a new service.
	Type pulumi.StringInput `pulumi:"type"`
	// The id of the vpc used by the server. Changing this creates a service.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DedicatedDomainServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainServer)(nil)).Elem()
}

func (i DedicatedDomainServerArgs) ToDedicatedDomainServerOutput() DedicatedDomainServerOutput {
	return i.ToDedicatedDomainServerOutputWithContext(context.Background())
}

func (i DedicatedDomainServerArgs) ToDedicatedDomainServerOutputWithContext(ctx context.Context) DedicatedDomainServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainServerOutput)
}

// DedicatedDomainServerArrayInput is an input type that accepts DedicatedDomainServerArray and DedicatedDomainServerArrayOutput values.
// You can construct a concrete instance of `DedicatedDomainServerArrayInput` via:
//
//	DedicatedDomainServerArray{ DedicatedDomainServerArgs{...} }
type DedicatedDomainServerArrayInput interface {
	pulumi.Input

	ToDedicatedDomainServerArrayOutput() DedicatedDomainServerArrayOutput
	ToDedicatedDomainServerArrayOutputWithContext(context.Context) DedicatedDomainServerArrayOutput
}

type DedicatedDomainServerArray []DedicatedDomainServerInput

func (DedicatedDomainServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedDomainServer)(nil)).Elem()
}

func (i DedicatedDomainServerArray) ToDedicatedDomainServerArrayOutput() DedicatedDomainServerArrayOutput {
	return i.ToDedicatedDomainServerArrayOutputWithContext(context.Background())
}

func (i DedicatedDomainServerArray) ToDedicatedDomainServerArrayOutputWithContext(ctx context.Context) DedicatedDomainServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedDomainServerArrayOutput)
}

type DedicatedDomainServerOutput struct{ *pulumi.OutputState }

func (DedicatedDomainServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedDomainServer)(nil)).Elem()
}

func (o DedicatedDomainServerOutput) ToDedicatedDomainServerOutput() DedicatedDomainServerOutput {
	return o
}

func (o DedicatedDomainServerOutput) ToDedicatedDomainServerOutputWithContext(ctx context.Context) DedicatedDomainServerOutput {
	return o
}

// IP address or domain name of the web server that the client accesses. For
// example, 192.168.1.1 or www.example.com. Changing this creates a new service.
func (o DedicatedDomainServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.Address }).(pulumi.StringOutput)
}

// Protocol type of the client. The options include `HTTP` and `HTTPS`.
// Changing this creates a new service.
func (o DedicatedDomainServerOutput) ClientProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.ClientProtocol }).(pulumi.StringOutput)
}

// Port number used by the web server. The value ranges from 0 to 65535. Changing this
// creates a new service.
func (o DedicatedDomainServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DedicatedDomainServer) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol used by WAF to forward client requests to the server. The
// options include `HTTP` and `HTTPS`. Changing this creates a new service.
func (o DedicatedDomainServerOutput) ServerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.ServerProtocol }).(pulumi.StringOutput)
}

// Server network type, IPv4 or IPv6. Valid values are: `ipv4` and `ipv6`. Changing
// this creates a new service.
func (o DedicatedDomainServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.Type }).(pulumi.StringOutput)
}

// The id of the vpc used by the server. Changing this creates a service.
func (o DedicatedDomainServerOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DedicatedDomainServer) string { return v.VpcId }).(pulumi.StringOutput)
}

type DedicatedDomainServerArrayOutput struct{ *pulumi.OutputState }

func (DedicatedDomainServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedDomainServer)(nil)).Elem()
}

func (o DedicatedDomainServerArrayOutput) ToDedicatedDomainServerArrayOutput() DedicatedDomainServerArrayOutput {
	return o
}

func (o DedicatedDomainServerArrayOutput) ToDedicatedDomainServerArrayOutputWithContext(ctx context.Context) DedicatedDomainServerArrayOutput {
	return o
}

func (o DedicatedDomainServerArrayOutput) Index(i pulumi.IntInput) DedicatedDomainServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DedicatedDomainServer {
		return vs[0].([]DedicatedDomainServer)[vs[1].(int)]
	}).(DedicatedDomainServerOutput)
}

type DomainServer struct {
	// IP address or domain name of the web server that the client accesses. For example,
	// 192.168.1.1 or www.a.com.
	Address string `pulumi:"address"`
	// Protocol type of the client. The options include `HTTP` and `HTTPS`.
	ClientProtocol string `pulumi:"clientProtocol"`
	// Port number used by the web server. The value ranges from 0 to 65535, for example, 8080.
	Port int `pulumi:"port"`
	// Protocol used by WAF to forward client requests to the server. The options
	// include `HTTP` and `HTTPS`.
	ServerProtocol string `pulumi:"serverProtocol"`
}

// DomainServerInput is an input type that accepts DomainServerArgs and DomainServerOutput values.
// You can construct a concrete instance of `DomainServerInput` via:
//
//	DomainServerArgs{...}
type DomainServerInput interface {
	pulumi.Input

	ToDomainServerOutput() DomainServerOutput
	ToDomainServerOutputWithContext(context.Context) DomainServerOutput
}

type DomainServerArgs struct {
	// IP address or domain name of the web server that the client accesses. For example,
	// 192.168.1.1 or www.a.com.
	Address pulumi.StringInput `pulumi:"address"`
	// Protocol type of the client. The options include `HTTP` and `HTTPS`.
	ClientProtocol pulumi.StringInput `pulumi:"clientProtocol"`
	// Port number used by the web server. The value ranges from 0 to 65535, for example, 8080.
	Port pulumi.IntInput `pulumi:"port"`
	// Protocol used by WAF to forward client requests to the server. The options
	// include `HTTP` and `HTTPS`.
	ServerProtocol pulumi.StringInput `pulumi:"serverProtocol"`
}

func (DomainServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainServer)(nil)).Elem()
}

func (i DomainServerArgs) ToDomainServerOutput() DomainServerOutput {
	return i.ToDomainServerOutputWithContext(context.Background())
}

func (i DomainServerArgs) ToDomainServerOutputWithContext(ctx context.Context) DomainServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServerOutput)
}

// DomainServerArrayInput is an input type that accepts DomainServerArray and DomainServerArrayOutput values.
// You can construct a concrete instance of `DomainServerArrayInput` via:
//
//	DomainServerArray{ DomainServerArgs{...} }
type DomainServerArrayInput interface {
	pulumi.Input

	ToDomainServerArrayOutput() DomainServerArrayOutput
	ToDomainServerArrayOutputWithContext(context.Context) DomainServerArrayOutput
}

type DomainServerArray []DomainServerInput

func (DomainServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainServer)(nil)).Elem()
}

func (i DomainServerArray) ToDomainServerArrayOutput() DomainServerArrayOutput {
	return i.ToDomainServerArrayOutputWithContext(context.Background())
}

func (i DomainServerArray) ToDomainServerArrayOutputWithContext(ctx context.Context) DomainServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainServerArrayOutput)
}

type DomainServerOutput struct{ *pulumi.OutputState }

func (DomainServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainServer)(nil)).Elem()
}

func (o DomainServerOutput) ToDomainServerOutput() DomainServerOutput {
	return o
}

func (o DomainServerOutput) ToDomainServerOutputWithContext(ctx context.Context) DomainServerOutput {
	return o
}

// IP address or domain name of the web server that the client accesses. For example,
// 192.168.1.1 or www.a.com.
func (o DomainServerOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v DomainServer) string { return v.Address }).(pulumi.StringOutput)
}

// Protocol type of the client. The options include `HTTP` and `HTTPS`.
func (o DomainServerOutput) ClientProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DomainServer) string { return v.ClientProtocol }).(pulumi.StringOutput)
}

// Port number used by the web server. The value ranges from 0 to 65535, for example, 8080.
func (o DomainServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DomainServer) int { return v.Port }).(pulumi.IntOutput)
}

// Protocol used by WAF to forward client requests to the server. The options
// include `HTTP` and `HTTPS`.
func (o DomainServerOutput) ServerProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v DomainServer) string { return v.ServerProtocol }).(pulumi.StringOutput)
}

type DomainServerArrayOutput struct{ *pulumi.OutputState }

func (DomainServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainServer)(nil)).Elem()
}

func (o DomainServerArrayOutput) ToDomainServerArrayOutput() DomainServerArrayOutput {
	return o
}

func (o DomainServerArrayOutput) ToDomainServerArrayOutputWithContext(ctx context.Context) DomainServerArrayOutput {
	return o
}

func (o DomainServerArrayOutput) Index(i pulumi.IntInput) DomainServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainServer {
		return vs[0].([]DomainServer)[vs[1].(int)]
	}).(DomainServerOutput)
}

type PolicyOption struct {
	// Indicates whether Basic Web Protection is enabled.
	BasicWebProtection *bool `pulumi:"basicWebProtection"`
	// Indicates whether Blacklist and Whitelist is enabled.
	Blacklist *bool `pulumi:"blacklist"`
	// Indicates whether CC Attack Protection is enabled.
	CcAttackProtection *bool `pulumi:"ccAttackProtection"`
	// Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
	Crawler *bool `pulumi:"crawler"`
	// Indicates whether the Search Engine switch in Basic Web Protection is enabled.
	CrawlerEngine *bool `pulumi:"crawlerEngine"`
	// Indicates whether detection of other crawlers in Basic Web Protection is enabled.
	CrawlerOther *bool `pulumi:"crawlerOther"`
	// Indicates whether the Scanner switch in Basic Web Protection is enabled.
	CrawlerScanner *bool `pulumi:"crawlerScanner"`
	// Indicates whether the Script Tool switch in Basic Web Protection is enabled.
	CrawlerScript *bool `pulumi:"crawlerScript"`
	// Indicates whether Data Masking is enabled.
	DataMasking *bool `pulumi:"dataMasking"`
	// Indicates whether False Alarm Masking is enabled.
	FalseAlarmMasking *bool `pulumi:"falseAlarmMasking"`
	// Indicates whether General Check in Basic Web Protection is enabled.
	GeneralCheck *bool `pulumi:"generalCheck"`
	// Indicates whether Precise Protection is enabled.
	PreciseProtection *bool `pulumi:"preciseProtection"`
	// Indicates whether Web Tamper Protection is enabled.
	WebTamperProtection *bool `pulumi:"webTamperProtection"`
	// Indicates whether webshell detection in Basic Web Protection is enabled.
	Webshell *bool `pulumi:"webshell"`
}

// PolicyOptionInput is an input type that accepts PolicyOptionArgs and PolicyOptionOutput values.
// You can construct a concrete instance of `PolicyOptionInput` via:
//
//	PolicyOptionArgs{...}
type PolicyOptionInput interface {
	pulumi.Input

	ToPolicyOptionOutput() PolicyOptionOutput
	ToPolicyOptionOutputWithContext(context.Context) PolicyOptionOutput
}

type PolicyOptionArgs struct {
	// Indicates whether Basic Web Protection is enabled.
	BasicWebProtection pulumi.BoolPtrInput `pulumi:"basicWebProtection"`
	// Indicates whether Blacklist and Whitelist is enabled.
	Blacklist pulumi.BoolPtrInput `pulumi:"blacklist"`
	// Indicates whether CC Attack Protection is enabled.
	CcAttackProtection pulumi.BoolPtrInput `pulumi:"ccAttackProtection"`
	// Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
	Crawler pulumi.BoolPtrInput `pulumi:"crawler"`
	// Indicates whether the Search Engine switch in Basic Web Protection is enabled.
	CrawlerEngine pulumi.BoolPtrInput `pulumi:"crawlerEngine"`
	// Indicates whether detection of other crawlers in Basic Web Protection is enabled.
	CrawlerOther pulumi.BoolPtrInput `pulumi:"crawlerOther"`
	// Indicates whether the Scanner switch in Basic Web Protection is enabled.
	CrawlerScanner pulumi.BoolPtrInput `pulumi:"crawlerScanner"`
	// Indicates whether the Script Tool switch in Basic Web Protection is enabled.
	CrawlerScript pulumi.BoolPtrInput `pulumi:"crawlerScript"`
	// Indicates whether Data Masking is enabled.
	DataMasking pulumi.BoolPtrInput `pulumi:"dataMasking"`
	// Indicates whether False Alarm Masking is enabled.
	FalseAlarmMasking pulumi.BoolPtrInput `pulumi:"falseAlarmMasking"`
	// Indicates whether General Check in Basic Web Protection is enabled.
	GeneralCheck pulumi.BoolPtrInput `pulumi:"generalCheck"`
	// Indicates whether Precise Protection is enabled.
	PreciseProtection pulumi.BoolPtrInput `pulumi:"preciseProtection"`
	// Indicates whether Web Tamper Protection is enabled.
	WebTamperProtection pulumi.BoolPtrInput `pulumi:"webTamperProtection"`
	// Indicates whether webshell detection in Basic Web Protection is enabled.
	Webshell pulumi.BoolPtrInput `pulumi:"webshell"`
}

func (PolicyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyOption)(nil)).Elem()
}

func (i PolicyOptionArgs) ToPolicyOptionOutput() PolicyOptionOutput {
	return i.ToPolicyOptionOutputWithContext(context.Background())
}

func (i PolicyOptionArgs) ToPolicyOptionOutputWithContext(ctx context.Context) PolicyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionOutput)
}

// PolicyOptionArrayInput is an input type that accepts PolicyOptionArray and PolicyOptionArrayOutput values.
// You can construct a concrete instance of `PolicyOptionArrayInput` via:
//
//	PolicyOptionArray{ PolicyOptionArgs{...} }
type PolicyOptionArrayInput interface {
	pulumi.Input

	ToPolicyOptionArrayOutput() PolicyOptionArrayOutput
	ToPolicyOptionArrayOutputWithContext(context.Context) PolicyOptionArrayOutput
}

type PolicyOptionArray []PolicyOptionInput

func (PolicyOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyOption)(nil)).Elem()
}

func (i PolicyOptionArray) ToPolicyOptionArrayOutput() PolicyOptionArrayOutput {
	return i.ToPolicyOptionArrayOutputWithContext(context.Background())
}

func (i PolicyOptionArray) ToPolicyOptionArrayOutputWithContext(ctx context.Context) PolicyOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOptionArrayOutput)
}

type PolicyOptionOutput struct{ *pulumi.OutputState }

func (PolicyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyOption)(nil)).Elem()
}

func (o PolicyOptionOutput) ToPolicyOptionOutput() PolicyOptionOutput {
	return o
}

func (o PolicyOptionOutput) ToPolicyOptionOutputWithContext(ctx context.Context) PolicyOptionOutput {
	return o
}

// Indicates whether Basic Web Protection is enabled.
func (o PolicyOptionOutput) BasicWebProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.BasicWebProtection }).(pulumi.BoolPtrOutput)
}

// Indicates whether Blacklist and Whitelist is enabled.
func (o PolicyOptionOutput) Blacklist() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.Blacklist }).(pulumi.BoolPtrOutput)
}

// Indicates whether CC Attack Protection is enabled.
func (o PolicyOptionOutput) CcAttackProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CcAttackProtection }).(pulumi.BoolPtrOutput)
}

// Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
func (o PolicyOptionOutput) Crawler() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.Crawler }).(pulumi.BoolPtrOutput)
}

// Indicates whether the Search Engine switch in Basic Web Protection is enabled.
func (o PolicyOptionOutput) CrawlerEngine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerEngine }).(pulumi.BoolPtrOutput)
}

// Indicates whether detection of other crawlers in Basic Web Protection is enabled.
func (o PolicyOptionOutput) CrawlerOther() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerOther }).(pulumi.BoolPtrOutput)
}

// Indicates whether the Scanner switch in Basic Web Protection is enabled.
func (o PolicyOptionOutput) CrawlerScanner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerScanner }).(pulumi.BoolPtrOutput)
}

// Indicates whether the Script Tool switch in Basic Web Protection is enabled.
func (o PolicyOptionOutput) CrawlerScript() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.CrawlerScript }).(pulumi.BoolPtrOutput)
}

// Indicates whether Data Masking is enabled.
func (o PolicyOptionOutput) DataMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.DataMasking }).(pulumi.BoolPtrOutput)
}

// Indicates whether False Alarm Masking is enabled.
func (o PolicyOptionOutput) FalseAlarmMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.FalseAlarmMasking }).(pulumi.BoolPtrOutput)
}

// Indicates whether General Check in Basic Web Protection is enabled.
func (o PolicyOptionOutput) GeneralCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.GeneralCheck }).(pulumi.BoolPtrOutput)
}

// Indicates whether Precise Protection is enabled.
func (o PolicyOptionOutput) PreciseProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.PreciseProtection }).(pulumi.BoolPtrOutput)
}

// Indicates whether Web Tamper Protection is enabled.
func (o PolicyOptionOutput) WebTamperProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.WebTamperProtection }).(pulumi.BoolPtrOutput)
}

// Indicates whether webshell detection in Basic Web Protection is enabled.
func (o PolicyOptionOutput) Webshell() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyOption) *bool { return v.Webshell }).(pulumi.BoolPtrOutput)
}

type PolicyOptionArrayOutput struct{ *pulumi.OutputState }

func (PolicyOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyOption)(nil)).Elem()
}

func (o PolicyOptionArrayOutput) ToPolicyOptionArrayOutput() PolicyOptionArrayOutput {
	return o
}

func (o PolicyOptionArrayOutput) ToPolicyOptionArrayOutputWithContext(ctx context.Context) PolicyOptionArrayOutput {
	return o
}

func (o PolicyOptionArrayOutput) Index(i pulumi.IntInput) PolicyOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyOption {
		return vs[0].([]PolicyOption)[vs[1].(int)]
	}).(PolicyOptionOutput)
}

type GetDedicatedInstancesInstance struct {
	// The access status of the instance. `0`: inaccessible, `1`: accessible.
	AccessStatus int `pulumi:"accessStatus"`
	// The available zone names for the WAF dedicated instances.
	AvailableZone string `pulumi:"availableZone"`
	// The ECS cpu architecture of WAF dedicated instance.
	CpuArchitecture string `pulumi:"cpuArchitecture"`
	CpuFlavor       string `pulumi:"cpuFlavor"`
	// The instance group ID used by the WAF dedicated instance in ELB mode.
	GroupId string `pulumi:"groupId"`
	// The id of WAF dedicated instance.
	Id string `pulumi:"id"`
	// The name of WAF dedicated instance.
	Name string `pulumi:"name"`
	// The running status of the instance. Values are:
	RunStatus int `pulumi:"runStatus"`
	// The security group of the instance. This is an array of security group ids.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The service of the instance.
	ServerId string `pulumi:"serverId"`
	// The service ip of the instance.
	ServiceIp string `pulumi:"serviceIp"`
	// The subnet id of WAF dedicated instance VPC.
	SubnetId string `pulumi:"subnetId"`
	// The instance is to support upgrades. `0`: Cannot be upgraded, `1`: Can be upgraded.
	Upgradable int `pulumi:"upgradable"`
	// The VPC id of WAF dedicated instance.
	VpcId string `pulumi:"vpcId"`
}

// GetDedicatedInstancesInstanceInput is an input type that accepts GetDedicatedInstancesInstanceArgs and GetDedicatedInstancesInstanceOutput values.
// You can construct a concrete instance of `GetDedicatedInstancesInstanceInput` via:
//
//	GetDedicatedInstancesInstanceArgs{...}
type GetDedicatedInstancesInstanceInput interface {
	pulumi.Input

	ToGetDedicatedInstancesInstanceOutput() GetDedicatedInstancesInstanceOutput
	ToGetDedicatedInstancesInstanceOutputWithContext(context.Context) GetDedicatedInstancesInstanceOutput
}

type GetDedicatedInstancesInstanceArgs struct {
	// The access status of the instance. `0`: inaccessible, `1`: accessible.
	AccessStatus pulumi.IntInput `pulumi:"accessStatus"`
	// The available zone names for the WAF dedicated instances.
	AvailableZone pulumi.StringInput `pulumi:"availableZone"`
	// The ECS cpu architecture of WAF dedicated instance.
	CpuArchitecture pulumi.StringInput `pulumi:"cpuArchitecture"`
	CpuFlavor       pulumi.StringInput `pulumi:"cpuFlavor"`
	// The instance group ID used by the WAF dedicated instance in ELB mode.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The id of WAF dedicated instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of WAF dedicated instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The running status of the instance. Values are:
	RunStatus pulumi.IntInput `pulumi:"runStatus"`
	// The security group of the instance. This is an array of security group ids.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The service of the instance.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The service ip of the instance.
	ServiceIp pulumi.StringInput `pulumi:"serviceIp"`
	// The subnet id of WAF dedicated instance VPC.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The instance is to support upgrades. `0`: Cannot be upgraded, `1`: Can be upgraded.
	Upgradable pulumi.IntInput `pulumi:"upgradable"`
	// The VPC id of WAF dedicated instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetDedicatedInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedInstancesInstance)(nil)).Elem()
}

func (i GetDedicatedInstancesInstanceArgs) ToGetDedicatedInstancesInstanceOutput() GetDedicatedInstancesInstanceOutput {
	return i.ToGetDedicatedInstancesInstanceOutputWithContext(context.Background())
}

func (i GetDedicatedInstancesInstanceArgs) ToGetDedicatedInstancesInstanceOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedInstancesInstanceOutput)
}

// GetDedicatedInstancesInstanceArrayInput is an input type that accepts GetDedicatedInstancesInstanceArray and GetDedicatedInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetDedicatedInstancesInstanceArrayInput` via:
//
//	GetDedicatedInstancesInstanceArray{ GetDedicatedInstancesInstanceArgs{...} }
type GetDedicatedInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetDedicatedInstancesInstanceArrayOutput() GetDedicatedInstancesInstanceArrayOutput
	ToGetDedicatedInstancesInstanceArrayOutputWithContext(context.Context) GetDedicatedInstancesInstanceArrayOutput
}

type GetDedicatedInstancesInstanceArray []GetDedicatedInstancesInstanceInput

func (GetDedicatedInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedInstancesInstance)(nil)).Elem()
}

func (i GetDedicatedInstancesInstanceArray) ToGetDedicatedInstancesInstanceArrayOutput() GetDedicatedInstancesInstanceArrayOutput {
	return i.ToGetDedicatedInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetDedicatedInstancesInstanceArray) ToGetDedicatedInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedInstancesInstanceArrayOutput)
}

type GetDedicatedInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetDedicatedInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedInstancesInstance)(nil)).Elem()
}

func (o GetDedicatedInstancesInstanceOutput) ToGetDedicatedInstancesInstanceOutput() GetDedicatedInstancesInstanceOutput {
	return o
}

func (o GetDedicatedInstancesInstanceOutput) ToGetDedicatedInstancesInstanceOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceOutput {
	return o
}

// The access status of the instance. `0`: inaccessible, `1`: accessible.
func (o GetDedicatedInstancesInstanceOutput) AccessStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) int { return v.AccessStatus }).(pulumi.IntOutput)
}

// The available zone names for the WAF dedicated instances.
func (o GetDedicatedInstancesInstanceOutput) AvailableZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.AvailableZone }).(pulumi.StringOutput)
}

// The ECS cpu architecture of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) CpuArchitecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.CpuArchitecture }).(pulumi.StringOutput)
}

func (o GetDedicatedInstancesInstanceOutput) CpuFlavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.CpuFlavor }).(pulumi.StringOutput)
}

// The instance group ID used by the WAF dedicated instance in ELB mode.
func (o GetDedicatedInstancesInstanceOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.GroupId }).(pulumi.StringOutput)
}

// The id of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The name of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The running status of the instance. Values are:
func (o GetDedicatedInstancesInstanceOutput) RunStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) int { return v.RunStatus }).(pulumi.IntOutput)
}

// The security group of the instance. This is an array of security group ids.
func (o GetDedicatedInstancesInstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The service of the instance.
func (o GetDedicatedInstancesInstanceOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.ServerId }).(pulumi.StringOutput)
}

// The service ip of the instance.
func (o GetDedicatedInstancesInstanceOutput) ServiceIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.ServiceIp }).(pulumi.StringOutput)
}

// The subnet id of WAF dedicated instance VPC.
func (o GetDedicatedInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The instance is to support upgrades. `0`: Cannot be upgraded, `1`: Can be upgraded.
func (o GetDedicatedInstancesInstanceOutput) Upgradable() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) int { return v.Upgradable }).(pulumi.IntOutput)
}

// The VPC id of WAF dedicated instance.
func (o GetDedicatedInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDedicatedInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedInstancesInstance)(nil)).Elem()
}

func (o GetDedicatedInstancesInstanceArrayOutput) ToGetDedicatedInstancesInstanceArrayOutput() GetDedicatedInstancesInstanceArrayOutput {
	return o
}

func (o GetDedicatedInstancesInstanceArrayOutput) ToGetDedicatedInstancesInstanceArrayOutputWithContext(ctx context.Context) GetDedicatedInstancesInstanceArrayOutput {
	return o
}

func (o GetDedicatedInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetDedicatedInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedInstancesInstance {
		return vs[0].([]GetDedicatedInstancesInstance)[vs[1].(int)]
	}).(GetDedicatedInstancesInstanceOutput)
}

type GetInstanceGroupsGroup struct {
	// The body limit of the forwarding policy.
	BodyLimit int `pulumi:"bodyLimit"`
	// The time for connection timeout in the forwarding policy.
	ConnectionTimeout  int                                       `pulumi:"connectionTimeout"`
	DedicatedInstances []GetInstanceGroupsGroupDedicatedInstance `pulumi:"dedicatedInstances"`
	// Description of the instance group.
	Description string                             `pulumi:"description"`
	DomainNames []GetInstanceGroupsGroupDomainName `pulumi:"domainNames"`
	// The header limit of the forwarding policy.
	HeaderLimit int `pulumi:"headerLimit"`
	// The IDs of the ELB instances that has been bound to the instance group.
	LoadBalancers []string `pulumi:"loadBalancers"`
	// The name of WAF instance group used for matching.
	// The value is not case-sensitive and supports fuzzy matching.
	Name string `pulumi:"name"`
	// The time for reading timeout in the forwarding policy.
	ReadTimeout int `pulumi:"readTimeout"`
	// The region in which to obtain the WAF instance groups.
	// If omitted, the provider-level region will be used.
	Region string `pulumi:"region"`
	// The id of the VPC that the WAF dedicated instances belongs to.
	VpcId string `pulumi:"vpcId"`
	// The time for writing timeout in the forwarding policy.
	WriteTimeout int `pulumi:"writeTimeout"`
}

// GetInstanceGroupsGroupInput is an input type that accepts GetInstanceGroupsGroupArgs and GetInstanceGroupsGroupOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupInput` via:
//
//	GetInstanceGroupsGroupArgs{...}
type GetInstanceGroupsGroupInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupOutput() GetInstanceGroupsGroupOutput
	ToGetInstanceGroupsGroupOutputWithContext(context.Context) GetInstanceGroupsGroupOutput
}

type GetInstanceGroupsGroupArgs struct {
	// The body limit of the forwarding policy.
	BodyLimit pulumi.IntInput `pulumi:"bodyLimit"`
	// The time for connection timeout in the forwarding policy.
	ConnectionTimeout  pulumi.IntInput                                   `pulumi:"connectionTimeout"`
	DedicatedInstances GetInstanceGroupsGroupDedicatedInstanceArrayInput `pulumi:"dedicatedInstances"`
	// Description of the instance group.
	Description pulumi.StringInput                         `pulumi:"description"`
	DomainNames GetInstanceGroupsGroupDomainNameArrayInput `pulumi:"domainNames"`
	// The header limit of the forwarding policy.
	HeaderLimit pulumi.IntInput `pulumi:"headerLimit"`
	// The IDs of the ELB instances that has been bound to the instance group.
	LoadBalancers pulumi.StringArrayInput `pulumi:"loadBalancers"`
	// The name of WAF instance group used for matching.
	// The value is not case-sensitive and supports fuzzy matching.
	Name pulumi.StringInput `pulumi:"name"`
	// The time for reading timeout in the forwarding policy.
	ReadTimeout pulumi.IntInput `pulumi:"readTimeout"`
	// The region in which to obtain the WAF instance groups.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringInput `pulumi:"region"`
	// The id of the VPC that the WAF dedicated instances belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The time for writing timeout in the forwarding policy.
	WriteTimeout pulumi.IntInput `pulumi:"writeTimeout"`
}

func (GetInstanceGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroup)(nil)).Elem()
}

func (i GetInstanceGroupsGroupArgs) ToGetInstanceGroupsGroupOutput() GetInstanceGroupsGroupOutput {
	return i.ToGetInstanceGroupsGroupOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupArgs) ToGetInstanceGroupsGroupOutputWithContext(ctx context.Context) GetInstanceGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupOutput)
}

// GetInstanceGroupsGroupArrayInput is an input type that accepts GetInstanceGroupsGroupArray and GetInstanceGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupArrayInput` via:
//
//	GetInstanceGroupsGroupArray{ GetInstanceGroupsGroupArgs{...} }
type GetInstanceGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupArrayOutput() GetInstanceGroupsGroupArrayOutput
	ToGetInstanceGroupsGroupArrayOutputWithContext(context.Context) GetInstanceGroupsGroupArrayOutput
}

type GetInstanceGroupsGroupArray []GetInstanceGroupsGroupInput

func (GetInstanceGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroup)(nil)).Elem()
}

func (i GetInstanceGroupsGroupArray) ToGetInstanceGroupsGroupArrayOutput() GetInstanceGroupsGroupArrayOutput {
	return i.ToGetInstanceGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupArray) ToGetInstanceGroupsGroupArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupArrayOutput)
}

type GetInstanceGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroup)(nil)).Elem()
}

func (o GetInstanceGroupsGroupOutput) ToGetInstanceGroupsGroupOutput() GetInstanceGroupsGroupOutput {
	return o
}

func (o GetInstanceGroupsGroupOutput) ToGetInstanceGroupsGroupOutputWithContext(ctx context.Context) GetInstanceGroupsGroupOutput {
	return o
}

// The body limit of the forwarding policy.
func (o GetInstanceGroupsGroupOutput) BodyLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.BodyLimit }).(pulumi.IntOutput)
}

// The time for connection timeout in the forwarding policy.
func (o GetInstanceGroupsGroupOutput) ConnectionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.ConnectionTimeout }).(pulumi.IntOutput)
}

func (o GetInstanceGroupsGroupOutput) DedicatedInstances() GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) []GetInstanceGroupsGroupDedicatedInstance { return v.DedicatedInstances }).(GetInstanceGroupsGroupDedicatedInstanceArrayOutput)
}

// Description of the instance group.
func (o GetInstanceGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceGroupsGroupOutput) DomainNames() GetInstanceGroupsGroupDomainNameArrayOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) []GetInstanceGroupsGroupDomainName { return v.DomainNames }).(GetInstanceGroupsGroupDomainNameArrayOutput)
}

// The header limit of the forwarding policy.
func (o GetInstanceGroupsGroupOutput) HeaderLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.HeaderLimit }).(pulumi.IntOutput)
}

// The IDs of the ELB instances that has been bound to the instance group.
func (o GetInstanceGroupsGroupOutput) LoadBalancers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) []string { return v.LoadBalancers }).(pulumi.StringArrayOutput)
}

// The name of WAF instance group used for matching.
// The value is not case-sensitive and supports fuzzy matching.
func (o GetInstanceGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The time for reading timeout in the forwarding policy.
func (o GetInstanceGroupsGroupOutput) ReadTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.ReadTimeout }).(pulumi.IntOutput)
}

// The region in which to obtain the WAF instance groups.
// If omitted, the provider-level region will be used.
func (o GetInstanceGroupsGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.Region }).(pulumi.StringOutput)
}

// The id of the VPC that the WAF dedicated instances belongs to.
func (o GetInstanceGroupsGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

// The time for writing timeout in the forwarding policy.
func (o GetInstanceGroupsGroupOutput) WriteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroup) int { return v.WriteTimeout }).(pulumi.IntOutput)
}

type GetInstanceGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroup)(nil)).Elem()
}

func (o GetInstanceGroupsGroupArrayOutput) ToGetInstanceGroupsGroupArrayOutput() GetInstanceGroupsGroupArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupArrayOutput) ToGetInstanceGroupsGroupArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetInstanceGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceGroupsGroup {
		return vs[0].([]GetInstanceGroupsGroup)[vs[1].(int)]
	}).(GetInstanceGroupsGroupOutput)
}

type GetInstanceGroupsGroupDedicatedInstance struct {
	Id string `pulumi:"id"`
	// The name of WAF instance group used for matching.
	// The value is not case-sensitive and supports fuzzy matching.
	Name string `pulumi:"name"`
}

// GetInstanceGroupsGroupDedicatedInstanceInput is an input type that accepts GetInstanceGroupsGroupDedicatedInstanceArgs and GetInstanceGroupsGroupDedicatedInstanceOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDedicatedInstanceInput` via:
//
//	GetInstanceGroupsGroupDedicatedInstanceArgs{...}
type GetInstanceGroupsGroupDedicatedInstanceInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDedicatedInstanceOutput() GetInstanceGroupsGroupDedicatedInstanceOutput
	ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(context.Context) GetInstanceGroupsGroupDedicatedInstanceOutput
}

type GetInstanceGroupsGroupDedicatedInstanceArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// The name of WAF instance group used for matching.
	// The value is not case-sensitive and supports fuzzy matching.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInstanceGroupsGroupDedicatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDedicatedInstanceArgs) ToGetInstanceGroupsGroupDedicatedInstanceOutput() GetInstanceGroupsGroupDedicatedInstanceOutput {
	return i.ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDedicatedInstanceArgs) ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDedicatedInstanceOutput)
}

// GetInstanceGroupsGroupDedicatedInstanceArrayInput is an input type that accepts GetInstanceGroupsGroupDedicatedInstanceArray and GetInstanceGroupsGroupDedicatedInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDedicatedInstanceArrayInput` via:
//
//	GetInstanceGroupsGroupDedicatedInstanceArray{ GetInstanceGroupsGroupDedicatedInstanceArgs{...} }
type GetInstanceGroupsGroupDedicatedInstanceArrayInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDedicatedInstanceArrayOutput() GetInstanceGroupsGroupDedicatedInstanceArrayOutput
	ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(context.Context) GetInstanceGroupsGroupDedicatedInstanceArrayOutput
}

type GetInstanceGroupsGroupDedicatedInstanceArray []GetInstanceGroupsGroupDedicatedInstanceInput

func (GetInstanceGroupsGroupDedicatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDedicatedInstanceArray) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutput() GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return i.ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDedicatedInstanceArray) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDedicatedInstanceArrayOutput)
}

type GetInstanceGroupsGroupDedicatedInstanceOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDedicatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) ToGetInstanceGroupsGroupDedicatedInstanceOutput() GetInstanceGroupsGroupDedicatedInstanceOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) ToGetInstanceGroupsGroupDedicatedInstanceOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDedicatedInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The name of WAF instance group used for matching.
// The value is not case-sensitive and supports fuzzy matching.
func (o GetInstanceGroupsGroupDedicatedInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDedicatedInstance) string { return v.Name }).(pulumi.StringOutput)
}

type GetInstanceGroupsGroupDedicatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDedicatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDedicatedInstance)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDedicatedInstanceArrayOutput) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutput() GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceArrayOutput) ToGetInstanceGroupsGroupDedicatedInstanceArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDedicatedInstanceArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDedicatedInstanceArrayOutput) Index(i pulumi.IntInput) GetInstanceGroupsGroupDedicatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceGroupsGroupDedicatedInstance {
		return vs[0].([]GetInstanceGroupsGroupDedicatedInstance)[vs[1].(int)]
	}).(GetInstanceGroupsGroupDedicatedInstanceOutput)
}

type GetInstanceGroupsGroupDomainName struct {
	Id string `pulumi:"id"`
	// The name of WAF instance group used for matching.
	// The value is not case-sensitive and supports fuzzy matching.
	Name string `pulumi:"name"`
}

// GetInstanceGroupsGroupDomainNameInput is an input type that accepts GetInstanceGroupsGroupDomainNameArgs and GetInstanceGroupsGroupDomainNameOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDomainNameInput` via:
//
//	GetInstanceGroupsGroupDomainNameArgs{...}
type GetInstanceGroupsGroupDomainNameInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDomainNameOutput() GetInstanceGroupsGroupDomainNameOutput
	ToGetInstanceGroupsGroupDomainNameOutputWithContext(context.Context) GetInstanceGroupsGroupDomainNameOutput
}

type GetInstanceGroupsGroupDomainNameArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// The name of WAF instance group used for matching.
	// The value is not case-sensitive and supports fuzzy matching.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInstanceGroupsGroupDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDomainNameArgs) ToGetInstanceGroupsGroupDomainNameOutput() GetInstanceGroupsGroupDomainNameOutput {
	return i.ToGetInstanceGroupsGroupDomainNameOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDomainNameArgs) ToGetInstanceGroupsGroupDomainNameOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDomainNameOutput)
}

// GetInstanceGroupsGroupDomainNameArrayInput is an input type that accepts GetInstanceGroupsGroupDomainNameArray and GetInstanceGroupsGroupDomainNameArrayOutput values.
// You can construct a concrete instance of `GetInstanceGroupsGroupDomainNameArrayInput` via:
//
//	GetInstanceGroupsGroupDomainNameArray{ GetInstanceGroupsGroupDomainNameArgs{...} }
type GetInstanceGroupsGroupDomainNameArrayInput interface {
	pulumi.Input

	ToGetInstanceGroupsGroupDomainNameArrayOutput() GetInstanceGroupsGroupDomainNameArrayOutput
	ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(context.Context) GetInstanceGroupsGroupDomainNameArrayOutput
}

type GetInstanceGroupsGroupDomainNameArray []GetInstanceGroupsGroupDomainNameInput

func (GetInstanceGroupsGroupDomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (i GetInstanceGroupsGroupDomainNameArray) ToGetInstanceGroupsGroupDomainNameArrayOutput() GetInstanceGroupsGroupDomainNameArrayOutput {
	return i.ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(context.Background())
}

func (i GetInstanceGroupsGroupDomainNameArray) ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceGroupsGroupDomainNameArrayOutput)
}

type GetInstanceGroupsGroupDomainNameOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDomainNameOutput) ToGetInstanceGroupsGroupDomainNameOutput() GetInstanceGroupsGroupDomainNameOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameOutput) ToGetInstanceGroupsGroupDomainNameOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDomainName) string { return v.Id }).(pulumi.StringOutput)
}

// The name of WAF instance group used for matching.
// The value is not case-sensitive and supports fuzzy matching.
func (o GetInstanceGroupsGroupDomainNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceGroupsGroupDomainName) string { return v.Name }).(pulumi.StringOutput)
}

type GetInstanceGroupsGroupDomainNameArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceGroupsGroupDomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceGroupsGroupDomainName)(nil)).Elem()
}

func (o GetInstanceGroupsGroupDomainNameArrayOutput) ToGetInstanceGroupsGroupDomainNameArrayOutput() GetInstanceGroupsGroupDomainNameArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameArrayOutput) ToGetInstanceGroupsGroupDomainNameArrayOutputWithContext(ctx context.Context) GetInstanceGroupsGroupDomainNameArrayOutput {
	return o
}

func (o GetInstanceGroupsGroupDomainNameArrayOutput) Index(i pulumi.IntInput) GetInstanceGroupsGroupDomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceGroupsGroupDomainName {
		return vs[0].([]GetInstanceGroupsGroupDomainName)[vs[1].(int)]
	}).(GetInstanceGroupsGroupDomainNameOutput)
}

type GetPoliciesPolicy struct {
	// The detection mode in Precise Protection.
	// + `true`: full detection. Full detection finishes all threat detections before blocking requests that meet Precise
	//   Protection specified conditions.
	// + `false`: instant detection. Instant detection immediately ends threat detection after blocking a request that
	//   meets Precise Protection specified conditions.
	FullDetection bool `pulumi:"fullDetection"`
	// The WAF Policy ID.
	Id string `pulumi:"id"`
	// Specifies the protection level. Valid values are:
	// + `1`: low
	// + `2`: medium
	// + `3`: high
	Level int `pulumi:"level"`
	// Policy name used for matching. The value is case sensitive and supports fuzzy matching.
	Name string `pulumi:"name"`
	// The protection switches. The options object structure is documented below.
	Options []GetPoliciesPolicyOption `pulumi:"options"`
	// Specifies the protective action after a rule is matched. Valid values are:
	// + `block`: WAF blocks and logs detected attacks.
	// + `log`: WAF logs detected attacks only.
	ProtectionMode string `pulumi:"protectionMode"`
}

// GetPoliciesPolicyInput is an input type that accepts GetPoliciesPolicyArgs and GetPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyInput` via:
//
//	GetPoliciesPolicyArgs{...}
type GetPoliciesPolicyInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput
	ToGetPoliciesPolicyOutputWithContext(context.Context) GetPoliciesPolicyOutput
}

type GetPoliciesPolicyArgs struct {
	// The detection mode in Precise Protection.
	// + `true`: full detection. Full detection finishes all threat detections before blocking requests that meet Precise
	//   Protection specified conditions.
	// + `false`: instant detection. Instant detection immediately ends threat detection after blocking a request that
	//   meets Precise Protection specified conditions.
	FullDetection pulumi.BoolInput `pulumi:"fullDetection"`
	// The WAF Policy ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the protection level. Valid values are:
	// + `1`: low
	// + `2`: medium
	// + `3`: high
	Level pulumi.IntInput `pulumi:"level"`
	// Policy name used for matching. The value is case sensitive and supports fuzzy matching.
	Name pulumi.StringInput `pulumi:"name"`
	// The protection switches. The options object structure is documented below.
	Options GetPoliciesPolicyOptionArrayInput `pulumi:"options"`
	// Specifies the protective action after a rule is matched. Valid values are:
	// + `block`: WAF blocks and logs detected attacks.
	// + `log`: WAF logs detected attacks only.
	ProtectionMode pulumi.StringInput `pulumi:"protectionMode"`
}

func (GetPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return i.ToGetPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArgs) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOutput)
}

// GetPoliciesPolicyArrayInput is an input type that accepts GetPoliciesPolicyArray and GetPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyArrayInput` via:
//
//	GetPoliciesPolicyArray{ GetPoliciesPolicyArgs{...} }
type GetPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput
	ToGetPoliciesPolicyArrayOutputWithContext(context.Context) GetPoliciesPolicyArrayOutput
}

type GetPoliciesPolicyArray []GetPoliciesPolicyInput

func (GetPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return i.ToGetPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyArray) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyArrayOutput)
}

type GetPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutput() GetPoliciesPolicyOutput {
	return o
}

func (o GetPoliciesPolicyOutput) ToGetPoliciesPolicyOutputWithContext(ctx context.Context) GetPoliciesPolicyOutput {
	return o
}

// The detection mode in Precise Protection.
//   - `true`: full detection. Full detection finishes all threat detections before blocking requests that meet Precise
//     Protection specified conditions.
//   - `false`: instant detection. Instant detection immediately ends threat detection after blocking a request that
//     meets Precise Protection specified conditions.
func (o GetPoliciesPolicyOutput) FullDetection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) bool { return v.FullDetection }).(pulumi.BoolOutput)
}

// The WAF Policy ID.
func (o GetPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the protection level. Valid values are:
// + `1`: low
// + `2`: medium
// + `3`: high
func (o GetPoliciesPolicyOutput) Level() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) int { return v.Level }).(pulumi.IntOutput)
}

// Policy name used for matching. The value is case sensitive and supports fuzzy matching.
func (o GetPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The protection switches. The options object structure is documented below.
func (o GetPoliciesPolicyOutput) Options() GetPoliciesPolicyOptionArrayOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) []GetPoliciesPolicyOption { return v.Options }).(GetPoliciesPolicyOptionArrayOutput)
}

// Specifies the protective action after a rule is matched. Valid values are:
// + `block`: WAF blocks and logs detected attacks.
// + `log`: WAF logs detected attacks only.
func (o GetPoliciesPolicyOutput) ProtectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesPolicy) string { return v.ProtectionMode }).(pulumi.StringOutput)
}

type GetPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicy)(nil)).Elem()
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutput() GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) ToGetPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyArrayOutput {
	return o
}

func (o GetPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicy {
		return vs[0].([]GetPoliciesPolicy)[vs[1].(int)]
	}).(GetPoliciesPolicyOutput)
}

type GetPoliciesPolicyOption struct {
	// Indicates whether Basic Web Protection is enabled.
	BasicWebProtection bool `pulumi:"basicWebProtection"`
	// Indicates whether Blacklist and Whitelist is enabled.
	Blacklist bool `pulumi:"blacklist"`
	// Indicates whether CC Attack Protection is enabled.
	CcAttackProtection bool `pulumi:"ccAttackProtection"`
	// Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
	Crawler bool `pulumi:"crawler"`
	// Indicates whether the Search Engine switch in Basic Web Protection is enabled.
	CrawlerEngine bool `pulumi:"crawlerEngine"`
	// Indicates whether detection of other crawlers in Basic Web Protection is enabled.
	CrawlerOther bool `pulumi:"crawlerOther"`
	// Indicates whether the Scanner switch in Basic Web Protection is enabled.
	CrawlerScanner bool `pulumi:"crawlerScanner"`
	// Indicates whether the Script Tool switch in Basic Web Protection is enabled.
	CrawlerScript bool `pulumi:"crawlerScript"`
	// Indicates whether Data Masking is enabled.
	DataMasking bool `pulumi:"dataMasking"`
	// Indicates whether False Alarm Masking is enabled.
	FalseAlarmMasking bool `pulumi:"falseAlarmMasking"`
	// Indicates whether General Check in Basic Web Protection is enabled.
	GeneralCheck bool `pulumi:"generalCheck"`
	// Indicates whether Precise Protection is enabled.
	PreciseProtection bool `pulumi:"preciseProtection"`
	// Indicates whether Web Tamper Protection is enabled.
	WebTamperProtection bool `pulumi:"webTamperProtection"`
	// Indicates whether webshell detection in Basic Web Protection is enabled.
	Webshell bool `pulumi:"webshell"`
}

// GetPoliciesPolicyOptionInput is an input type that accepts GetPoliciesPolicyOptionArgs and GetPoliciesPolicyOptionOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyOptionInput` via:
//
//	GetPoliciesPolicyOptionArgs{...}
type GetPoliciesPolicyOptionInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOptionOutput() GetPoliciesPolicyOptionOutput
	ToGetPoliciesPolicyOptionOutputWithContext(context.Context) GetPoliciesPolicyOptionOutput
}

type GetPoliciesPolicyOptionArgs struct {
	// Indicates whether Basic Web Protection is enabled.
	BasicWebProtection pulumi.BoolInput `pulumi:"basicWebProtection"`
	// Indicates whether Blacklist and Whitelist is enabled.
	Blacklist pulumi.BoolInput `pulumi:"blacklist"`
	// Indicates whether CC Attack Protection is enabled.
	CcAttackProtection pulumi.BoolInput `pulumi:"ccAttackProtection"`
	// Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
	Crawler pulumi.BoolInput `pulumi:"crawler"`
	// Indicates whether the Search Engine switch in Basic Web Protection is enabled.
	CrawlerEngine pulumi.BoolInput `pulumi:"crawlerEngine"`
	// Indicates whether detection of other crawlers in Basic Web Protection is enabled.
	CrawlerOther pulumi.BoolInput `pulumi:"crawlerOther"`
	// Indicates whether the Scanner switch in Basic Web Protection is enabled.
	CrawlerScanner pulumi.BoolInput `pulumi:"crawlerScanner"`
	// Indicates whether the Script Tool switch in Basic Web Protection is enabled.
	CrawlerScript pulumi.BoolInput `pulumi:"crawlerScript"`
	// Indicates whether Data Masking is enabled.
	DataMasking pulumi.BoolInput `pulumi:"dataMasking"`
	// Indicates whether False Alarm Masking is enabled.
	FalseAlarmMasking pulumi.BoolInput `pulumi:"falseAlarmMasking"`
	// Indicates whether General Check in Basic Web Protection is enabled.
	GeneralCheck pulumi.BoolInput `pulumi:"generalCheck"`
	// Indicates whether Precise Protection is enabled.
	PreciseProtection pulumi.BoolInput `pulumi:"preciseProtection"`
	// Indicates whether Web Tamper Protection is enabled.
	WebTamperProtection pulumi.BoolInput `pulumi:"webTamperProtection"`
	// Indicates whether webshell detection in Basic Web Protection is enabled.
	Webshell pulumi.BoolInput `pulumi:"webshell"`
}

func (GetPoliciesPolicyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyOption)(nil)).Elem()
}

func (i GetPoliciesPolicyOptionArgs) ToGetPoliciesPolicyOptionOutput() GetPoliciesPolicyOptionOutput {
	return i.ToGetPoliciesPolicyOptionOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyOptionArgs) ToGetPoliciesPolicyOptionOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOptionOutput)
}

// GetPoliciesPolicyOptionArrayInput is an input type that accepts GetPoliciesPolicyOptionArray and GetPoliciesPolicyOptionArrayOutput values.
// You can construct a concrete instance of `GetPoliciesPolicyOptionArrayInput` via:
//
//	GetPoliciesPolicyOptionArray{ GetPoliciesPolicyOptionArgs{...} }
type GetPoliciesPolicyOptionArrayInput interface {
	pulumi.Input

	ToGetPoliciesPolicyOptionArrayOutput() GetPoliciesPolicyOptionArrayOutput
	ToGetPoliciesPolicyOptionArrayOutputWithContext(context.Context) GetPoliciesPolicyOptionArrayOutput
}

type GetPoliciesPolicyOptionArray []GetPoliciesPolicyOptionInput

func (GetPoliciesPolicyOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyOption)(nil)).Elem()
}

func (i GetPoliciesPolicyOptionArray) ToGetPoliciesPolicyOptionArrayOutput() GetPoliciesPolicyOptionArrayOutput {
	return i.ToGetPoliciesPolicyOptionArrayOutputWithContext(context.Background())
}

func (i GetPoliciesPolicyOptionArray) ToGetPoliciesPolicyOptionArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoliciesPolicyOptionArrayOutput)
}

type GetPoliciesPolicyOptionOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesPolicyOption)(nil)).Elem()
}

func (o GetPoliciesPolicyOptionOutput) ToGetPoliciesPolicyOptionOutput() GetPoliciesPolicyOptionOutput {
	return o
}

func (o GetPoliciesPolicyOptionOutput) ToGetPoliciesPolicyOptionOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionOutput {
	return o
}

// Indicates whether Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) BasicWebProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.BasicWebProtection }).(pulumi.BoolOutput)
}

// Indicates whether Blacklist and Whitelist is enabled.
func (o GetPoliciesPolicyOptionOutput) Blacklist() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.Blacklist }).(pulumi.BoolOutput)
}

// Indicates whether CC Attack Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) CcAttackProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CcAttackProtection }).(pulumi.BoolOutput)
}

// Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) Crawler() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.Crawler }).(pulumi.BoolOutput)
}

// Indicates whether the Search Engine switch in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerEngine() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerEngine }).(pulumi.BoolOutput)
}

// Indicates whether detection of other crawlers in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerOther() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerOther }).(pulumi.BoolOutput)
}

// Indicates whether the Scanner switch in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerScanner() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerScanner }).(pulumi.BoolOutput)
}

// Indicates whether the Script Tool switch in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) CrawlerScript() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.CrawlerScript }).(pulumi.BoolOutput)
}

// Indicates whether Data Masking is enabled.
func (o GetPoliciesPolicyOptionOutput) DataMasking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.DataMasking }).(pulumi.BoolOutput)
}

// Indicates whether False Alarm Masking is enabled.
func (o GetPoliciesPolicyOptionOutput) FalseAlarmMasking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.FalseAlarmMasking }).(pulumi.BoolOutput)
}

// Indicates whether General Check in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) GeneralCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.GeneralCheck }).(pulumi.BoolOutput)
}

// Indicates whether Precise Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) PreciseProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.PreciseProtection }).(pulumi.BoolOutput)
}

// Indicates whether Web Tamper Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) WebTamperProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.WebTamperProtection }).(pulumi.BoolOutput)
}

// Indicates whether webshell detection in Basic Web Protection is enabled.
func (o GetPoliciesPolicyOptionOutput) Webshell() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoliciesPolicyOption) bool { return v.Webshell }).(pulumi.BoolOutput)
}

type GetPoliciesPolicyOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPoliciesPolicyOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoliciesPolicyOption)(nil)).Elem()
}

func (o GetPoliciesPolicyOptionArrayOutput) ToGetPoliciesPolicyOptionArrayOutput() GetPoliciesPolicyOptionArrayOutput {
	return o
}

func (o GetPoliciesPolicyOptionArrayOutput) ToGetPoliciesPolicyOptionArrayOutputWithContext(ctx context.Context) GetPoliciesPolicyOptionArrayOutput {
	return o
}

func (o GetPoliciesPolicyOptionArrayOutput) Index(i pulumi.IntInput) GetPoliciesPolicyOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoliciesPolicyOption {
		return vs[0].([]GetPoliciesPolicyOption)[vs[1].(int)]
	}).(GetPoliciesPolicyOptionOutput)
}

type GetReferenceTablesTable struct {
	// The conditions of the reference table.
	Conditions []string `pulumi:"conditions"`
	// The server time when reference table was created.
	CreationTime string `pulumi:"creationTime"`
	// The description of the reference table.
	Description string `pulumi:"description"`
	// The id of the reference table.
	Id string `pulumi:"id"`
	// The name of the reference table. The value is case sensitive and matches exactly.
	Name string `pulumi:"name"`
	// The type of the reference table, The options are: `url`, `user-agent`, `ip`, `params`, `cookie`, `referer`
	// and `header`.
	Type string `pulumi:"type"`
}

// GetReferenceTablesTableInput is an input type that accepts GetReferenceTablesTableArgs and GetReferenceTablesTableOutput values.
// You can construct a concrete instance of `GetReferenceTablesTableInput` via:
//
//	GetReferenceTablesTableArgs{...}
type GetReferenceTablesTableInput interface {
	pulumi.Input

	ToGetReferenceTablesTableOutput() GetReferenceTablesTableOutput
	ToGetReferenceTablesTableOutputWithContext(context.Context) GetReferenceTablesTableOutput
}

type GetReferenceTablesTableArgs struct {
	// The conditions of the reference table.
	Conditions pulumi.StringArrayInput `pulumi:"conditions"`
	// The server time when reference table was created.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the reference table.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the reference table.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the reference table. The value is case sensitive and matches exactly.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the reference table, The options are: `url`, `user-agent`, `ip`, `params`, `cookie`, `referer`
	// and `header`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReferenceTablesTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReferenceTablesTable)(nil)).Elem()
}

func (i GetReferenceTablesTableArgs) ToGetReferenceTablesTableOutput() GetReferenceTablesTableOutput {
	return i.ToGetReferenceTablesTableOutputWithContext(context.Background())
}

func (i GetReferenceTablesTableArgs) ToGetReferenceTablesTableOutputWithContext(ctx context.Context) GetReferenceTablesTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReferenceTablesTableOutput)
}

// GetReferenceTablesTableArrayInput is an input type that accepts GetReferenceTablesTableArray and GetReferenceTablesTableArrayOutput values.
// You can construct a concrete instance of `GetReferenceTablesTableArrayInput` via:
//
//	GetReferenceTablesTableArray{ GetReferenceTablesTableArgs{...} }
type GetReferenceTablesTableArrayInput interface {
	pulumi.Input

	ToGetReferenceTablesTableArrayOutput() GetReferenceTablesTableArrayOutput
	ToGetReferenceTablesTableArrayOutputWithContext(context.Context) GetReferenceTablesTableArrayOutput
}

type GetReferenceTablesTableArray []GetReferenceTablesTableInput

func (GetReferenceTablesTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReferenceTablesTable)(nil)).Elem()
}

func (i GetReferenceTablesTableArray) ToGetReferenceTablesTableArrayOutput() GetReferenceTablesTableArrayOutput {
	return i.ToGetReferenceTablesTableArrayOutputWithContext(context.Background())
}

func (i GetReferenceTablesTableArray) ToGetReferenceTablesTableArrayOutputWithContext(ctx context.Context) GetReferenceTablesTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReferenceTablesTableArrayOutput)
}

type GetReferenceTablesTableOutput struct{ *pulumi.OutputState }

func (GetReferenceTablesTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReferenceTablesTable)(nil)).Elem()
}

func (o GetReferenceTablesTableOutput) ToGetReferenceTablesTableOutput() GetReferenceTablesTableOutput {
	return o
}

func (o GetReferenceTablesTableOutput) ToGetReferenceTablesTableOutputWithContext(ctx context.Context) GetReferenceTablesTableOutput {
	return o
}

// The conditions of the reference table.
func (o GetReferenceTablesTableOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) []string { return v.Conditions }).(pulumi.StringArrayOutput)
}

// The server time when reference table was created.
func (o GetReferenceTablesTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the reference table.
func (o GetReferenceTablesTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the reference table.
func (o GetReferenceTablesTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the reference table. The value is case sensitive and matches exactly.
func (o GetReferenceTablesTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the reference table, The options are: `url`, `user-agent`, `ip`, `params`, `cookie`, `referer`
// and `header`.
func (o GetReferenceTablesTableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceTablesTable) string { return v.Type }).(pulumi.StringOutput)
}

type GetReferenceTablesTableArrayOutput struct{ *pulumi.OutputState }

func (GetReferenceTablesTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReferenceTablesTable)(nil)).Elem()
}

func (o GetReferenceTablesTableArrayOutput) ToGetReferenceTablesTableArrayOutput() GetReferenceTablesTableArrayOutput {
	return o
}

func (o GetReferenceTablesTableArrayOutput) ToGetReferenceTablesTableArrayOutputWithContext(ctx context.Context) GetReferenceTablesTableArrayOutput {
	return o
}

func (o GetReferenceTablesTableArrayOutput) Index(i pulumi.IntInput) GetReferenceTablesTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReferenceTablesTable {
		return vs[0].([]GetReferenceTablesTable)[vs[1].(int)]
	}).(GetReferenceTablesTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainServerInput)(nil)).Elem(), DedicatedDomainServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DedicatedDomainServerArrayInput)(nil)).Elem(), DedicatedDomainServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServerInput)(nil)).Elem(), DomainServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainServerArrayInput)(nil)).Elem(), DomainServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyOptionInput)(nil)).Elem(), PolicyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyOptionArrayInput)(nil)).Elem(), PolicyOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedInstancesInstanceInput)(nil)).Elem(), GetDedicatedInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDedicatedInstancesInstanceArrayInput)(nil)).Elem(), GetDedicatedInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupInput)(nil)).Elem(), GetInstanceGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupArrayInput)(nil)).Elem(), GetInstanceGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstanceInput)(nil)).Elem(), GetInstanceGroupsGroupDedicatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDedicatedInstanceArrayInput)(nil)).Elem(), GetInstanceGroupsGroupDedicatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDomainNameInput)(nil)).Elem(), GetInstanceGroupsGroupDomainNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceGroupsGroupDomainNameArrayInput)(nil)).Elem(), GetInstanceGroupsGroupDomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyInput)(nil)).Elem(), GetPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyArrayInput)(nil)).Elem(), GetPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyOptionInput)(nil)).Elem(), GetPoliciesPolicyOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoliciesPolicyOptionArrayInput)(nil)).Elem(), GetPoliciesPolicyOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReferenceTablesTableInput)(nil)).Elem(), GetReferenceTablesTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReferenceTablesTableArrayInput)(nil)).Elem(), GetReferenceTablesTableArray{})
	pulumi.RegisterOutputType(DedicatedDomainServerOutput{})
	pulumi.RegisterOutputType(DedicatedDomainServerArrayOutput{})
	pulumi.RegisterOutputType(DomainServerOutput{})
	pulumi.RegisterOutputType(DomainServerArrayOutput{})
	pulumi.RegisterOutputType(PolicyOptionOutput{})
	pulumi.RegisterOutputType(PolicyOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetDedicatedInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDedicatedInstanceOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDedicatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDomainNameOutput{})
	pulumi.RegisterOutputType(GetInstanceGroupsGroupDomainNameArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOptionOutput{})
	pulumi.RegisterOutputType(GetPoliciesPolicyOptionArrayOutput{})
	pulumi.RegisterOutputType(GetReferenceTablesTableOutput{})
	pulumi.RegisterOutputType(GetReferenceTablesTableArrayOutput{})
}
