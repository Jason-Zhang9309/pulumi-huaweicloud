// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a WAF Data Masking Rule resource within HuaweiCloud.
//
// > **NOTE:** All WAF resources depend on WAF instances, and the WAF instances need to be purchased before they can be
// used. The data masking rule resource can be used in Cloud Mode and Dedicated Mode.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			enterpriseProjectId := cfg.RequireObject("enterpriseProjectId")
//			policyId := cfg.RequireObject("policyId")
//			_, err := Waf.NewRuleDataMasking(ctx, "test", &Waf.RuleDataMaskingArgs{
//				PolicyId:            pulumi.Any(policyId),
//				EnterpriseProjectId: pulumi.Any(enterpriseProjectId),
//				Path:                pulumi.String("/login"),
//				Field:               pulumi.String("params"),
//				Subfield:            pulumi.String("password"),
//				Description:         pulumi.String("test description"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// There are two ways to import WAF rule data masking state. * Using `policy_id` and `rule_id`, separated by a slash, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Waf/ruleDataMasking:RuleDataMasking test <policy_id>/<rule_id>
//
// ```
//
//   - Using `policy_id`, `rule_id` and `enterprise_project_id`, separated by slashes, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Waf/ruleDataMasking:RuleDataMasking test <policy_id>/<rule_id>/<enterprise_project_id>
//
// ```
type RuleDataMasking struct {
	pulumi.CustomResourceState

	// Specifies the description of WAF data masking rule.
	Description pulumi.StringOutput `pulumi:"description"`
	// Specifies the enterprise project ID of WAF data masking rule.
	// For enterprise users, if omitted, default enterprise project will be used.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrOutput `pulumi:"enterpriseProjectId"`
	// Specifies the position where the masked field stored. Valid values are:
	// + **params**: The field in the parameter.
	// + **header**: The field in the header.
	// + **form**: The field in the form.
	// + **cookie**: The field in the cookie.
	Field pulumi.StringOutput `pulumi:"field"`
	// Specifies the URL to which the data masking rule applies (exact match by default).
	Path pulumi.StringOutput `pulumi:"path"`
	// Specifies the WAF policy ID. Changing this creates a new rule.
	PolicyId pulumi.StringOutput `pulumi:"policyId"`
	// Specifies the region in which to create the WAF Data Masking rule resource.
	// If omitted, the provider-level region will be used. Changing this setting will create a new rule.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the status of WAF web tamper protection rule.
	// Valid values are as follows:
	// + `0`: Disabled.
	// + `1`: Enabled.
	Status pulumi.IntPtrOutput `pulumi:"status"`
	// Specifies the name of the masked field, e.g.: **password**.
	Subfield pulumi.StringOutput `pulumi:"subfield"`
}

// NewRuleDataMasking registers a new resource with the given unique name, arguments, and options.
func NewRuleDataMasking(ctx *pulumi.Context,
	name string, args *RuleDataMaskingArgs, opts ...pulumi.ResourceOption) (*RuleDataMasking, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Field == nil {
		return nil, errors.New("invalid value for required argument 'Field'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	if args.Subfield == nil {
		return nil, errors.New("invalid value for required argument 'Subfield'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource RuleDataMasking
	err := ctx.RegisterResource("huaweicloud:Waf/ruleDataMasking:RuleDataMasking", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleDataMasking gets an existing RuleDataMasking resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleDataMasking(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleDataMaskingState, opts ...pulumi.ResourceOption) (*RuleDataMasking, error) {
	var resource RuleDataMasking
	err := ctx.ReadResource("huaweicloud:Waf/ruleDataMasking:RuleDataMasking", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleDataMasking resources.
type ruleDataMaskingState struct {
	// Specifies the description of WAF data masking rule.
	Description *string `pulumi:"description"`
	// Specifies the enterprise project ID of WAF data masking rule.
	// For enterprise users, if omitted, default enterprise project will be used.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the position where the masked field stored. Valid values are:
	// + **params**: The field in the parameter.
	// + **header**: The field in the header.
	// + **form**: The field in the form.
	// + **cookie**: The field in the cookie.
	Field *string `pulumi:"field"`
	// Specifies the URL to which the data masking rule applies (exact match by default).
	Path *string `pulumi:"path"`
	// Specifies the WAF policy ID. Changing this creates a new rule.
	PolicyId *string `pulumi:"policyId"`
	// Specifies the region in which to create the WAF Data Masking rule resource.
	// If omitted, the provider-level region will be used. Changing this setting will create a new rule.
	Region *string `pulumi:"region"`
	// Specifies the status of WAF web tamper protection rule.
	// Valid values are as follows:
	// + `0`: Disabled.
	// + `1`: Enabled.
	Status *int `pulumi:"status"`
	// Specifies the name of the masked field, e.g.: **password**.
	Subfield *string `pulumi:"subfield"`
}

type RuleDataMaskingState struct {
	// Specifies the description of WAF data masking rule.
	Description pulumi.StringPtrInput
	// Specifies the enterprise project ID of WAF data masking rule.
	// For enterprise users, if omitted, default enterprise project will be used.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the position where the masked field stored. Valid values are:
	// + **params**: The field in the parameter.
	// + **header**: The field in the header.
	// + **form**: The field in the form.
	// + **cookie**: The field in the cookie.
	Field pulumi.StringPtrInput
	// Specifies the URL to which the data masking rule applies (exact match by default).
	Path pulumi.StringPtrInput
	// Specifies the WAF policy ID. Changing this creates a new rule.
	PolicyId pulumi.StringPtrInput
	// Specifies the region in which to create the WAF Data Masking rule resource.
	// If omitted, the provider-level region will be used. Changing this setting will create a new rule.
	Region pulumi.StringPtrInput
	// Specifies the status of WAF web tamper protection rule.
	// Valid values are as follows:
	// + `0`: Disabled.
	// + `1`: Enabled.
	Status pulumi.IntPtrInput
	// Specifies the name of the masked field, e.g.: **password**.
	Subfield pulumi.StringPtrInput
}

func (RuleDataMaskingState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleDataMaskingState)(nil)).Elem()
}

type ruleDataMaskingArgs struct {
	// Specifies the description of WAF data masking rule.
	Description *string `pulumi:"description"`
	// Specifies the enterprise project ID of WAF data masking rule.
	// For enterprise users, if omitted, default enterprise project will be used.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the position where the masked field stored. Valid values are:
	// + **params**: The field in the parameter.
	// + **header**: The field in the header.
	// + **form**: The field in the form.
	// + **cookie**: The field in the cookie.
	Field string `pulumi:"field"`
	// Specifies the URL to which the data masking rule applies (exact match by default).
	Path string `pulumi:"path"`
	// Specifies the WAF policy ID. Changing this creates a new rule.
	PolicyId string `pulumi:"policyId"`
	// Specifies the region in which to create the WAF Data Masking rule resource.
	// If omitted, the provider-level region will be used. Changing this setting will create a new rule.
	Region *string `pulumi:"region"`
	// Specifies the status of WAF web tamper protection rule.
	// Valid values are as follows:
	// + `0`: Disabled.
	// + `1`: Enabled.
	Status *int `pulumi:"status"`
	// Specifies the name of the masked field, e.g.: **password**.
	Subfield string `pulumi:"subfield"`
}

// The set of arguments for constructing a RuleDataMasking resource.
type RuleDataMaskingArgs struct {
	// Specifies the description of WAF data masking rule.
	Description pulumi.StringPtrInput
	// Specifies the enterprise project ID of WAF data masking rule.
	// For enterprise users, if omitted, default enterprise project will be used.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the position where the masked field stored. Valid values are:
	// + **params**: The field in the parameter.
	// + **header**: The field in the header.
	// + **form**: The field in the form.
	// + **cookie**: The field in the cookie.
	Field pulumi.StringInput
	// Specifies the URL to which the data masking rule applies (exact match by default).
	Path pulumi.StringInput
	// Specifies the WAF policy ID. Changing this creates a new rule.
	PolicyId pulumi.StringInput
	// Specifies the region in which to create the WAF Data Masking rule resource.
	// If omitted, the provider-level region will be used. Changing this setting will create a new rule.
	Region pulumi.StringPtrInput
	// Specifies the status of WAF web tamper protection rule.
	// Valid values are as follows:
	// + `0`: Disabled.
	// + `1`: Enabled.
	Status pulumi.IntPtrInput
	// Specifies the name of the masked field, e.g.: **password**.
	Subfield pulumi.StringInput
}

func (RuleDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleDataMaskingArgs)(nil)).Elem()
}

type RuleDataMaskingInput interface {
	pulumi.Input

	ToRuleDataMaskingOutput() RuleDataMaskingOutput
	ToRuleDataMaskingOutputWithContext(ctx context.Context) RuleDataMaskingOutput
}

func (*RuleDataMasking) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDataMasking)(nil)).Elem()
}

func (i *RuleDataMasking) ToRuleDataMaskingOutput() RuleDataMaskingOutput {
	return i.ToRuleDataMaskingOutputWithContext(context.Background())
}

func (i *RuleDataMasking) ToRuleDataMaskingOutputWithContext(ctx context.Context) RuleDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDataMaskingOutput)
}

// RuleDataMaskingArrayInput is an input type that accepts RuleDataMaskingArray and RuleDataMaskingArrayOutput values.
// You can construct a concrete instance of `RuleDataMaskingArrayInput` via:
//
//	RuleDataMaskingArray{ RuleDataMaskingArgs{...} }
type RuleDataMaskingArrayInput interface {
	pulumi.Input

	ToRuleDataMaskingArrayOutput() RuleDataMaskingArrayOutput
	ToRuleDataMaskingArrayOutputWithContext(context.Context) RuleDataMaskingArrayOutput
}

type RuleDataMaskingArray []RuleDataMaskingInput

func (RuleDataMaskingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleDataMasking)(nil)).Elem()
}

func (i RuleDataMaskingArray) ToRuleDataMaskingArrayOutput() RuleDataMaskingArrayOutput {
	return i.ToRuleDataMaskingArrayOutputWithContext(context.Background())
}

func (i RuleDataMaskingArray) ToRuleDataMaskingArrayOutputWithContext(ctx context.Context) RuleDataMaskingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDataMaskingArrayOutput)
}

// RuleDataMaskingMapInput is an input type that accepts RuleDataMaskingMap and RuleDataMaskingMapOutput values.
// You can construct a concrete instance of `RuleDataMaskingMapInput` via:
//
//	RuleDataMaskingMap{ "key": RuleDataMaskingArgs{...} }
type RuleDataMaskingMapInput interface {
	pulumi.Input

	ToRuleDataMaskingMapOutput() RuleDataMaskingMapOutput
	ToRuleDataMaskingMapOutputWithContext(context.Context) RuleDataMaskingMapOutput
}

type RuleDataMaskingMap map[string]RuleDataMaskingInput

func (RuleDataMaskingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleDataMasking)(nil)).Elem()
}

func (i RuleDataMaskingMap) ToRuleDataMaskingMapOutput() RuleDataMaskingMapOutput {
	return i.ToRuleDataMaskingMapOutputWithContext(context.Background())
}

func (i RuleDataMaskingMap) ToRuleDataMaskingMapOutputWithContext(ctx context.Context) RuleDataMaskingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDataMaskingMapOutput)
}

type RuleDataMaskingOutput struct{ *pulumi.OutputState }

func (RuleDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDataMasking)(nil)).Elem()
}

func (o RuleDataMaskingOutput) ToRuleDataMaskingOutput() RuleDataMaskingOutput {
	return o
}

func (o RuleDataMaskingOutput) ToRuleDataMaskingOutputWithContext(ctx context.Context) RuleDataMaskingOutput {
	return o
}

// Specifies the description of WAF data masking rule.
func (o RuleDataMaskingOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Specifies the enterprise project ID of WAF data masking rule.
// For enterprise users, if omitted, default enterprise project will be used.
// Changing this parameter will create a new resource.
func (o RuleDataMaskingOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the position where the masked field stored. Valid values are:
// + **params**: The field in the parameter.
// + **header**: The field in the header.
// + **form**: The field in the form.
// + **cookie**: The field in the cookie.
func (o RuleDataMaskingOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringOutput { return v.Field }).(pulumi.StringOutput)
}

// Specifies the URL to which the data masking rule applies (exact match by default).
func (o RuleDataMaskingOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

// Specifies the WAF policy ID. Changing this creates a new rule.
func (o RuleDataMaskingOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

// Specifies the region in which to create the WAF Data Masking rule resource.
// If omitted, the provider-level region will be used. Changing this setting will create a new rule.
func (o RuleDataMaskingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the status of WAF web tamper protection rule.
// Valid values are as follows:
// + `0`: Disabled.
// + `1`: Enabled.
func (o RuleDataMaskingOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.IntPtrOutput { return v.Status }).(pulumi.IntPtrOutput)
}

// Specifies the name of the masked field, e.g.: **password**.
func (o RuleDataMaskingOutput) Subfield() pulumi.StringOutput {
	return o.ApplyT(func(v *RuleDataMasking) pulumi.StringOutput { return v.Subfield }).(pulumi.StringOutput)
}

type RuleDataMaskingArrayOutput struct{ *pulumi.OutputState }

func (RuleDataMaskingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RuleDataMasking)(nil)).Elem()
}

func (o RuleDataMaskingArrayOutput) ToRuleDataMaskingArrayOutput() RuleDataMaskingArrayOutput {
	return o
}

func (o RuleDataMaskingArrayOutput) ToRuleDataMaskingArrayOutputWithContext(ctx context.Context) RuleDataMaskingArrayOutput {
	return o
}

func (o RuleDataMaskingArrayOutput) Index(i pulumi.IntInput) RuleDataMaskingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RuleDataMasking {
		return vs[0].([]*RuleDataMasking)[vs[1].(int)]
	}).(RuleDataMaskingOutput)
}

type RuleDataMaskingMapOutput struct{ *pulumi.OutputState }

func (RuleDataMaskingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RuleDataMasking)(nil)).Elem()
}

func (o RuleDataMaskingMapOutput) ToRuleDataMaskingMapOutput() RuleDataMaskingMapOutput {
	return o
}

func (o RuleDataMaskingMapOutput) ToRuleDataMaskingMapOutputWithContext(ctx context.Context) RuleDataMaskingMapOutput {
	return o
}

func (o RuleDataMaskingMapOutput) MapIndex(k pulumi.StringInput) RuleDataMaskingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RuleDataMasking {
		return vs[0].(map[string]*RuleDataMasking)[vs[1].(string)]
	}).(RuleDataMaskingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuleDataMaskingInput)(nil)).Elem(), &RuleDataMasking{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleDataMaskingArrayInput)(nil)).Elem(), RuleDataMaskingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleDataMaskingMapInput)(nil)).Elem(), RuleDataMaskingMap{})
	pulumi.RegisterOutputType(RuleDataMaskingOutput{})
	pulumi.RegisterOutputType(RuleDataMaskingArrayOutput{})
	pulumi.RegisterOutputType(RuleDataMaskingMapOutput{})
}
