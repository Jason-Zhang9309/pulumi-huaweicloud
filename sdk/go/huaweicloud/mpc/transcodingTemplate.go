// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an MPC transcoding template resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Mpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Mpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Mpc.NewTranscodingTemplate(ctx, "test", &Mpc.TranscodingTemplateArgs{
//				Audio: &mpc.TranscodingTemplateAudioArgs{
//					Bitrate:      pulumi.Int(0),
//					Channels:     pulumi.Int(2),
//					Codec:        pulumi.Int(2),
//					OutputPolicy: pulumi.String("transcode"),
//					SampleRate:   pulumi.Int(1),
//				},
//				DashSegmentDuration: pulumi.Int(5),
//				HlsSegmentDuration:  pulumi.Int(5),
//				LowBitrateHd:        pulumi.Bool(true),
//				OutputFormat:        pulumi.Int(1),
//				Video: &mpc.TranscodingTemplateVideoArgs{
//					Bitrate:               pulumi.Int(0),
//					BlackBarRemoval:       pulumi.Int(0),
//					Codec:                 pulumi.Int(2),
//					Fps:                   pulumi.Int(0),
//					Height:                pulumi.Int(0),
//					Level:                 pulumi.Int(15),
//					MaxConsecutiveBframes: pulumi.Int(7),
//					MaxIframesInterval:    pulumi.Int(5),
//					OutputPolicy:          pulumi.String("transcode"),
//					Profile:               pulumi.Int(4),
//					Quality:               pulumi.Int(1),
//					Width:                 pulumi.Int(0),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// MPC transcoding templates can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:Mpc/transcodingTemplate:TranscodingTemplate test 542899
//
// ```
type TranscodingTemplate struct {
	pulumi.CustomResourceState

	// Specifies the audio parameters. The object structure is documented below.
	Audio TranscodingTemplateAudioPtrOutput `pulumi:"audio"`
	// Specifies the dash segment duration. This parameter is used only when `outputFormat`
	// is set to 2 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	DashSegmentDuration pulumi.IntPtrOutput `pulumi:"dashSegmentDuration"`
	// Specifies the HLS segment duration. This parameter is used only
	// when `outputFormat` is set to 1 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	HlsSegmentDuration pulumi.IntPtrOutput `pulumi:"hlsSegmentDuration"`
	// Specifies Whether to enable low bitrate HD. The default value is false.
	LowBitrateHd pulumi.BoolPtrOutput `pulumi:"lowBitrateHd"`
	// Specifies the name of a transcoding template.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the packaging type. Possible values are:
	// + **1**: HLS
	// + **2**: DASH
	// + **3**: HLS+DASH
	// + **4**: MP4
	// + **5**: MP3
	// + **6**: ADTS
	OutputFormat pulumi.IntOutput `pulumi:"outputFormat"`
	// The region in which to create the transcoding template resource. If omitted,
	// the provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the video parameters. The object structure is documented below.
	Video TranscodingTemplateVideoPtrOutput `pulumi:"video"`
}

// NewTranscodingTemplate registers a new resource with the given unique name, arguments, and options.
func NewTranscodingTemplate(ctx *pulumi.Context,
	name string, args *TranscodingTemplateArgs, opts ...pulumi.ResourceOption) (*TranscodingTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OutputFormat == nil {
		return nil, errors.New("invalid value for required argument 'OutputFormat'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TranscodingTemplate
	err := ctx.RegisterResource("huaweicloud:Mpc/transcodingTemplate:TranscodingTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTranscodingTemplate gets an existing TranscodingTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTranscodingTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TranscodingTemplateState, opts ...pulumi.ResourceOption) (*TranscodingTemplate, error) {
	var resource TranscodingTemplate
	err := ctx.ReadResource("huaweicloud:Mpc/transcodingTemplate:TranscodingTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TranscodingTemplate resources.
type transcodingTemplateState struct {
	// Specifies the audio parameters. The object structure is documented below.
	Audio *TranscodingTemplateAudio `pulumi:"audio"`
	// Specifies the dash segment duration. This parameter is used only when `outputFormat`
	// is set to 2 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	DashSegmentDuration *int `pulumi:"dashSegmentDuration"`
	// Specifies the HLS segment duration. This parameter is used only
	// when `outputFormat` is set to 1 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	HlsSegmentDuration *int `pulumi:"hlsSegmentDuration"`
	// Specifies Whether to enable low bitrate HD. The default value is false.
	LowBitrateHd *bool `pulumi:"lowBitrateHd"`
	// Specifies the name of a transcoding template.
	Name *string `pulumi:"name"`
	// Specifies the packaging type. Possible values are:
	// + **1**: HLS
	// + **2**: DASH
	// + **3**: HLS+DASH
	// + **4**: MP4
	// + **5**: MP3
	// + **6**: ADTS
	OutputFormat *int `pulumi:"outputFormat"`
	// The region in which to create the transcoding template resource. If omitted,
	// the provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the video parameters. The object structure is documented below.
	Video *TranscodingTemplateVideo `pulumi:"video"`
}

type TranscodingTemplateState struct {
	// Specifies the audio parameters. The object structure is documented below.
	Audio TranscodingTemplateAudioPtrInput
	// Specifies the dash segment duration. This parameter is used only when `outputFormat`
	// is set to 2 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	DashSegmentDuration pulumi.IntPtrInput
	// Specifies the HLS segment duration. This parameter is used only
	// when `outputFormat` is set to 1 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	HlsSegmentDuration pulumi.IntPtrInput
	// Specifies Whether to enable low bitrate HD. The default value is false.
	LowBitrateHd pulumi.BoolPtrInput
	// Specifies the name of a transcoding template.
	Name pulumi.StringPtrInput
	// Specifies the packaging type. Possible values are:
	// + **1**: HLS
	// + **2**: DASH
	// + **3**: HLS+DASH
	// + **4**: MP4
	// + **5**: MP3
	// + **6**: ADTS
	OutputFormat pulumi.IntPtrInput
	// The region in which to create the transcoding template resource. If omitted,
	// the provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the video parameters. The object structure is documented below.
	Video TranscodingTemplateVideoPtrInput
}

func (TranscodingTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*transcodingTemplateState)(nil)).Elem()
}

type transcodingTemplateArgs struct {
	// Specifies the audio parameters. The object structure is documented below.
	Audio *TranscodingTemplateAudio `pulumi:"audio"`
	// Specifies the dash segment duration. This parameter is used only when `outputFormat`
	// is set to 2 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	DashSegmentDuration *int `pulumi:"dashSegmentDuration"`
	// Specifies the HLS segment duration. This parameter is used only
	// when `outputFormat` is set to 1 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	HlsSegmentDuration *int `pulumi:"hlsSegmentDuration"`
	// Specifies Whether to enable low bitrate HD. The default value is false.
	LowBitrateHd *bool `pulumi:"lowBitrateHd"`
	// Specifies the name of a transcoding template.
	Name *string `pulumi:"name"`
	// Specifies the packaging type. Possible values are:
	// + **1**: HLS
	// + **2**: DASH
	// + **3**: HLS+DASH
	// + **4**: MP4
	// + **5**: MP3
	// + **6**: ADTS
	OutputFormat int `pulumi:"outputFormat"`
	// The region in which to create the transcoding template resource. If omitted,
	// the provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the video parameters. The object structure is documented below.
	Video *TranscodingTemplateVideo `pulumi:"video"`
}

// The set of arguments for constructing a TranscodingTemplate resource.
type TranscodingTemplateArgs struct {
	// Specifies the audio parameters. The object structure is documented below.
	Audio TranscodingTemplateAudioPtrInput
	// Specifies the dash segment duration. This parameter is used only when `outputFormat`
	// is set to 2 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	DashSegmentDuration pulumi.IntPtrInput
	// Specifies the HLS segment duration. This parameter is used only
	// when `outputFormat` is set to 1 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
	HlsSegmentDuration pulumi.IntPtrInput
	// Specifies Whether to enable low bitrate HD. The default value is false.
	LowBitrateHd pulumi.BoolPtrInput
	// Specifies the name of a transcoding template.
	Name pulumi.StringPtrInput
	// Specifies the packaging type. Possible values are:
	// + **1**: HLS
	// + **2**: DASH
	// + **3**: HLS+DASH
	// + **4**: MP4
	// + **5**: MP3
	// + **6**: ADTS
	OutputFormat pulumi.IntInput
	// The region in which to create the transcoding template resource. If omitted,
	// the provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the video parameters. The object structure is documented below.
	Video TranscodingTemplateVideoPtrInput
}

func (TranscodingTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transcodingTemplateArgs)(nil)).Elem()
}

type TranscodingTemplateInput interface {
	pulumi.Input

	ToTranscodingTemplateOutput() TranscodingTemplateOutput
	ToTranscodingTemplateOutputWithContext(ctx context.Context) TranscodingTemplateOutput
}

func (*TranscodingTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplate)(nil)).Elem()
}

func (i *TranscodingTemplate) ToTranscodingTemplateOutput() TranscodingTemplateOutput {
	return i.ToTranscodingTemplateOutputWithContext(context.Background())
}

func (i *TranscodingTemplate) ToTranscodingTemplateOutputWithContext(ctx context.Context) TranscodingTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateOutput)
}

// TranscodingTemplateArrayInput is an input type that accepts TranscodingTemplateArray and TranscodingTemplateArrayOutput values.
// You can construct a concrete instance of `TranscodingTemplateArrayInput` via:
//
//	TranscodingTemplateArray{ TranscodingTemplateArgs{...} }
type TranscodingTemplateArrayInput interface {
	pulumi.Input

	ToTranscodingTemplateArrayOutput() TranscodingTemplateArrayOutput
	ToTranscodingTemplateArrayOutputWithContext(context.Context) TranscodingTemplateArrayOutput
}

type TranscodingTemplateArray []TranscodingTemplateInput

func (TranscodingTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TranscodingTemplate)(nil)).Elem()
}

func (i TranscodingTemplateArray) ToTranscodingTemplateArrayOutput() TranscodingTemplateArrayOutput {
	return i.ToTranscodingTemplateArrayOutputWithContext(context.Background())
}

func (i TranscodingTemplateArray) ToTranscodingTemplateArrayOutputWithContext(ctx context.Context) TranscodingTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateArrayOutput)
}

// TranscodingTemplateMapInput is an input type that accepts TranscodingTemplateMap and TranscodingTemplateMapOutput values.
// You can construct a concrete instance of `TranscodingTemplateMapInput` via:
//
//	TranscodingTemplateMap{ "key": TranscodingTemplateArgs{...} }
type TranscodingTemplateMapInput interface {
	pulumi.Input

	ToTranscodingTemplateMapOutput() TranscodingTemplateMapOutput
	ToTranscodingTemplateMapOutputWithContext(context.Context) TranscodingTemplateMapOutput
}

type TranscodingTemplateMap map[string]TranscodingTemplateInput

func (TranscodingTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TranscodingTemplate)(nil)).Elem()
}

func (i TranscodingTemplateMap) ToTranscodingTemplateMapOutput() TranscodingTemplateMapOutput {
	return i.ToTranscodingTemplateMapOutputWithContext(context.Background())
}

func (i TranscodingTemplateMap) ToTranscodingTemplateMapOutputWithContext(ctx context.Context) TranscodingTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateMapOutput)
}

type TranscodingTemplateOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplate)(nil)).Elem()
}

func (o TranscodingTemplateOutput) ToTranscodingTemplateOutput() TranscodingTemplateOutput {
	return o
}

func (o TranscodingTemplateOutput) ToTranscodingTemplateOutputWithContext(ctx context.Context) TranscodingTemplateOutput {
	return o
}

// Specifies the audio parameters. The object structure is documented below.
func (o TranscodingTemplateOutput) Audio() TranscodingTemplateAudioPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplate) TranscodingTemplateAudioPtrOutput { return v.Audio }).(TranscodingTemplateAudioPtrOutput)
}

// Specifies the dash segment duration. This parameter is used only when `outputFormat`
// is set to 2 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
func (o TranscodingTemplateOutput) DashSegmentDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplate) pulumi.IntPtrOutput { return v.DashSegmentDuration }).(pulumi.IntPtrOutput)
}

// Specifies the HLS segment duration. This parameter is used only
// when `outputFormat` is set to 1 or 3. The value ranges from 2 to 10. The default value is 5. The unit is second.
func (o TranscodingTemplateOutput) HlsSegmentDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplate) pulumi.IntPtrOutput { return v.HlsSegmentDuration }).(pulumi.IntPtrOutput)
}

// Specifies Whether to enable low bitrate HD. The default value is false.
func (o TranscodingTemplateOutput) LowBitrateHd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplate) pulumi.BoolPtrOutput { return v.LowBitrateHd }).(pulumi.BoolPtrOutput)
}

// Specifies the name of a transcoding template.
func (o TranscodingTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscodingTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the packaging type. Possible values are:
// + **1**: HLS
// + **2**: DASH
// + **3**: HLS+DASH
// + **4**: MP4
// + **5**: MP3
// + **6**: ADTS
func (o TranscodingTemplateOutput) OutputFormat() pulumi.IntOutput {
	return o.ApplyT(func(v *TranscodingTemplate) pulumi.IntOutput { return v.OutputFormat }).(pulumi.IntOutput)
}

// The region in which to create the transcoding template resource. If omitted,
// the provider-level region will be used. Changing this creates a new resource.
func (o TranscodingTemplateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscodingTemplate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the video parameters. The object structure is documented below.
func (o TranscodingTemplateOutput) Video() TranscodingTemplateVideoPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplate) TranscodingTemplateVideoPtrOutput { return v.Video }).(TranscodingTemplateVideoPtrOutput)
}

type TranscodingTemplateArrayOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TranscodingTemplate)(nil)).Elem()
}

func (o TranscodingTemplateArrayOutput) ToTranscodingTemplateArrayOutput() TranscodingTemplateArrayOutput {
	return o
}

func (o TranscodingTemplateArrayOutput) ToTranscodingTemplateArrayOutputWithContext(ctx context.Context) TranscodingTemplateArrayOutput {
	return o
}

func (o TranscodingTemplateArrayOutput) Index(i pulumi.IntInput) TranscodingTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TranscodingTemplate {
		return vs[0].([]*TranscodingTemplate)[vs[1].(int)]
	}).(TranscodingTemplateOutput)
}

type TranscodingTemplateMapOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TranscodingTemplate)(nil)).Elem()
}

func (o TranscodingTemplateMapOutput) ToTranscodingTemplateMapOutput() TranscodingTemplateMapOutput {
	return o
}

func (o TranscodingTemplateMapOutput) ToTranscodingTemplateMapOutputWithContext(ctx context.Context) TranscodingTemplateMapOutput {
	return o
}

func (o TranscodingTemplateMapOutput) MapIndex(k pulumi.StringInput) TranscodingTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TranscodingTemplate {
		return vs[0].(map[string]*TranscodingTemplate)[vs[1].(string)]
	}).(TranscodingTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateInput)(nil)).Elem(), &TranscodingTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateArrayInput)(nil)).Elem(), TranscodingTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateMapInput)(nil)).Elem(), TranscodingTemplateMap{})
	pulumi.RegisterOutputType(TranscodingTemplateOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateArrayOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateMapOutput{})
}
