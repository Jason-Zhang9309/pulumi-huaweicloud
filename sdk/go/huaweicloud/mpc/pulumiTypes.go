// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TranscodingTemplateAudio struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate *int `pulumi:"bitrate"`
	// Specifies the number of audio channels. Possible values are:
	// + **1**: AUDIO_CHANNELS_1
	// + **2**: AUDIO_CHANNELS_2
	// + **6**: AUDIO_CHANNELS_5_1
	Channels int `pulumi:"channels"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec int `pulumi:"codec"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy *string `pulumi:"outputPolicy"`
	// Specifies the audio sampling rate. Possible values are:
	// + **1**: AUDIO_SAMPLE_AUTO
	// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
	// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
	// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
	// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
	// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
	SampleRate int `pulumi:"sampleRate"`
}

// TranscodingTemplateAudioInput is an input type that accepts TranscodingTemplateAudioArgs and TranscodingTemplateAudioOutput values.
// You can construct a concrete instance of `TranscodingTemplateAudioInput` via:
//
//	TranscodingTemplateAudioArgs{...}
type TranscodingTemplateAudioInput interface {
	pulumi.Input

	ToTranscodingTemplateAudioOutput() TranscodingTemplateAudioOutput
	ToTranscodingTemplateAudioOutputWithContext(context.Context) TranscodingTemplateAudioOutput
}

type TranscodingTemplateAudioArgs struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate pulumi.IntPtrInput `pulumi:"bitrate"`
	// Specifies the number of audio channels. Possible values are:
	// + **1**: AUDIO_CHANNELS_1
	// + **2**: AUDIO_CHANNELS_2
	// + **6**: AUDIO_CHANNELS_5_1
	Channels pulumi.IntInput `pulumi:"channels"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec pulumi.IntInput `pulumi:"codec"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy pulumi.StringPtrInput `pulumi:"outputPolicy"`
	// Specifies the audio sampling rate. Possible values are:
	// + **1**: AUDIO_SAMPLE_AUTO
	// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
	// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
	// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
	// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
	// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
	SampleRate pulumi.IntInput `pulumi:"sampleRate"`
}

func (TranscodingTemplateAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateAudio)(nil)).Elem()
}

func (i TranscodingTemplateAudioArgs) ToTranscodingTemplateAudioOutput() TranscodingTemplateAudioOutput {
	return i.ToTranscodingTemplateAudioOutputWithContext(context.Background())
}

func (i TranscodingTemplateAudioArgs) ToTranscodingTemplateAudioOutputWithContext(ctx context.Context) TranscodingTemplateAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateAudioOutput)
}

func (i TranscodingTemplateAudioArgs) ToTranscodingTemplateAudioPtrOutput() TranscodingTemplateAudioPtrOutput {
	return i.ToTranscodingTemplateAudioPtrOutputWithContext(context.Background())
}

func (i TranscodingTemplateAudioArgs) ToTranscodingTemplateAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateAudioOutput).ToTranscodingTemplateAudioPtrOutputWithContext(ctx)
}

// TranscodingTemplateAudioPtrInput is an input type that accepts TranscodingTemplateAudioArgs, TranscodingTemplateAudioPtr and TranscodingTemplateAudioPtrOutput values.
// You can construct a concrete instance of `TranscodingTemplateAudioPtrInput` via:
//
//	        TranscodingTemplateAudioArgs{...}
//
//	or:
//
//	        nil
type TranscodingTemplateAudioPtrInput interface {
	pulumi.Input

	ToTranscodingTemplateAudioPtrOutput() TranscodingTemplateAudioPtrOutput
	ToTranscodingTemplateAudioPtrOutputWithContext(context.Context) TranscodingTemplateAudioPtrOutput
}

type transcodingTemplateAudioPtrType TranscodingTemplateAudioArgs

func TranscodingTemplateAudioPtr(v *TranscodingTemplateAudioArgs) TranscodingTemplateAudioPtrInput {
	return (*transcodingTemplateAudioPtrType)(v)
}

func (*transcodingTemplateAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateAudio)(nil)).Elem()
}

func (i *transcodingTemplateAudioPtrType) ToTranscodingTemplateAudioPtrOutput() TranscodingTemplateAudioPtrOutput {
	return i.ToTranscodingTemplateAudioPtrOutputWithContext(context.Background())
}

func (i *transcodingTemplateAudioPtrType) ToTranscodingTemplateAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateAudioPtrOutput)
}

type TranscodingTemplateAudioOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateAudio)(nil)).Elem()
}

func (o TranscodingTemplateAudioOutput) ToTranscodingTemplateAudioOutput() TranscodingTemplateAudioOutput {
	return o
}

func (o TranscodingTemplateAudioOutput) ToTranscodingTemplateAudioOutputWithContext(ctx context.Context) TranscodingTemplateAudioOutput {
	return o
}

func (o TranscodingTemplateAudioOutput) ToTranscodingTemplateAudioPtrOutput() TranscodingTemplateAudioPtrOutput {
	return o.ToTranscodingTemplateAudioPtrOutputWithContext(context.Background())
}

func (o TranscodingTemplateAudioOutput) ToTranscodingTemplateAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateAudioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TranscodingTemplateAudio) *TranscodingTemplateAudio {
		return &v
	}).(TranscodingTemplateAudioPtrOutput)
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateAudioOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateAudio) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

// Specifies the number of audio channels. Possible values are:
// + **1**: AUDIO_CHANNELS_1
// + **2**: AUDIO_CHANNELS_2
// + **6**: AUDIO_CHANNELS_5_1
func (o TranscodingTemplateAudioOutput) Channels() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateAudio) int { return v.Channels }).(pulumi.IntOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateAudioOutput) Codec() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateAudio) int { return v.Codec }).(pulumi.IntOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateAudioOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateAudio) *string { return v.OutputPolicy }).(pulumi.StringPtrOutput)
}

// Specifies the audio sampling rate. Possible values are:
// + **1**: AUDIO_SAMPLE_AUTO
// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
func (o TranscodingTemplateAudioOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateAudio) int { return v.SampleRate }).(pulumi.IntOutput)
}

type TranscodingTemplateAudioPtrOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateAudio)(nil)).Elem()
}

func (o TranscodingTemplateAudioPtrOutput) ToTranscodingTemplateAudioPtrOutput() TranscodingTemplateAudioPtrOutput {
	return o
}

func (o TranscodingTemplateAudioPtrOutput) ToTranscodingTemplateAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateAudioPtrOutput {
	return o
}

func (o TranscodingTemplateAudioPtrOutput) Elem() TranscodingTemplateAudioOutput {
	return o.ApplyT(func(v *TranscodingTemplateAudio) TranscodingTemplateAudio {
		if v != nil {
			return *v
		}
		var ret TranscodingTemplateAudio
		return ret
	}).(TranscodingTemplateAudioOutput)
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateAudioPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateAudio) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of audio channels. Possible values are:
// + **1**: AUDIO_CHANNELS_1
// + **2**: AUDIO_CHANNELS_2
// + **6**: AUDIO_CHANNELS_5_1
func (o TranscodingTemplateAudioPtrOutput) Channels() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateAudio) *int {
		if v == nil {
			return nil
		}
		return &v.Channels
	}).(pulumi.IntPtrOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateAudioPtrOutput) Codec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateAudio) *int {
		if v == nil {
			return nil
		}
		return &v.Codec
	}).(pulumi.IntPtrOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateAudioPtrOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateAudio) *string {
		if v == nil {
			return nil
		}
		return v.OutputPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies the audio sampling rate. Possible values are:
// + **1**: AUDIO_SAMPLE_AUTO
// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
func (o TranscodingTemplateAudioPtrOutput) SampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateAudio) *int {
		if v == nil {
			return nil
		}
		return &v.SampleRate
	}).(pulumi.IntPtrOutput)
}

type TranscodingTemplateGroupAudio struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate *int `pulumi:"bitrate"`
	// Specifies the number of audio channels. Possible values are:
	// + **1**: AUDIO_CHANNELS_1
	// + **2**: AUDIO_CHANNELS_2
	// + **6**: AUDIO_CHANNELS_5_1
	Channels int `pulumi:"channels"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec int `pulumi:"codec"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy *string `pulumi:"outputPolicy"`
	// Specifies the audio sampling rate. Possible values are:
	// + **1**: AUDIO_SAMPLE_AUTO
	// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
	// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
	// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
	// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
	// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
	SampleRate int `pulumi:"sampleRate"`
}

// TranscodingTemplateGroupAudioInput is an input type that accepts TranscodingTemplateGroupAudioArgs and TranscodingTemplateGroupAudioOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupAudioInput` via:
//
//	TranscodingTemplateGroupAudioArgs{...}
type TranscodingTemplateGroupAudioInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupAudioOutput() TranscodingTemplateGroupAudioOutput
	ToTranscodingTemplateGroupAudioOutputWithContext(context.Context) TranscodingTemplateGroupAudioOutput
}

type TranscodingTemplateGroupAudioArgs struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate pulumi.IntPtrInput `pulumi:"bitrate"`
	// Specifies the number of audio channels. Possible values are:
	// + **1**: AUDIO_CHANNELS_1
	// + **2**: AUDIO_CHANNELS_2
	// + **6**: AUDIO_CHANNELS_5_1
	Channels pulumi.IntInput `pulumi:"channels"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec pulumi.IntInput `pulumi:"codec"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy pulumi.StringPtrInput `pulumi:"outputPolicy"`
	// Specifies the audio sampling rate. Possible values are:
	// + **1**: AUDIO_SAMPLE_AUTO
	// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
	// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
	// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
	// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
	// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
	SampleRate pulumi.IntInput `pulumi:"sampleRate"`
}

func (TranscodingTemplateGroupAudioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupAudio)(nil)).Elem()
}

func (i TranscodingTemplateGroupAudioArgs) ToTranscodingTemplateGroupAudioOutput() TranscodingTemplateGroupAudioOutput {
	return i.ToTranscodingTemplateGroupAudioOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupAudioArgs) ToTranscodingTemplateGroupAudioOutputWithContext(ctx context.Context) TranscodingTemplateGroupAudioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupAudioOutput)
}

func (i TranscodingTemplateGroupAudioArgs) ToTranscodingTemplateGroupAudioPtrOutput() TranscodingTemplateGroupAudioPtrOutput {
	return i.ToTranscodingTemplateGroupAudioPtrOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupAudioArgs) ToTranscodingTemplateGroupAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupAudioOutput).ToTranscodingTemplateGroupAudioPtrOutputWithContext(ctx)
}

// TranscodingTemplateGroupAudioPtrInput is an input type that accepts TranscodingTemplateGroupAudioArgs, TranscodingTemplateGroupAudioPtr and TranscodingTemplateGroupAudioPtrOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupAudioPtrInput` via:
//
//	        TranscodingTemplateGroupAudioArgs{...}
//
//	or:
//
//	        nil
type TranscodingTemplateGroupAudioPtrInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupAudioPtrOutput() TranscodingTemplateGroupAudioPtrOutput
	ToTranscodingTemplateGroupAudioPtrOutputWithContext(context.Context) TranscodingTemplateGroupAudioPtrOutput
}

type transcodingTemplateGroupAudioPtrType TranscodingTemplateGroupAudioArgs

func TranscodingTemplateGroupAudioPtr(v *TranscodingTemplateGroupAudioArgs) TranscodingTemplateGroupAudioPtrInput {
	return (*transcodingTemplateGroupAudioPtrType)(v)
}

func (*transcodingTemplateGroupAudioPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupAudio)(nil)).Elem()
}

func (i *transcodingTemplateGroupAudioPtrType) ToTranscodingTemplateGroupAudioPtrOutput() TranscodingTemplateGroupAudioPtrOutput {
	return i.ToTranscodingTemplateGroupAudioPtrOutputWithContext(context.Background())
}

func (i *transcodingTemplateGroupAudioPtrType) ToTranscodingTemplateGroupAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupAudioPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupAudioPtrOutput)
}

type TranscodingTemplateGroupAudioOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupAudioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupAudio)(nil)).Elem()
}

func (o TranscodingTemplateGroupAudioOutput) ToTranscodingTemplateGroupAudioOutput() TranscodingTemplateGroupAudioOutput {
	return o
}

func (o TranscodingTemplateGroupAudioOutput) ToTranscodingTemplateGroupAudioOutputWithContext(ctx context.Context) TranscodingTemplateGroupAudioOutput {
	return o
}

func (o TranscodingTemplateGroupAudioOutput) ToTranscodingTemplateGroupAudioPtrOutput() TranscodingTemplateGroupAudioPtrOutput {
	return o.ToTranscodingTemplateGroupAudioPtrOutputWithContext(context.Background())
}

func (o TranscodingTemplateGroupAudioOutput) ToTranscodingTemplateGroupAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupAudioPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TranscodingTemplateGroupAudio) *TranscodingTemplateGroupAudio {
		return &v
	}).(TranscodingTemplateGroupAudioPtrOutput)
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateGroupAudioOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupAudio) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

// Specifies the number of audio channels. Possible values are:
// + **1**: AUDIO_CHANNELS_1
// + **2**: AUDIO_CHANNELS_2
// + **6**: AUDIO_CHANNELS_5_1
func (o TranscodingTemplateGroupAudioOutput) Channels() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupAudio) int { return v.Channels }).(pulumi.IntOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateGroupAudioOutput) Codec() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupAudio) int { return v.Codec }).(pulumi.IntOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateGroupAudioOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupAudio) *string { return v.OutputPolicy }).(pulumi.StringPtrOutput)
}

// Specifies the audio sampling rate. Possible values are:
// + **1**: AUDIO_SAMPLE_AUTO
// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
func (o TranscodingTemplateGroupAudioOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupAudio) int { return v.SampleRate }).(pulumi.IntOutput)
}

type TranscodingTemplateGroupAudioPtrOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupAudioPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupAudio)(nil)).Elem()
}

func (o TranscodingTemplateGroupAudioPtrOutput) ToTranscodingTemplateGroupAudioPtrOutput() TranscodingTemplateGroupAudioPtrOutput {
	return o
}

func (o TranscodingTemplateGroupAudioPtrOutput) ToTranscodingTemplateGroupAudioPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupAudioPtrOutput {
	return o
}

func (o TranscodingTemplateGroupAudioPtrOutput) Elem() TranscodingTemplateGroupAudioOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupAudio) TranscodingTemplateGroupAudio {
		if v != nil {
			return *v
		}
		var ret TranscodingTemplateGroupAudio
		return ret
	}).(TranscodingTemplateGroupAudioOutput)
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateGroupAudioPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupAudio) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of audio channels. Possible values are:
// + **1**: AUDIO_CHANNELS_1
// + **2**: AUDIO_CHANNELS_2
// + **6**: AUDIO_CHANNELS_5_1
func (o TranscodingTemplateGroupAudioPtrOutput) Channels() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupAudio) *int {
		if v == nil {
			return nil
		}
		return &v.Channels
	}).(pulumi.IntPtrOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateGroupAudioPtrOutput) Codec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupAudio) *int {
		if v == nil {
			return nil
		}
		return &v.Codec
	}).(pulumi.IntPtrOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateGroupAudioPtrOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupAudio) *string {
		if v == nil {
			return nil
		}
		return v.OutputPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies the audio sampling rate. Possible values are:
// + **1**: AUDIO_SAMPLE_AUTO
// + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
// + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
// + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
// + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
// + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
func (o TranscodingTemplateGroupAudioPtrOutput) SampleRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupAudio) *int {
		if v == nil {
			return nil
		}
		return &v.SampleRate
	}).(pulumi.IntPtrOutput)
}

type TranscodingTemplateGroupVideo struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate *int `pulumi:"bitrate"`
	// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
	// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
	// is an adaptive value. The default value is 0.
	Height *int `pulumi:"height"`
	// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
	// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
	// is an adaptive value. The default value is 0.
	Width *int `pulumi:"width"`
}

// TranscodingTemplateGroupVideoInput is an input type that accepts TranscodingTemplateGroupVideoArgs and TranscodingTemplateGroupVideoOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupVideoInput` via:
//
//	TranscodingTemplateGroupVideoArgs{...}
type TranscodingTemplateGroupVideoInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupVideoOutput() TranscodingTemplateGroupVideoOutput
	ToTranscodingTemplateGroupVideoOutputWithContext(context.Context) TranscodingTemplateGroupVideoOutput
}

type TranscodingTemplateGroupVideoArgs struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate pulumi.IntPtrInput `pulumi:"bitrate"`
	// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
	// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
	// is an adaptive value. The default value is 0.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
	// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
	// is an adaptive value. The default value is 0.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (TranscodingTemplateGroupVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupVideo)(nil)).Elem()
}

func (i TranscodingTemplateGroupVideoArgs) ToTranscodingTemplateGroupVideoOutput() TranscodingTemplateGroupVideoOutput {
	return i.ToTranscodingTemplateGroupVideoOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupVideoArgs) ToTranscodingTemplateGroupVideoOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupVideoOutput)
}

// TranscodingTemplateGroupVideoArrayInput is an input type that accepts TranscodingTemplateGroupVideoArray and TranscodingTemplateGroupVideoArrayOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupVideoArrayInput` via:
//
//	TranscodingTemplateGroupVideoArray{ TranscodingTemplateGroupVideoArgs{...} }
type TranscodingTemplateGroupVideoArrayInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupVideoArrayOutput() TranscodingTemplateGroupVideoArrayOutput
	ToTranscodingTemplateGroupVideoArrayOutputWithContext(context.Context) TranscodingTemplateGroupVideoArrayOutput
}

type TranscodingTemplateGroupVideoArray []TranscodingTemplateGroupVideoInput

func (TranscodingTemplateGroupVideoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TranscodingTemplateGroupVideo)(nil)).Elem()
}

func (i TranscodingTemplateGroupVideoArray) ToTranscodingTemplateGroupVideoArrayOutput() TranscodingTemplateGroupVideoArrayOutput {
	return i.ToTranscodingTemplateGroupVideoArrayOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupVideoArray) ToTranscodingTemplateGroupVideoArrayOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupVideoArrayOutput)
}

type TranscodingTemplateGroupVideoOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupVideo)(nil)).Elem()
}

func (o TranscodingTemplateGroupVideoOutput) ToTranscodingTemplateGroupVideoOutput() TranscodingTemplateGroupVideoOutput {
	return o
}

func (o TranscodingTemplateGroupVideoOutput) ToTranscodingTemplateGroupVideoOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoOutput {
	return o
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateGroupVideoOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideo) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
// is an adaptive value. The default value is 0.
func (o TranscodingTemplateGroupVideoOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideo) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
// is an adaptive value. The default value is 0.
func (o TranscodingTemplateGroupVideoOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideo) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type TranscodingTemplateGroupVideoArrayOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupVideoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TranscodingTemplateGroupVideo)(nil)).Elem()
}

func (o TranscodingTemplateGroupVideoArrayOutput) ToTranscodingTemplateGroupVideoArrayOutput() TranscodingTemplateGroupVideoArrayOutput {
	return o
}

func (o TranscodingTemplateGroupVideoArrayOutput) ToTranscodingTemplateGroupVideoArrayOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoArrayOutput {
	return o
}

func (o TranscodingTemplateGroupVideoArrayOutput) Index(i pulumi.IntInput) TranscodingTemplateGroupVideoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TranscodingTemplateGroupVideo {
		return vs[0].([]TranscodingTemplateGroupVideo)[vs[1].(int)]
	}).(TranscodingTemplateGroupVideoOutput)
}

type TranscodingTemplateGroupVideoCommon struct {
	// Specifies whether to enable black bar removal. Possible values are:
	// + **0**: Disable black bar removal.
	// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
	// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
	BlackBarRemoval *int `pulumi:"blackBarRemoval"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec *int `pulumi:"codec"`
	// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
	// The default value is 0. The unit is FPS.
	Fps *int `pulumi:"fps"`
	// Specifies the encoding level. Possible values are:
	// + **1**: VIDEO_LEVEL_1_0
	// + **2**: VIDEO_LEVEL_1_1
	// + **3**: VIDEO_LEVEL_1_2
	// + **4**: VIDEO_LEVEL_1_3
	// + **5**: VIDEO_LEVEL_2_0
	// + **6**: VIDEO_LEVEL_2_1
	// + **7**: VIDEO_LEVEL_2_2
	// + **8**: VIDEO_LEVEL_3_0
	// + **9**: VIDEO_LEVEL_3_1
	// + **10**: VIDEO_LEVEL_3_2
	// + **11**: VIDEO_LEVEL_4_0
	// + **12**: VIDEO_LEVEL_4_1
	// + **13**: VIDEO_LEVEL_4_2
	// + **14**: VIDEO_LEVEL_5_0
	// + **15**: VIDEO_LEVEL_5_1
	Level *int `pulumi:"level"`
	// Specifies the maximum number of B-frames.
	// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
	MaxConsecutiveBframes *int `pulumi:"maxConsecutiveBframes"`
	// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
	// The default value is 5. The unit is second.
	MaxIframesInterval *int `pulumi:"maxIframesInterval"`
	MaxReferenceFrames *int `pulumi:"maxReferenceFrames"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy *string `pulumi:"outputPolicy"`
	// Specifies the encoding profile. The recommended value is 3. Possible values are:
	// + **1**: VIDEO_PROFILE_H264_BASE
	// + **2**: VIDEO_PROFILE_H264_MAIN
	// + **3**: VIDEO_PROFILE_H264_HIGH
	// + **4**: VIDEO_PROFILE_H265_MAIN
	Profile *int `pulumi:"profile"`
	// Specifies the encoding quality. A larger value indicates higher encoding quality and
	// longer transcoding time. Possible values are:
	// + **1**: VIDEO_PRESET_HSPEED2
	// + **2**: VIDEO_PRESET_HSPEED
	// + **3**: VIDEO_PRESET_NORMAL
	Quality *int `pulumi:"quality"`
}

// TranscodingTemplateGroupVideoCommonInput is an input type that accepts TranscodingTemplateGroupVideoCommonArgs and TranscodingTemplateGroupVideoCommonOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupVideoCommonInput` via:
//
//	TranscodingTemplateGroupVideoCommonArgs{...}
type TranscodingTemplateGroupVideoCommonInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupVideoCommonOutput() TranscodingTemplateGroupVideoCommonOutput
	ToTranscodingTemplateGroupVideoCommonOutputWithContext(context.Context) TranscodingTemplateGroupVideoCommonOutput
}

type TranscodingTemplateGroupVideoCommonArgs struct {
	// Specifies whether to enable black bar removal. Possible values are:
	// + **0**: Disable black bar removal.
	// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
	// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
	BlackBarRemoval pulumi.IntPtrInput `pulumi:"blackBarRemoval"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec pulumi.IntPtrInput `pulumi:"codec"`
	// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
	// The default value is 0. The unit is FPS.
	Fps pulumi.IntPtrInput `pulumi:"fps"`
	// Specifies the encoding level. Possible values are:
	// + **1**: VIDEO_LEVEL_1_0
	// + **2**: VIDEO_LEVEL_1_1
	// + **3**: VIDEO_LEVEL_1_2
	// + **4**: VIDEO_LEVEL_1_3
	// + **5**: VIDEO_LEVEL_2_0
	// + **6**: VIDEO_LEVEL_2_1
	// + **7**: VIDEO_LEVEL_2_2
	// + **8**: VIDEO_LEVEL_3_0
	// + **9**: VIDEO_LEVEL_3_1
	// + **10**: VIDEO_LEVEL_3_2
	// + **11**: VIDEO_LEVEL_4_0
	// + **12**: VIDEO_LEVEL_4_1
	// + **13**: VIDEO_LEVEL_4_2
	// + **14**: VIDEO_LEVEL_5_0
	// + **15**: VIDEO_LEVEL_5_1
	Level pulumi.IntPtrInput `pulumi:"level"`
	// Specifies the maximum number of B-frames.
	// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
	MaxConsecutiveBframes pulumi.IntPtrInput `pulumi:"maxConsecutiveBframes"`
	// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
	// The default value is 5. The unit is second.
	MaxIframesInterval pulumi.IntPtrInput `pulumi:"maxIframesInterval"`
	MaxReferenceFrames pulumi.IntPtrInput `pulumi:"maxReferenceFrames"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy pulumi.StringPtrInput `pulumi:"outputPolicy"`
	// Specifies the encoding profile. The recommended value is 3. Possible values are:
	// + **1**: VIDEO_PROFILE_H264_BASE
	// + **2**: VIDEO_PROFILE_H264_MAIN
	// + **3**: VIDEO_PROFILE_H264_HIGH
	// + **4**: VIDEO_PROFILE_H265_MAIN
	Profile pulumi.IntPtrInput `pulumi:"profile"`
	// Specifies the encoding quality. A larger value indicates higher encoding quality and
	// longer transcoding time. Possible values are:
	// + **1**: VIDEO_PRESET_HSPEED2
	// + **2**: VIDEO_PRESET_HSPEED
	// + **3**: VIDEO_PRESET_NORMAL
	Quality pulumi.IntPtrInput `pulumi:"quality"`
}

func (TranscodingTemplateGroupVideoCommonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupVideoCommon)(nil)).Elem()
}

func (i TranscodingTemplateGroupVideoCommonArgs) ToTranscodingTemplateGroupVideoCommonOutput() TranscodingTemplateGroupVideoCommonOutput {
	return i.ToTranscodingTemplateGroupVideoCommonOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupVideoCommonArgs) ToTranscodingTemplateGroupVideoCommonOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoCommonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupVideoCommonOutput)
}

func (i TranscodingTemplateGroupVideoCommonArgs) ToTranscodingTemplateGroupVideoCommonPtrOutput() TranscodingTemplateGroupVideoCommonPtrOutput {
	return i.ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(context.Background())
}

func (i TranscodingTemplateGroupVideoCommonArgs) ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoCommonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupVideoCommonOutput).ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(ctx)
}

// TranscodingTemplateGroupVideoCommonPtrInput is an input type that accepts TranscodingTemplateGroupVideoCommonArgs, TranscodingTemplateGroupVideoCommonPtr and TranscodingTemplateGroupVideoCommonPtrOutput values.
// You can construct a concrete instance of `TranscodingTemplateGroupVideoCommonPtrInput` via:
//
//	        TranscodingTemplateGroupVideoCommonArgs{...}
//
//	or:
//
//	        nil
type TranscodingTemplateGroupVideoCommonPtrInput interface {
	pulumi.Input

	ToTranscodingTemplateGroupVideoCommonPtrOutput() TranscodingTemplateGroupVideoCommonPtrOutput
	ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(context.Context) TranscodingTemplateGroupVideoCommonPtrOutput
}

type transcodingTemplateGroupVideoCommonPtrType TranscodingTemplateGroupVideoCommonArgs

func TranscodingTemplateGroupVideoCommonPtr(v *TranscodingTemplateGroupVideoCommonArgs) TranscodingTemplateGroupVideoCommonPtrInput {
	return (*transcodingTemplateGroupVideoCommonPtrType)(v)
}

func (*transcodingTemplateGroupVideoCommonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupVideoCommon)(nil)).Elem()
}

func (i *transcodingTemplateGroupVideoCommonPtrType) ToTranscodingTemplateGroupVideoCommonPtrOutput() TranscodingTemplateGroupVideoCommonPtrOutput {
	return i.ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(context.Background())
}

func (i *transcodingTemplateGroupVideoCommonPtrType) ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoCommonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateGroupVideoCommonPtrOutput)
}

type TranscodingTemplateGroupVideoCommonOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupVideoCommonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateGroupVideoCommon)(nil)).Elem()
}

func (o TranscodingTemplateGroupVideoCommonOutput) ToTranscodingTemplateGroupVideoCommonOutput() TranscodingTemplateGroupVideoCommonOutput {
	return o
}

func (o TranscodingTemplateGroupVideoCommonOutput) ToTranscodingTemplateGroupVideoCommonOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoCommonOutput {
	return o
}

func (o TranscodingTemplateGroupVideoCommonOutput) ToTranscodingTemplateGroupVideoCommonPtrOutput() TranscodingTemplateGroupVideoCommonPtrOutput {
	return o.ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(context.Background())
}

func (o TranscodingTemplateGroupVideoCommonOutput) ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoCommonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TranscodingTemplateGroupVideoCommon) *TranscodingTemplateGroupVideoCommon {
		return &v
	}).(TranscodingTemplateGroupVideoCommonPtrOutput)
}

// Specifies whether to enable black bar removal. Possible values are:
// + **0**: Disable black bar removal.
// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
func (o TranscodingTemplateGroupVideoCommonOutput) BlackBarRemoval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.BlackBarRemoval }).(pulumi.IntPtrOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateGroupVideoCommonOutput) Codec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.Codec }).(pulumi.IntPtrOutput)
}

// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
// The default value is 0. The unit is FPS.
func (o TranscodingTemplateGroupVideoCommonOutput) Fps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.Fps }).(pulumi.IntPtrOutput)
}

// Specifies the encoding level. Possible values are:
// + **1**: VIDEO_LEVEL_1_0
// + **2**: VIDEO_LEVEL_1_1
// + **3**: VIDEO_LEVEL_1_2
// + **4**: VIDEO_LEVEL_1_3
// + **5**: VIDEO_LEVEL_2_0
// + **6**: VIDEO_LEVEL_2_1
// + **7**: VIDEO_LEVEL_2_2
// + **8**: VIDEO_LEVEL_3_0
// + **9**: VIDEO_LEVEL_3_1
// + **10**: VIDEO_LEVEL_3_2
// + **11**: VIDEO_LEVEL_4_0
// + **12**: VIDEO_LEVEL_4_1
// + **13**: VIDEO_LEVEL_4_2
// + **14**: VIDEO_LEVEL_5_0
// + **15**: VIDEO_LEVEL_5_1
func (o TranscodingTemplateGroupVideoCommonOutput) Level() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.Level }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of B-frames.
// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
func (o TranscodingTemplateGroupVideoCommonOutput) MaxConsecutiveBframes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.MaxConsecutiveBframes }).(pulumi.IntPtrOutput)
}

// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
// The default value is 5. The unit is second.
func (o TranscodingTemplateGroupVideoCommonOutput) MaxIframesInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.MaxIframesInterval }).(pulumi.IntPtrOutput)
}

func (o TranscodingTemplateGroupVideoCommonOutput) MaxReferenceFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.MaxReferenceFrames }).(pulumi.IntPtrOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateGroupVideoCommonOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *string { return v.OutputPolicy }).(pulumi.StringPtrOutput)
}

// Specifies the encoding profile. The recommended value is 3. Possible values are:
// + **1**: VIDEO_PROFILE_H264_BASE
// + **2**: VIDEO_PROFILE_H264_MAIN
// + **3**: VIDEO_PROFILE_H264_HIGH
// + **4**: VIDEO_PROFILE_H265_MAIN
func (o TranscodingTemplateGroupVideoCommonOutput) Profile() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.Profile }).(pulumi.IntPtrOutput)
}

// Specifies the encoding quality. A larger value indicates higher encoding quality and
// longer transcoding time. Possible values are:
// + **1**: VIDEO_PRESET_HSPEED2
// + **2**: VIDEO_PRESET_HSPEED
// + **3**: VIDEO_PRESET_NORMAL
func (o TranscodingTemplateGroupVideoCommonOutput) Quality() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateGroupVideoCommon) *int { return v.Quality }).(pulumi.IntPtrOutput)
}

type TranscodingTemplateGroupVideoCommonPtrOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateGroupVideoCommonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateGroupVideoCommon)(nil)).Elem()
}

func (o TranscodingTemplateGroupVideoCommonPtrOutput) ToTranscodingTemplateGroupVideoCommonPtrOutput() TranscodingTemplateGroupVideoCommonPtrOutput {
	return o
}

func (o TranscodingTemplateGroupVideoCommonPtrOutput) ToTranscodingTemplateGroupVideoCommonPtrOutputWithContext(ctx context.Context) TranscodingTemplateGroupVideoCommonPtrOutput {
	return o
}

func (o TranscodingTemplateGroupVideoCommonPtrOutput) Elem() TranscodingTemplateGroupVideoCommonOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) TranscodingTemplateGroupVideoCommon {
		if v != nil {
			return *v
		}
		var ret TranscodingTemplateGroupVideoCommon
		return ret
	}).(TranscodingTemplateGroupVideoCommonOutput)
}

// Specifies whether to enable black bar removal. Possible values are:
// + **0**: Disable black bar removal.
// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
func (o TranscodingTemplateGroupVideoCommonPtrOutput) BlackBarRemoval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.BlackBarRemoval
	}).(pulumi.IntPtrOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateGroupVideoCommonPtrOutput) Codec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.Codec
	}).(pulumi.IntPtrOutput)
}

// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
// The default value is 0. The unit is FPS.
func (o TranscodingTemplateGroupVideoCommonPtrOutput) Fps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.Fps
	}).(pulumi.IntPtrOutput)
}

// Specifies the encoding level. Possible values are:
// + **1**: VIDEO_LEVEL_1_0
// + **2**: VIDEO_LEVEL_1_1
// + **3**: VIDEO_LEVEL_1_2
// + **4**: VIDEO_LEVEL_1_3
// + **5**: VIDEO_LEVEL_2_0
// + **6**: VIDEO_LEVEL_2_1
// + **7**: VIDEO_LEVEL_2_2
// + **8**: VIDEO_LEVEL_3_0
// + **9**: VIDEO_LEVEL_3_1
// + **10**: VIDEO_LEVEL_3_2
// + **11**: VIDEO_LEVEL_4_0
// + **12**: VIDEO_LEVEL_4_1
// + **13**: VIDEO_LEVEL_4_2
// + **14**: VIDEO_LEVEL_5_0
// + **15**: VIDEO_LEVEL_5_1
func (o TranscodingTemplateGroupVideoCommonPtrOutput) Level() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of B-frames.
// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
func (o TranscodingTemplateGroupVideoCommonPtrOutput) MaxConsecutiveBframes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.MaxConsecutiveBframes
	}).(pulumi.IntPtrOutput)
}

// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
// The default value is 5. The unit is second.
func (o TranscodingTemplateGroupVideoCommonPtrOutput) MaxIframesInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.MaxIframesInterval
	}).(pulumi.IntPtrOutput)
}

func (o TranscodingTemplateGroupVideoCommonPtrOutput) MaxReferenceFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.MaxReferenceFrames
	}).(pulumi.IntPtrOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateGroupVideoCommonPtrOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *string {
		if v == nil {
			return nil
		}
		return v.OutputPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies the encoding profile. The recommended value is 3. Possible values are:
// + **1**: VIDEO_PROFILE_H264_BASE
// + **2**: VIDEO_PROFILE_H264_MAIN
// + **3**: VIDEO_PROFILE_H264_HIGH
// + **4**: VIDEO_PROFILE_H265_MAIN
func (o TranscodingTemplateGroupVideoCommonPtrOutput) Profile() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.IntPtrOutput)
}

// Specifies the encoding quality. A larger value indicates higher encoding quality and
// longer transcoding time. Possible values are:
// + **1**: VIDEO_PRESET_HSPEED2
// + **2**: VIDEO_PRESET_HSPEED
// + **3**: VIDEO_PRESET_NORMAL
func (o TranscodingTemplateGroupVideoCommonPtrOutput) Quality() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateGroupVideoCommon) *int {
		if v == nil {
			return nil
		}
		return v.Quality
	}).(pulumi.IntPtrOutput)
}

type TranscodingTemplateVideo struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate *int `pulumi:"bitrate"`
	// Specifies whether to enable black bar removal. Possible values are:
	// + **0**: Disable black bar removal.
	// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
	// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
	BlackBarRemoval *int `pulumi:"blackBarRemoval"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec *int `pulumi:"codec"`
	// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
	// The default value is 0. The unit is FPS.
	Fps *int `pulumi:"fps"`
	// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
	// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
	// is an adaptive value. The default value is 0.
	Height *int `pulumi:"height"`
	// Specifies the encoding level. Possible values are:
	// + **1**: VIDEO_LEVEL_1_0
	// + **2**: VIDEO_LEVEL_1_1
	// + **3**: VIDEO_LEVEL_1_2
	// + **4**: VIDEO_LEVEL_1_3
	// + **5**: VIDEO_LEVEL_2_0
	// + **6**: VIDEO_LEVEL_2_1
	// + **7**: VIDEO_LEVEL_2_2
	// + **8**: VIDEO_LEVEL_3_0
	// + **9**: VIDEO_LEVEL_3_1
	// + **10**: VIDEO_LEVEL_3_2
	// + **11**: VIDEO_LEVEL_4_0
	// + **12**: VIDEO_LEVEL_4_1
	// + **13**: VIDEO_LEVEL_4_2
	// + **14**: VIDEO_LEVEL_5_0
	// + **15**: VIDEO_LEVEL_5_1
	Level *int `pulumi:"level"`
	// Specifies the maximum number of B-frames.
	// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
	MaxConsecutiveBframes *int `pulumi:"maxConsecutiveBframes"`
	// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
	// The default value is 5. The unit is second.
	MaxIframesInterval *int `pulumi:"maxIframesInterval"`
	MaxReferenceFrames *int `pulumi:"maxReferenceFrames"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy *string `pulumi:"outputPolicy"`
	// Specifies the encoding profile. The recommended value is 3. Possible values are:
	// + **1**: VIDEO_PROFILE_H264_BASE
	// + **2**: VIDEO_PROFILE_H264_MAIN
	// + **3**: VIDEO_PROFILE_H264_HIGH
	// + **4**: VIDEO_PROFILE_H265_MAIN
	Profile *int `pulumi:"profile"`
	// Specifies the encoding quality. A larger value indicates higher encoding quality and
	// longer transcoding time. Possible values are:
	// + **1**: VIDEO_PRESET_HSPEED2
	// + **2**: VIDEO_PRESET_HSPEED
	// + **3**: VIDEO_PRESET_NORMAL
	Quality *int `pulumi:"quality"`
	// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
	// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
	// is an adaptive value. The default value is 0.
	Width *int `pulumi:"width"`
}

// TranscodingTemplateVideoInput is an input type that accepts TranscodingTemplateVideoArgs and TranscodingTemplateVideoOutput values.
// You can construct a concrete instance of `TranscodingTemplateVideoInput` via:
//
//	TranscodingTemplateVideoArgs{...}
type TranscodingTemplateVideoInput interface {
	pulumi.Input

	ToTranscodingTemplateVideoOutput() TranscodingTemplateVideoOutput
	ToTranscodingTemplateVideoOutputWithContext(context.Context) TranscodingTemplateVideoOutput
}

type TranscodingTemplateVideoArgs struct {
	// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
	// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
	// adaptive value.
	Bitrate pulumi.IntPtrInput `pulumi:"bitrate"`
	// Specifies whether to enable black bar removal. Possible values are:
	// + **0**: Disable black bar removal.
	// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
	// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
	BlackBarRemoval pulumi.IntPtrInput `pulumi:"blackBarRemoval"`
	// Specifies the video codec. Possible values are:
	// + **1**: H.264
	// + **2**: H.265
	Codec pulumi.IntPtrInput `pulumi:"codec"`
	// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
	// The default value is 0. The unit is FPS.
	Fps pulumi.IntPtrInput `pulumi:"fps"`
	// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
	// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
	// is an adaptive value. The default value is 0.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// Specifies the encoding level. Possible values are:
	// + **1**: VIDEO_LEVEL_1_0
	// + **2**: VIDEO_LEVEL_1_1
	// + **3**: VIDEO_LEVEL_1_2
	// + **4**: VIDEO_LEVEL_1_3
	// + **5**: VIDEO_LEVEL_2_0
	// + **6**: VIDEO_LEVEL_2_1
	// + **7**: VIDEO_LEVEL_2_2
	// + **8**: VIDEO_LEVEL_3_0
	// + **9**: VIDEO_LEVEL_3_1
	// + **10**: VIDEO_LEVEL_3_2
	// + **11**: VIDEO_LEVEL_4_0
	// + **12**: VIDEO_LEVEL_4_1
	// + **13**: VIDEO_LEVEL_4_2
	// + **14**: VIDEO_LEVEL_5_0
	// + **15**: VIDEO_LEVEL_5_1
	Level pulumi.IntPtrInput `pulumi:"level"`
	// Specifies the maximum number of B-frames.
	// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
	MaxConsecutiveBframes pulumi.IntPtrInput `pulumi:"maxConsecutiveBframes"`
	// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
	// The default value is 5. The unit is second.
	MaxIframesInterval pulumi.IntPtrInput `pulumi:"maxIframesInterval"`
	MaxReferenceFrames pulumi.IntPtrInput `pulumi:"maxReferenceFrames"`
	// Specifies the output policy. Possible values are **discard** and **transcode**.
	// The default value is transcode.
	OutputPolicy pulumi.StringPtrInput `pulumi:"outputPolicy"`
	// Specifies the encoding profile. The recommended value is 3. Possible values are:
	// + **1**: VIDEO_PROFILE_H264_BASE
	// + **2**: VIDEO_PROFILE_H264_MAIN
	// + **3**: VIDEO_PROFILE_H264_HIGH
	// + **4**: VIDEO_PROFILE_H265_MAIN
	Profile pulumi.IntPtrInput `pulumi:"profile"`
	// Specifies the encoding quality. A larger value indicates higher encoding quality and
	// longer transcoding time. Possible values are:
	// + **1**: VIDEO_PRESET_HSPEED2
	// + **2**: VIDEO_PRESET_HSPEED
	// + **3**: VIDEO_PRESET_NORMAL
	Quality pulumi.IntPtrInput `pulumi:"quality"`
	// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
	// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
	// is an adaptive value. The default value is 0.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (TranscodingTemplateVideoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateVideo)(nil)).Elem()
}

func (i TranscodingTemplateVideoArgs) ToTranscodingTemplateVideoOutput() TranscodingTemplateVideoOutput {
	return i.ToTranscodingTemplateVideoOutputWithContext(context.Background())
}

func (i TranscodingTemplateVideoArgs) ToTranscodingTemplateVideoOutputWithContext(ctx context.Context) TranscodingTemplateVideoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateVideoOutput)
}

func (i TranscodingTemplateVideoArgs) ToTranscodingTemplateVideoPtrOutput() TranscodingTemplateVideoPtrOutput {
	return i.ToTranscodingTemplateVideoPtrOutputWithContext(context.Background())
}

func (i TranscodingTemplateVideoArgs) ToTranscodingTemplateVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateVideoOutput).ToTranscodingTemplateVideoPtrOutputWithContext(ctx)
}

// TranscodingTemplateVideoPtrInput is an input type that accepts TranscodingTemplateVideoArgs, TranscodingTemplateVideoPtr and TranscodingTemplateVideoPtrOutput values.
// You can construct a concrete instance of `TranscodingTemplateVideoPtrInput` via:
//
//	        TranscodingTemplateVideoArgs{...}
//
//	or:
//
//	        nil
type TranscodingTemplateVideoPtrInput interface {
	pulumi.Input

	ToTranscodingTemplateVideoPtrOutput() TranscodingTemplateVideoPtrOutput
	ToTranscodingTemplateVideoPtrOutputWithContext(context.Context) TranscodingTemplateVideoPtrOutput
}

type transcodingTemplateVideoPtrType TranscodingTemplateVideoArgs

func TranscodingTemplateVideoPtr(v *TranscodingTemplateVideoArgs) TranscodingTemplateVideoPtrInput {
	return (*transcodingTemplateVideoPtrType)(v)
}

func (*transcodingTemplateVideoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateVideo)(nil)).Elem()
}

func (i *transcodingTemplateVideoPtrType) ToTranscodingTemplateVideoPtrOutput() TranscodingTemplateVideoPtrOutput {
	return i.ToTranscodingTemplateVideoPtrOutputWithContext(context.Background())
}

func (i *transcodingTemplateVideoPtrType) ToTranscodingTemplateVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateVideoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscodingTemplateVideoPtrOutput)
}

type TranscodingTemplateVideoOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateVideoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TranscodingTemplateVideo)(nil)).Elem()
}

func (o TranscodingTemplateVideoOutput) ToTranscodingTemplateVideoOutput() TranscodingTemplateVideoOutput {
	return o
}

func (o TranscodingTemplateVideoOutput) ToTranscodingTemplateVideoOutputWithContext(ctx context.Context) TranscodingTemplateVideoOutput {
	return o
}

func (o TranscodingTemplateVideoOutput) ToTranscodingTemplateVideoPtrOutput() TranscodingTemplateVideoPtrOutput {
	return o.ToTranscodingTemplateVideoPtrOutputWithContext(context.Background())
}

func (o TranscodingTemplateVideoOutput) ToTranscodingTemplateVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateVideoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TranscodingTemplateVideo) *TranscodingTemplateVideo {
		return &v
	}).(TranscodingTemplateVideoPtrOutput)
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateVideoOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Bitrate }).(pulumi.IntPtrOutput)
}

// Specifies whether to enable black bar removal. Possible values are:
// + **0**: Disable black bar removal.
// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
func (o TranscodingTemplateVideoOutput) BlackBarRemoval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.BlackBarRemoval }).(pulumi.IntPtrOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateVideoOutput) Codec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Codec }).(pulumi.IntPtrOutput)
}

// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
// The default value is 0. The unit is FPS.
func (o TranscodingTemplateVideoOutput) Fps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Fps }).(pulumi.IntPtrOutput)
}

// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
// is an adaptive value. The default value is 0.
func (o TranscodingTemplateVideoOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// Specifies the encoding level. Possible values are:
// + **1**: VIDEO_LEVEL_1_0
// + **2**: VIDEO_LEVEL_1_1
// + **3**: VIDEO_LEVEL_1_2
// + **4**: VIDEO_LEVEL_1_3
// + **5**: VIDEO_LEVEL_2_0
// + **6**: VIDEO_LEVEL_2_1
// + **7**: VIDEO_LEVEL_2_2
// + **8**: VIDEO_LEVEL_3_0
// + **9**: VIDEO_LEVEL_3_1
// + **10**: VIDEO_LEVEL_3_2
// + **11**: VIDEO_LEVEL_4_0
// + **12**: VIDEO_LEVEL_4_1
// + **13**: VIDEO_LEVEL_4_2
// + **14**: VIDEO_LEVEL_5_0
// + **15**: VIDEO_LEVEL_5_1
func (o TranscodingTemplateVideoOutput) Level() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Level }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of B-frames.
// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
func (o TranscodingTemplateVideoOutput) MaxConsecutiveBframes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.MaxConsecutiveBframes }).(pulumi.IntPtrOutput)
}

// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
// The default value is 5. The unit is second.
func (o TranscodingTemplateVideoOutput) MaxIframesInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.MaxIframesInterval }).(pulumi.IntPtrOutput)
}

func (o TranscodingTemplateVideoOutput) MaxReferenceFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.MaxReferenceFrames }).(pulumi.IntPtrOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateVideoOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *string { return v.OutputPolicy }).(pulumi.StringPtrOutput)
}

// Specifies the encoding profile. The recommended value is 3. Possible values are:
// + **1**: VIDEO_PROFILE_H264_BASE
// + **2**: VIDEO_PROFILE_H264_MAIN
// + **3**: VIDEO_PROFILE_H264_HIGH
// + **4**: VIDEO_PROFILE_H265_MAIN
func (o TranscodingTemplateVideoOutput) Profile() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Profile }).(pulumi.IntPtrOutput)
}

// Specifies the encoding quality. A larger value indicates higher encoding quality and
// longer transcoding time. Possible values are:
// + **1**: VIDEO_PRESET_HSPEED2
// + **2**: VIDEO_PRESET_HSPEED
// + **3**: VIDEO_PRESET_NORMAL
func (o TranscodingTemplateVideoOutput) Quality() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Quality }).(pulumi.IntPtrOutput)
}

// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
// is an adaptive value. The default value is 0.
func (o TranscodingTemplateVideoOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TranscodingTemplateVideo) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type TranscodingTemplateVideoPtrOutput struct{ *pulumi.OutputState }

func (TranscodingTemplateVideoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscodingTemplateVideo)(nil)).Elem()
}

func (o TranscodingTemplateVideoPtrOutput) ToTranscodingTemplateVideoPtrOutput() TranscodingTemplateVideoPtrOutput {
	return o
}

func (o TranscodingTemplateVideoPtrOutput) ToTranscodingTemplateVideoPtrOutputWithContext(ctx context.Context) TranscodingTemplateVideoPtrOutput {
	return o
}

func (o TranscodingTemplateVideoPtrOutput) Elem() TranscodingTemplateVideoOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) TranscodingTemplateVideo {
		if v != nil {
			return *v
		}
		var ret TranscodingTemplateVideo
		return ret
	}).(TranscodingTemplateVideoOutput)
}

// Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
// 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
// adaptive value.
func (o TranscodingTemplateVideoPtrOutput) Bitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Bitrate
	}).(pulumi.IntPtrOutput)
}

// Specifies whether to enable black bar removal. Possible values are:
// + **0**: Disable black bar removal.
// + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
// + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
func (o TranscodingTemplateVideoPtrOutput) BlackBarRemoval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.BlackBarRemoval
	}).(pulumi.IntPtrOutput)
}

// Specifies the video codec. Possible values are:
// + **1**: H.264
// + **2**: H.265
func (o TranscodingTemplateVideoPtrOutput) Codec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Codec
	}).(pulumi.IntPtrOutput)
}

// Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
// The default value is 0. The unit is FPS.
func (o TranscodingTemplateVideoPtrOutput) Fps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Fps
	}).(pulumi.IntPtrOutput)
}

// Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
// and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
// is an adaptive value. The default value is 0.
func (o TranscodingTemplateVideoPtrOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Height
	}).(pulumi.IntPtrOutput)
}

// Specifies the encoding level. Possible values are:
// + **1**: VIDEO_LEVEL_1_0
// + **2**: VIDEO_LEVEL_1_1
// + **3**: VIDEO_LEVEL_1_2
// + **4**: VIDEO_LEVEL_1_3
// + **5**: VIDEO_LEVEL_2_0
// + **6**: VIDEO_LEVEL_2_1
// + **7**: VIDEO_LEVEL_2_2
// + **8**: VIDEO_LEVEL_3_0
// + **9**: VIDEO_LEVEL_3_1
// + **10**: VIDEO_LEVEL_3_2
// + **11**: VIDEO_LEVEL_4_0
// + **12**: VIDEO_LEVEL_4_1
// + **13**: VIDEO_LEVEL_4_2
// + **14**: VIDEO_LEVEL_5_0
// + **15**: VIDEO_LEVEL_5_1
func (o TranscodingTemplateVideoPtrOutput) Level() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of B-frames.
// The vaule range is  0 to 7, and the default value is 4. The unit is frame.
func (o TranscodingTemplateVideoPtrOutput) MaxConsecutiveBframes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.MaxConsecutiveBframes
	}).(pulumi.IntPtrOutput)
}

// Specifies the mximum I-frame interval. The value ranges from 2 to 10.
// The default value is 5. The unit is second.
func (o TranscodingTemplateVideoPtrOutput) MaxIframesInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.MaxIframesInterval
	}).(pulumi.IntPtrOutput)
}

func (o TranscodingTemplateVideoPtrOutput) MaxReferenceFrames() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.MaxReferenceFrames
	}).(pulumi.IntPtrOutput)
}

// Specifies the output policy. Possible values are **discard** and **transcode**.
// The default value is transcode.
func (o TranscodingTemplateVideoPtrOutput) OutputPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *string {
		if v == nil {
			return nil
		}
		return v.OutputPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies the encoding profile. The recommended value is 3. Possible values are:
// + **1**: VIDEO_PROFILE_H264_BASE
// + **2**: VIDEO_PROFILE_H264_MAIN
// + **3**: VIDEO_PROFILE_H264_HIGH
// + **4**: VIDEO_PROFILE_H265_MAIN
func (o TranscodingTemplateVideoPtrOutput) Profile() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.IntPtrOutput)
}

// Specifies the encoding quality. A larger value indicates higher encoding quality and
// longer transcoding time. Possible values are:
// + **1**: VIDEO_PRESET_HSPEED2
// + **2**: VIDEO_PRESET_HSPEED
// + **3**: VIDEO_PRESET_NORMAL
func (o TranscodingTemplateVideoPtrOutput) Quality() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Quality
	}).(pulumi.IntPtrOutput)
}

// Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
// and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
// is an adaptive value. The default value is 0.
func (o TranscodingTemplateVideoPtrOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TranscodingTemplateVideo) *int {
		if v == nil {
			return nil
		}
		return v.Width
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateAudioInput)(nil)).Elem(), TranscodingTemplateAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateAudioPtrInput)(nil)).Elem(), TranscodingTemplateAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupAudioInput)(nil)).Elem(), TranscodingTemplateGroupAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupAudioPtrInput)(nil)).Elem(), TranscodingTemplateGroupAudioArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupVideoInput)(nil)).Elem(), TranscodingTemplateGroupVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupVideoArrayInput)(nil)).Elem(), TranscodingTemplateGroupVideoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupVideoCommonInput)(nil)).Elem(), TranscodingTemplateGroupVideoCommonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateGroupVideoCommonPtrInput)(nil)).Elem(), TranscodingTemplateGroupVideoCommonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateVideoInput)(nil)).Elem(), TranscodingTemplateVideoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TranscodingTemplateVideoPtrInput)(nil)).Elem(), TranscodingTemplateVideoArgs{})
	pulumi.RegisterOutputType(TranscodingTemplateAudioOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateAudioPtrOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupAudioOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupAudioPtrOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupVideoOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupVideoArrayOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupVideoCommonOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateGroupVideoCommonPtrOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateVideoOutput{})
	pulumi.RegisterOutputType(TranscodingTemplateVideoPtrOutput{})
}
