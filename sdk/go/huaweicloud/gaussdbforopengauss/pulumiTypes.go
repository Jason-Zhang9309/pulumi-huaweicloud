// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdbforopengauss

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OpengaussInstanceBackupStrategy struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// `0` to `732`. If this parameter is set to `0`, the automated backup policy is not set.
	// If this parameter is not transferred, the automated backup policy is enabled by default.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the **hh:mm-HH:MM** format. The current time is in the UTC format. The
	// **HH** value must be `1` greater than the **hh** value. The values of mm and MM must be the same and must be set to
	// **00**. Example value: **08:00-09:00**, **23:00-00:00**.
	StartTime string `pulumi:"startTime"`
}

// OpengaussInstanceBackupStrategyInput is an input type that accepts OpengaussInstanceBackupStrategyArgs and OpengaussInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `OpengaussInstanceBackupStrategyInput` via:
//
//	OpengaussInstanceBackupStrategyArgs{...}
type OpengaussInstanceBackupStrategyInput interface {
	pulumi.Input

	ToOpengaussInstanceBackupStrategyOutput() OpengaussInstanceBackupStrategyOutput
	ToOpengaussInstanceBackupStrategyOutputWithContext(context.Context) OpengaussInstanceBackupStrategyOutput
}

type OpengaussInstanceBackupStrategyArgs struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// `0` to `732`. If this parameter is set to `0`, the automated backup policy is not set.
	// If this parameter is not transferred, the automated backup policy is enabled by default.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the **hh:mm-HH:MM** format. The current time is in the UTC format. The
	// **HH** value must be `1` greater than the **hh** value. The values of mm and MM must be the same and must be set to
	// **00**. Example value: **08:00-09:00**, **23:00-00:00**.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (OpengaussInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (i OpengaussInstanceBackupStrategyArgs) ToOpengaussInstanceBackupStrategyOutput() OpengaussInstanceBackupStrategyOutput {
	return i.ToOpengaussInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i OpengaussInstanceBackupStrategyArgs) ToOpengaussInstanceBackupStrategyOutputWithContext(ctx context.Context) OpengaussInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceBackupStrategyOutput)
}

func (i OpengaussInstanceBackupStrategyArgs) ToOpengaussInstanceBackupStrategyPtrOutput() OpengaussInstanceBackupStrategyPtrOutput {
	return i.ToOpengaussInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i OpengaussInstanceBackupStrategyArgs) ToOpengaussInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) OpengaussInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceBackupStrategyOutput).ToOpengaussInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// OpengaussInstanceBackupStrategyPtrInput is an input type that accepts OpengaussInstanceBackupStrategyArgs, OpengaussInstanceBackupStrategyPtr and OpengaussInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `OpengaussInstanceBackupStrategyPtrInput` via:
//
//	        OpengaussInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type OpengaussInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToOpengaussInstanceBackupStrategyPtrOutput() OpengaussInstanceBackupStrategyPtrOutput
	ToOpengaussInstanceBackupStrategyPtrOutputWithContext(context.Context) OpengaussInstanceBackupStrategyPtrOutput
}

type opengaussInstanceBackupStrategyPtrType OpengaussInstanceBackupStrategyArgs

func OpengaussInstanceBackupStrategyPtr(v *OpengaussInstanceBackupStrategyArgs) OpengaussInstanceBackupStrategyPtrInput {
	return (*opengaussInstanceBackupStrategyPtrType)(v)
}

func (*opengaussInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (i *opengaussInstanceBackupStrategyPtrType) ToOpengaussInstanceBackupStrategyPtrOutput() OpengaussInstanceBackupStrategyPtrOutput {
	return i.ToOpengaussInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *opengaussInstanceBackupStrategyPtrType) ToOpengaussInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) OpengaussInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceBackupStrategyPtrOutput)
}

type OpengaussInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (o OpengaussInstanceBackupStrategyOutput) ToOpengaussInstanceBackupStrategyOutput() OpengaussInstanceBackupStrategyOutput {
	return o
}

func (o OpengaussInstanceBackupStrategyOutput) ToOpengaussInstanceBackupStrategyOutputWithContext(ctx context.Context) OpengaussInstanceBackupStrategyOutput {
	return o
}

func (o OpengaussInstanceBackupStrategyOutput) ToOpengaussInstanceBackupStrategyPtrOutput() OpengaussInstanceBackupStrategyPtrOutput {
	return o.ToOpengaussInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o OpengaussInstanceBackupStrategyOutput) ToOpengaussInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) OpengaussInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpengaussInstanceBackupStrategy) *OpengaussInstanceBackupStrategy {
		return &v
	}).(OpengaussInstanceBackupStrategyPtrOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// `0` to `732`. If this parameter is set to `0`, the automated backup policy is not set.
// If this parameter is not transferred, the automated backup policy is enabled by default.
func (o OpengaussInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the **hh:mm-HH:MM** format. The current time is in the UTC format. The
// **HH** value must be `1` greater than the **hh** value. The values of mm and MM must be the same and must be set to
// **00**. Example value: **08:00-09:00**, **23:00-00:00**.
func (o OpengaussInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v OpengaussInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type OpengaussInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (o OpengaussInstanceBackupStrategyPtrOutput) ToOpengaussInstanceBackupStrategyPtrOutput() OpengaussInstanceBackupStrategyPtrOutput {
	return o
}

func (o OpengaussInstanceBackupStrategyPtrOutput) ToOpengaussInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) OpengaussInstanceBackupStrategyPtrOutput {
	return o
}

func (o OpengaussInstanceBackupStrategyPtrOutput) Elem() OpengaussInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *OpengaussInstanceBackupStrategy) OpengaussInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret OpengaussInstanceBackupStrategy
		return ret
	}).(OpengaussInstanceBackupStrategyOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// `0` to `732`. If this parameter is set to `0`, the automated backup policy is not set.
// If this parameter is not transferred, the automated backup policy is enabled by default.
func (o OpengaussInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the **hh:mm-HH:MM** format. The current time is in the UTC format. The
// **HH** value must be `1` greater than the **hh** value. The values of mm and MM must be the same and must be set to
// **00**. Example value: **08:00-09:00**, **23:00-00:00**.
func (o OpengaussInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type OpengaussInstanceDatastore struct {
	// Specifies the database engine. Only **GaussDB(for openGauss)** is supported
	// now. Changing this parameter will create a new resource.
	Engine string `pulumi:"engine"`
	// Specifies the database version. Defaults to the latest version. Please
	// reference to the API docs for valid options. Changing this parameter will create a new resource.
	Version *string `pulumi:"version"`
}

// OpengaussInstanceDatastoreInput is an input type that accepts OpengaussInstanceDatastoreArgs and OpengaussInstanceDatastoreOutput values.
// You can construct a concrete instance of `OpengaussInstanceDatastoreInput` via:
//
//	OpengaussInstanceDatastoreArgs{...}
type OpengaussInstanceDatastoreInput interface {
	pulumi.Input

	ToOpengaussInstanceDatastoreOutput() OpengaussInstanceDatastoreOutput
	ToOpengaussInstanceDatastoreOutputWithContext(context.Context) OpengaussInstanceDatastoreOutput
}

type OpengaussInstanceDatastoreArgs struct {
	// Specifies the database engine. Only **GaussDB(for openGauss)** is supported
	// now. Changing this parameter will create a new resource.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the database version. Defaults to the latest version. Please
	// reference to the API docs for valid options. Changing this parameter will create a new resource.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (OpengaussInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceDatastore)(nil)).Elem()
}

func (i OpengaussInstanceDatastoreArgs) ToOpengaussInstanceDatastoreOutput() OpengaussInstanceDatastoreOutput {
	return i.ToOpengaussInstanceDatastoreOutputWithContext(context.Background())
}

func (i OpengaussInstanceDatastoreArgs) ToOpengaussInstanceDatastoreOutputWithContext(ctx context.Context) OpengaussInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceDatastoreOutput)
}

func (i OpengaussInstanceDatastoreArgs) ToOpengaussInstanceDatastorePtrOutput() OpengaussInstanceDatastorePtrOutput {
	return i.ToOpengaussInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i OpengaussInstanceDatastoreArgs) ToOpengaussInstanceDatastorePtrOutputWithContext(ctx context.Context) OpengaussInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceDatastoreOutput).ToOpengaussInstanceDatastorePtrOutputWithContext(ctx)
}

// OpengaussInstanceDatastorePtrInput is an input type that accepts OpengaussInstanceDatastoreArgs, OpengaussInstanceDatastorePtr and OpengaussInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `OpengaussInstanceDatastorePtrInput` via:
//
//	        OpengaussInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type OpengaussInstanceDatastorePtrInput interface {
	pulumi.Input

	ToOpengaussInstanceDatastorePtrOutput() OpengaussInstanceDatastorePtrOutput
	ToOpengaussInstanceDatastorePtrOutputWithContext(context.Context) OpengaussInstanceDatastorePtrOutput
}

type opengaussInstanceDatastorePtrType OpengaussInstanceDatastoreArgs

func OpengaussInstanceDatastorePtr(v *OpengaussInstanceDatastoreArgs) OpengaussInstanceDatastorePtrInput {
	return (*opengaussInstanceDatastorePtrType)(v)
}

func (*opengaussInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceDatastore)(nil)).Elem()
}

func (i *opengaussInstanceDatastorePtrType) ToOpengaussInstanceDatastorePtrOutput() OpengaussInstanceDatastorePtrOutput {
	return i.ToOpengaussInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *opengaussInstanceDatastorePtrType) ToOpengaussInstanceDatastorePtrOutputWithContext(ctx context.Context) OpengaussInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceDatastorePtrOutput)
}

type OpengaussInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceDatastore)(nil)).Elem()
}

func (o OpengaussInstanceDatastoreOutput) ToOpengaussInstanceDatastoreOutput() OpengaussInstanceDatastoreOutput {
	return o
}

func (o OpengaussInstanceDatastoreOutput) ToOpengaussInstanceDatastoreOutputWithContext(ctx context.Context) OpengaussInstanceDatastoreOutput {
	return o
}

func (o OpengaussInstanceDatastoreOutput) ToOpengaussInstanceDatastorePtrOutput() OpengaussInstanceDatastorePtrOutput {
	return o.ToOpengaussInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o OpengaussInstanceDatastoreOutput) ToOpengaussInstanceDatastorePtrOutputWithContext(ctx context.Context) OpengaussInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpengaussInstanceDatastore) *OpengaussInstanceDatastore {
		return &v
	}).(OpengaussInstanceDatastorePtrOutput)
}

// Specifies the database engine. Only **GaussDB(for openGauss)** is supported
// now. Changing this parameter will create a new resource.
func (o OpengaussInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v OpengaussInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the database version. Defaults to the latest version. Please
// reference to the API docs for valid options. Changing this parameter will create a new resource.
func (o OpengaussInstanceDatastoreOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceDatastore) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type OpengaussInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceDatastore)(nil)).Elem()
}

func (o OpengaussInstanceDatastorePtrOutput) ToOpengaussInstanceDatastorePtrOutput() OpengaussInstanceDatastorePtrOutput {
	return o
}

func (o OpengaussInstanceDatastorePtrOutput) ToOpengaussInstanceDatastorePtrOutputWithContext(ctx context.Context) OpengaussInstanceDatastorePtrOutput {
	return o
}

func (o OpengaussInstanceDatastorePtrOutput) Elem() OpengaussInstanceDatastoreOutput {
	return o.ApplyT(func(v *OpengaussInstanceDatastore) OpengaussInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret OpengaussInstanceDatastore
		return ret
	}).(OpengaussInstanceDatastoreOutput)
}

// Specifies the database engine. Only **GaussDB(for openGauss)** is supported
// now. Changing this parameter will create a new resource.
func (o OpengaussInstanceDatastorePtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version. Defaults to the latest version. Please
// reference to the API docs for valid options. Changing this parameter will create a new resource.
func (o OpengaussInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type OpengaussInstanceHa struct {
	// Specifies the database consistency mode.
	// The valid values are **strong** and **eventual**, not case sensitive.
	// Changing this parameter will create a new resource.
	Consistency *string `pulumi:"consistency"`
	// Specifies the database mode.
	// The valid values are **enterprise** and **centralization_standard**.
	// Changing this parameter will create a new resource.
	Mode string `pulumi:"mode"`
	// Specifies the database replication mode.
	// Only **sync** is supported now. Changing this parameter will create a new resource.
	ReplicationMode string `pulumi:"replicationMode"`
}

// OpengaussInstanceHaInput is an input type that accepts OpengaussInstanceHaArgs and OpengaussInstanceHaOutput values.
// You can construct a concrete instance of `OpengaussInstanceHaInput` via:
//
//	OpengaussInstanceHaArgs{...}
type OpengaussInstanceHaInput interface {
	pulumi.Input

	ToOpengaussInstanceHaOutput() OpengaussInstanceHaOutput
	ToOpengaussInstanceHaOutputWithContext(context.Context) OpengaussInstanceHaOutput
}

type OpengaussInstanceHaArgs struct {
	// Specifies the database consistency mode.
	// The valid values are **strong** and **eventual**, not case sensitive.
	// Changing this parameter will create a new resource.
	Consistency pulumi.StringPtrInput `pulumi:"consistency"`
	// Specifies the database mode.
	// The valid values are **enterprise** and **centralization_standard**.
	// Changing this parameter will create a new resource.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Specifies the database replication mode.
	// Only **sync** is supported now. Changing this parameter will create a new resource.
	ReplicationMode pulumi.StringInput `pulumi:"replicationMode"`
}

func (OpengaussInstanceHaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceHa)(nil)).Elem()
}

func (i OpengaussInstanceHaArgs) ToOpengaussInstanceHaOutput() OpengaussInstanceHaOutput {
	return i.ToOpengaussInstanceHaOutputWithContext(context.Background())
}

func (i OpengaussInstanceHaArgs) ToOpengaussInstanceHaOutputWithContext(ctx context.Context) OpengaussInstanceHaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceHaOutput)
}

func (i OpengaussInstanceHaArgs) ToOpengaussInstanceHaPtrOutput() OpengaussInstanceHaPtrOutput {
	return i.ToOpengaussInstanceHaPtrOutputWithContext(context.Background())
}

func (i OpengaussInstanceHaArgs) ToOpengaussInstanceHaPtrOutputWithContext(ctx context.Context) OpengaussInstanceHaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceHaOutput).ToOpengaussInstanceHaPtrOutputWithContext(ctx)
}

// OpengaussInstanceHaPtrInput is an input type that accepts OpengaussInstanceHaArgs, OpengaussInstanceHaPtr and OpengaussInstanceHaPtrOutput values.
// You can construct a concrete instance of `OpengaussInstanceHaPtrInput` via:
//
//	        OpengaussInstanceHaArgs{...}
//
//	or:
//
//	        nil
type OpengaussInstanceHaPtrInput interface {
	pulumi.Input

	ToOpengaussInstanceHaPtrOutput() OpengaussInstanceHaPtrOutput
	ToOpengaussInstanceHaPtrOutputWithContext(context.Context) OpengaussInstanceHaPtrOutput
}

type opengaussInstanceHaPtrType OpengaussInstanceHaArgs

func OpengaussInstanceHaPtr(v *OpengaussInstanceHaArgs) OpengaussInstanceHaPtrInput {
	return (*opengaussInstanceHaPtrType)(v)
}

func (*opengaussInstanceHaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceHa)(nil)).Elem()
}

func (i *opengaussInstanceHaPtrType) ToOpengaussInstanceHaPtrOutput() OpengaussInstanceHaPtrOutput {
	return i.ToOpengaussInstanceHaPtrOutputWithContext(context.Background())
}

func (i *opengaussInstanceHaPtrType) ToOpengaussInstanceHaPtrOutputWithContext(ctx context.Context) OpengaussInstanceHaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceHaPtrOutput)
}

type OpengaussInstanceHaOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceHaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceHa)(nil)).Elem()
}

func (o OpengaussInstanceHaOutput) ToOpengaussInstanceHaOutput() OpengaussInstanceHaOutput {
	return o
}

func (o OpengaussInstanceHaOutput) ToOpengaussInstanceHaOutputWithContext(ctx context.Context) OpengaussInstanceHaOutput {
	return o
}

func (o OpengaussInstanceHaOutput) ToOpengaussInstanceHaPtrOutput() OpengaussInstanceHaPtrOutput {
	return o.ToOpengaussInstanceHaPtrOutputWithContext(context.Background())
}

func (o OpengaussInstanceHaOutput) ToOpengaussInstanceHaPtrOutputWithContext(ctx context.Context) OpengaussInstanceHaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpengaussInstanceHa) *OpengaussInstanceHa {
		return &v
	}).(OpengaussInstanceHaPtrOutput)
}

// Specifies the database consistency mode.
// The valid values are **strong** and **eventual**, not case sensitive.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceHaOutput) Consistency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceHa) *string { return v.Consistency }).(pulumi.StringPtrOutput)
}

// Specifies the database mode.
// The valid values are **enterprise** and **centralization_standard**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceHaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v OpengaussInstanceHa) string { return v.Mode }).(pulumi.StringOutput)
}

// Specifies the database replication mode.
// Only **sync** is supported now. Changing this parameter will create a new resource.
func (o OpengaussInstanceHaOutput) ReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v OpengaussInstanceHa) string { return v.ReplicationMode }).(pulumi.StringOutput)
}

type OpengaussInstanceHaPtrOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceHaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceHa)(nil)).Elem()
}

func (o OpengaussInstanceHaPtrOutput) ToOpengaussInstanceHaPtrOutput() OpengaussInstanceHaPtrOutput {
	return o
}

func (o OpengaussInstanceHaPtrOutput) ToOpengaussInstanceHaPtrOutputWithContext(ctx context.Context) OpengaussInstanceHaPtrOutput {
	return o
}

func (o OpengaussInstanceHaPtrOutput) Elem() OpengaussInstanceHaOutput {
	return o.ApplyT(func(v *OpengaussInstanceHa) OpengaussInstanceHa {
		if v != nil {
			return *v
		}
		var ret OpengaussInstanceHa
		return ret
	}).(OpengaussInstanceHaOutput)
}

// Specifies the database consistency mode.
// The valid values are **strong** and **eventual**, not case sensitive.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceHaPtrOutput) Consistency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceHa) *string {
		if v == nil {
			return nil
		}
		return v.Consistency
	}).(pulumi.StringPtrOutput)
}

// Specifies the database mode.
// The valid values are **enterprise** and **centralization_standard**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceHaPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceHa) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Specifies the database replication mode.
// Only **sync** is supported now. Changing this parameter will create a new resource.
func (o OpengaussInstanceHaPtrOutput) ReplicationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceHa) *string {
		if v == nil {
			return nil
		}
		return &v.ReplicationMode
	}).(pulumi.StringPtrOutput)
}

type OpengaussInstanceNode struct {
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the node role.
	// + **master**.
	// + **slave**.
	Role *string `pulumi:"role"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
}

// OpengaussInstanceNodeInput is an input type that accepts OpengaussInstanceNodeArgs and OpengaussInstanceNodeOutput values.
// You can construct a concrete instance of `OpengaussInstanceNodeInput` via:
//
//	OpengaussInstanceNodeArgs{...}
type OpengaussInstanceNodeInput interface {
	pulumi.Input

	ToOpengaussInstanceNodeOutput() OpengaussInstanceNodeOutput
	ToOpengaussInstanceNodeOutputWithContext(context.Context) OpengaussInstanceNodeOutput
}

type OpengaussInstanceNodeArgs struct {
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the node role.
	// + **master**.
	// + **slave**.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (OpengaussInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceNode)(nil)).Elem()
}

func (i OpengaussInstanceNodeArgs) ToOpengaussInstanceNodeOutput() OpengaussInstanceNodeOutput {
	return i.ToOpengaussInstanceNodeOutputWithContext(context.Background())
}

func (i OpengaussInstanceNodeArgs) ToOpengaussInstanceNodeOutputWithContext(ctx context.Context) OpengaussInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceNodeOutput)
}

// OpengaussInstanceNodeArrayInput is an input type that accepts OpengaussInstanceNodeArray and OpengaussInstanceNodeArrayOutput values.
// You can construct a concrete instance of `OpengaussInstanceNodeArrayInput` via:
//
//	OpengaussInstanceNodeArray{ OpengaussInstanceNodeArgs{...} }
type OpengaussInstanceNodeArrayInput interface {
	pulumi.Input

	ToOpengaussInstanceNodeArrayOutput() OpengaussInstanceNodeArrayOutput
	ToOpengaussInstanceNodeArrayOutputWithContext(context.Context) OpengaussInstanceNodeArrayOutput
}

type OpengaussInstanceNodeArray []OpengaussInstanceNodeInput

func (OpengaussInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpengaussInstanceNode)(nil)).Elem()
}

func (i OpengaussInstanceNodeArray) ToOpengaussInstanceNodeArrayOutput() OpengaussInstanceNodeArrayOutput {
	return i.ToOpengaussInstanceNodeArrayOutputWithContext(context.Background())
}

func (i OpengaussInstanceNodeArray) ToOpengaussInstanceNodeArrayOutputWithContext(ctx context.Context) OpengaussInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceNodeArrayOutput)
}

type OpengaussInstanceNodeOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceNode)(nil)).Elem()
}

func (o OpengaussInstanceNodeOutput) ToOpengaussInstanceNodeOutput() OpengaussInstanceNodeOutput {
	return o
}

func (o OpengaussInstanceNodeOutput) ToOpengaussInstanceNodeOutputWithContext(ctx context.Context) OpengaussInstanceNodeOutput {
	return o
}

// Specifies the availability zone information, can be three same or
// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
func (o OpengaussInstanceNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Indicates the node ID.
func (o OpengaussInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the instance name, which can be the same as an existing instance name.
// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
// letters, digits, hyphens (-), and underscores (_).
func (o OpengaussInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the node role.
// + **master**.
// + **slave**.
func (o OpengaussInstanceNodeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceNode) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o OpengaussInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpengaussInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OpengaussInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpengaussInstanceNode)(nil)).Elem()
}

func (o OpengaussInstanceNodeArrayOutput) ToOpengaussInstanceNodeArrayOutput() OpengaussInstanceNodeArrayOutput {
	return o
}

func (o OpengaussInstanceNodeArrayOutput) ToOpengaussInstanceNodeArrayOutputWithContext(ctx context.Context) OpengaussInstanceNodeArrayOutput {
	return o
}

func (o OpengaussInstanceNodeArrayOutput) Index(i pulumi.IntInput) OpengaussInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpengaussInstanceNode {
		return vs[0].([]OpengaussInstanceNode)[vs[1].(int)]
	}).(OpengaussInstanceNodeOutput)
}

type OpengaussInstanceVolume struct {
	// Specifies the volume size (in gigabytes). The valid value is range form `40` to `4,000`.
	Size int `pulumi:"size"`
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type string `pulumi:"type"`
}

// OpengaussInstanceVolumeInput is an input type that accepts OpengaussInstanceVolumeArgs and OpengaussInstanceVolumeOutput values.
// You can construct a concrete instance of `OpengaussInstanceVolumeInput` via:
//
//	OpengaussInstanceVolumeArgs{...}
type OpengaussInstanceVolumeInput interface {
	pulumi.Input

	ToOpengaussInstanceVolumeOutput() OpengaussInstanceVolumeOutput
	ToOpengaussInstanceVolumeOutputWithContext(context.Context) OpengaussInstanceVolumeOutput
}

type OpengaussInstanceVolumeArgs struct {
	// Specifies the volume size (in gigabytes). The valid value is range form `40` to `4,000`.
	Size pulumi.IntInput `pulumi:"size"`
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OpengaussInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceVolume)(nil)).Elem()
}

func (i OpengaussInstanceVolumeArgs) ToOpengaussInstanceVolumeOutput() OpengaussInstanceVolumeOutput {
	return i.ToOpengaussInstanceVolumeOutputWithContext(context.Background())
}

func (i OpengaussInstanceVolumeArgs) ToOpengaussInstanceVolumeOutputWithContext(ctx context.Context) OpengaussInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceVolumeOutput)
}

func (i OpengaussInstanceVolumeArgs) ToOpengaussInstanceVolumePtrOutput() OpengaussInstanceVolumePtrOutput {
	return i.ToOpengaussInstanceVolumePtrOutputWithContext(context.Background())
}

func (i OpengaussInstanceVolumeArgs) ToOpengaussInstanceVolumePtrOutputWithContext(ctx context.Context) OpengaussInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceVolumeOutput).ToOpengaussInstanceVolumePtrOutputWithContext(ctx)
}

// OpengaussInstanceVolumePtrInput is an input type that accepts OpengaussInstanceVolumeArgs, OpengaussInstanceVolumePtr and OpengaussInstanceVolumePtrOutput values.
// You can construct a concrete instance of `OpengaussInstanceVolumePtrInput` via:
//
//	        OpengaussInstanceVolumeArgs{...}
//
//	or:
//
//	        nil
type OpengaussInstanceVolumePtrInput interface {
	pulumi.Input

	ToOpengaussInstanceVolumePtrOutput() OpengaussInstanceVolumePtrOutput
	ToOpengaussInstanceVolumePtrOutputWithContext(context.Context) OpengaussInstanceVolumePtrOutput
}

type opengaussInstanceVolumePtrType OpengaussInstanceVolumeArgs

func OpengaussInstanceVolumePtr(v *OpengaussInstanceVolumeArgs) OpengaussInstanceVolumePtrInput {
	return (*opengaussInstanceVolumePtrType)(v)
}

func (*opengaussInstanceVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceVolume)(nil)).Elem()
}

func (i *opengaussInstanceVolumePtrType) ToOpengaussInstanceVolumePtrOutput() OpengaussInstanceVolumePtrOutput {
	return i.ToOpengaussInstanceVolumePtrOutputWithContext(context.Background())
}

func (i *opengaussInstanceVolumePtrType) ToOpengaussInstanceVolumePtrOutputWithContext(ctx context.Context) OpengaussInstanceVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceVolumePtrOutput)
}

type OpengaussInstanceVolumeOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpengaussInstanceVolume)(nil)).Elem()
}

func (o OpengaussInstanceVolumeOutput) ToOpengaussInstanceVolumeOutput() OpengaussInstanceVolumeOutput {
	return o
}

func (o OpengaussInstanceVolumeOutput) ToOpengaussInstanceVolumeOutputWithContext(ctx context.Context) OpengaussInstanceVolumeOutput {
	return o
}

func (o OpengaussInstanceVolumeOutput) ToOpengaussInstanceVolumePtrOutput() OpengaussInstanceVolumePtrOutput {
	return o.ToOpengaussInstanceVolumePtrOutputWithContext(context.Background())
}

func (o OpengaussInstanceVolumeOutput) ToOpengaussInstanceVolumePtrOutputWithContext(ctx context.Context) OpengaussInstanceVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpengaussInstanceVolume) *OpengaussInstanceVolume {
		return &v
	}).(OpengaussInstanceVolumePtrOutput)
}

// Specifies the volume size (in gigabytes). The valid value is range form `40` to `4,000`.
func (o OpengaussInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v OpengaussInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Specifies the volume type. Only **ULTRAHIGH** is supported now.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpengaussInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type OpengaussInstanceVolumePtrOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstanceVolume)(nil)).Elem()
}

func (o OpengaussInstanceVolumePtrOutput) ToOpengaussInstanceVolumePtrOutput() OpengaussInstanceVolumePtrOutput {
	return o
}

func (o OpengaussInstanceVolumePtrOutput) ToOpengaussInstanceVolumePtrOutputWithContext(ctx context.Context) OpengaussInstanceVolumePtrOutput {
	return o
}

func (o OpengaussInstanceVolumePtrOutput) Elem() OpengaussInstanceVolumeOutput {
	return o.ApplyT(func(v *OpengaussInstanceVolume) OpengaussInstanceVolume {
		if v != nil {
			return *v
		}
		var ret OpengaussInstanceVolume
		return ret
	}).(OpengaussInstanceVolumeOutput)
}

// Specifies the volume size (in gigabytes). The valid value is range form `40` to `4,000`.
func (o OpengaussInstanceVolumePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceVolume) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// Specifies the volume type. Only **ULTRAHIGH** is supported now.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceVolumePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstanceVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetOpengaussInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetOpengaussInstanceBackupStrategyInput is an input type that accepts GetOpengaussInstanceBackupStrategyArgs and GetOpengaussInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceBackupStrategyInput` via:
//
//	GetOpengaussInstanceBackupStrategyArgs{...}
type GetOpengaussInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetOpengaussInstanceBackupStrategyOutput() GetOpengaussInstanceBackupStrategyOutput
	ToGetOpengaussInstanceBackupStrategyOutputWithContext(context.Context) GetOpengaussInstanceBackupStrategyOutput
}

type GetOpengaussInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetOpengaussInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (i GetOpengaussInstanceBackupStrategyArgs) ToGetOpengaussInstanceBackupStrategyOutput() GetOpengaussInstanceBackupStrategyOutput {
	return i.ToGetOpengaussInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceBackupStrategyArgs) ToGetOpengaussInstanceBackupStrategyOutputWithContext(ctx context.Context) GetOpengaussInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceBackupStrategyOutput)
}

// GetOpengaussInstanceBackupStrategyArrayInput is an input type that accepts GetOpengaussInstanceBackupStrategyArray and GetOpengaussInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceBackupStrategyArrayInput` via:
//
//	GetOpengaussInstanceBackupStrategyArray{ GetOpengaussInstanceBackupStrategyArgs{...} }
type GetOpengaussInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstanceBackupStrategyArrayOutput() GetOpengaussInstanceBackupStrategyArrayOutput
	ToGetOpengaussInstanceBackupStrategyArrayOutputWithContext(context.Context) GetOpengaussInstanceBackupStrategyArrayOutput
}

type GetOpengaussInstanceBackupStrategyArray []GetOpengaussInstanceBackupStrategyInput

func (GetOpengaussInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (i GetOpengaussInstanceBackupStrategyArray) ToGetOpengaussInstanceBackupStrategyArrayOutput() GetOpengaussInstanceBackupStrategyArrayOutput {
	return i.ToGetOpengaussInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceBackupStrategyArray) ToGetOpengaussInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceBackupStrategyArrayOutput)
}

type GetOpengaussInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (o GetOpengaussInstanceBackupStrategyOutput) ToGetOpengaussInstanceBackupStrategyOutput() GetOpengaussInstanceBackupStrategyOutput {
	return o
}

func (o GetOpengaussInstanceBackupStrategyOutput) ToGetOpengaussInstanceBackupStrategyOutputWithContext(ctx context.Context) GetOpengaussInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetOpengaussInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetOpengaussInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetOpengaussInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceBackupStrategy)(nil)).Elem()
}

func (o GetOpengaussInstanceBackupStrategyArrayOutput) ToGetOpengaussInstanceBackupStrategyArrayOutput() GetOpengaussInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetOpengaussInstanceBackupStrategyArrayOutput) ToGetOpengaussInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetOpengaussInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstanceBackupStrategy {
		return vs[0].([]GetOpengaussInstanceBackupStrategy)[vs[1].(int)]
	}).(GetOpengaussInstanceBackupStrategyOutput)
}

type GetOpengaussInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetOpengaussInstanceDatastoreInput is an input type that accepts GetOpengaussInstanceDatastoreArgs and GetOpengaussInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceDatastoreInput` via:
//
//	GetOpengaussInstanceDatastoreArgs{...}
type GetOpengaussInstanceDatastoreInput interface {
	pulumi.Input

	ToGetOpengaussInstanceDatastoreOutput() GetOpengaussInstanceDatastoreOutput
	ToGetOpengaussInstanceDatastoreOutputWithContext(context.Context) GetOpengaussInstanceDatastoreOutput
}

type GetOpengaussInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetOpengaussInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceDatastore)(nil)).Elem()
}

func (i GetOpengaussInstanceDatastoreArgs) ToGetOpengaussInstanceDatastoreOutput() GetOpengaussInstanceDatastoreOutput {
	return i.ToGetOpengaussInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceDatastoreArgs) ToGetOpengaussInstanceDatastoreOutputWithContext(ctx context.Context) GetOpengaussInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceDatastoreOutput)
}

// GetOpengaussInstanceDatastoreArrayInput is an input type that accepts GetOpengaussInstanceDatastoreArray and GetOpengaussInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceDatastoreArrayInput` via:
//
//	GetOpengaussInstanceDatastoreArray{ GetOpengaussInstanceDatastoreArgs{...} }
type GetOpengaussInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstanceDatastoreArrayOutput() GetOpengaussInstanceDatastoreArrayOutput
	ToGetOpengaussInstanceDatastoreArrayOutputWithContext(context.Context) GetOpengaussInstanceDatastoreArrayOutput
}

type GetOpengaussInstanceDatastoreArray []GetOpengaussInstanceDatastoreInput

func (GetOpengaussInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceDatastore)(nil)).Elem()
}

func (i GetOpengaussInstanceDatastoreArray) ToGetOpengaussInstanceDatastoreArrayOutput() GetOpengaussInstanceDatastoreArrayOutput {
	return i.ToGetOpengaussInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceDatastoreArray) ToGetOpengaussInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceDatastoreArrayOutput)
}

type GetOpengaussInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceDatastore)(nil)).Elem()
}

func (o GetOpengaussInstanceDatastoreOutput) ToGetOpengaussInstanceDatastoreOutput() GetOpengaussInstanceDatastoreOutput {
	return o
}

func (o GetOpengaussInstanceDatastoreOutput) ToGetOpengaussInstanceDatastoreOutputWithContext(ctx context.Context) GetOpengaussInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetOpengaussInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetOpengaussInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetOpengaussInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceDatastore)(nil)).Elem()
}

func (o GetOpengaussInstanceDatastoreArrayOutput) ToGetOpengaussInstanceDatastoreArrayOutput() GetOpengaussInstanceDatastoreArrayOutput {
	return o
}

func (o GetOpengaussInstanceDatastoreArrayOutput) ToGetOpengaussInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceDatastoreArrayOutput {
	return o
}

func (o GetOpengaussInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstanceDatastore {
		return vs[0].([]GetOpengaussInstanceDatastore)[vs[1].(int)]
	}).(GetOpengaussInstanceDatastoreOutput)
}

type GetOpengaussInstanceHa struct {
	// Indicates the replication mode.
	ReplicationMode string `pulumi:"replicationMode"`
}

// GetOpengaussInstanceHaInput is an input type that accepts GetOpengaussInstanceHaArgs and GetOpengaussInstanceHaOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceHaInput` via:
//
//	GetOpengaussInstanceHaArgs{...}
type GetOpengaussInstanceHaInput interface {
	pulumi.Input

	ToGetOpengaussInstanceHaOutput() GetOpengaussInstanceHaOutput
	ToGetOpengaussInstanceHaOutputWithContext(context.Context) GetOpengaussInstanceHaOutput
}

type GetOpengaussInstanceHaArgs struct {
	// Indicates the replication mode.
	ReplicationMode pulumi.StringInput `pulumi:"replicationMode"`
}

func (GetOpengaussInstanceHaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceHa)(nil)).Elem()
}

func (i GetOpengaussInstanceHaArgs) ToGetOpengaussInstanceHaOutput() GetOpengaussInstanceHaOutput {
	return i.ToGetOpengaussInstanceHaOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceHaArgs) ToGetOpengaussInstanceHaOutputWithContext(ctx context.Context) GetOpengaussInstanceHaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceHaOutput)
}

// GetOpengaussInstanceHaArrayInput is an input type that accepts GetOpengaussInstanceHaArray and GetOpengaussInstanceHaArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceHaArrayInput` via:
//
//	GetOpengaussInstanceHaArray{ GetOpengaussInstanceHaArgs{...} }
type GetOpengaussInstanceHaArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstanceHaArrayOutput() GetOpengaussInstanceHaArrayOutput
	ToGetOpengaussInstanceHaArrayOutputWithContext(context.Context) GetOpengaussInstanceHaArrayOutput
}

type GetOpengaussInstanceHaArray []GetOpengaussInstanceHaInput

func (GetOpengaussInstanceHaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceHa)(nil)).Elem()
}

func (i GetOpengaussInstanceHaArray) ToGetOpengaussInstanceHaArrayOutput() GetOpengaussInstanceHaArrayOutput {
	return i.ToGetOpengaussInstanceHaArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceHaArray) ToGetOpengaussInstanceHaArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceHaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceHaArrayOutput)
}

type GetOpengaussInstanceHaOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceHaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceHa)(nil)).Elem()
}

func (o GetOpengaussInstanceHaOutput) ToGetOpengaussInstanceHaOutput() GetOpengaussInstanceHaOutput {
	return o
}

func (o GetOpengaussInstanceHaOutput) ToGetOpengaussInstanceHaOutputWithContext(ctx context.Context) GetOpengaussInstanceHaOutput {
	return o
}

// Indicates the replication mode.
func (o GetOpengaussInstanceHaOutput) ReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceHa) string { return v.ReplicationMode }).(pulumi.StringOutput)
}

type GetOpengaussInstanceHaArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceHaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceHa)(nil)).Elem()
}

func (o GetOpengaussInstanceHaArrayOutput) ToGetOpengaussInstanceHaArrayOutput() GetOpengaussInstanceHaArrayOutput {
	return o
}

func (o GetOpengaussInstanceHaArrayOutput) ToGetOpengaussInstanceHaArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceHaArrayOutput {
	return o
}

func (o GetOpengaussInstanceHaArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstanceHaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstanceHa {
		return vs[0].([]GetOpengaussInstanceHa)[vs[1].(int)]
	}).(GetOpengaussInstanceHaOutput)
}

type GetOpengaussInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates whether the node support reduce.
	Role string `pulumi:"role"`
	// Indicates the node status.
	Status string `pulumi:"status"`
}

// GetOpengaussInstanceNodeInput is an input type that accepts GetOpengaussInstanceNodeArgs and GetOpengaussInstanceNodeOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceNodeInput` via:
//
//	GetOpengaussInstanceNodeArgs{...}
type GetOpengaussInstanceNodeInput interface {
	pulumi.Input

	ToGetOpengaussInstanceNodeOutput() GetOpengaussInstanceNodeOutput
	ToGetOpengaussInstanceNodeOutputWithContext(context.Context) GetOpengaussInstanceNodeOutput
}

type GetOpengaussInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether the node support reduce.
	Role pulumi.StringInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOpengaussInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceNode)(nil)).Elem()
}

func (i GetOpengaussInstanceNodeArgs) ToGetOpengaussInstanceNodeOutput() GetOpengaussInstanceNodeOutput {
	return i.ToGetOpengaussInstanceNodeOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceNodeArgs) ToGetOpengaussInstanceNodeOutputWithContext(ctx context.Context) GetOpengaussInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceNodeOutput)
}

// GetOpengaussInstanceNodeArrayInput is an input type that accepts GetOpengaussInstanceNodeArray and GetOpengaussInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceNodeArrayInput` via:
//
//	GetOpengaussInstanceNodeArray{ GetOpengaussInstanceNodeArgs{...} }
type GetOpengaussInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstanceNodeArrayOutput() GetOpengaussInstanceNodeArrayOutput
	ToGetOpengaussInstanceNodeArrayOutputWithContext(context.Context) GetOpengaussInstanceNodeArrayOutput
}

type GetOpengaussInstanceNodeArray []GetOpengaussInstanceNodeInput

func (GetOpengaussInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceNode)(nil)).Elem()
}

func (i GetOpengaussInstanceNodeArray) ToGetOpengaussInstanceNodeArrayOutput() GetOpengaussInstanceNodeArrayOutput {
	return i.ToGetOpengaussInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceNodeArray) ToGetOpengaussInstanceNodeArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceNodeArrayOutput)
}

type GetOpengaussInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceNode)(nil)).Elem()
}

func (o GetOpengaussInstanceNodeOutput) ToGetOpengaussInstanceNodeOutput() GetOpengaussInstanceNodeOutput {
	return o
}

func (o GetOpengaussInstanceNodeOutput) ToGetOpengaussInstanceNodeOutputWithContext(ctx context.Context) GetOpengaussInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetOpengaussInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetOpengaussInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetOpengaussInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the node support reduce.
func (o GetOpengaussInstanceNodeOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceNode) string { return v.Role }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetOpengaussInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetOpengaussInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceNode)(nil)).Elem()
}

func (o GetOpengaussInstanceNodeArrayOutput) ToGetOpengaussInstanceNodeArrayOutput() GetOpengaussInstanceNodeArrayOutput {
	return o
}

func (o GetOpengaussInstanceNodeArrayOutput) ToGetOpengaussInstanceNodeArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceNodeArrayOutput {
	return o
}

func (o GetOpengaussInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstanceNode {
		return vs[0].([]GetOpengaussInstanceNode)[vs[1].(int)]
	}).(GetOpengaussInstanceNodeOutput)
}

type GetOpengaussInstanceVolume struct {
	// Indicates the volume size.
	Size int `pulumi:"size"`
	// Indicates the volume type.
	Type string `pulumi:"type"`
}

// GetOpengaussInstanceVolumeInput is an input type that accepts GetOpengaussInstanceVolumeArgs and GetOpengaussInstanceVolumeOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceVolumeInput` via:
//
//	GetOpengaussInstanceVolumeArgs{...}
type GetOpengaussInstanceVolumeInput interface {
	pulumi.Input

	ToGetOpengaussInstanceVolumeOutput() GetOpengaussInstanceVolumeOutput
	ToGetOpengaussInstanceVolumeOutputWithContext(context.Context) GetOpengaussInstanceVolumeOutput
}

type GetOpengaussInstanceVolumeArgs struct {
	// Indicates the volume size.
	Size pulumi.IntInput `pulumi:"size"`
	// Indicates the volume type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetOpengaussInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceVolume)(nil)).Elem()
}

func (i GetOpengaussInstanceVolumeArgs) ToGetOpengaussInstanceVolumeOutput() GetOpengaussInstanceVolumeOutput {
	return i.ToGetOpengaussInstanceVolumeOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceVolumeArgs) ToGetOpengaussInstanceVolumeOutputWithContext(ctx context.Context) GetOpengaussInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceVolumeOutput)
}

// GetOpengaussInstanceVolumeArrayInput is an input type that accepts GetOpengaussInstanceVolumeArray and GetOpengaussInstanceVolumeArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstanceVolumeArrayInput` via:
//
//	GetOpengaussInstanceVolumeArray{ GetOpengaussInstanceVolumeArgs{...} }
type GetOpengaussInstanceVolumeArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstanceVolumeArrayOutput() GetOpengaussInstanceVolumeArrayOutput
	ToGetOpengaussInstanceVolumeArrayOutputWithContext(context.Context) GetOpengaussInstanceVolumeArrayOutput
}

type GetOpengaussInstanceVolumeArray []GetOpengaussInstanceVolumeInput

func (GetOpengaussInstanceVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceVolume)(nil)).Elem()
}

func (i GetOpengaussInstanceVolumeArray) ToGetOpengaussInstanceVolumeArrayOutput() GetOpengaussInstanceVolumeArrayOutput {
	return i.ToGetOpengaussInstanceVolumeArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstanceVolumeArray) ToGetOpengaussInstanceVolumeArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstanceVolumeArrayOutput)
}

type GetOpengaussInstanceVolumeOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstanceVolume)(nil)).Elem()
}

func (o GetOpengaussInstanceVolumeOutput) ToGetOpengaussInstanceVolumeOutput() GetOpengaussInstanceVolumeOutput {
	return o
}

func (o GetOpengaussInstanceVolumeOutput) ToGetOpengaussInstanceVolumeOutputWithContext(ctx context.Context) GetOpengaussInstanceVolumeOutput {
	return o
}

// Indicates the volume size.
func (o GetOpengaussInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Indicates the volume type.
func (o GetOpengaussInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type GetOpengaussInstanceVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstanceVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstanceVolume)(nil)).Elem()
}

func (o GetOpengaussInstanceVolumeArrayOutput) ToGetOpengaussInstanceVolumeArrayOutput() GetOpengaussInstanceVolumeArrayOutput {
	return o
}

func (o GetOpengaussInstanceVolumeArrayOutput) ToGetOpengaussInstanceVolumeArrayOutputWithContext(ctx context.Context) GetOpengaussInstanceVolumeArrayOutput {
	return o
}

func (o GetOpengaussInstanceVolumeArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstanceVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstanceVolume {
		return vs[0].([]GetOpengaussInstanceVolume)[vs[1].(int)]
	}).(GetOpengaussInstanceVolumeOutput)
}

type GetOpengaussInstancesInstance struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies []GetOpengaussInstancesInstanceBackupStrategy `pulumi:"backupStrategies"`
	// Indicates the count of coordinator node.
	CoordinatorNum int `pulumi:"coordinatorNum"`
	// Indicates the database information. Structure is documented below.
	Datastores []GetOpengaussInstancesInstanceDatastore `pulumi:"datastores"`
	// Indicates the default username.
	DbUserName string `pulumi:"dbUserName"`
	// Indicates the enterprise project id.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// Indicates the instance specifications.
	Flavor string `pulumi:"flavor"`
	// Indicates the instance ha information. Structure is documented below.
	Has []GetOpengaussInstancesInstanceHa `pulumi:"has"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Indicates the maintenance window.
	MaintenanceWindow string `pulumi:"maintenanceWindow"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []GetOpengaussInstancesInstanceNode `pulumi:"nodes"`
	// Indicates the database port.
	Port int `pulumi:"port"`
	// Indicates the list of private IP address of the nodes.
	PrivateIps []string `pulumi:"privateIps"`
	// The region in which to obtain the instance. If omitted, the provider-level region will
	// be used.
	Region string `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Indicates the sharding num.
	ShardingNum int `pulumi:"shardingNum"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId string `pulumi:"subnetId"`
	// Indicates the switch strategy.
	SwitchStrategy string `pulumi:"switchStrategy"`
	// Indicates the default username.
	TimeZone string `pulumi:"timeZone"`
	// Indicates the volume type.
	Type string `pulumi:"type"`
	// Indicates the volume information. Structure is documented below.
	Volumes []GetOpengaussInstancesInstanceVolume `pulumi:"volumes"`
	// Specifies the VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// GetOpengaussInstancesInstanceInput is an input type that accepts GetOpengaussInstancesInstanceArgs and GetOpengaussInstancesInstanceOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceInput` via:
//
//	GetOpengaussInstancesInstanceArgs{...}
type GetOpengaussInstancesInstanceInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceOutput() GetOpengaussInstancesInstanceOutput
	ToGetOpengaussInstancesInstanceOutputWithContext(context.Context) GetOpengaussInstancesInstanceOutput
}

type GetOpengaussInstancesInstanceArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies GetOpengaussInstancesInstanceBackupStrategyArrayInput `pulumi:"backupStrategies"`
	// Indicates the count of coordinator node.
	CoordinatorNum pulumi.IntInput `pulumi:"coordinatorNum"`
	// Indicates the database information. Structure is documented below.
	Datastores GetOpengaussInstancesInstanceDatastoreArrayInput `pulumi:"datastores"`
	// Indicates the default username.
	DbUserName pulumi.StringInput `pulumi:"dbUserName"`
	// Indicates the enterprise project id.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// Indicates the instance specifications.
	Flavor pulumi.StringInput `pulumi:"flavor"`
	// Indicates the instance ha information. Structure is documented below.
	Has GetOpengaussInstancesInstanceHaArrayInput `pulumi:"has"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates the maintenance window.
	MaintenanceWindow pulumi.StringInput `pulumi:"maintenanceWindow"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes GetOpengaussInstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Indicates the database port.
	Port pulumi.IntInput `pulumi:"port"`
	// Indicates the list of private IP address of the nodes.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
	// The region in which to obtain the instance. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringInput `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Indicates the sharding num.
	ShardingNum pulumi.IntInput `pulumi:"shardingNum"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Indicates the switch strategy.
	SwitchStrategy pulumi.StringInput `pulumi:"switchStrategy"`
	// Indicates the default username.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// Indicates the volume type.
	Type pulumi.StringInput `pulumi:"type"`
	// Indicates the volume information. Structure is documented below.
	Volumes GetOpengaussInstancesInstanceVolumeArrayInput `pulumi:"volumes"`
	// Specifies the VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetOpengaussInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstance)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceArgs) ToGetOpengaussInstancesInstanceOutput() GetOpengaussInstancesInstanceOutput {
	return i.ToGetOpengaussInstancesInstanceOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceArgs) ToGetOpengaussInstancesInstanceOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceOutput)
}

// GetOpengaussInstancesInstanceArrayInput is an input type that accepts GetOpengaussInstancesInstanceArray and GetOpengaussInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceArrayInput` via:
//
//	GetOpengaussInstancesInstanceArray{ GetOpengaussInstancesInstanceArgs{...} }
type GetOpengaussInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceArrayOutput() GetOpengaussInstancesInstanceArrayOutput
	ToGetOpengaussInstancesInstanceArrayOutputWithContext(context.Context) GetOpengaussInstancesInstanceArrayOutput
}

type GetOpengaussInstancesInstanceArray []GetOpengaussInstancesInstanceInput

func (GetOpengaussInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstance)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceArray) ToGetOpengaussInstancesInstanceArrayOutput() GetOpengaussInstancesInstanceArrayOutput {
	return i.ToGetOpengaussInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceArray) ToGetOpengaussInstancesInstanceArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceArrayOutput)
}

type GetOpengaussInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstance)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceOutput) ToGetOpengaussInstancesInstanceOutput() GetOpengaussInstancesInstanceOutput {
	return o
}

func (o GetOpengaussInstancesInstanceOutput) ToGetOpengaussInstancesInstanceOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetOpengaussInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the advanced backup policy. Structure is documented below.
func (o GetOpengaussInstancesInstanceOutput) BackupStrategies() GetOpengaussInstancesInstanceBackupStrategyArrayOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) []GetOpengaussInstancesInstanceBackupStrategy {
		return v.BackupStrategies
	}).(GetOpengaussInstancesInstanceBackupStrategyArrayOutput)
}

// Indicates the count of coordinator node.
func (o GetOpengaussInstancesInstanceOutput) CoordinatorNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) int { return v.CoordinatorNum }).(pulumi.IntOutput)
}

// Indicates the database information. Structure is documented below.
func (o GetOpengaussInstancesInstanceOutput) Datastores() GetOpengaussInstancesInstanceDatastoreArrayOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) []GetOpengaussInstancesInstanceDatastore { return v.Datastores }).(GetOpengaussInstancesInstanceDatastoreArrayOutput)
}

// Indicates the default username.
func (o GetOpengaussInstancesInstanceOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.DbUserName }).(pulumi.StringOutput)
}

// Indicates the enterprise project id.
func (o GetOpengaussInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates the instance specifications.
func (o GetOpengaussInstancesInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.Flavor }).(pulumi.StringOutput)
}

// Indicates the instance ha information. Structure is documented below.
func (o GetOpengaussInstancesInstanceOutput) Has() GetOpengaussInstancesInstanceHaArrayOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) []GetOpengaussInstancesInstanceHa { return v.Has }).(GetOpengaussInstancesInstanceHaArrayOutput)
}

// Indicates the node ID.
func (o GetOpengaussInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates the maintenance window.
func (o GetOpengaussInstancesInstanceOutput) MaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.MaintenanceWindow }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetOpengaussInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o GetOpengaussInstancesInstanceOutput) Nodes() GetOpengaussInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) []GetOpengaussInstancesInstanceNode { return v.Nodes }).(GetOpengaussInstancesInstanceNodeArrayOutput)
}

// Indicates the database port.
func (o GetOpengaussInstancesInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) int { return v.Port }).(pulumi.IntOutput)
}

// Indicates the list of private IP address of the nodes.
func (o GetOpengaussInstancesInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// The region in which to obtain the instance. If omitted, the provider-level region will
// be used.
func (o GetOpengaussInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the security group ID.
func (o GetOpengaussInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates the sharding num.
func (o GetOpengaussInstancesInstanceOutput) ShardingNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) int { return v.ShardingNum }).(pulumi.IntOutput)
}

// Indicates the node status.
func (o GetOpengaussInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of a subnet.
func (o GetOpengaussInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the switch strategy.
func (o GetOpengaussInstancesInstanceOutput) SwitchStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.SwitchStrategy }).(pulumi.StringOutput)
}

// Indicates the default username.
func (o GetOpengaussInstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

// Indicates the volume type.
func (o GetOpengaussInstancesInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.Type }).(pulumi.StringOutput)
}

// Indicates the volume information. Structure is documented below.
func (o GetOpengaussInstancesInstanceOutput) Volumes() GetOpengaussInstancesInstanceVolumeArrayOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) []GetOpengaussInstancesInstanceVolume { return v.Volumes }).(GetOpengaussInstancesInstanceVolumeArrayOutput)
}

// Specifies the VPC ID.
func (o GetOpengaussInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetOpengaussInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstance)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceArrayOutput) ToGetOpengaussInstancesInstanceArrayOutput() GetOpengaussInstancesInstanceArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceArrayOutput) ToGetOpengaussInstancesInstanceArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstancesInstance {
		return vs[0].([]GetOpengaussInstancesInstance)[vs[1].(int)]
	}).(GetOpengaussInstancesInstanceOutput)
}

type GetOpengaussInstancesInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetOpengaussInstancesInstanceBackupStrategyInput is an input type that accepts GetOpengaussInstancesInstanceBackupStrategyArgs and GetOpengaussInstancesInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceBackupStrategyInput` via:
//
//	GetOpengaussInstancesInstanceBackupStrategyArgs{...}
type GetOpengaussInstancesInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceBackupStrategyOutput() GetOpengaussInstancesInstanceBackupStrategyOutput
	ToGetOpengaussInstancesInstanceBackupStrategyOutputWithContext(context.Context) GetOpengaussInstancesInstanceBackupStrategyOutput
}

type GetOpengaussInstancesInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetOpengaussInstancesInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceBackupStrategyArgs) ToGetOpengaussInstancesInstanceBackupStrategyOutput() GetOpengaussInstancesInstanceBackupStrategyOutput {
	return i.ToGetOpengaussInstancesInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceBackupStrategyArgs) ToGetOpengaussInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceBackupStrategyOutput)
}

// GetOpengaussInstancesInstanceBackupStrategyArrayInput is an input type that accepts GetOpengaussInstancesInstanceBackupStrategyArray and GetOpengaussInstancesInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceBackupStrategyArrayInput` via:
//
//	GetOpengaussInstancesInstanceBackupStrategyArray{ GetOpengaussInstancesInstanceBackupStrategyArgs{...} }
type GetOpengaussInstancesInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceBackupStrategyArrayOutput() GetOpengaussInstancesInstanceBackupStrategyArrayOutput
	ToGetOpengaussInstancesInstanceBackupStrategyArrayOutputWithContext(context.Context) GetOpengaussInstancesInstanceBackupStrategyArrayOutput
}

type GetOpengaussInstancesInstanceBackupStrategyArray []GetOpengaussInstancesInstanceBackupStrategyInput

func (GetOpengaussInstancesInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceBackupStrategyArray) ToGetOpengaussInstancesInstanceBackupStrategyArrayOutput() GetOpengaussInstancesInstanceBackupStrategyArrayOutput {
	return i.ToGetOpengaussInstancesInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceBackupStrategyArray) ToGetOpengaussInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceBackupStrategyArrayOutput)
}

type GetOpengaussInstancesInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceBackupStrategyOutput) ToGetOpengaussInstancesInstanceBackupStrategyOutput() GetOpengaussInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetOpengaussInstancesInstanceBackupStrategyOutput) ToGetOpengaussInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetOpengaussInstancesInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetOpengaussInstancesInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetOpengaussInstancesInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceBackupStrategyArrayOutput) ToGetOpengaussInstancesInstanceBackupStrategyArrayOutput() GetOpengaussInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceBackupStrategyArrayOutput) ToGetOpengaussInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstancesInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstancesInstanceBackupStrategy {
		return vs[0].([]GetOpengaussInstancesInstanceBackupStrategy)[vs[1].(int)]
	}).(GetOpengaussInstancesInstanceBackupStrategyOutput)
}

type GetOpengaussInstancesInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetOpengaussInstancesInstanceDatastoreInput is an input type that accepts GetOpengaussInstancesInstanceDatastoreArgs and GetOpengaussInstancesInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceDatastoreInput` via:
//
//	GetOpengaussInstancesInstanceDatastoreArgs{...}
type GetOpengaussInstancesInstanceDatastoreInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceDatastoreOutput() GetOpengaussInstancesInstanceDatastoreOutput
	ToGetOpengaussInstancesInstanceDatastoreOutputWithContext(context.Context) GetOpengaussInstancesInstanceDatastoreOutput
}

type GetOpengaussInstancesInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetOpengaussInstancesInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceDatastore)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceDatastoreArgs) ToGetOpengaussInstancesInstanceDatastoreOutput() GetOpengaussInstancesInstanceDatastoreOutput {
	return i.ToGetOpengaussInstancesInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceDatastoreArgs) ToGetOpengaussInstancesInstanceDatastoreOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceDatastoreOutput)
}

// GetOpengaussInstancesInstanceDatastoreArrayInput is an input type that accepts GetOpengaussInstancesInstanceDatastoreArray and GetOpengaussInstancesInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceDatastoreArrayInput` via:
//
//	GetOpengaussInstancesInstanceDatastoreArray{ GetOpengaussInstancesInstanceDatastoreArgs{...} }
type GetOpengaussInstancesInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceDatastoreArrayOutput() GetOpengaussInstancesInstanceDatastoreArrayOutput
	ToGetOpengaussInstancesInstanceDatastoreArrayOutputWithContext(context.Context) GetOpengaussInstancesInstanceDatastoreArrayOutput
}

type GetOpengaussInstancesInstanceDatastoreArray []GetOpengaussInstancesInstanceDatastoreInput

func (GetOpengaussInstancesInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceDatastore)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceDatastoreArray) ToGetOpengaussInstancesInstanceDatastoreArrayOutput() GetOpengaussInstancesInstanceDatastoreArrayOutput {
	return i.ToGetOpengaussInstancesInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceDatastoreArray) ToGetOpengaussInstancesInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceDatastoreArrayOutput)
}

type GetOpengaussInstancesInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceDatastore)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceDatastoreOutput) ToGetOpengaussInstancesInstanceDatastoreOutput() GetOpengaussInstancesInstanceDatastoreOutput {
	return o
}

func (o GetOpengaussInstancesInstanceDatastoreOutput) ToGetOpengaussInstancesInstanceDatastoreOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetOpengaussInstancesInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetOpengaussInstancesInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetOpengaussInstancesInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceDatastore)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceDatastoreArrayOutput) ToGetOpengaussInstancesInstanceDatastoreArrayOutput() GetOpengaussInstancesInstanceDatastoreArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceDatastoreArrayOutput) ToGetOpengaussInstancesInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceDatastoreArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstancesInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstancesInstanceDatastore {
		return vs[0].([]GetOpengaussInstancesInstanceDatastore)[vs[1].(int)]
	}).(GetOpengaussInstancesInstanceDatastoreOutput)
}

type GetOpengaussInstancesInstanceHa struct {
	// Indicates the replication mode.
	ReplicationMode string `pulumi:"replicationMode"`
}

// GetOpengaussInstancesInstanceHaInput is an input type that accepts GetOpengaussInstancesInstanceHaArgs and GetOpengaussInstancesInstanceHaOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceHaInput` via:
//
//	GetOpengaussInstancesInstanceHaArgs{...}
type GetOpengaussInstancesInstanceHaInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceHaOutput() GetOpengaussInstancesInstanceHaOutput
	ToGetOpengaussInstancesInstanceHaOutputWithContext(context.Context) GetOpengaussInstancesInstanceHaOutput
}

type GetOpengaussInstancesInstanceHaArgs struct {
	// Indicates the replication mode.
	ReplicationMode pulumi.StringInput `pulumi:"replicationMode"`
}

func (GetOpengaussInstancesInstanceHaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceHa)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceHaArgs) ToGetOpengaussInstancesInstanceHaOutput() GetOpengaussInstancesInstanceHaOutput {
	return i.ToGetOpengaussInstancesInstanceHaOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceHaArgs) ToGetOpengaussInstancesInstanceHaOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceHaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceHaOutput)
}

// GetOpengaussInstancesInstanceHaArrayInput is an input type that accepts GetOpengaussInstancesInstanceHaArray and GetOpengaussInstancesInstanceHaArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceHaArrayInput` via:
//
//	GetOpengaussInstancesInstanceHaArray{ GetOpengaussInstancesInstanceHaArgs{...} }
type GetOpengaussInstancesInstanceHaArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceHaArrayOutput() GetOpengaussInstancesInstanceHaArrayOutput
	ToGetOpengaussInstancesInstanceHaArrayOutputWithContext(context.Context) GetOpengaussInstancesInstanceHaArrayOutput
}

type GetOpengaussInstancesInstanceHaArray []GetOpengaussInstancesInstanceHaInput

func (GetOpengaussInstancesInstanceHaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceHa)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceHaArray) ToGetOpengaussInstancesInstanceHaArrayOutput() GetOpengaussInstancesInstanceHaArrayOutput {
	return i.ToGetOpengaussInstancesInstanceHaArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceHaArray) ToGetOpengaussInstancesInstanceHaArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceHaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceHaArrayOutput)
}

type GetOpengaussInstancesInstanceHaOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceHaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceHa)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceHaOutput) ToGetOpengaussInstancesInstanceHaOutput() GetOpengaussInstancesInstanceHaOutput {
	return o
}

func (o GetOpengaussInstancesInstanceHaOutput) ToGetOpengaussInstancesInstanceHaOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceHaOutput {
	return o
}

// Indicates the replication mode.
func (o GetOpengaussInstancesInstanceHaOutput) ReplicationMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceHa) string { return v.ReplicationMode }).(pulumi.StringOutput)
}

type GetOpengaussInstancesInstanceHaArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceHaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceHa)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceHaArrayOutput) ToGetOpengaussInstancesInstanceHaArrayOutput() GetOpengaussInstancesInstanceHaArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceHaArrayOutput) ToGetOpengaussInstancesInstanceHaArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceHaArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceHaArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstancesInstanceHaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstancesInstanceHa {
		return vs[0].([]GetOpengaussInstancesInstanceHa)[vs[1].(int)]
	}).(GetOpengaussInstancesInstanceHaOutput)
}

type GetOpengaussInstancesInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates whether the node support reduce.
	Role string `pulumi:"role"`
	// Indicates the node status.
	Status string `pulumi:"status"`
}

// GetOpengaussInstancesInstanceNodeInput is an input type that accepts GetOpengaussInstancesInstanceNodeArgs and GetOpengaussInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceNodeInput` via:
//
//	GetOpengaussInstancesInstanceNodeArgs{...}
type GetOpengaussInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceNodeOutput() GetOpengaussInstancesInstanceNodeOutput
	ToGetOpengaussInstancesInstanceNodeOutputWithContext(context.Context) GetOpengaussInstancesInstanceNodeOutput
}

type GetOpengaussInstancesInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates whether the node support reduce.
	Role pulumi.StringInput `pulumi:"role"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOpengaussInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceNode)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceNodeArgs) ToGetOpengaussInstancesInstanceNodeOutput() GetOpengaussInstancesInstanceNodeOutput {
	return i.ToGetOpengaussInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceNodeArgs) ToGetOpengaussInstancesInstanceNodeOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceNodeOutput)
}

// GetOpengaussInstancesInstanceNodeArrayInput is an input type that accepts GetOpengaussInstancesInstanceNodeArray and GetOpengaussInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceNodeArrayInput` via:
//
//	GetOpengaussInstancesInstanceNodeArray{ GetOpengaussInstancesInstanceNodeArgs{...} }
type GetOpengaussInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceNodeArrayOutput() GetOpengaussInstancesInstanceNodeArrayOutput
	ToGetOpengaussInstancesInstanceNodeArrayOutputWithContext(context.Context) GetOpengaussInstancesInstanceNodeArrayOutput
}

type GetOpengaussInstancesInstanceNodeArray []GetOpengaussInstancesInstanceNodeInput

func (GetOpengaussInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceNode)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceNodeArray) ToGetOpengaussInstancesInstanceNodeArrayOutput() GetOpengaussInstancesInstanceNodeArrayOutput {
	return i.ToGetOpengaussInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceNodeArray) ToGetOpengaussInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceNodeArrayOutput)
}

type GetOpengaussInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceNode)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceNodeOutput) ToGetOpengaussInstancesInstanceNodeOutput() GetOpengaussInstancesInstanceNodeOutput {
	return o
}

func (o GetOpengaussInstancesInstanceNodeOutput) ToGetOpengaussInstancesInstanceNodeOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetOpengaussInstancesInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetOpengaussInstancesInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetOpengaussInstancesInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the node support reduce.
func (o GetOpengaussInstancesInstanceNodeOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceNode) string { return v.Role }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetOpengaussInstancesInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetOpengaussInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceNode)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceNodeArrayOutput) ToGetOpengaussInstancesInstanceNodeArrayOutput() GetOpengaussInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceNodeArrayOutput) ToGetOpengaussInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstancesInstanceNode {
		return vs[0].([]GetOpengaussInstancesInstanceNode)[vs[1].(int)]
	}).(GetOpengaussInstancesInstanceNodeOutput)
}

type GetOpengaussInstancesInstanceVolume struct {
	// Indicates the volume size.
	Size int `pulumi:"size"`
	// Indicates the volume type.
	Type string `pulumi:"type"`
}

// GetOpengaussInstancesInstanceVolumeInput is an input type that accepts GetOpengaussInstancesInstanceVolumeArgs and GetOpengaussInstancesInstanceVolumeOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceVolumeInput` via:
//
//	GetOpengaussInstancesInstanceVolumeArgs{...}
type GetOpengaussInstancesInstanceVolumeInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceVolumeOutput() GetOpengaussInstancesInstanceVolumeOutput
	ToGetOpengaussInstancesInstanceVolumeOutputWithContext(context.Context) GetOpengaussInstancesInstanceVolumeOutput
}

type GetOpengaussInstancesInstanceVolumeArgs struct {
	// Indicates the volume size.
	Size pulumi.IntInput `pulumi:"size"`
	// Indicates the volume type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetOpengaussInstancesInstanceVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceVolume)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceVolumeArgs) ToGetOpengaussInstancesInstanceVolumeOutput() GetOpengaussInstancesInstanceVolumeOutput {
	return i.ToGetOpengaussInstancesInstanceVolumeOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceVolumeArgs) ToGetOpengaussInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceVolumeOutput)
}

// GetOpengaussInstancesInstanceVolumeArrayInput is an input type that accepts GetOpengaussInstancesInstanceVolumeArray and GetOpengaussInstancesInstanceVolumeArrayOutput values.
// You can construct a concrete instance of `GetOpengaussInstancesInstanceVolumeArrayInput` via:
//
//	GetOpengaussInstancesInstanceVolumeArray{ GetOpengaussInstancesInstanceVolumeArgs{...} }
type GetOpengaussInstancesInstanceVolumeArrayInput interface {
	pulumi.Input

	ToGetOpengaussInstancesInstanceVolumeArrayOutput() GetOpengaussInstancesInstanceVolumeArrayOutput
	ToGetOpengaussInstancesInstanceVolumeArrayOutputWithContext(context.Context) GetOpengaussInstancesInstanceVolumeArrayOutput
}

type GetOpengaussInstancesInstanceVolumeArray []GetOpengaussInstancesInstanceVolumeInput

func (GetOpengaussInstancesInstanceVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceVolume)(nil)).Elem()
}

func (i GetOpengaussInstancesInstanceVolumeArray) ToGetOpengaussInstancesInstanceVolumeArrayOutput() GetOpengaussInstancesInstanceVolumeArrayOutput {
	return i.ToGetOpengaussInstancesInstanceVolumeArrayOutputWithContext(context.Background())
}

func (i GetOpengaussInstancesInstanceVolumeArray) ToGetOpengaussInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpengaussInstancesInstanceVolumeArrayOutput)
}

type GetOpengaussInstancesInstanceVolumeOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpengaussInstancesInstanceVolume)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceVolumeOutput) ToGetOpengaussInstancesInstanceVolumeOutput() GetOpengaussInstancesInstanceVolumeOutput {
	return o
}

func (o GetOpengaussInstancesInstanceVolumeOutput) ToGetOpengaussInstancesInstanceVolumeOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceVolumeOutput {
	return o
}

// Indicates the volume size.
func (o GetOpengaussInstancesInstanceVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceVolume) int { return v.Size }).(pulumi.IntOutput)
}

// Indicates the volume type.
func (o GetOpengaussInstancesInstanceVolumeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpengaussInstancesInstanceVolume) string { return v.Type }).(pulumi.StringOutput)
}

type GetOpengaussInstancesInstanceVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetOpengaussInstancesInstanceVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpengaussInstancesInstanceVolume)(nil)).Elem()
}

func (o GetOpengaussInstancesInstanceVolumeArrayOutput) ToGetOpengaussInstancesInstanceVolumeArrayOutput() GetOpengaussInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceVolumeArrayOutput) ToGetOpengaussInstancesInstanceVolumeArrayOutputWithContext(ctx context.Context) GetOpengaussInstancesInstanceVolumeArrayOutput {
	return o
}

func (o GetOpengaussInstancesInstanceVolumeArrayOutput) Index(i pulumi.IntInput) GetOpengaussInstancesInstanceVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpengaussInstancesInstanceVolume {
		return vs[0].([]GetOpengaussInstancesInstanceVolume)[vs[1].(int)]
	}).(GetOpengaussInstancesInstanceVolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceBackupStrategyInput)(nil)).Elem(), OpengaussInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceBackupStrategyPtrInput)(nil)).Elem(), OpengaussInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceDatastoreInput)(nil)).Elem(), OpengaussInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceDatastorePtrInput)(nil)).Elem(), OpengaussInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceHaInput)(nil)).Elem(), OpengaussInstanceHaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceHaPtrInput)(nil)).Elem(), OpengaussInstanceHaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceNodeInput)(nil)).Elem(), OpengaussInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceNodeArrayInput)(nil)).Elem(), OpengaussInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceVolumeInput)(nil)).Elem(), OpengaussInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceVolumePtrInput)(nil)).Elem(), OpengaussInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceBackupStrategyInput)(nil)).Elem(), GetOpengaussInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceBackupStrategyArrayInput)(nil)).Elem(), GetOpengaussInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceDatastoreInput)(nil)).Elem(), GetOpengaussInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceDatastoreArrayInput)(nil)).Elem(), GetOpengaussInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceHaInput)(nil)).Elem(), GetOpengaussInstanceHaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceHaArrayInput)(nil)).Elem(), GetOpengaussInstanceHaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceNodeInput)(nil)).Elem(), GetOpengaussInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceNodeArrayInput)(nil)).Elem(), GetOpengaussInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceVolumeInput)(nil)).Elem(), GetOpengaussInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstanceVolumeArrayInput)(nil)).Elem(), GetOpengaussInstanceVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceInput)(nil)).Elem(), GetOpengaussInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceArrayInput)(nil)).Elem(), GetOpengaussInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceBackupStrategyInput)(nil)).Elem(), GetOpengaussInstancesInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceBackupStrategyArrayInput)(nil)).Elem(), GetOpengaussInstancesInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceDatastoreInput)(nil)).Elem(), GetOpengaussInstancesInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceDatastoreArrayInput)(nil)).Elem(), GetOpengaussInstancesInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceHaInput)(nil)).Elem(), GetOpengaussInstancesInstanceHaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceHaArrayInput)(nil)).Elem(), GetOpengaussInstancesInstanceHaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceNodeInput)(nil)).Elem(), GetOpengaussInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceNodeArrayInput)(nil)).Elem(), GetOpengaussInstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceVolumeInput)(nil)).Elem(), GetOpengaussInstancesInstanceVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpengaussInstancesInstanceVolumeArrayInput)(nil)).Elem(), GetOpengaussInstancesInstanceVolumeArray{})
	pulumi.RegisterOutputType(OpengaussInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceHaOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceHaPtrOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceNodeOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceVolumeOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceVolumePtrOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceHaOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceHaArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceVolumeOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstanceVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceHaOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceHaArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceVolumeOutput{})
	pulumi.RegisterOutputType(GetOpengaussInstancesInstanceVolumeArrayOutput{})
}
