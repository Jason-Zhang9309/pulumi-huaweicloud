// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdbforopengauss

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GaussDB OpenGauss instance management within HuaweiCoud.
//
// ## Example Usage
//
// ## Import
//
// OpenGaussDB instance can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:GaussDBforOpenGauss/opengaussInstance:OpengaussInstance test ee678f40-ce8e-4d0c-8221-38dead426f06
//
// ```
type OpengaussInstance struct {
	pulumi.CustomResourceState

	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy.
	// The object structure is documented below.
	BackupStrategy OpengaussInstanceBackupStrategyOutput `pulumi:"backupStrategy"`
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId pulumi.StringPtrOutput `pulumi:"configurationId"`
	// Specifies the coordinator number. Values: 1~9. The default value is 3.
	// The value must not be greater than twice value of `shardingNum`.
	// This parameter is valid only when the HA mode is set to **enterprise**.
	CoordinatorNum pulumi.IntPtrOutput `pulumi:"coordinatorNum"`
	// Specifies the datastore information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore OpengaussInstanceDatastoreOutput `pulumi:"datastore"`
	// Indicates the default username.
	DbUserName pulumi.StringOutput `pulumi:"dbUserName"`
	// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
	Endpoints pulumi.StringArrayOutput `pulumi:"endpoints"`
	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrOutput `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications. Please reference the API docs for valid
	// options. Changing this parameter will create a new resource.
	Flavor pulumi.StringOutput `pulumi:"flavor"`
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport pulumi.BoolPtrOutput `pulumi:"forceImport"`
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHaOutput `pulumi:"ha"`
	// Indicates the maintenance window.
	MaintenanceWindow pulumi.StringOutput `pulumi:"maintenanceWindow"`
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes OpengaussInstanceNodeArrayOutput `pulumi:"nodes"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringOutput `pulumi:"password"`
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port pulumi.StringOutput `pulumi:"port"`
	// Indicates the private IP address of the DB instance.
	PrivateIps pulumi.StringArrayOutput `pulumi:"privateIps"`
	// Indicates the public IP address of the DB instance.
	PublicIps pulumi.StringArrayOutput `pulumi:"publicIps"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The replica number. The valid values are **2** and **3**, defaults to **3**.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// This parameter is valid only when the HA mode is set to **centralization_standard**.
	// Changing this parameter will create a new resource.
	ReplicaNum pulumi.IntPtrOutput `pulumi:"replicaNum"`
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId pulumi.StringPtrOutput `pulumi:"securityGroupId"`
	// Specifies the sharding number. The valid value is range form `1` to `9`.
	// The default value is 3. This parameter is valid only when the HA mode is set to **enterprise**.
	ShardingNum pulumi.IntPtrOutput `pulumi:"shardingNum"`
	// Indicates the node status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Indicates the switch strategy.
	SwitchStrategy pulumi.StringOutput `pulumi:"switchStrategy"`
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolumeOutput `pulumi:"volume"`
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewOpengaussInstance registers a new resource with the given unique name, arguments, and options.
func NewOpengaussInstance(ctx *pulumi.Context,
	name string, args *OpengaussInstanceArgs, opts ...pulumi.ResourceOption) (*OpengaussInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.Ha == nil {
		return nil, errors.New("invalid value for required argument 'Ha'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Volume == nil {
		return nil, errors.New("invalid value for required argument 'Volume'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource OpengaussInstance
	err := ctx.RegisterResource("huaweicloud:GaussDBforOpenGauss/opengaussInstance:OpengaussInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpengaussInstance gets an existing OpengaussInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpengaussInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpengaussInstanceState, opts ...pulumi.ResourceOption) (*OpengaussInstance, error) {
	var resource OpengaussInstance
	err := ctx.ReadResource("huaweicloud:GaussDBforOpenGauss/opengaussInstance:OpengaussInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpengaussInstance resources.
type opengaussInstanceState struct {
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy.
	// The object structure is documented below.
	BackupStrategy *OpengaussInstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId *string `pulumi:"configurationId"`
	// Specifies the coordinator number. Values: 1~9. The default value is 3.
	// The value must not be greater than twice value of `shardingNum`.
	// This parameter is valid only when the HA mode is set to **enterprise**.
	CoordinatorNum *int `pulumi:"coordinatorNum"`
	// Specifies the datastore information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore *OpengaussInstanceDatastore `pulumi:"datastore"`
	// Indicates the default username.
	DbUserName *string `pulumi:"dbUserName"`
	// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
	Endpoints []string `pulumi:"endpoints"`
	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications. Please reference the API docs for valid
	// options. Changing this parameter will create a new resource.
	Flavor *string `pulumi:"flavor"`
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport *bool `pulumi:"forceImport"`
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha *OpengaussInstanceHa `pulumi:"ha"`
	// Indicates the maintenance window.
	MaintenanceWindow *string `pulumi:"maintenanceWindow"`
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []OpengaussInstanceNode `pulumi:"nodes"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password *string `pulumi:"password"`
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port *string `pulumi:"port"`
	// Indicates the private IP address of the DB instance.
	PrivateIps []string `pulumi:"privateIps"`
	// Indicates the public IP address of the DB instance.
	PublicIps []string `pulumi:"publicIps"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The replica number. The valid values are **2** and **3**, defaults to **3**.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// This parameter is valid only when the HA mode is set to **centralization_standard**.
	// Changing this parameter will create a new resource.
	ReplicaNum *int `pulumi:"replicaNum"`
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the sharding number. The valid value is range form `1` to `9`.
	// The default value is 3. This parameter is valid only when the HA mode is set to **enterprise**.
	ShardingNum *int `pulumi:"shardingNum"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId *string `pulumi:"subnetId"`
	// Indicates the switch strategy.
	SwitchStrategy *string `pulumi:"switchStrategy"`
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type *string `pulumi:"type"`
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume *OpengaussInstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type OpengaussInstanceState struct {
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringPtrInput
	// Specifies the advanced backup policy.
	// The object structure is documented below.
	BackupStrategy OpengaussInstanceBackupStrategyPtrInput
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode pulumi.StringPtrInput
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId pulumi.StringPtrInput
	// Specifies the coordinator number. Values: 1~9. The default value is 3.
	// The value must not be greater than twice value of `shardingNum`.
	// This parameter is valid only when the HA mode is set to **enterprise**.
	CoordinatorNum pulumi.IntPtrInput
	// Specifies the datastore information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore OpengaussInstanceDatastorePtrInput
	// Indicates the default username.
	DbUserName pulumi.StringPtrInput
	// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
	Endpoints pulumi.StringArrayInput
	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the instance specifications. Please reference the API docs for valid
	// options. Changing this parameter will create a new resource.
	Flavor pulumi.StringPtrInput
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport pulumi.BoolPtrInput
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHaPtrInput
	// Indicates the maintenance window.
	MaintenanceWindow pulumi.StringPtrInput
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput
	// Indicates the instance nodes information. Structure is documented below.
	Nodes OpengaussInstanceNodeArrayInput
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringPtrInput
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port pulumi.StringPtrInput
	// Indicates the private IP address of the DB instance.
	PrivateIps pulumi.StringArrayInput
	// Indicates the public IP address of the DB instance.
	PublicIps pulumi.StringArrayInput
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The replica number. The valid values are **2** and **3**, defaults to **3**.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// This parameter is valid only when the HA mode is set to **centralization_standard**.
	// Changing this parameter will create a new resource.
	ReplicaNum pulumi.IntPtrInput
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the sharding number. The valid value is range form `1` to `9`.
	// The default value is 3. This parameter is valid only when the HA mode is set to **enterprise**.
	ShardingNum pulumi.IntPtrInput
	// Indicates the node status.
	Status pulumi.StringPtrInput
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringPtrInput
	// Indicates the switch strategy.
	SwitchStrategy pulumi.StringPtrInput
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type pulumi.StringPtrInput
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolumePtrInput
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (OpengaussInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*opengaussInstanceState)(nil)).Elem()
}

type opengaussInstanceArgs struct {
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy.
	// The object structure is documented below.
	BackupStrategy *OpengaussInstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId *string `pulumi:"configurationId"`
	// Specifies the coordinator number. Values: 1~9. The default value is 3.
	// The value must not be greater than twice value of `shardingNum`.
	// This parameter is valid only when the HA mode is set to **enterprise**.
	CoordinatorNum *int `pulumi:"coordinatorNum"`
	// Specifies the datastore information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore *OpengaussInstanceDatastore `pulumi:"datastore"`
	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications. Please reference the API docs for valid
	// options. Changing this parameter will create a new resource.
	Flavor string `pulumi:"flavor"`
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport *bool `pulumi:"forceImport"`
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHa `pulumi:"ha"`
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password string `pulumi:"password"`
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port *string `pulumi:"port"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The replica number. The valid values are **2** and **3**, defaults to **3**.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// This parameter is valid only when the HA mode is set to **centralization_standard**.
	// Changing this parameter will create a new resource.
	ReplicaNum *int `pulumi:"replicaNum"`
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the sharding number. The valid value is range form `1` to `9`.
	// The default value is 3. This parameter is valid only when the HA mode is set to **enterprise**.
	ShardingNum *int `pulumi:"shardingNum"`
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId string `pulumi:"subnetId"`
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a OpengaussInstance resource.
type OpengaussInstanceArgs struct {
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringInput
	// Specifies the advanced backup policy.
	// The object structure is documented below.
	BackupStrategy OpengaussInstanceBackupStrategyPtrInput
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode pulumi.StringPtrInput
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId pulumi.StringPtrInput
	// Specifies the coordinator number. Values: 1~9. The default value is 3.
	// The value must not be greater than twice value of `shardingNum`.
	// This parameter is valid only when the HA mode is set to **enterprise**.
	CoordinatorNum pulumi.IntPtrInput
	// Specifies the datastore information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore OpengaussInstanceDatastorePtrInput
	// Specifies the enterprise project ID.
	// Changing this parameter will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the instance specifications. Please reference the API docs for valid
	// options. Changing this parameter will create a new resource.
	Flavor pulumi.StringInput
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport pulumi.BoolPtrInput
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHaInput
	// Specifies the instance name, which can be the same as an existing instance name.
	// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringInput
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port pulumi.StringPtrInput
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The replica number. The valid values are **2** and **3**, defaults to **3**.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// This parameter is valid only when the HA mode is set to **centralization_standard**.
	// Changing this parameter will create a new resource.
	ReplicaNum pulumi.IntPtrInput
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the sharding number. The valid value is range form `1` to `9`.
	// The default value is 3. This parameter is valid only when the HA mode is set to **enterprise**.
	ShardingNum pulumi.IntPtrInput
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringInput
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolumeInput
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (OpengaussInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*opengaussInstanceArgs)(nil)).Elem()
}

type OpengaussInstanceInput interface {
	pulumi.Input

	ToOpengaussInstanceOutput() OpengaussInstanceOutput
	ToOpengaussInstanceOutputWithContext(ctx context.Context) OpengaussInstanceOutput
}

func (*OpengaussInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstance)(nil)).Elem()
}

func (i *OpengaussInstance) ToOpengaussInstanceOutput() OpengaussInstanceOutput {
	return i.ToOpengaussInstanceOutputWithContext(context.Background())
}

func (i *OpengaussInstance) ToOpengaussInstanceOutputWithContext(ctx context.Context) OpengaussInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceOutput)
}

// OpengaussInstanceArrayInput is an input type that accepts OpengaussInstanceArray and OpengaussInstanceArrayOutput values.
// You can construct a concrete instance of `OpengaussInstanceArrayInput` via:
//
//	OpengaussInstanceArray{ OpengaussInstanceArgs{...} }
type OpengaussInstanceArrayInput interface {
	pulumi.Input

	ToOpengaussInstanceArrayOutput() OpengaussInstanceArrayOutput
	ToOpengaussInstanceArrayOutputWithContext(context.Context) OpengaussInstanceArrayOutput
}

type OpengaussInstanceArray []OpengaussInstanceInput

func (OpengaussInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpengaussInstance)(nil)).Elem()
}

func (i OpengaussInstanceArray) ToOpengaussInstanceArrayOutput() OpengaussInstanceArrayOutput {
	return i.ToOpengaussInstanceArrayOutputWithContext(context.Background())
}

func (i OpengaussInstanceArray) ToOpengaussInstanceArrayOutputWithContext(ctx context.Context) OpengaussInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceArrayOutput)
}

// OpengaussInstanceMapInput is an input type that accepts OpengaussInstanceMap and OpengaussInstanceMapOutput values.
// You can construct a concrete instance of `OpengaussInstanceMapInput` via:
//
//	OpengaussInstanceMap{ "key": OpengaussInstanceArgs{...} }
type OpengaussInstanceMapInput interface {
	pulumi.Input

	ToOpengaussInstanceMapOutput() OpengaussInstanceMapOutput
	ToOpengaussInstanceMapOutputWithContext(context.Context) OpengaussInstanceMapOutput
}

type OpengaussInstanceMap map[string]OpengaussInstanceInput

func (OpengaussInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpengaussInstance)(nil)).Elem()
}

func (i OpengaussInstanceMap) ToOpengaussInstanceMapOutput() OpengaussInstanceMapOutput {
	return i.ToOpengaussInstanceMapOutputWithContext(context.Background())
}

func (i OpengaussInstanceMap) ToOpengaussInstanceMapOutputWithContext(ctx context.Context) OpengaussInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceMapOutput)
}

type OpengaussInstanceOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstance)(nil)).Elem()
}

func (o OpengaussInstanceOutput) ToOpengaussInstanceOutput() OpengaussInstanceOutput {
	return o
}

func (o OpengaussInstanceOutput) ToOpengaussInstanceOutputWithContext(ctx context.Context) OpengaussInstanceOutput {
	return o
}

// Specifies whether auto renew is enabled.
// Valid values are **true** and **false**. Defaults to **false**.
func (o OpengaussInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the availability zone information, can be three same or
// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Specifies the advanced backup policy.
// The object structure is documented below.
func (o OpengaussInstanceOutput) BackupStrategy() OpengaussInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceBackupStrategyOutput { return v.BackupStrategy }).(OpengaussInstanceBackupStrategyOutput)
}

// Specifies the charging mode of opengauss instance.
// The valid values are as follows:
// + **prePaid**: the yearly/monthly billing mode.
// + **postPaid**: the pay-per-use billing mode.
func (o OpengaussInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies the parameter template ID.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// Specifies the coordinator number. Values: 1~9. The default value is 3.
// The value must not be greater than twice value of `shardingNum`.
// This parameter is valid only when the HA mode is set to **enterprise**.
func (o OpengaussInstanceOutput) CoordinatorNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.CoordinatorNum }).(pulumi.IntPtrOutput)
}

// Specifies the datastore information.
// The object structure is documented below.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Datastore() OpengaussInstanceDatastoreOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceDatastoreOutput { return v.Datastore }).(OpengaussInstanceDatastoreOutput)
}

// Indicates the default username.
func (o OpengaussInstanceOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.DbUserName }).(pulumi.StringOutput)
}

// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
func (o OpengaussInstanceOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringArrayOutput { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Specifies the enterprise project ID.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the instance specifications. Please reference the API docs for valid
// options. Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

// Specifies whether to import the instance with the given configuration instead of
// creation. If specified, try to import the instance instead of creation if the instance already existed.
func (o OpengaussInstanceOutput) ForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.BoolPtrOutput { return v.ForceImport }).(pulumi.BoolPtrOutput)
}

// Specifies the HA information.
// The object structure is documented below.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Ha() OpengaussInstanceHaOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceHaOutput { return v.Ha }).(OpengaussInstanceHaOutput)
}

// Indicates the maintenance window.
func (o OpengaussInstanceOutput) MaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.MaintenanceWindow }).(pulumi.StringOutput)
}

// Specifies the instance name, which can be the same as an existing instance name.
// The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
// letters, digits, hyphens (-), and underscores (_).
func (o OpengaussInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o OpengaussInstanceOutput) Nodes() OpengaussInstanceNodeArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceNodeArrayOutput { return v.Nodes }).(OpengaussInstanceNodeArrayOutput)
}

// Specifies the database password. The value must be `8` to `32` characters in length,
// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
// to enter a strong password to improve security, preventing security risks such as brute force cracking.
func (o OpengaussInstanceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Specifies the charging period of opengauss instance.
// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
// This parameter is mandatory if `chargingMode` is set to **prePaid**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of opengauss instance.
// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Specifies the port information. Defaults to `8,000`.
// The valid values are as follows:
// + `2,378` to `2,380`
func (o OpengaussInstanceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Indicates the private IP address of the DB instance.
func (o OpengaussInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Indicates the public IP address of the DB instance.
func (o OpengaussInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// Specifies the region in which to create the instance.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The replica number. The valid values are **2** and **3**, defaults to **3**.
// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
// This parameter is valid only when the HA mode is set to **centralization_standard**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) ReplicaNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.ReplicaNum }).(pulumi.IntPtrOutput)
}

// Specifies the security group ID to which the instance belongs.
// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
// includes the `100` ports starting with the database port.
// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
func (o OpengaussInstanceOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// Specifies the sharding number. The valid value is range form `1` to `9`.
// The default value is 3. This parameter is valid only when the HA mode is set to **enterprise**.
func (o OpengaussInstanceOutput) ShardingNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.ShardingNum }).(pulumi.IntPtrOutput)
}

// Indicates the node status.
func (o OpengaussInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of VPC subnet to which the instance belongs.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the switch strategy.
func (o OpengaussInstanceOutput) SwitchStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.SwitchStrategy }).(pulumi.StringOutput)
}

// Specifies the time zone. Defaults to **UTC+08:00**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the volume type. Only **ULTRAHIGH** is supported now.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the volume storage information.
// The object structure is documented below.
func (o OpengaussInstanceOutput) Volume() OpengaussInstanceVolumeOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceVolumeOutput { return v.Volume }).(OpengaussInstanceVolumeOutput)
}

// Specifies the VPC ID to which the subnet belongs.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type OpengaussInstanceArrayOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpengaussInstance)(nil)).Elem()
}

func (o OpengaussInstanceArrayOutput) ToOpengaussInstanceArrayOutput() OpengaussInstanceArrayOutput {
	return o
}

func (o OpengaussInstanceArrayOutput) ToOpengaussInstanceArrayOutputWithContext(ctx context.Context) OpengaussInstanceArrayOutput {
	return o
}

func (o OpengaussInstanceArrayOutput) Index(i pulumi.IntInput) OpengaussInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpengaussInstance {
		return vs[0].([]*OpengaussInstance)[vs[1].(int)]
	}).(OpengaussInstanceOutput)
}

type OpengaussInstanceMapOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpengaussInstance)(nil)).Elem()
}

func (o OpengaussInstanceMapOutput) ToOpengaussInstanceMapOutput() OpengaussInstanceMapOutput {
	return o
}

func (o OpengaussInstanceMapOutput) ToOpengaussInstanceMapOutputWithContext(ctx context.Context) OpengaussInstanceMapOutput {
	return o
}

func (o OpengaussInstanceMapOutput) MapIndex(k pulumi.StringInput) OpengaussInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpengaussInstance {
		return vs[0].(map[string]*OpengaussInstance)[vs[1].(string)]
	}).(OpengaussInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceInput)(nil)).Elem(), &OpengaussInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceArrayInput)(nil)).Elem(), OpengaussInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceMapInput)(nil)).Elem(), OpengaussInstanceMap{})
	pulumi.RegisterOutputType(OpengaussInstanceOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceArrayOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceMapOutput{})
}
