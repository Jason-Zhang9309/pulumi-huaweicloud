// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdbforopengauss

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GaussDB OpenGauss instance management within HuaweiCould.
//
// ## Example Usage
//
// ## Import
//
// OpenGaussDB instance can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:GaussDBforOpenGauss/opengaussInstance:OpengaussInstance test <id>
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to the attribute missing from the API response. The missing attributes include`password`, `ha.0.mode`, `ha.0.instance_mode`, `configuration_id`, `disk_encryption_id`, `enable_force_switch`, `enable_single_float_ip`, `parameters`, `period_unit`, `period` and `auto_renew`. It is generally recommended running `terraform plan` after importing a GaussDB OpenGauss instance. You can then decide if changes should be applied to the GaussDB OpenGauss instance, or the resource definition should be updated to align with the GaussDB OpenGauss instance. Also you can ignore changes as below. hcl resource "huaweicloud_gaussdb_opengauss_instance" "test" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	password, configuration_id, disk_encryption_id, enable_force_switch, enable_single_float_ip, parameters, period_unit,
//
//	period, auto_renew,
//
//	]
//
//	} }
type OpengaussInstance struct {
	pulumi.CustomResourceState

	// Specifies the advanced features.
	// The advanceFeatures structure is documented below.
	AdvanceFeatures OpengaussInstanceAdvanceFeatureArrayOutput `pulumi:"advanceFeatures"`
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy.
	// The backupStrategy structure is documented below.
	BackupStrategy OpengaussInstanceBackupStrategyOutput `pulumi:"backupStrategy"`
	// Indicates whether the host load is balanced due to a primary/standby switchover.
	BalanceStatus pulumi.BoolOutput `pulumi:"balanceStatus"`
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId pulumi.StringPtrOutput `pulumi:"configurationId"`
	// Specifies the coordinator number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	// The value must not be greater than twice value of `shardingNum`.
	CoordinatorNum pulumi.IntPtrOutput `pulumi:"coordinatorNum"`
	// Specifies the datastore information.
	// The datastore structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore OpengaussInstanceDatastoreOutput `pulumi:"datastore"`
	// Indicates the default username.
	DbUserName pulumi.StringOutput `pulumi:"dbUserName"`
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId pulumi.StringPtrOutput `pulumi:"diskEncryptionId"`
	// Specifies whether to forcibly promote a standby node to primary.
	// Defaults to **false**. Changing this parameter will create a new resource.
	EnableForceSwitch pulumi.BoolPtrOutput `pulumi:"enableForceSwitch"`
	// Specifies whether to enable single floating IP address policy,
	// which is only suitable for primary/standby instances. Value options:
	// + **true**: This function is enabled. Only one floating IP address is bound to the primary node of a DB instance. If a
	//   primary/standby fail over occurs, the floating IP address does not change.
	// + **false (default value)**: The function is disabled. Each node is bound to a floating IP address. If a primary/standby
	//   fail over occurs, the floating IP addresses change.
	EnableSingleFloatIp pulumi.BoolPtrOutput `pulumi:"enableSingleFloatIp"`
	// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
	Endpoints pulumi.StringArrayOutput `pulumi:"endpoints"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Indicates whether error log collection is enabled. The value can be:
	// + **ON**: enabled
	// + **OFF**: disabled
	ErrorLogSwitchStatus pulumi.StringOutput `pulumi:"errorLogSwitchStatus"`
	// Specifies the instance specifications.
	Flavor pulumi.StringOutput `pulumi:"flavor"`
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport pulumi.BoolPtrOutput `pulumi:"forceImport"`
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHaOutput `pulumi:"ha"`
	// Indicates the maintenance window.
	MaintenanceWindow pulumi.StringOutput `pulumi:"maintenanceWindow"`
	// Specifies the port for MySQL compatibility. Value range: **0** or
	// **1024** to **39989**.
	// + The following ports are used by the system and cannot be used: **2378**, **2379**, **2380**, **2400**, **4999**,
	//   **5000**, **5001**, **5100**, **5500**, **5999**, **6000**, **6001**, **6009**, **6010**, **6500**, **8015**, **8097**,
	//   **8098**, **8181**, **9090**, **9100**, **9180**, **9187**, **9200**, **12016**, **12017**, **20049**, **20050**,
	//   **21731**, **21732**, **32122**, **32123**, **32124**, **32125**, **32126**, **39001**,
	//   **[Database port, Database port + 10]**.
	// + If the value is **0**, the MySQL compatibility port is disabled.
	MysqlCompatibilityPort pulumi.StringOutput `pulumi:"mysqlCompatibilityPort"`
	// Specifies the name of the advance feature.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes OpengaussInstanceNodeArrayOutput `pulumi:"nodes"`
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters OpengaussInstanceParameterArrayOutput `pulumi:"parameters"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringOutput `pulumi:"password"`
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port pulumi.StringOutput `pulumi:"port"`
	// Indicates the private IP address of the DB instance.
	PrivateIps pulumi.StringArrayOutput `pulumi:"privateIps"`
	// Indicates the public IP address of the DB instance.
	PublicIps pulumi.StringArrayOutput `pulumi:"publicIps"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The replica number. The valid values are `2` and `3`, defaults to `3`.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// Changing this parameter will create a new resource.
	ReplicaNum pulumi.IntPtrOutput `pulumi:"replicaNum"`
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies the sharding number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	ShardingNum pulumi.IntPtrOutput `pulumi:"shardingNum"`
	// Indicates the node status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Indicates the switch strategy.
	SwitchStrategy pulumi.StringOutput `pulumi:"switchStrategy"`
	// Specifies the key/value pairs to associate with the GaussDB OpenGauss instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolumeOutput `pulumi:"volume"`
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewOpengaussInstance registers a new resource with the given unique name, arguments, and options.
func NewOpengaussInstance(ctx *pulumi.Context,
	name string, args *OpengaussInstanceArgs, opts ...pulumi.ResourceOption) (*OpengaussInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.Ha == nil {
		return nil, errors.New("invalid value for required argument 'Ha'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Volume == nil {
		return nil, errors.New("invalid value for required argument 'Volume'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource OpengaussInstance
	err := ctx.RegisterResource("huaweicloud:GaussDBforOpenGauss/opengaussInstance:OpengaussInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpengaussInstance gets an existing OpengaussInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpengaussInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpengaussInstanceState, opts ...pulumi.ResourceOption) (*OpengaussInstance, error) {
	var resource OpengaussInstance
	err := ctx.ReadResource("huaweicloud:GaussDBforOpenGauss/opengaussInstance:OpengaussInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpengaussInstance resources.
type opengaussInstanceState struct {
	// Specifies the advanced features.
	// The advanceFeatures structure is documented below.
	AdvanceFeatures []OpengaussInstanceAdvanceFeature `pulumi:"advanceFeatures"`
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy.
	// The backupStrategy structure is documented below.
	BackupStrategy *OpengaussInstanceBackupStrategy `pulumi:"backupStrategy"`
	// Indicates whether the host load is balanced due to a primary/standby switchover.
	BalanceStatus *bool `pulumi:"balanceStatus"`
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId *string `pulumi:"configurationId"`
	// Specifies the coordinator number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	// The value must not be greater than twice value of `shardingNum`.
	CoordinatorNum *int `pulumi:"coordinatorNum"`
	// Specifies the datastore information.
	// The datastore structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore *OpengaussInstanceDatastore `pulumi:"datastore"`
	// Indicates the default username.
	DbUserName *string `pulumi:"dbUserName"`
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	// Specifies whether to forcibly promote a standby node to primary.
	// Defaults to **false**. Changing this parameter will create a new resource.
	EnableForceSwitch *bool `pulumi:"enableForceSwitch"`
	// Specifies whether to enable single floating IP address policy,
	// which is only suitable for primary/standby instances. Value options:
	// + **true**: This function is enabled. Only one floating IP address is bound to the primary node of a DB instance. If a
	//   primary/standby fail over occurs, the floating IP address does not change.
	// + **false (default value)**: The function is disabled. Each node is bound to a floating IP address. If a primary/standby
	//   fail over occurs, the floating IP addresses change.
	EnableSingleFloatIp *bool `pulumi:"enableSingleFloatIp"`
	// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
	Endpoints []string `pulumi:"endpoints"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Indicates whether error log collection is enabled. The value can be:
	// + **ON**: enabled
	// + **OFF**: disabled
	ErrorLogSwitchStatus *string `pulumi:"errorLogSwitchStatus"`
	// Specifies the instance specifications.
	Flavor *string `pulumi:"flavor"`
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport *bool `pulumi:"forceImport"`
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha *OpengaussInstanceHa `pulumi:"ha"`
	// Indicates the maintenance window.
	MaintenanceWindow *string `pulumi:"maintenanceWindow"`
	// Specifies the port for MySQL compatibility. Value range: **0** or
	// **1024** to **39989**.
	// + The following ports are used by the system and cannot be used: **2378**, **2379**, **2380**, **2400**, **4999**,
	//   **5000**, **5001**, **5100**, **5500**, **5999**, **6000**, **6001**, **6009**, **6010**, **6500**, **8015**, **8097**,
	//   **8098**, **8181**, **9090**, **9100**, **9180**, **9187**, **9200**, **12016**, **12017**, **20049**, **20050**,
	//   **21731**, **21732**, **32122**, **32123**, **32124**, **32125**, **32126**, **39001**,
	//   **[Database port, Database port + 10]**.
	// + If the value is **0**, the MySQL compatibility port is disabled.
	MysqlCompatibilityPort *string `pulumi:"mysqlCompatibilityPort"`
	// Specifies the name of the advance feature.
	Name *string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []OpengaussInstanceNode `pulumi:"nodes"`
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters []OpengaussInstanceParameter `pulumi:"parameters"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password *string `pulumi:"password"`
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port *string `pulumi:"port"`
	// Indicates the private IP address of the DB instance.
	PrivateIps []string `pulumi:"privateIps"`
	// Indicates the public IP address of the DB instance.
	PublicIps []string `pulumi:"publicIps"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The replica number. The valid values are `2` and `3`, defaults to `3`.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// Changing this parameter will create a new resource.
	ReplicaNum *int `pulumi:"replicaNum"`
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the sharding number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	ShardingNum *int `pulumi:"shardingNum"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId *string `pulumi:"subnetId"`
	// Indicates the switch strategy.
	SwitchStrategy *string `pulumi:"switchStrategy"`
	// Specifies the key/value pairs to associate with the GaussDB OpenGauss instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type *string `pulumi:"type"`
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume *OpengaussInstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type OpengaussInstanceState struct {
	// Specifies the advanced features.
	// The advanceFeatures structure is documented below.
	AdvanceFeatures OpengaussInstanceAdvanceFeatureArrayInput
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringPtrInput
	// Specifies the advanced backup policy.
	// The backupStrategy structure is documented below.
	BackupStrategy OpengaussInstanceBackupStrategyPtrInput
	// Indicates whether the host load is balanced due to a primary/standby switchover.
	BalanceStatus pulumi.BoolPtrInput
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode pulumi.StringPtrInput
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId pulumi.StringPtrInput
	// Specifies the coordinator number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	// The value must not be greater than twice value of `shardingNum`.
	CoordinatorNum pulumi.IntPtrInput
	// Specifies the datastore information.
	// The datastore structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore OpengaussInstanceDatastorePtrInput
	// Indicates the default username.
	DbUserName pulumi.StringPtrInput
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId pulumi.StringPtrInput
	// Specifies whether to forcibly promote a standby node to primary.
	// Defaults to **false**. Changing this parameter will create a new resource.
	EnableForceSwitch pulumi.BoolPtrInput
	// Specifies whether to enable single floating IP address policy,
	// which is only suitable for primary/standby instances. Value options:
	// + **true**: This function is enabled. Only one floating IP address is bound to the primary node of a DB instance. If a
	//   primary/standby fail over occurs, the floating IP address does not change.
	// + **false (default value)**: The function is disabled. Each node is bound to a floating IP address. If a primary/standby
	//   fail over occurs, the floating IP addresses change.
	EnableSingleFloatIp pulumi.BoolPtrInput
	// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
	Endpoints pulumi.StringArrayInput
	// Specifies the enterprise project ID.
	EnterpriseProjectId pulumi.StringPtrInput
	// Indicates whether error log collection is enabled. The value can be:
	// + **ON**: enabled
	// + **OFF**: disabled
	ErrorLogSwitchStatus pulumi.StringPtrInput
	// Specifies the instance specifications.
	Flavor pulumi.StringPtrInput
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport pulumi.BoolPtrInput
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHaPtrInput
	// Indicates the maintenance window.
	MaintenanceWindow pulumi.StringPtrInput
	// Specifies the port for MySQL compatibility. Value range: **0** or
	// **1024** to **39989**.
	// + The following ports are used by the system and cannot be used: **2378**, **2379**, **2380**, **2400**, **4999**,
	//   **5000**, **5001**, **5100**, **5500**, **5999**, **6000**, **6001**, **6009**, **6010**, **6500**, **8015**, **8097**,
	//   **8098**, **8181**, **9090**, **9100**, **9180**, **9187**, **9200**, **12016**, **12017**, **20049**, **20050**,
	//   **21731**, **21732**, **32122**, **32123**, **32124**, **32125**, **32126**, **39001**,
	//   **[Database port, Database port + 10]**.
	// + If the value is **0**, the MySQL compatibility port is disabled.
	MysqlCompatibilityPort pulumi.StringPtrInput
	// Specifies the name of the advance feature.
	Name pulumi.StringPtrInput
	// Indicates the instance nodes information. Structure is documented below.
	Nodes OpengaussInstanceNodeArrayInput
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters OpengaussInstanceParameterArrayInput
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringPtrInput
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port pulumi.StringPtrInput
	// Indicates the private IP address of the DB instance.
	PrivateIps pulumi.StringArrayInput
	// Indicates the public IP address of the DB instance.
	PublicIps pulumi.StringArrayInput
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The replica number. The valid values are `2` and `3`, defaults to `3`.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// Changing this parameter will create a new resource.
	ReplicaNum pulumi.IntPtrInput
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the sharding number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	ShardingNum pulumi.IntPtrInput
	// Indicates the node status.
	Status pulumi.StringPtrInput
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringPtrInput
	// Indicates the switch strategy.
	SwitchStrategy pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the GaussDB OpenGauss instance.
	Tags pulumi.StringMapInput
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume type. Only **ULTRAHIGH** is supported now.
	// Changing this parameter will create a new resource.
	Type pulumi.StringPtrInput
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolumePtrInput
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (OpengaussInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*opengaussInstanceState)(nil)).Elem()
}

type opengaussInstanceArgs struct {
	// Specifies the advanced features.
	// The advanceFeatures structure is documented below.
	AdvanceFeatures []OpengaussInstanceAdvanceFeature `pulumi:"advanceFeatures"`
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Specifies the advanced backup policy.
	// The backupStrategy structure is documented below.
	BackupStrategy *OpengaussInstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId *string `pulumi:"configurationId"`
	// Specifies the coordinator number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	// The value must not be greater than twice value of `shardingNum`.
	CoordinatorNum *int `pulumi:"coordinatorNum"`
	// Specifies the datastore information.
	// The datastore structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore *OpengaussInstanceDatastore `pulumi:"datastore"`
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId *string `pulumi:"diskEncryptionId"`
	// Specifies whether to forcibly promote a standby node to primary.
	// Defaults to **false**. Changing this parameter will create a new resource.
	EnableForceSwitch *bool `pulumi:"enableForceSwitch"`
	// Specifies whether to enable single floating IP address policy,
	// which is only suitable for primary/standby instances. Value options:
	// + **true**: This function is enabled. Only one floating IP address is bound to the primary node of a DB instance. If a
	//   primary/standby fail over occurs, the floating IP address does not change.
	// + **false (default value)**: The function is disabled. Each node is bound to a floating IP address. If a primary/standby
	//   fail over occurs, the floating IP addresses change.
	EnableSingleFloatIp *bool `pulumi:"enableSingleFloatIp"`
	// Specifies the enterprise project ID.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications.
	Flavor string `pulumi:"flavor"`
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport *bool `pulumi:"forceImport"`
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHa `pulumi:"ha"`
	// Specifies the port for MySQL compatibility. Value range: **0** or
	// **1024** to **39989**.
	// + The following ports are used by the system and cannot be used: **2378**, **2379**, **2380**, **2400**, **4999**,
	//   **5000**, **5001**, **5100**, **5500**, **5999**, **6000**, **6001**, **6009**, **6010**, **6500**, **8015**, **8097**,
	//   **8098**, **8181**, **9090**, **9100**, **9180**, **9187**, **9200**, **12016**, **12017**, **20049**, **20050**,
	//   **21731**, **21732**, **32122**, **32123**, **32124**, **32125**, **32126**, **39001**,
	//   **[Database port, Database port + 10]**.
	// + If the value is **0**, the MySQL compatibility port is disabled.
	MysqlCompatibilityPort *string `pulumi:"mysqlCompatibilityPort"`
	// Specifies the name of the advance feature.
	Name *string `pulumi:"name"`
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters []OpengaussInstanceParameter `pulumi:"parameters"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password string `pulumi:"password"`
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port *string `pulumi:"port"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The replica number. The valid values are `2` and `3`, defaults to `3`.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// Changing this parameter will create a new resource.
	ReplicaNum *int `pulumi:"replicaNum"`
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the sharding number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	ShardingNum *int `pulumi:"shardingNum"`
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId string `pulumi:"subnetId"`
	// Specifies the key/value pairs to associate with the GaussDB OpenGauss instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolume `pulumi:"volume"`
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a OpengaussInstance resource.
type OpengaussInstanceArgs struct {
	// Specifies the advanced features.
	// The advanceFeatures structure is documented below.
	AdvanceFeatures OpengaussInstanceAdvanceFeatureArrayInput
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**. Defaults to **false**.
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone information, can be three same or
	// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
	AvailabilityZone pulumi.StringInput
	// Specifies the advanced backup policy.
	// The backupStrategy structure is documented below.
	BackupStrategy OpengaussInstanceBackupStrategyPtrInput
	// Specifies the charging mode of opengauss instance.
	// The valid values are as follows:
	// + **prePaid**: the yearly/monthly billing mode.
	// + **postPaid**: the pay-per-use billing mode.
	ChargingMode pulumi.StringPtrInput
	// Specifies the parameter template ID.
	// Changing this parameter will create a new resource.
	ConfigurationId pulumi.StringPtrInput
	// Specifies the coordinator number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	// The value must not be greater than twice value of `shardingNum`.
	CoordinatorNum pulumi.IntPtrInput
	// Specifies the datastore information.
	// The datastore structure is documented below.
	// Changing this parameter will create a new resource.
	Datastore OpengaussInstanceDatastorePtrInput
	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	DiskEncryptionId pulumi.StringPtrInput
	// Specifies whether to forcibly promote a standby node to primary.
	// Defaults to **false**. Changing this parameter will create a new resource.
	EnableForceSwitch pulumi.BoolPtrInput
	// Specifies whether to enable single floating IP address policy,
	// which is only suitable for primary/standby instances. Value options:
	// + **true**: This function is enabled. Only one floating IP address is bound to the primary node of a DB instance. If a
	//   primary/standby fail over occurs, the floating IP address does not change.
	// + **false (default value)**: The function is disabled. Each node is bound to a floating IP address. If a primary/standby
	//   fail over occurs, the floating IP addresses change.
	EnableSingleFloatIp pulumi.BoolPtrInput
	// Specifies the enterprise project ID.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the instance specifications.
	Flavor pulumi.StringInput
	// Specifies whether to import the instance with the given configuration instead of
	// creation. If specified, try to import the instance instead of creation if the instance already existed.
	ForceImport pulumi.BoolPtrInput
	// Specifies the HA information.
	// The object structure is documented below.
	// Changing this parameter will create a new resource.
	Ha OpengaussInstanceHaInput
	// Specifies the port for MySQL compatibility. Value range: **0** or
	// **1024** to **39989**.
	// + The following ports are used by the system and cannot be used: **2378**, **2379**, **2380**, **2400**, **4999**,
	//   **5000**, **5001**, **5100**, **5500**, **5999**, **6000**, **6001**, **6009**, **6010**, **6500**, **8015**, **8097**,
	//   **8098**, **8181**, **9090**, **9100**, **9180**, **9187**, **9200**, **12016**, **12017**, **20049**, **20050**,
	//   **21731**, **21732**, **32122**, **32123**, **32124**, **32125**, **32126**, **39001**,
	//   **[Database port, Database port + 10]**.
	// + If the value is **0**, the MySQL compatibility port is disabled.
	MysqlCompatibilityPort pulumi.StringPtrInput
	// Specifies the name of the advance feature.
	Name pulumi.StringPtrInput
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters OpengaussInstanceParameterArrayInput
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
	// to enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringInput
	// Specifies the charging period of opengauss instance.
	// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
	// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of opengauss instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this parameter will create a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the port information. Defaults to `8,000`.
	// The valid values are as follows:
	// + `2,378` to `2,380`
	Port pulumi.StringPtrInput
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The replica number. The valid values are `2` and `3`, defaults to `3`.
	// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
	// Changing this parameter will create a new resource.
	ReplicaNum pulumi.IntPtrInput
	// Specifies the security group ID to which the instance belongs.
	// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
	// includes the `100` ports starting with the database port.
	// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the sharding number.\
	// The valid value is range form `1` to `9`. The default value is `3`.
	ShardingNum pulumi.IntPtrInput
	// Specifies the network ID of VPC subnet to which the instance belongs.
	// Changing this parameter will create a new resource.
	SubnetId pulumi.StringInput
	// Specifies the key/value pairs to associate with the GaussDB OpenGauss instance.
	Tags pulumi.StringMapInput
	// Specifies the time zone. Defaults to **UTC+08:00**.
	// Changing this parameter will create a new resource.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume storage information.
	// The object structure is documented below.
	Volume OpengaussInstanceVolumeInput
	// Specifies the VPC ID to which the subnet belongs.
	// Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (OpengaussInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*opengaussInstanceArgs)(nil)).Elem()
}

type OpengaussInstanceInput interface {
	pulumi.Input

	ToOpengaussInstanceOutput() OpengaussInstanceOutput
	ToOpengaussInstanceOutputWithContext(ctx context.Context) OpengaussInstanceOutput
}

func (*OpengaussInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstance)(nil)).Elem()
}

func (i *OpengaussInstance) ToOpengaussInstanceOutput() OpengaussInstanceOutput {
	return i.ToOpengaussInstanceOutputWithContext(context.Background())
}

func (i *OpengaussInstance) ToOpengaussInstanceOutputWithContext(ctx context.Context) OpengaussInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceOutput)
}

// OpengaussInstanceArrayInput is an input type that accepts OpengaussInstanceArray and OpengaussInstanceArrayOutput values.
// You can construct a concrete instance of `OpengaussInstanceArrayInput` via:
//
//	OpengaussInstanceArray{ OpengaussInstanceArgs{...} }
type OpengaussInstanceArrayInput interface {
	pulumi.Input

	ToOpengaussInstanceArrayOutput() OpengaussInstanceArrayOutput
	ToOpengaussInstanceArrayOutputWithContext(context.Context) OpengaussInstanceArrayOutput
}

type OpengaussInstanceArray []OpengaussInstanceInput

func (OpengaussInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpengaussInstance)(nil)).Elem()
}

func (i OpengaussInstanceArray) ToOpengaussInstanceArrayOutput() OpengaussInstanceArrayOutput {
	return i.ToOpengaussInstanceArrayOutputWithContext(context.Background())
}

func (i OpengaussInstanceArray) ToOpengaussInstanceArrayOutputWithContext(ctx context.Context) OpengaussInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceArrayOutput)
}

// OpengaussInstanceMapInput is an input type that accepts OpengaussInstanceMap and OpengaussInstanceMapOutput values.
// You can construct a concrete instance of `OpengaussInstanceMapInput` via:
//
//	OpengaussInstanceMap{ "key": OpengaussInstanceArgs{...} }
type OpengaussInstanceMapInput interface {
	pulumi.Input

	ToOpengaussInstanceMapOutput() OpengaussInstanceMapOutput
	ToOpengaussInstanceMapOutputWithContext(context.Context) OpengaussInstanceMapOutput
}

type OpengaussInstanceMap map[string]OpengaussInstanceInput

func (OpengaussInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpengaussInstance)(nil)).Elem()
}

func (i OpengaussInstanceMap) ToOpengaussInstanceMapOutput() OpengaussInstanceMapOutput {
	return i.ToOpengaussInstanceMapOutputWithContext(context.Background())
}

func (i OpengaussInstanceMap) ToOpengaussInstanceMapOutputWithContext(ctx context.Context) OpengaussInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpengaussInstanceMapOutput)
}

type OpengaussInstanceOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpengaussInstance)(nil)).Elem()
}

func (o OpengaussInstanceOutput) ToOpengaussInstanceOutput() OpengaussInstanceOutput {
	return o
}

func (o OpengaussInstanceOutput) ToOpengaussInstanceOutputWithContext(ctx context.Context) OpengaussInstanceOutput {
	return o
}

// Specifies the advanced features.
// The advanceFeatures structure is documented below.
func (o OpengaussInstanceOutput) AdvanceFeatures() OpengaussInstanceAdvanceFeatureArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceAdvanceFeatureArrayOutput { return v.AdvanceFeatures }).(OpengaussInstanceAdvanceFeatureArrayOutput)
}

// Specifies whether auto renew is enabled.
// Valid values are **true** and **false**. Defaults to **false**.
func (o OpengaussInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the availability zone information, can be three same or
// different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Specifies the advanced backup policy.
// The backupStrategy structure is documented below.
func (o OpengaussInstanceOutput) BackupStrategy() OpengaussInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceBackupStrategyOutput { return v.BackupStrategy }).(OpengaussInstanceBackupStrategyOutput)
}

// Indicates whether the host load is balanced due to a primary/standby switchover.
func (o OpengaussInstanceOutput) BalanceStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.BoolOutput { return v.BalanceStatus }).(pulumi.BoolOutput)
}

// Specifies the charging mode of opengauss instance.
// The valid values are as follows:
// + **prePaid**: the yearly/monthly billing mode.
// + **postPaid**: the pay-per-use billing mode.
func (o OpengaussInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies the parameter template ID.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) ConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.ConfigurationId }).(pulumi.StringPtrOutput)
}

// Specifies the coordinator number.\
// The valid value is range form `1` to `9`. The default value is `3`.
// The value must not be greater than twice value of `shardingNum`.
func (o OpengaussInstanceOutput) CoordinatorNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.CoordinatorNum }).(pulumi.IntPtrOutput)
}

// Specifies the datastore information.
// The datastore structure is documented below.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Datastore() OpengaussInstanceDatastoreOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceDatastoreOutput { return v.Datastore }).(OpengaussInstanceDatastoreOutput)
}

// Indicates the default username.
func (o OpengaussInstanceOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.DbUserName }).(pulumi.StringOutput)
}

// Specifies the key ID for disk encryption.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) DiskEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.DiskEncryptionId }).(pulumi.StringPtrOutput)
}

// Specifies whether to forcibly promote a standby node to primary.
// Defaults to **false**. Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) EnableForceSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.BoolPtrOutput { return v.EnableForceSwitch }).(pulumi.BoolPtrOutput)
}

// Specifies whether to enable single floating IP address policy,
// which is only suitable for primary/standby instances. Value options:
//   - **true**: This function is enabled. Only one floating IP address is bound to the primary node of a DB instance. If a
//     primary/standby fail over occurs, the floating IP address does not change.
//   - **false (default value)**: The function is disabled. Each node is bound to a floating IP address. If a primary/standby
//     fail over occurs, the floating IP addresses change.
func (o OpengaussInstanceOutput) EnableSingleFloatIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.BoolPtrOutput { return v.EnableSingleFloatIp }).(pulumi.BoolPtrOutput)
}

// Indicates the connection endpoints list of the DB instance. Example: [127.0.0.1:8000].
func (o OpengaussInstanceOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringArrayOutput { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Specifies the enterprise project ID.
func (o OpengaussInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates whether error log collection is enabled. The value can be:
// + **ON**: enabled
// + **OFF**: disabled
func (o OpengaussInstanceOutput) ErrorLogSwitchStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.ErrorLogSwitchStatus }).(pulumi.StringOutput)
}

// Specifies the instance specifications.
func (o OpengaussInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

// Specifies whether to import the instance with the given configuration instead of
// creation. If specified, try to import the instance instead of creation if the instance already existed.
func (o OpengaussInstanceOutput) ForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.BoolPtrOutput { return v.ForceImport }).(pulumi.BoolPtrOutput)
}

// Specifies the HA information.
// The object structure is documented below.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Ha() OpengaussInstanceHaOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceHaOutput { return v.Ha }).(OpengaussInstanceHaOutput)
}

// Indicates the maintenance window.
func (o OpengaussInstanceOutput) MaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.MaintenanceWindow }).(pulumi.StringOutput)
}

// Specifies the port for MySQL compatibility. Value range: **0** or
// **1024** to **39989**.
//   - The following ports are used by the system and cannot be used: **2378**, **2379**, **2380**, **2400**, **4999**,
//     **5000**, **5001**, **5100**, **5500**, **5999**, **6000**, **6001**, **6009**, **6010**, **6500**, **8015**, **8097**,
//     **8098**, **8181**, **9090**, **9100**, **9180**, **9187**, **9200**, **12016**, **12017**, **20049**, **20050**,
//     **21731**, **21732**, **32122**, **32123**, **32124**, **32125**, **32126**, **39001**,
//     **[Database port, Database port + 10]**.
//   - If the value is **0**, the MySQL compatibility port is disabled.
func (o OpengaussInstanceOutput) MysqlCompatibilityPort() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.MysqlCompatibilityPort }).(pulumi.StringOutput)
}

// Specifies the name of the advance feature.
func (o OpengaussInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o OpengaussInstanceOutput) Nodes() OpengaussInstanceNodeArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceNodeArrayOutput { return v.Nodes }).(OpengaussInstanceNodeArrayOutput)
}

// Specifies an array of one or more parameters to be set to the instance after launched.
// The parameters structure is documented below.
func (o OpengaussInstanceOutput) Parameters() OpengaussInstanceParameterArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceParameterArrayOutput { return v.Parameters }).(OpengaussInstanceParameterArrayOutput)
}

// Specifies the database password. The value must be `8` to `32` characters in length,
// including uppercase and lowercase letters, digits, and special characters, such as **~!@#%^*-_=+?**. You are advised
// to enter a strong password to improve security, preventing security risks such as brute force cracking.
func (o OpengaussInstanceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Specifies the charging period of opengauss instance.
// If `periodUnit` is set to **month**, the value ranges from 1 to 9.
// If `periodUnit` is set to **year**, the value ranges from 1 to 5.
// This parameter is mandatory if `chargingMode` is set to **prePaid**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of opengauss instance.
// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Specifies the port information. Defaults to `8,000`.
// The valid values are as follows:
// + `2,378` to `2,380`
func (o OpengaussInstanceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Indicates the private IP address of the DB instance.
func (o OpengaussInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringArrayOutput { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// Indicates the public IP address of the DB instance.
func (o OpengaussInstanceOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringArrayOutput { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// Specifies the region in which to create the instance.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The replica number. The valid values are `2` and `3`, defaults to `3`.
// Double replicas are only available for specific users and supports only instance versions are v1.3.0 or later.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) ReplicaNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.ReplicaNum }).(pulumi.IntPtrOutput)
}

// Specifies the security group ID to which the instance belongs.
// If the `port` parameter is specified, please ensure that the TCP ports in the inbound rule of security group
// includes the `100` ports starting with the database port.
// (For example, if the database port is `8,000`, the TCP port must include the range from `8,000` to `8,100`.)
func (o OpengaussInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies the sharding number.\
// The valid value is range form `1` to `9`. The default value is `3`.
func (o OpengaussInstanceOutput) ShardingNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.IntPtrOutput { return v.ShardingNum }).(pulumi.IntPtrOutput)
}

// Indicates the node status.
func (o OpengaussInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of VPC subnet to which the instance belongs.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the switch strategy.
func (o OpengaussInstanceOutput) SwitchStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.SwitchStrategy }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the GaussDB OpenGauss instance.
func (o OpengaussInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the time zone. Defaults to **UTC+08:00**.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Specifies the volume type. Only **ULTRAHIGH** is supported now.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Specifies the volume storage information.
// The object structure is documented below.
func (o OpengaussInstanceOutput) Volume() OpengaussInstanceVolumeOutput {
	return o.ApplyT(func(v *OpengaussInstance) OpengaussInstanceVolumeOutput { return v.Volume }).(OpengaussInstanceVolumeOutput)
}

// Specifies the VPC ID to which the subnet belongs.
// Changing this parameter will create a new resource.
func (o OpengaussInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpengaussInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type OpengaussInstanceArrayOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpengaussInstance)(nil)).Elem()
}

func (o OpengaussInstanceArrayOutput) ToOpengaussInstanceArrayOutput() OpengaussInstanceArrayOutput {
	return o
}

func (o OpengaussInstanceArrayOutput) ToOpengaussInstanceArrayOutputWithContext(ctx context.Context) OpengaussInstanceArrayOutput {
	return o
}

func (o OpengaussInstanceArrayOutput) Index(i pulumi.IntInput) OpengaussInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpengaussInstance {
		return vs[0].([]*OpengaussInstance)[vs[1].(int)]
	}).(OpengaussInstanceOutput)
}

type OpengaussInstanceMapOutput struct{ *pulumi.OutputState }

func (OpengaussInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpengaussInstance)(nil)).Elem()
}

func (o OpengaussInstanceMapOutput) ToOpengaussInstanceMapOutput() OpengaussInstanceMapOutput {
	return o
}

func (o OpengaussInstanceMapOutput) ToOpengaussInstanceMapOutputWithContext(ctx context.Context) OpengaussInstanceMapOutput {
	return o
}

func (o OpengaussInstanceMapOutput) MapIndex(k pulumi.StringInput) OpengaussInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpengaussInstance {
		return vs[0].(map[string]*OpengaussInstance)[vs[1].(string)]
	}).(OpengaussInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceInput)(nil)).Elem(), &OpengaussInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceArrayInput)(nil)).Elem(), OpengaussInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpengaussInstanceMapInput)(nil)).Elem(), OpengaussInstanceMap{})
	pulumi.RegisterOutputType(OpengaussInstanceOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceArrayOutput{})
	pulumi.RegisterOutputType(OpengaussInstanceMapOutput{})
}
