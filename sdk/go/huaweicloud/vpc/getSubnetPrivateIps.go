// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a list of private IPs within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			subnetId := cfg.RequireObject("subnetId")
//			_, err := Vpc.GetSubnetPrivateIps(ctx, &vpc.GetSubnetPrivateIpsArgs{
//				SubnetId: subnetId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubnetPrivateIps(ctx *pulumi.Context, args *GetSubnetPrivateIpsArgs, opts ...pulumi.InvokeOption) (*GetSubnetPrivateIpsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSubnetPrivateIpsResult
	err := ctx.Invoke("huaweicloud:Vpc/getSubnetPrivateIps:getSubnetPrivateIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnetPrivateIps.
type GetSubnetPrivateIpsArgs struct {
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the ID of the subnet that the private IP address belongs to.
	SubnetId string `pulumi:"subnetId"`
}

// A collection of values returned by getSubnetPrivateIps.
type GetSubnetPrivateIpsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of private IP addresses.
	PrivateIps []GetSubnetPrivateIpsPrivateIp `pulumi:"privateIps"`
	Region     string                         `pulumi:"region"`
	// The ID of the subnet from which IP addresses are assigned.
	SubnetId string `pulumi:"subnetId"`
}

func GetSubnetPrivateIpsOutput(ctx *pulumi.Context, args GetSubnetPrivateIpsOutputArgs, opts ...pulumi.InvokeOption) GetSubnetPrivateIpsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubnetPrivateIpsResult, error) {
			args := v.(GetSubnetPrivateIpsArgs)
			r, err := GetSubnetPrivateIps(ctx, &args, opts...)
			var s GetSubnetPrivateIpsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubnetPrivateIpsResultOutput)
}

// A collection of arguments for invoking getSubnetPrivateIps.
type GetSubnetPrivateIpsOutputArgs struct {
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the ID of the subnet that the private IP address belongs to.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetSubnetPrivateIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetPrivateIpsArgs)(nil)).Elem()
}

// A collection of values returned by getSubnetPrivateIps.
type GetSubnetPrivateIpsResultOutput struct{ *pulumi.OutputState }

func (GetSubnetPrivateIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetPrivateIpsResult)(nil)).Elem()
}

func (o GetSubnetPrivateIpsResultOutput) ToGetSubnetPrivateIpsResultOutput() GetSubnetPrivateIpsResultOutput {
	return o
}

func (o GetSubnetPrivateIpsResultOutput) ToGetSubnetPrivateIpsResultOutputWithContext(ctx context.Context) GetSubnetPrivateIpsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubnetPrivateIpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetPrivateIpsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of private IP addresses.
func (o GetSubnetPrivateIpsResultOutput) PrivateIps() GetSubnetPrivateIpsPrivateIpArrayOutput {
	return o.ApplyT(func(v GetSubnetPrivateIpsResult) []GetSubnetPrivateIpsPrivateIp { return v.PrivateIps }).(GetSubnetPrivateIpsPrivateIpArrayOutput)
}

func (o GetSubnetPrivateIpsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetPrivateIpsResult) string { return v.Region }).(pulumi.StringOutput)
}

// The ID of the subnet from which IP addresses are assigned.
func (o GetSubnetPrivateIpsResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetPrivateIpsResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubnetPrivateIpsResultOutput{})
}
