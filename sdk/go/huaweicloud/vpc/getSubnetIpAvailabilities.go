// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get IP availabilities of a subnet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			networkId := cfg.RequireObject("networkId")
//			_, err := Vpc.GetSubnetIpAvailabilities(ctx, &vpc.GetSubnetIpAvailabilitiesArgs{
//				NetworkId: networkId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubnetIpAvailabilities(ctx *pulumi.Context, args *GetSubnetIpAvailabilitiesArgs, opts ...pulumi.InvokeOption) (*GetSubnetIpAvailabilitiesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSubnetIpAvailabilitiesResult
	err := ctx.Invoke("huaweicloud:Vpc/getSubnetIpAvailabilities:getSubnetIpAvailabilities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnetIpAvailabilities.
type GetSubnetIpAvailabilitiesArgs struct {
	// Specifies the subnet ID.
	NetworkId string `pulumi:"networkId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getSubnetIpAvailabilities.
type GetSubnetIpAvailabilitiesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The network ID.
	NetworkId string `pulumi:"networkId"`
	// The network IP address usage objects.
	NetworkIpAvailabilities []GetSubnetIpAvailabilitiesNetworkIpAvailability `pulumi:"networkIpAvailabilities"`
	Region                  string                                           `pulumi:"region"`
}

func GetSubnetIpAvailabilitiesOutput(ctx *pulumi.Context, args GetSubnetIpAvailabilitiesOutputArgs, opts ...pulumi.InvokeOption) GetSubnetIpAvailabilitiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubnetIpAvailabilitiesResult, error) {
			args := v.(GetSubnetIpAvailabilitiesArgs)
			r, err := GetSubnetIpAvailabilities(ctx, &args, opts...)
			var s GetSubnetIpAvailabilitiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubnetIpAvailabilitiesResultOutput)
}

// A collection of arguments for invoking getSubnetIpAvailabilities.
type GetSubnetIpAvailabilitiesOutputArgs struct {
	// Specifies the subnet ID.
	NetworkId pulumi.StringInput `pulumi:"networkId"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetSubnetIpAvailabilitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIpAvailabilitiesArgs)(nil)).Elem()
}

// A collection of values returned by getSubnetIpAvailabilities.
type GetSubnetIpAvailabilitiesResultOutput struct{ *pulumi.OutputState }

func (GetSubnetIpAvailabilitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIpAvailabilitiesResult)(nil)).Elem()
}

func (o GetSubnetIpAvailabilitiesResultOutput) ToGetSubnetIpAvailabilitiesResultOutput() GetSubnetIpAvailabilitiesResultOutput {
	return o
}

func (o GetSubnetIpAvailabilitiesResultOutput) ToGetSubnetIpAvailabilitiesResultOutputWithContext(ctx context.Context) GetSubnetIpAvailabilitiesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubnetIpAvailabilitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetIpAvailabilitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The network ID.
func (o GetSubnetIpAvailabilitiesResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetIpAvailabilitiesResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// The network IP address usage objects.
func (o GetSubnetIpAvailabilitiesResultOutput) NetworkIpAvailabilities() GetSubnetIpAvailabilitiesNetworkIpAvailabilityArrayOutput {
	return o.ApplyT(func(v GetSubnetIpAvailabilitiesResult) []GetSubnetIpAvailabilitiesNetworkIpAvailability {
		return v.NetworkIpAvailabilities
	}).(GetSubnetIpAvailabilitiesNetworkIpAvailabilityArrayOutput)
}

func (o GetSubnetIpAvailabilitiesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetIpAvailabilitiesResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubnetIpAvailabilitiesResultOutput{})
}
