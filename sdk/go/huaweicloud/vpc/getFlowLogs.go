// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of VPC flow logs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			flowLogName := cfg.RequireObject("flowLogName")
//			_, err := Vpc.GetFlowLogs(ctx, &vpc.GetFlowLogsArgs{
//				Name: pulumi.StringRef(flowLogName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetFlowLogs(ctx *pulumi.Context, args *GetFlowLogsArgs, opts ...pulumi.InvokeOption) (*GetFlowLogsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetFlowLogsResult
	err := ctx.Invoke("huaweicloud:Vpc/getFlowLogs:getFlowLogs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsArgs struct {
	// Specifies the VPC flow log ID.
	FlowLogId *string `pulumi:"flowLogId"`
	// Specifies the LTS log group ID.
	LogGroupId *string `pulumi:"logGroupId"`
	// Specifies the LTS log stream ID.
	LogStreamId *string `pulumi:"logStreamId"`
	// Specifies the VPC flow log name.
	// The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `pulumi:"name"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the resource ID for which that the logs to be collected.
	ResourceId *string `pulumi:"resourceId"`
	// Specifies the resource type for which that the logs to be collected.
	// The value can be: **port**, **network,** and **vpc**.
	ResourceType *string `pulumi:"resourceType"`
	// Specifies the status of the flow log.
	// The value can be **ACTIVE**, **DOWN** or **ERROR**.
	Status *string `pulumi:"status"`
	// Specifies the type of traffic to log.
	// The value can be: **all**, **accept** and **reject**.
	TrafficType *string `pulumi:"trafficType"`
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResult struct {
	FlowLogId *string `pulumi:"flowLogId"`
	// The list of VPC flow logs.
	FlowLogs []GetFlowLogsFlowLog `pulumi:"flowLogs"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The LTS log group ID.
	LogGroupId *string `pulumi:"logGroupId"`
	// The LTS log stream ID.
	LogStreamId *string `pulumi:"logStreamId"`
	// The VPC flow log name.
	Name   *string `pulumi:"name"`
	Region string  `pulumi:"region"`
	// The resource ID for which that the logs to be collected.
	ResourceId *string `pulumi:"resourceId"`
	// The resource type for which that the logs to be collected.
	ResourceType *string `pulumi:"resourceType"`
	// The VPC flow log status.
	Status *string `pulumi:"status"`
	// The type of traffic to log.
	TrafficType *string `pulumi:"trafficType"`
}

func GetFlowLogsOutput(ctx *pulumi.Context, args GetFlowLogsOutputArgs, opts ...pulumi.InvokeOption) GetFlowLogsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFlowLogsResult, error) {
			args := v.(GetFlowLogsArgs)
			r, err := GetFlowLogs(ctx, &args, opts...)
			var s GetFlowLogsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFlowLogsResultOutput)
}

// A collection of arguments for invoking getFlowLogs.
type GetFlowLogsOutputArgs struct {
	// Specifies the VPC flow log ID.
	FlowLogId pulumi.StringPtrInput `pulumi:"flowLogId"`
	// Specifies the LTS log group ID.
	LogGroupId pulumi.StringPtrInput `pulumi:"logGroupId"`
	// Specifies the LTS log stream ID.
	LogStreamId pulumi.StringPtrInput `pulumi:"logStreamId"`
	// Specifies the VPC flow log name.
	// The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the region in which to query the resource.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the resource ID for which that the logs to be collected.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Specifies the resource type for which that the logs to be collected.
	// The value can be: **port**, **network,** and **vpc**.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Specifies the status of the flow log.
	// The value can be **ACTIVE**, **DOWN** or **ERROR**.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Specifies the type of traffic to log.
	// The value can be: **all**, **accept** and **reject**.
	TrafficType pulumi.StringPtrInput `pulumi:"trafficType"`
}

func (GetFlowLogsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsArgs)(nil)).Elem()
}

// A collection of values returned by getFlowLogs.
type GetFlowLogsResultOutput struct{ *pulumi.OutputState }

func (GetFlowLogsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsResult)(nil)).Elem()
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutput() GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) ToGetFlowLogsResultOutputWithContext(ctx context.Context) GetFlowLogsResultOutput {
	return o
}

func (o GetFlowLogsResultOutput) FlowLogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.FlowLogId }).(pulumi.StringPtrOutput)
}

// The list of VPC flow logs.
func (o GetFlowLogsResultOutput) FlowLogs() GetFlowLogsFlowLogArrayOutput {
	return o.ApplyT(func(v GetFlowLogsResult) []GetFlowLogsFlowLog { return v.FlowLogs }).(GetFlowLogsFlowLogArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFlowLogsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The LTS log group ID.
func (o GetFlowLogsResultOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.LogGroupId }).(pulumi.StringPtrOutput)
}

// The LTS log stream ID.
func (o GetFlowLogsResultOutput) LogStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.LogStreamId }).(pulumi.StringPtrOutput)
}

// The VPC flow log name.
func (o GetFlowLogsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetFlowLogsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsResult) string { return v.Region }).(pulumi.StringOutput)
}

// The resource ID for which that the logs to be collected.
func (o GetFlowLogsResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The resource type for which that the logs to be collected.
func (o GetFlowLogsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The VPC flow log status.
func (o GetFlowLogsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The type of traffic to log.
func (o GetFlowLogsResultOutput) TrafficType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFlowLogsResult) *string { return v.TrafficType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFlowLogsResultOutput{})
}
