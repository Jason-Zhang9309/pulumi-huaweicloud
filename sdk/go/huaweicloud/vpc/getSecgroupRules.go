// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of the available HuaweiCloud security group rules.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			securityGroupId := cfg.RequireObject("securityGroupId")
//			_, err := Vpc.GetSecgroupRules(ctx, &vpc.GetSecgroupRulesArgs{
//				SecurityGroupId: securityGroupId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecgroupRules(ctx *pulumi.Context, args *GetSecgroupRulesArgs, opts ...pulumi.InvokeOption) (*GetSecgroupRulesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecgroupRulesResult
	err := ctx.Invoke("huaweicloud:Vpc/getSecgroupRules:getSecgroupRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecgroupRules.
type GetSecgroupRulesArgs struct {
	// Specifies the effective policy of the security group rule used for query.\
	// The valid values are as follows:
	// + **allow**
	// + **deny**
	Action *string `pulumi:"action"`
	// Specifies the security group rule description used for query.
	Description *string `pulumi:"description"`
	// Specifies the direction of the security group rule used for query.\
	// The valid values are as follows:
	// + **ingress**
	// + **egress**
	Direction *string `pulumi:"direction"`
	// Specifies the security group rule protocol type used for query.\
	// The value can be **tcp**, **udp**, **icmp**, **icmpv6** or IP protocol number, if empty, it indicates support for
	// all protocols.
	Protocol *string `pulumi:"protocol"`
	// Specifies the region in which to obtain the security group rules. If omitted, the
	// provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the remote security group ID used for query.
	RemoteGroupId *string `pulumi:"remoteGroupId"`
	// Specifies the security group rule ID used for query.
	RuleId *string `pulumi:"ruleId"`
	// Specifies the security group ID that the rule should belong to.
	SecurityGroupId string `pulumi:"securityGroupId"`
}

// A collection of values returned by getSecgroupRules.
type GetSecgroupRulesResult struct {
	// The effective policy of the security group rule.
	Action *string `pulumi:"action"`
	// The description of the security group rule.
	Description *string `pulumi:"description"`
	// The direction of the security group rule.
	Direction *string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The security group rule protocol type.
	Protocol *string `pulumi:"protocol"`
	Region   string  `pulumi:"region"`
	// The remote security group ID.\
	// This field is mutually exclusive with `remoteIpPrefix` and `remoteAddressGroupId`.
	RemoteGroupId *string `pulumi:"remoteGroupId"`
	RuleId        *string `pulumi:"ruleId"`
	// All security group rules that match the filter parameters.
	// The rules structure is documented below.
	Rules []GetSecgroupRulesRule `pulumi:"rules"`
	// The security group ID that the rule should belong to.
	SecurityGroupId string `pulumi:"securityGroupId"`
}

func GetSecgroupRulesOutput(ctx *pulumi.Context, args GetSecgroupRulesOutputArgs, opts ...pulumi.InvokeOption) GetSecgroupRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecgroupRulesResult, error) {
			args := v.(GetSecgroupRulesArgs)
			r, err := GetSecgroupRules(ctx, &args, opts...)
			var s GetSecgroupRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecgroupRulesResultOutput)
}

// A collection of arguments for invoking getSecgroupRules.
type GetSecgroupRulesOutputArgs struct {
	// Specifies the effective policy of the security group rule used for query.\
	// The valid values are as follows:
	// + **allow**
	// + **deny**
	Action pulumi.StringPtrInput `pulumi:"action"`
	// Specifies the security group rule description used for query.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the direction of the security group rule used for query.\
	// The valid values are as follows:
	// + **ingress**
	// + **egress**
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Specifies the security group rule protocol type used for query.\
	// The value can be **tcp**, **udp**, **icmp**, **icmpv6** or IP protocol number, if empty, it indicates support for
	// all protocols.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Specifies the region in which to obtain the security group rules. If omitted, the
	// provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the remote security group ID used for query.
	RemoteGroupId pulumi.StringPtrInput `pulumi:"remoteGroupId"`
	// Specifies the security group rule ID used for query.
	RuleId pulumi.StringPtrInput `pulumi:"ruleId"`
	// Specifies the security group ID that the rule should belong to.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
}

func (GetSecgroupRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecgroupRulesArgs)(nil)).Elem()
}

// A collection of values returned by getSecgroupRules.
type GetSecgroupRulesResultOutput struct{ *pulumi.OutputState }

func (GetSecgroupRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecgroupRulesResult)(nil)).Elem()
}

func (o GetSecgroupRulesResultOutput) ToGetSecgroupRulesResultOutput() GetSecgroupRulesResultOutput {
	return o
}

func (o GetSecgroupRulesResultOutput) ToGetSecgroupRulesResultOutputWithContext(ctx context.Context) GetSecgroupRulesResultOutput {
	return o
}

// The effective policy of the security group rule.
func (o GetSecgroupRulesResultOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The description of the security group rule.
func (o GetSecgroupRulesResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The direction of the security group rule.
func (o GetSecgroupRulesResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecgroupRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The security group rule protocol type.
func (o GetSecgroupRulesResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o GetSecgroupRulesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) string { return v.Region }).(pulumi.StringOutput)
}

// The remote security group ID.\
// This field is mutually exclusive with `remoteIpPrefix` and `remoteAddressGroupId`.
func (o GetSecgroupRulesResultOutput) RemoteGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) *string { return v.RemoteGroupId }).(pulumi.StringPtrOutput)
}

func (o GetSecgroupRulesResultOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

// All security group rules that match the filter parameters.
// The rules structure is documented below.
func (o GetSecgroupRulesResultOutput) Rules() GetSecgroupRulesRuleArrayOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) []GetSecgroupRulesRule { return v.Rules }).(GetSecgroupRulesRuleArrayOutput)
}

// The security group ID that the rule should belong to.
func (o GetSecgroupRulesResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecgroupRulesResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecgroupRulesResultOutput{})
}
