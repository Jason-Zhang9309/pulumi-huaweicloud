// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a VPC network ACL resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			name := cfg.RequireObject("name")
//			subnetId1 := cfg.RequireObject("subnetId1")
//			subnetId2 := cfg.RequireObject("subnetId2")
//			_, err := Vpc.NewNetworkAcl(ctx, "test", &Vpc.NetworkAclArgs{
//				Description:         pulumi.String("created by terraform"),
//				EnterpriseProjectId: pulumi.String("0"),
//				Enabled:             pulumi.Bool(true),
//				IngressRules: vpc.NetworkAclIngressRuleArray{
//					&vpc.NetworkAclIngressRuleArgs{
//						Action:               pulumi.String("allow"),
//						IpVersion:            pulumi.Int(4),
//						Protocol:             pulumi.String("tcp"),
//						SourceIpAddress:      pulumi.String("192.168.0.0/24"),
//						SourcePort:           pulumi.String("22-30,33"),
//						DestinationIpAddress: pulumi.String("0.0.0.0/0"),
//						DestinationPort:      pulumi.String("8001-8010"),
//					},
//					&vpc.NetworkAclIngressRuleArgs{
//						Action:               pulumi.String("deny"),
//						IpVersion:            pulumi.Int(4),
//						Protocol:             pulumi.String("icmp"),
//						SourceIpAddress:      pulumi.String("192.168.0.0/24"),
//						DestinationIpAddress: pulumi.String("0.0.0.0/0"),
//					},
//				},
//				EgressRules: vpc.NetworkAclEgressRuleArray{
//					&vpc.NetworkAclEgressRuleArgs{
//						Action:               pulumi.String("allow"),
//						IpVersion:            pulumi.Int(4),
//						Protocol:             pulumi.String("tcp"),
//						SourceIpAddress:      pulumi.String("172.16.0.0/24"),
//						SourcePort:           pulumi.String("22-30,33"),
//						DestinationIpAddress: pulumi.String("0.0.0.0/0"),
//						DestinationPort:      pulumi.String("8001-8010"),
//					},
//					&vpc.NetworkAclEgressRuleArgs{
//						Action:               pulumi.String("deny"),
//						IpVersion:            pulumi.Int(4),
//						Protocol:             pulumi.String("icmp"),
//						SourceIpAddress:      pulumi.String("172.16.0.0/24"),
//						DestinationIpAddress: pulumi.String("0.0.0.0/0"),
//					},
//				},
//				AssociatedSubnets: vpc.NetworkAclAssociatedSubnetArray{
//					&vpc.NetworkAclAssociatedSubnetArgs{
//						SubnetId: pulumi.Any(subnetId1),
//					},
//					&vpc.NetworkAclAssociatedSubnetArgs{
//						SubnetId: pulumi.Any(subnetId2),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The network ACL can be imported using `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Vpc/networkAcl:NetworkAcl test <id>
//
// ```
type NetworkAcl struct {
	pulumi.CustomResourceState

	// Specifies the associated subnets of the network ACL.
	// The associatedSubnets structure is documented below.
	AssociatedSubnets NetworkAclAssociatedSubnetArrayOutput `pulumi:"associatedSubnets"`
	// The created time of the ACL.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules NetworkAclEgressRuleArrayOutput `pulumi:"egressRules"`
	// Specifies whether the network ACL is enabled. The default value is **true**.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules NetworkAclIngressRuleArrayOutput `pulumi:"ingressRules"`
	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the ACL.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the key/value pairs to associate with the network ACL.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The updated time of the ACL.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewNetworkAcl registers a new resource with the given unique name, arguments, and options.
func NewNetworkAcl(ctx *pulumi.Context,
	name string, args *NetworkAclArgs, opts ...pulumi.ResourceOption) (*NetworkAcl, error) {
	if args == nil {
		args = &NetworkAclArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource NetworkAcl
	err := ctx.RegisterResource("huaweicloud:Vpc/networkAcl:NetworkAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAcl gets an existing NetworkAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclState, opts ...pulumi.ResourceOption) (*NetworkAcl, error) {
	var resource NetworkAcl
	err := ctx.ReadResource("huaweicloud:Vpc/networkAcl:NetworkAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAcl resources.
type networkAclState struct {
	// Specifies the associated subnets of the network ACL.
	// The associatedSubnets structure is documented below.
	AssociatedSubnets []NetworkAclAssociatedSubnet `pulumi:"associatedSubnets"`
	// The created time of the ACL.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description *string `pulumi:"description"`
	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules []NetworkAclEgressRule `pulumi:"egressRules"`
	// Specifies whether the network ACL is enabled. The default value is **true**.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules []NetworkAclIngressRule `pulumi:"ingressRules"`
	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// The status of the ACL.
	Status *string `pulumi:"status"`
	// Specifies the key/value pairs to associate with the network ACL.
	Tags map[string]string `pulumi:"tags"`
	// The updated time of the ACL.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type NetworkAclState struct {
	// Specifies the associated subnets of the network ACL.
	// The associatedSubnets structure is documented below.
	AssociatedSubnets NetworkAclAssociatedSubnetArrayInput
	// The created time of the ACL.
	CreatedAt pulumi.StringPtrInput
	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description pulumi.StringPtrInput
	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules NetworkAclEgressRuleArrayInput
	// Specifies whether the network ACL is enabled. The default value is **true**.
	Enabled pulumi.BoolPtrInput
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules NetworkAclIngressRuleArrayInput
	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// The status of the ACL.
	Status pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the network ACL.
	Tags pulumi.StringMapInput
	// The updated time of the ACL.
	UpdatedAt pulumi.StringPtrInput
}

func (NetworkAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclState)(nil)).Elem()
}

type networkAclArgs struct {
	// Specifies the associated subnets of the network ACL.
	// The associatedSubnets structure is documented below.
	AssociatedSubnets []NetworkAclAssociatedSubnet `pulumi:"associatedSubnets"`
	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description *string `pulumi:"description"`
	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules []NetworkAclEgressRule `pulumi:"egressRules"`
	// Specifies whether the network ACL is enabled. The default value is **true**.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules []NetworkAclIngressRule `pulumi:"ingressRules"`
	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the key/value pairs to associate with the network ACL.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkAcl resource.
type NetworkAclArgs struct {
	// Specifies the associated subnets of the network ACL.
	// The associatedSubnets structure is documented below.
	AssociatedSubnets NetworkAclAssociatedSubnetArrayInput
	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description pulumi.StringPtrInput
	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules NetworkAclEgressRuleArrayInput
	// Specifies whether the network ACL is enabled. The default value is **true**.
	Enabled pulumi.BoolPtrInput
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules NetworkAclIngressRuleArrayInput
	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the network ACL.
	Tags pulumi.StringMapInput
}

func (NetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclArgs)(nil)).Elem()
}

type NetworkAclInput interface {
	pulumi.Input

	ToNetworkAclOutput() NetworkAclOutput
	ToNetworkAclOutputWithContext(ctx context.Context) NetworkAclOutput
}

func (*NetworkAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAcl)(nil)).Elem()
}

func (i *NetworkAcl) ToNetworkAclOutput() NetworkAclOutput {
	return i.ToNetworkAclOutputWithContext(context.Background())
}

func (i *NetworkAcl) ToNetworkAclOutputWithContext(ctx context.Context) NetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclOutput)
}

// NetworkAclArrayInput is an input type that accepts NetworkAclArray and NetworkAclArrayOutput values.
// You can construct a concrete instance of `NetworkAclArrayInput` via:
//
//	NetworkAclArray{ NetworkAclArgs{...} }
type NetworkAclArrayInput interface {
	pulumi.Input

	ToNetworkAclArrayOutput() NetworkAclArrayOutput
	ToNetworkAclArrayOutputWithContext(context.Context) NetworkAclArrayOutput
}

type NetworkAclArray []NetworkAclInput

func (NetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAcl)(nil)).Elem()
}

func (i NetworkAclArray) ToNetworkAclArrayOutput() NetworkAclArrayOutput {
	return i.ToNetworkAclArrayOutputWithContext(context.Background())
}

func (i NetworkAclArray) ToNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclArrayOutput)
}

// NetworkAclMapInput is an input type that accepts NetworkAclMap and NetworkAclMapOutput values.
// You can construct a concrete instance of `NetworkAclMapInput` via:
//
//	NetworkAclMap{ "key": NetworkAclArgs{...} }
type NetworkAclMapInput interface {
	pulumi.Input

	ToNetworkAclMapOutput() NetworkAclMapOutput
	ToNetworkAclMapOutputWithContext(context.Context) NetworkAclMapOutput
}

type NetworkAclMap map[string]NetworkAclInput

func (NetworkAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAcl)(nil)).Elem()
}

func (i NetworkAclMap) ToNetworkAclMapOutput() NetworkAclMapOutput {
	return i.ToNetworkAclMapOutputWithContext(context.Background())
}

func (i NetworkAclMap) ToNetworkAclMapOutputWithContext(ctx context.Context) NetworkAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclMapOutput)
}

type NetworkAclOutput struct{ *pulumi.OutputState }

func (NetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAcl)(nil)).Elem()
}

func (o NetworkAclOutput) ToNetworkAclOutput() NetworkAclOutput {
	return o
}

func (o NetworkAclOutput) ToNetworkAclOutputWithContext(ctx context.Context) NetworkAclOutput {
	return o
}

// Specifies the associated subnets of the network ACL.
// The associatedSubnets structure is documented below.
func (o NetworkAclOutput) AssociatedSubnets() NetworkAclAssociatedSubnetArrayOutput {
	return o.ApplyT(func(v *NetworkAcl) NetworkAclAssociatedSubnetArrayOutput { return v.AssociatedSubnets }).(NetworkAclAssociatedSubnetArrayOutput)
}

// The created time of the ACL.
func (o NetworkAclOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the network ACL rule description. The value can contain no more
// than 255 characters. The value cannot contain angle brackets (< or >).
func (o NetworkAclOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the egress rules of the network ACL.
// The rules structure is documented below.
func (o NetworkAclOutput) EgressRules() NetworkAclEgressRuleArrayOutput {
	return o.ApplyT(func(v *NetworkAcl) NetworkAclEgressRuleArrayOutput { return v.EgressRules }).(NetworkAclEgressRuleArrayOutput)
}

// Specifies whether the network ACL is enabled. The default value is **true**.
func (o NetworkAclOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the enterprise project ID of the network ACL.
func (o NetworkAclOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies the ingress rules of the network ACL.
// The rules structure is documented below.
func (o NetworkAclOutput) IngressRules() NetworkAclIngressRuleArrayOutput {
	return o.ApplyT(func(v *NetworkAcl) NetworkAclIngressRuleArrayOutput { return v.IngressRules }).(NetworkAclIngressRuleArrayOutput)
}

// Specifies the network ACL rule name. The value can contain no more than 64 characters,
// including letters, digits, underscores (_), hyphens (-), and periods (.).
func (o NetworkAclOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used.
// Changing this creates a new resource.
func (o NetworkAclOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The status of the ACL.
func (o NetworkAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the network ACL.
func (o NetworkAclOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The updated time of the ACL.
func (o NetworkAclOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type NetworkAclArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAcl)(nil)).Elem()
}

func (o NetworkAclArrayOutput) ToNetworkAclArrayOutput() NetworkAclArrayOutput {
	return o
}

func (o NetworkAclArrayOutput) ToNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclArrayOutput {
	return o
}

func (o NetworkAclArrayOutput) Index(i pulumi.IntInput) NetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkAcl {
		return vs[0].([]*NetworkAcl)[vs[1].(int)]
	}).(NetworkAclOutput)
}

type NetworkAclMapOutput struct{ *pulumi.OutputState }

func (NetworkAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAcl)(nil)).Elem()
}

func (o NetworkAclMapOutput) ToNetworkAclMapOutput() NetworkAclMapOutput {
	return o
}

func (o NetworkAclMapOutput) ToNetworkAclMapOutputWithContext(ctx context.Context) NetworkAclMapOutput {
	return o
}

func (o NetworkAclMapOutput) MapIndex(k pulumi.StringInput) NetworkAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkAcl {
		return vs[0].(map[string]*NetworkAcl)[vs[1].(string)]
	}).(NetworkAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclInput)(nil)).Elem(), &NetworkAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclArrayInput)(nil)).Elem(), NetworkAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclMapInput)(nil)).Elem(), NetworkAclMap{})
	pulumi.RegisterOutputType(NetworkAclOutput{})
	pulumi.RegisterOutputType(NetworkAclArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclMapOutput{})
}
