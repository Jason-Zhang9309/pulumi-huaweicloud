// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a VPC traffic mirror filter rule resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			trafficMirrorFilterId := cfg.RequireObject("trafficMirrorFilterId")
//			_, err := Vpc.NewTrafficMirrorFilterRule(ctx, "test", &Vpc.TrafficMirrorFilterRuleArgs{
//				TrafficMirrorFilterId: pulumi.Any(trafficMirrorFilterId),
//				Direction:             pulumi.String("ingress"),
//				Protocol:              pulumi.String("tcp"),
//				Ethertype:             pulumi.String("IPv4"),
//				Action:                pulumi.String("accept"),
//				Priority:              pulumi.Int(1),
//				SourceCidrBlock:       pulumi.String("10.0.0.0/8"),
//				SourcePortRange:       pulumi.String("80-90"),
//				DestinationCidrBlock:  pulumi.String("192.168.1.0/24"),
//				DestinationPortRange:  pulumi.String("10-65535"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The traffic mirror filter rule can be imported using `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule test <id>
//
// ```
type TrafficMirrorFilterRule struct {
	pulumi.CustomResourceState

	// Specifies the policy of in the traffic mirror filter rule.
	// Valid values are **accept** or **reject**.
	Action pulumi.StringOutput `pulumi:"action"`
	// The creation time of the traffic mirror filter rule.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the description of the traffic mirror filter rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the destination IP address of the traffic traffic mirror filter
	// rule.
	DestinationCidrBlock pulumi.StringPtrOutput `pulumi:"destinationCidrBlock"`
	// Specifies the destination port number range of the traffic mirror filter
	// rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	DestinationPortRange pulumi.StringPtrOutput `pulumi:"destinationPortRange"`
	// Specifies the direction of the traffic mirror filter rule.
	// Valid values are **ingress** or **egress**. Changing this creates a new resource.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Specifies the IP address protocol type of the traffic mirror filter rule.
	// Valid values are **IPv4** or **IPv6**.
	Ethertype pulumi.StringOutput `pulumi:"ethertype"`
	// Specifies the priority number of the traffic mirror filter rule.
	// Valid value ranges from `1` to `65,535`.
	// The smaller the priority number, the higher the priority.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// Specifies the protocol of the traffic mirror filter rule.
	// Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the source IP address of the traffic traffic mirror filter rule.
	SourceCidrBlock pulumi.StringPtrOutput `pulumi:"sourceCidrBlock"`
	// Specifies the source port number range of the traffic mirror filter rule.
	// The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	SourcePortRange pulumi.StringPtrOutput `pulumi:"sourcePortRange"`
	// Specifies an ID of the traffic mirror filter to which
	// the rule belongs. Changing this creates a new resource.
	TrafficMirrorFilterId pulumi.StringOutput `pulumi:"trafficMirrorFilterId"`
	// The latest update time of the traffic mirror filter rule.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewTrafficMirrorFilterRule registers a new resource with the given unique name, arguments, and options.
func NewTrafficMirrorFilterRule(ctx *pulumi.Context,
	name string, args *TrafficMirrorFilterRuleArgs, opts ...pulumi.ResourceOption) (*TrafficMirrorFilterRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.Ethertype == nil {
		return nil, errors.New("invalid value for required argument 'Ethertype'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.TrafficMirrorFilterId == nil {
		return nil, errors.New("invalid value for required argument 'TrafficMirrorFilterId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource TrafficMirrorFilterRule
	err := ctx.RegisterResource("huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficMirrorFilterRule gets an existing TrafficMirrorFilterRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficMirrorFilterRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficMirrorFilterRuleState, opts ...pulumi.ResourceOption) (*TrafficMirrorFilterRule, error) {
	var resource TrafficMirrorFilterRule
	err := ctx.ReadResource("huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficMirrorFilterRule resources.
type trafficMirrorFilterRuleState struct {
	// Specifies the policy of in the traffic mirror filter rule.
	// Valid values are **accept** or **reject**.
	Action *string `pulumi:"action"`
	// The creation time of the traffic mirror filter rule.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the description of the traffic mirror filter rule.
	Description *string `pulumi:"description"`
	// Specifies the destination IP address of the traffic traffic mirror filter
	// rule.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// Specifies the destination port number range of the traffic mirror filter
	// rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Specifies the direction of the traffic mirror filter rule.
	// Valid values are **ingress** or **egress**. Changing this creates a new resource.
	Direction *string `pulumi:"direction"`
	// Specifies the IP address protocol type of the traffic mirror filter rule.
	// Valid values are **IPv4** or **IPv6**.
	Ethertype *string `pulumi:"ethertype"`
	// Specifies the priority number of the traffic mirror filter rule.
	// Valid value ranges from `1` to `65,535`.
	// The smaller the priority number, the higher the priority.
	Priority *int `pulumi:"priority"`
	// Specifies the protocol of the traffic mirror filter rule.
	// Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
	Protocol *string `pulumi:"protocol"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the source IP address of the traffic traffic mirror filter rule.
	SourceCidrBlock *string `pulumi:"sourceCidrBlock"`
	// Specifies the source port number range of the traffic mirror filter rule.
	// The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// Specifies an ID of the traffic mirror filter to which
	// the rule belongs. Changing this creates a new resource.
	TrafficMirrorFilterId *string `pulumi:"trafficMirrorFilterId"`
	// The latest update time of the traffic mirror filter rule.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type TrafficMirrorFilterRuleState struct {
	// Specifies the policy of in the traffic mirror filter rule.
	// Valid values are **accept** or **reject**.
	Action pulumi.StringPtrInput
	// The creation time of the traffic mirror filter rule.
	CreatedAt pulumi.StringPtrInput
	// Specifies the description of the traffic mirror filter rule.
	Description pulumi.StringPtrInput
	// Specifies the destination IP address of the traffic traffic mirror filter
	// rule.
	DestinationCidrBlock pulumi.StringPtrInput
	// Specifies the destination port number range of the traffic mirror filter
	// rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	DestinationPortRange pulumi.StringPtrInput
	// Specifies the direction of the traffic mirror filter rule.
	// Valid values are **ingress** or **egress**. Changing this creates a new resource.
	Direction pulumi.StringPtrInput
	// Specifies the IP address protocol type of the traffic mirror filter rule.
	// Valid values are **IPv4** or **IPv6**.
	Ethertype pulumi.StringPtrInput
	// Specifies the priority number of the traffic mirror filter rule.
	// Valid value ranges from `1` to `65,535`.
	// The smaller the priority number, the higher the priority.
	Priority pulumi.IntPtrInput
	// Specifies the protocol of the traffic mirror filter rule.
	// Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
	Protocol pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the source IP address of the traffic traffic mirror filter rule.
	SourceCidrBlock pulumi.StringPtrInput
	// Specifies the source port number range of the traffic mirror filter rule.
	// The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	SourcePortRange pulumi.StringPtrInput
	// Specifies an ID of the traffic mirror filter to which
	// the rule belongs. Changing this creates a new resource.
	TrafficMirrorFilterId pulumi.StringPtrInput
	// The latest update time of the traffic mirror filter rule.
	UpdatedAt pulumi.StringPtrInput
}

func (TrafficMirrorFilterRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorFilterRuleState)(nil)).Elem()
}

type trafficMirrorFilterRuleArgs struct {
	// Specifies the policy of in the traffic mirror filter rule.
	// Valid values are **accept** or **reject**.
	Action string `pulumi:"action"`
	// Specifies the description of the traffic mirror filter rule.
	Description *string `pulumi:"description"`
	// Specifies the destination IP address of the traffic traffic mirror filter
	// rule.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// Specifies the destination port number range of the traffic mirror filter
	// rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// Specifies the direction of the traffic mirror filter rule.
	// Valid values are **ingress** or **egress**. Changing this creates a new resource.
	Direction string `pulumi:"direction"`
	// Specifies the IP address protocol type of the traffic mirror filter rule.
	// Valid values are **IPv4** or **IPv6**.
	Ethertype string `pulumi:"ethertype"`
	// Specifies the priority number of the traffic mirror filter rule.
	// Valid value ranges from `1` to `65,535`.
	// The smaller the priority number, the higher the priority.
	Priority int `pulumi:"priority"`
	// Specifies the protocol of the traffic mirror filter rule.
	// Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
	Protocol string `pulumi:"protocol"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the source IP address of the traffic traffic mirror filter rule.
	SourceCidrBlock *string `pulumi:"sourceCidrBlock"`
	// Specifies the source port number range of the traffic mirror filter rule.
	// The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// Specifies an ID of the traffic mirror filter to which
	// the rule belongs. Changing this creates a new resource.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
}

// The set of arguments for constructing a TrafficMirrorFilterRule resource.
type TrafficMirrorFilterRuleArgs struct {
	// Specifies the policy of in the traffic mirror filter rule.
	// Valid values are **accept** or **reject**.
	Action pulumi.StringInput
	// Specifies the description of the traffic mirror filter rule.
	Description pulumi.StringPtrInput
	// Specifies the destination IP address of the traffic traffic mirror filter
	// rule.
	DestinationCidrBlock pulumi.StringPtrInput
	// Specifies the destination port number range of the traffic mirror filter
	// rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	DestinationPortRange pulumi.StringPtrInput
	// Specifies the direction of the traffic mirror filter rule.
	// Valid values are **ingress** or **egress**. Changing this creates a new resource.
	Direction pulumi.StringInput
	// Specifies the IP address protocol type of the traffic mirror filter rule.
	// Valid values are **IPv4** or **IPv6**.
	Ethertype pulumi.StringInput
	// Specifies the priority number of the traffic mirror filter rule.
	// Valid value ranges from `1` to `65,535`.
	// The smaller the priority number, the higher the priority.
	Priority pulumi.IntInput
	// Specifies the protocol of the traffic mirror filter rule.
	// Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
	Protocol pulumi.StringInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the source IP address of the traffic traffic mirror filter rule.
	SourceCidrBlock pulumi.StringPtrInput
	// Specifies the source port number range of the traffic mirror filter rule.
	// The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
	SourcePortRange pulumi.StringPtrInput
	// Specifies an ID of the traffic mirror filter to which
	// the rule belongs. Changing this creates a new resource.
	TrafficMirrorFilterId pulumi.StringInput
}

func (TrafficMirrorFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorFilterRuleArgs)(nil)).Elem()
}

type TrafficMirrorFilterRuleInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleOutput() TrafficMirrorFilterRuleOutput
	ToTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleOutput
}

func (*TrafficMirrorFilterRule) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRule)(nil)).Elem()
}

func (i *TrafficMirrorFilterRule) ToTrafficMirrorFilterRuleOutput() TrafficMirrorFilterRuleOutput {
	return i.ToTrafficMirrorFilterRuleOutputWithContext(context.Background())
}

func (i *TrafficMirrorFilterRule) ToTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleOutput)
}

// TrafficMirrorFilterRuleArrayInput is an input type that accepts TrafficMirrorFilterRuleArray and TrafficMirrorFilterRuleArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleArrayInput` via:
//
//	TrafficMirrorFilterRuleArray{ TrafficMirrorFilterRuleArgs{...} }
type TrafficMirrorFilterRuleArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleArrayOutput() TrafficMirrorFilterRuleArrayOutput
	ToTrafficMirrorFilterRuleArrayOutputWithContext(context.Context) TrafficMirrorFilterRuleArrayOutput
}

type TrafficMirrorFilterRuleArray []TrafficMirrorFilterRuleInput

func (TrafficMirrorFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficMirrorFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleArray) ToTrafficMirrorFilterRuleArrayOutput() TrafficMirrorFilterRuleArrayOutput {
	return i.ToTrafficMirrorFilterRuleArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleArray) ToTrafficMirrorFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleArrayOutput)
}

// TrafficMirrorFilterRuleMapInput is an input type that accepts TrafficMirrorFilterRuleMap and TrafficMirrorFilterRuleMapOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleMapInput` via:
//
//	TrafficMirrorFilterRuleMap{ "key": TrafficMirrorFilterRuleArgs{...} }
type TrafficMirrorFilterRuleMapInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleMapOutput() TrafficMirrorFilterRuleMapOutput
	ToTrafficMirrorFilterRuleMapOutputWithContext(context.Context) TrafficMirrorFilterRuleMapOutput
}

type TrafficMirrorFilterRuleMap map[string]TrafficMirrorFilterRuleInput

func (TrafficMirrorFilterRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficMirrorFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleMap) ToTrafficMirrorFilterRuleMapOutput() TrafficMirrorFilterRuleMapOutput {
	return i.ToTrafficMirrorFilterRuleMapOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleMap) ToTrafficMirrorFilterRuleMapOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleMapOutput)
}

type TrafficMirrorFilterRuleOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleOutput) ToTrafficMirrorFilterRuleOutput() TrafficMirrorFilterRuleOutput {
	return o
}

func (o TrafficMirrorFilterRuleOutput) ToTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleOutput {
	return o
}

// Specifies the policy of in the traffic mirror filter rule.
// Valid values are **accept** or **reject**.
func (o TrafficMirrorFilterRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The creation time of the traffic mirror filter rule.
func (o TrafficMirrorFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the description of the traffic mirror filter rule.
func (o TrafficMirrorFilterRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the destination IP address of the traffic traffic mirror filter
// rule.
func (o TrafficMirrorFilterRuleOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringPtrOutput { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

// Specifies the destination port number range of the traffic mirror filter
// rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
func (o TrafficMirrorFilterRuleOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringPtrOutput { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// Specifies the direction of the traffic mirror filter rule.
// Valid values are **ingress** or **egress**. Changing this creates a new resource.
func (o TrafficMirrorFilterRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the IP address protocol type of the traffic mirror filter rule.
// Valid values are **IPv4** or **IPv6**.
func (o TrafficMirrorFilterRuleOutput) Ethertype() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.Ethertype }).(pulumi.StringOutput)
}

// Specifies the priority number of the traffic mirror filter rule.
// Valid value ranges from `1` to `65,535`.
// The smaller the priority number, the higher the priority.
func (o TrafficMirrorFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// Specifies the protocol of the traffic mirror filter rule.
// Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
func (o TrafficMirrorFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used.
// Changing this creates a new resource.
func (o TrafficMirrorFilterRuleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the source IP address of the traffic traffic mirror filter rule.
func (o TrafficMirrorFilterRuleOutput) SourceCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringPtrOutput { return v.SourceCidrBlock }).(pulumi.StringPtrOutput)
}

// Specifies the source port number range of the traffic mirror filter rule.
// The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
func (o TrafficMirrorFilterRuleOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringPtrOutput { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// Specifies an ID of the traffic mirror filter to which
// the rule belongs. Changing this creates a new resource.
func (o TrafficMirrorFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The latest update time of the traffic mirror filter rule.
func (o TrafficMirrorFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRule) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TrafficMirrorFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TrafficMirrorFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleArrayOutput) ToTrafficMirrorFilterRuleArrayOutput() TrafficMirrorFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFilterRuleArrayOutput) ToTrafficMirrorFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFilterRuleArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TrafficMirrorFilterRule {
		return vs[0].([]*TrafficMirrorFilterRule)[vs[1].(int)]
	}).(TrafficMirrorFilterRuleOutput)
}

type TrafficMirrorFilterRuleMapOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TrafficMirrorFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleMapOutput) ToTrafficMirrorFilterRuleMapOutput() TrafficMirrorFilterRuleMapOutput {
	return o
}

func (o TrafficMirrorFilterRuleMapOutput) ToTrafficMirrorFilterRuleMapOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleMapOutput {
	return o
}

func (o TrafficMirrorFilterRuleMapOutput) MapIndex(k pulumi.StringInput) TrafficMirrorFilterRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TrafficMirrorFilterRule {
		return vs[0].(map[string]*TrafficMirrorFilterRule)[vs[1].(string)]
	}).(TrafficMirrorFilterRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRuleInput)(nil)).Elem(), &TrafficMirrorFilterRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRuleArrayInput)(nil)).Elem(), TrafficMirrorFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRuleMapInput)(nil)).Elem(), TrafficMirrorFilterRuleMap{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleMapOutput{})
}
