// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a VPC IP address group resource within HuaweiCloud.
//
// ## Example Usage
// ### IPv4 Address Group
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewAddressGroup(ctx, "ipv4", &Vpc.AddressGroupArgs{
//				Addresses: pulumi.StringArray{
//					pulumi.String("192.168.10.10"),
//					pulumi.String("192.168.1.1-192.168.1.50"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### IPv6 Address Group
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewAddressGroup(ctx, "ipv6", &Vpc.AddressGroupArgs{
//				Addresses: pulumi.StringArray{
//					pulumi.String("2001:db8:a583:6e::/64"),
//				},
//				IpVersion: pulumi.Int(6),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Address Group with ipExtraSet
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Vpc.NewAddressGroup(ctx, "ipv6", &Vpc.AddressGroupArgs{
//				IpExtraSets: vpc.AddressGroupIpExtraSetArray{
//					&vpc.AddressGroupIpExtraSetArgs{
//						Ip:      pulumi.String("192.168.3.2"),
//						Remarks: pulumi.String("terraform test 1"),
//					},
//					&vpc.AddressGroupIpExtraSetArgs{
//						Ip:      pulumi.String("192.168.5.0/24"),
//						Remarks: pulumi.String("terraform test 2"),
//					},
//					&vpc.AddressGroupIpExtraSetArgs{
//						Ip: pulumi.String("192.168.3.20-192.168.3.100"),
//					},
//				},
//				IpVersion: pulumi.Int(4),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// IP address groups can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Vpc/addressGroup:AddressGroup test bc96f6b0-ca2c-42ee-b719-0f26bc9c8661
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response. The missing attributes include`force_destroy`. It is generally recommended running `terraform plan` after importing the image. You can then decide if changes should be applied to the image, or the resource definition should be updated to align with the image. Also you can ignore changes as below. hcl resource "huaweicloud_vpc_address_group" "test" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	force_destroy,
//
//	]
//
//	} }
type AddressGroup struct {
	pulumi.CustomResourceState

	// Specifies an array of one or more IP addresses. The address can be a single IP
	// address, IP address range or IP address CIDR. Only one of `addresses` and `ipExtraSet` can be specified.
	Addresses pulumi.StringArrayOutput `pulumi:"addresses"`
	// Specifies the supplementary information about the IP address group.
	// The value is a string of no more than `255` characters and cannot contain angle brackets (< or >).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the enterprise project ID.
	// Changing this creates a new address group.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies whether to forcibly destroy the address group if it is associated with
	// a security group rule, the address group and the associated security group rule will be deleted together.
	// The default value is **false**.
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// Specifies the IP addresses and their remarks in an IP address group.
	// The ipExtraSet structure is documented below.
	// Only one of `addresses` and `ipExtraSet` can be specified.
	IpExtraSets AddressGroupIpExtraSetArrayOutput `pulumi:"ipExtraSets"`
	// Specifies the IP version, either `4` (default) or `6`.
	// Changing this creates a new address group.
	IpVersion pulumi.IntPtrOutput `pulumi:"ipVersion"`
	// Specifies the maximum number of addresses that an address group can contain.
	// The valid value is range from `1` to `20`, the default value is `20`.
	MaxCapacity pulumi.IntOutput `pulumi:"maxCapacity"`
	// Specifies the IP address group name.\
	// The value is a string of `1` to `64` characters that can contain letters, digits, underscores (_), hyphens (-) and
	// periods (.).
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the region in which to create the IP address group. If omitted, the
	// provider-level region will be used. Changing this creates a new address group.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewAddressGroup registers a new resource with the given unique name, arguments, and options.
func NewAddressGroup(ctx *pulumi.Context,
	name string, args *AddressGroupArgs, opts ...pulumi.ResourceOption) (*AddressGroup, error) {
	if args == nil {
		args = &AddressGroupArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource AddressGroup
	err := ctx.RegisterResource("huaweicloud:Vpc/addressGroup:AddressGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAddressGroup gets an existing AddressGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAddressGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AddressGroupState, opts ...pulumi.ResourceOption) (*AddressGroup, error) {
	var resource AddressGroup
	err := ctx.ReadResource("huaweicloud:Vpc/addressGroup:AddressGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AddressGroup resources.
type addressGroupState struct {
	// Specifies an array of one or more IP addresses. The address can be a single IP
	// address, IP address range or IP address CIDR. Only one of `addresses` and `ipExtraSet` can be specified.
	Addresses []string `pulumi:"addresses"`
	// Specifies the supplementary information about the IP address group.
	// The value is a string of no more than `255` characters and cannot contain angle brackets (< or >).
	Description *string `pulumi:"description"`
	// Specifies the enterprise project ID.
	// Changing this creates a new address group.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies whether to forcibly destroy the address group if it is associated with
	// a security group rule, the address group and the associated security group rule will be deleted together.
	// The default value is **false**.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Specifies the IP addresses and their remarks in an IP address group.
	// The ipExtraSet structure is documented below.
	// Only one of `addresses` and `ipExtraSet` can be specified.
	IpExtraSets []AddressGroupIpExtraSet `pulumi:"ipExtraSets"`
	// Specifies the IP version, either `4` (default) or `6`.
	// Changing this creates a new address group.
	IpVersion *int `pulumi:"ipVersion"`
	// Specifies the maximum number of addresses that an address group can contain.
	// The valid value is range from `1` to `20`, the default value is `20`.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Specifies the IP address group name.\
	// The value is a string of `1` to `64` characters that can contain letters, digits, underscores (_), hyphens (-) and
	// periods (.).
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the IP address group. If omitted, the
	// provider-level region will be used. Changing this creates a new address group.
	Region *string `pulumi:"region"`
}

type AddressGroupState struct {
	// Specifies an array of one or more IP addresses. The address can be a single IP
	// address, IP address range or IP address CIDR. Only one of `addresses` and `ipExtraSet` can be specified.
	Addresses pulumi.StringArrayInput
	// Specifies the supplementary information about the IP address group.
	// The value is a string of no more than `255` characters and cannot contain angle brackets (< or >).
	Description pulumi.StringPtrInput
	// Specifies the enterprise project ID.
	// Changing this creates a new address group.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies whether to forcibly destroy the address group if it is associated with
	// a security group rule, the address group and the associated security group rule will be deleted together.
	// The default value is **false**.
	ForceDestroy pulumi.BoolPtrInput
	// Specifies the IP addresses and their remarks in an IP address group.
	// The ipExtraSet structure is documented below.
	// Only one of `addresses` and `ipExtraSet` can be specified.
	IpExtraSets AddressGroupIpExtraSetArrayInput
	// Specifies the IP version, either `4` (default) or `6`.
	// Changing this creates a new address group.
	IpVersion pulumi.IntPtrInput
	// Specifies the maximum number of addresses that an address group can contain.
	// The valid value is range from `1` to `20`, the default value is `20`.
	MaxCapacity pulumi.IntPtrInput
	// Specifies the IP address group name.\
	// The value is a string of `1` to `64` characters that can contain letters, digits, underscores (_), hyphens (-) and
	// periods (.).
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the IP address group. If omitted, the
	// provider-level region will be used. Changing this creates a new address group.
	Region pulumi.StringPtrInput
}

func (AddressGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*addressGroupState)(nil)).Elem()
}

type addressGroupArgs struct {
	// Specifies an array of one or more IP addresses. The address can be a single IP
	// address, IP address range or IP address CIDR. Only one of `addresses` and `ipExtraSet` can be specified.
	Addresses []string `pulumi:"addresses"`
	// Specifies the supplementary information about the IP address group.
	// The value is a string of no more than `255` characters and cannot contain angle brackets (< or >).
	Description *string `pulumi:"description"`
	// Specifies the enterprise project ID.
	// Changing this creates a new address group.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies whether to forcibly destroy the address group if it is associated with
	// a security group rule, the address group and the associated security group rule will be deleted together.
	// The default value is **false**.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Specifies the IP addresses and their remarks in an IP address group.
	// The ipExtraSet structure is documented below.
	// Only one of `addresses` and `ipExtraSet` can be specified.
	IpExtraSets []AddressGroupIpExtraSet `pulumi:"ipExtraSets"`
	// Specifies the IP version, either `4` (default) or `6`.
	// Changing this creates a new address group.
	IpVersion *int `pulumi:"ipVersion"`
	// Specifies the maximum number of addresses that an address group can contain.
	// The valid value is range from `1` to `20`, the default value is `20`.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Specifies the IP address group name.\
	// The value is a string of `1` to `64` characters that can contain letters, digits, underscores (_), hyphens (-) and
	// periods (.).
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the IP address group. If omitted, the
	// provider-level region will be used. Changing this creates a new address group.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a AddressGroup resource.
type AddressGroupArgs struct {
	// Specifies an array of one or more IP addresses. The address can be a single IP
	// address, IP address range or IP address CIDR. Only one of `addresses` and `ipExtraSet` can be specified.
	Addresses pulumi.StringArrayInput
	// Specifies the supplementary information about the IP address group.
	// The value is a string of no more than `255` characters and cannot contain angle brackets (< or >).
	Description pulumi.StringPtrInput
	// Specifies the enterprise project ID.
	// Changing this creates a new address group.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies whether to forcibly destroy the address group if it is associated with
	// a security group rule, the address group and the associated security group rule will be deleted together.
	// The default value is **false**.
	ForceDestroy pulumi.BoolPtrInput
	// Specifies the IP addresses and their remarks in an IP address group.
	// The ipExtraSet structure is documented below.
	// Only one of `addresses` and `ipExtraSet` can be specified.
	IpExtraSets AddressGroupIpExtraSetArrayInput
	// Specifies the IP version, either `4` (default) or `6`.
	// Changing this creates a new address group.
	IpVersion pulumi.IntPtrInput
	// Specifies the maximum number of addresses that an address group can contain.
	// The valid value is range from `1` to `20`, the default value is `20`.
	MaxCapacity pulumi.IntPtrInput
	// Specifies the IP address group name.\
	// The value is a string of `1` to `64` characters that can contain letters, digits, underscores (_), hyphens (-) and
	// periods (.).
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the IP address group. If omitted, the
	// provider-level region will be used. Changing this creates a new address group.
	Region pulumi.StringPtrInput
}

func (AddressGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*addressGroupArgs)(nil)).Elem()
}

type AddressGroupInput interface {
	pulumi.Input

	ToAddressGroupOutput() AddressGroupOutput
	ToAddressGroupOutputWithContext(ctx context.Context) AddressGroupOutput
}

func (*AddressGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroup)(nil)).Elem()
}

func (i *AddressGroup) ToAddressGroupOutput() AddressGroupOutput {
	return i.ToAddressGroupOutputWithContext(context.Background())
}

func (i *AddressGroup) ToAddressGroupOutputWithContext(ctx context.Context) AddressGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupOutput)
}

// AddressGroupArrayInput is an input type that accepts AddressGroupArray and AddressGroupArrayOutput values.
// You can construct a concrete instance of `AddressGroupArrayInput` via:
//
//	AddressGroupArray{ AddressGroupArgs{...} }
type AddressGroupArrayInput interface {
	pulumi.Input

	ToAddressGroupArrayOutput() AddressGroupArrayOutput
	ToAddressGroupArrayOutputWithContext(context.Context) AddressGroupArrayOutput
}

type AddressGroupArray []AddressGroupInput

func (AddressGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressGroup)(nil)).Elem()
}

func (i AddressGroupArray) ToAddressGroupArrayOutput() AddressGroupArrayOutput {
	return i.ToAddressGroupArrayOutputWithContext(context.Background())
}

func (i AddressGroupArray) ToAddressGroupArrayOutputWithContext(ctx context.Context) AddressGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupArrayOutput)
}

// AddressGroupMapInput is an input type that accepts AddressGroupMap and AddressGroupMapOutput values.
// You can construct a concrete instance of `AddressGroupMapInput` via:
//
//	AddressGroupMap{ "key": AddressGroupArgs{...} }
type AddressGroupMapInput interface {
	pulumi.Input

	ToAddressGroupMapOutput() AddressGroupMapOutput
	ToAddressGroupMapOutputWithContext(context.Context) AddressGroupMapOutput
}

type AddressGroupMap map[string]AddressGroupInput

func (AddressGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressGroup)(nil)).Elem()
}

func (i AddressGroupMap) ToAddressGroupMapOutput() AddressGroupMapOutput {
	return i.ToAddressGroupMapOutputWithContext(context.Background())
}

func (i AddressGroupMap) ToAddressGroupMapOutputWithContext(ctx context.Context) AddressGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressGroupMapOutput)
}

type AddressGroupOutput struct{ *pulumi.OutputState }

func (AddressGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressGroup)(nil)).Elem()
}

func (o AddressGroupOutput) ToAddressGroupOutput() AddressGroupOutput {
	return o
}

func (o AddressGroupOutput) ToAddressGroupOutputWithContext(ctx context.Context) AddressGroupOutput {
	return o
}

// Specifies an array of one or more IP addresses. The address can be a single IP
// address, IP address range or IP address CIDR. Only one of `addresses` and `ipExtraSet` can be specified.
func (o AddressGroupOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.StringArrayOutput { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Specifies the supplementary information about the IP address group.
// The value is a string of no more than `255` characters and cannot contain angle brackets (< or >).
func (o AddressGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the enterprise project ID.
// Changing this creates a new address group.
func (o AddressGroupOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies whether to forcibly destroy the address group if it is associated with
// a security group rule, the address group and the associated security group rule will be deleted together.
// The default value is **false**.
func (o AddressGroupOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// Specifies the IP addresses and their remarks in an IP address group.
// The ipExtraSet structure is documented below.
// Only one of `addresses` and `ipExtraSet` can be specified.
func (o AddressGroupOutput) IpExtraSets() AddressGroupIpExtraSetArrayOutput {
	return o.ApplyT(func(v *AddressGroup) AddressGroupIpExtraSetArrayOutput { return v.IpExtraSets }).(AddressGroupIpExtraSetArrayOutput)
}

// Specifies the IP version, either `4` (default) or `6`.
// Changing this creates a new address group.
func (o AddressGroupOutput) IpVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.IntPtrOutput { return v.IpVersion }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of addresses that an address group can contain.
// The valid value is range from `1` to `20`, the default value is `20`.
func (o AddressGroupOutput) MaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.IntOutput { return v.MaxCapacity }).(pulumi.IntOutput)
}

// Specifies the IP address group name.\
// The value is a string of `1` to `64` characters that can contain letters, digits, underscores (_), hyphens (-) and
// periods (.).
func (o AddressGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the region in which to create the IP address group. If omitted, the
// provider-level region will be used. Changing this creates a new address group.
func (o AddressGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AddressGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type AddressGroupArrayOutput struct{ *pulumi.OutputState }

func (AddressGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AddressGroup)(nil)).Elem()
}

func (o AddressGroupArrayOutput) ToAddressGroupArrayOutput() AddressGroupArrayOutput {
	return o
}

func (o AddressGroupArrayOutput) ToAddressGroupArrayOutputWithContext(ctx context.Context) AddressGroupArrayOutput {
	return o
}

func (o AddressGroupArrayOutput) Index(i pulumi.IntInput) AddressGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AddressGroup {
		return vs[0].([]*AddressGroup)[vs[1].(int)]
	}).(AddressGroupOutput)
}

type AddressGroupMapOutput struct{ *pulumi.OutputState }

func (AddressGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AddressGroup)(nil)).Elem()
}

func (o AddressGroupMapOutput) ToAddressGroupMapOutput() AddressGroupMapOutput {
	return o
}

func (o AddressGroupMapOutput) ToAddressGroupMapOutputWithContext(ctx context.Context) AddressGroupMapOutput {
	return o
}

func (o AddressGroupMapOutput) MapIndex(k pulumi.StringInput) AddressGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AddressGroup {
		return vs[0].(map[string]*AddressGroup)[vs[1].(string)]
	}).(AddressGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupInput)(nil)).Elem(), &AddressGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupArrayInput)(nil)).Elem(), AddressGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddressGroupMapInput)(nil)).Elem(), AddressGroupMap{})
	pulumi.RegisterOutputType(AddressGroupOutput{})
	pulumi.RegisterOutputType(AddressGroupArrayOutput{})
	pulumi.RegisterOutputType(AddressGroupMapOutput{})
}
