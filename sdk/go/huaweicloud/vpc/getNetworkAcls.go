// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of VPC network ACLs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			networkAclName := cfg.RequireObject("networkAclName")
//			enterpriseProjectId := cfg.RequireObject("enterpriseProjectId")
//			_, err := Vpc.GetNetworkAcls(ctx, &vpc.GetNetworkAclsArgs{
//				Name:                pulumi.StringRef(networkAclName),
//				EnterpriseProjectId: pulumi.StringRef(enterpriseProjectId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNetworkAcls(ctx *pulumi.Context, args *GetNetworkAclsArgs, opts ...pulumi.InvokeOption) (*GetNetworkAclsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetNetworkAclsResult
	err := ctx.Invoke("huaweicloud:Vpc/getNetworkAcls:getNetworkAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsArgs struct {
	// Specifies whether the network ACL is enabled. The value can be **true** or **false**.
	Enabled *string `pulumi:"enabled"`
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `pulumi:"name"`
	// Specifies the network ACL ID.
	NetworkAclId *string `pulumi:"networkAclId"`
	// Specifies the region in which to obtain the network ACLs.
	// If omitted, the provider-level region will be used.
	Region *string `pulumi:"region"`
	// Specifies the status of the network ACL.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResult struct {
	// Whether the network ACL is enabled.
	Enabled *string `pulumi:"enabled"`
	// The enterprise project ID of the network ACL.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The network ACL rule name.
	Name         *string `pulumi:"name"`
	NetworkAclId *string `pulumi:"networkAclId"`
	// The list of VPC network ACLs.
	// The networkAcls structure is documented below.
	NetworkAcls []GetNetworkAclsNetworkAcl `pulumi:"networkAcls"`
	Region      string                     `pulumi:"region"`
	// The status of the ACL.
	Status *string `pulumi:"status"`
}

func GetNetworkAclsOutput(ctx *pulumi.Context, args GetNetworkAclsOutputArgs, opts ...pulumi.InvokeOption) GetNetworkAclsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetworkAclsResult, error) {
			args := v.(GetNetworkAclsArgs)
			r, err := GetNetworkAcls(ctx, &args, opts...)
			var s GetNetworkAclsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetworkAclsResultOutput)
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsOutputArgs struct {
	// Specifies whether the network ACL is enabled. The value can be **true** or **false**.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectId pulumi.StringPtrInput `pulumi:"enterpriseProjectId"`
	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the network ACL ID.
	NetworkAclId pulumi.StringPtrInput `pulumi:"networkAclId"`
	// Specifies the region in which to obtain the network ACLs.
	// If omitted, the provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the status of the network ACL.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetNetworkAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsResult)(nil)).Elem()
}

func (o GetNetworkAclsResultOutput) ToGetNetworkAclsResultOutput() GetNetworkAclsResultOutput {
	return o
}

func (o GetNetworkAclsResultOutput) ToGetNetworkAclsResultOutputWithContext(ctx context.Context) GetNetworkAclsResultOutput {
	return o
}

// Whether the network ACL is enabled.
func (o GetNetworkAclsResultOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The enterprise project ID of the network ACL.
func (o GetNetworkAclsResultOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The network ACL rule name.
func (o GetNetworkAclsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetNetworkAclsResultOutput) NetworkAclId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.NetworkAclId }).(pulumi.StringPtrOutput)
}

// The list of VPC network ACLs.
// The networkAcls structure is documented below.
func (o GetNetworkAclsResultOutput) NetworkAcls() GetNetworkAclsNetworkAclArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) []GetNetworkAclsNetworkAcl { return v.NetworkAcls }).(GetNetworkAclsNetworkAclArrayOutput)
}

func (o GetNetworkAclsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) string { return v.Region }).(pulumi.StringOutput)
}

// The status of the ACL.
func (o GetNetworkAclsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkAclsResultOutput{})
}
