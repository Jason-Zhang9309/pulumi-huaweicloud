// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterEndpoint struct {
	// (Optional, String) Private network connection information.
	ConnectInfo *string `pulumi:"connectInfo"`
	// (Optional, String)
	// JDBC URL. The following is the default format:
	// jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl *string `pulumi:"jdbcUrl"`
}

// ClusterEndpointInput is an input type that accepts ClusterEndpointArgs and ClusterEndpointOutput values.
// You can construct a concrete instance of `ClusterEndpointInput` via:
//
//	ClusterEndpointArgs{...}
type ClusterEndpointInput interface {
	pulumi.Input

	ToClusterEndpointOutput() ClusterEndpointOutput
	ToClusterEndpointOutputWithContext(context.Context) ClusterEndpointOutput
}

type ClusterEndpointArgs struct {
	// (Optional, String) Private network connection information.
	ConnectInfo pulumi.StringPtrInput `pulumi:"connectInfo"`
	// (Optional, String)
	// JDBC URL. The following is the default format:
	// jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl pulumi.StringPtrInput `pulumi:"jdbcUrl"`
}

func (ClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (i ClusterEndpointArgs) ToClusterEndpointOutput() ClusterEndpointOutput {
	return i.ToClusterEndpointOutputWithContext(context.Background())
}

func (i ClusterEndpointArgs) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointOutput)
}

// ClusterEndpointArrayInput is an input type that accepts ClusterEndpointArray and ClusterEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterEndpointArrayInput` via:
//
//	ClusterEndpointArray{ ClusterEndpointArgs{...} }
type ClusterEndpointArrayInput interface {
	pulumi.Input

	ToClusterEndpointArrayOutput() ClusterEndpointArrayOutput
	ToClusterEndpointArrayOutputWithContext(context.Context) ClusterEndpointArrayOutput
}

type ClusterEndpointArray []ClusterEndpointInput

func (ClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEndpoint)(nil)).Elem()
}

func (i ClusterEndpointArray) ToClusterEndpointArrayOutput() ClusterEndpointArrayOutput {
	return i.ToClusterEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterEndpointArray) ToClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointArrayOutput)
}

type ClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointOutput) ToClusterEndpointOutput() ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return o
}

// (Optional, String) Private network connection information.
func (o ClusterEndpointOutput) ConnectInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEndpoint) *string { return v.ConnectInfo }).(pulumi.StringPtrOutput)
}

// (Optional, String)
// JDBC URL. The following is the default format:
// jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
func (o ClusterEndpointOutput) JdbcUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEndpoint) *string { return v.JdbcUrl }).(pulumi.StringPtrOutput)
}

type ClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointArrayOutput) ToClusterEndpointArrayOutput() ClusterEndpointArrayOutput {
	return o
}

func (o ClusterEndpointArrayOutput) ToClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterEndpointArrayOutput {
	return o
}

func (o ClusterEndpointArrayOutput) Index(i pulumi.IntInput) ClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterEndpoint {
		return vs[0].([]ClusterEndpoint)[vs[1].(int)]
	}).(ClusterEndpointOutput)
}

type ClusterPublicEndpoint struct {
	// (Optional, String)
	// JDBC URL. The following is the default format:
	// jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl *string `pulumi:"jdbcUrl"`
	// (Optional, String)
	// Public network connection information.
	PublicConnectInfo *string `pulumi:"publicConnectInfo"`
}

// ClusterPublicEndpointInput is an input type that accepts ClusterPublicEndpointArgs and ClusterPublicEndpointOutput values.
// You can construct a concrete instance of `ClusterPublicEndpointInput` via:
//
//	ClusterPublicEndpointArgs{...}
type ClusterPublicEndpointInput interface {
	pulumi.Input

	ToClusterPublicEndpointOutput() ClusterPublicEndpointOutput
	ToClusterPublicEndpointOutputWithContext(context.Context) ClusterPublicEndpointOutput
}

type ClusterPublicEndpointArgs struct {
	// (Optional, String)
	// JDBC URL. The following is the default format:
	// jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
	JdbcUrl pulumi.StringPtrInput `pulumi:"jdbcUrl"`
	// (Optional, String)
	// Public network connection information.
	PublicConnectInfo pulumi.StringPtrInput `pulumi:"publicConnectInfo"`
}

func (ClusterPublicEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPublicEndpoint)(nil)).Elem()
}

func (i ClusterPublicEndpointArgs) ToClusterPublicEndpointOutput() ClusterPublicEndpointOutput {
	return i.ToClusterPublicEndpointOutputWithContext(context.Background())
}

func (i ClusterPublicEndpointArgs) ToClusterPublicEndpointOutputWithContext(ctx context.Context) ClusterPublicEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicEndpointOutput)
}

// ClusterPublicEndpointArrayInput is an input type that accepts ClusterPublicEndpointArray and ClusterPublicEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterPublicEndpointArrayInput` via:
//
//	ClusterPublicEndpointArray{ ClusterPublicEndpointArgs{...} }
type ClusterPublicEndpointArrayInput interface {
	pulumi.Input

	ToClusterPublicEndpointArrayOutput() ClusterPublicEndpointArrayOutput
	ToClusterPublicEndpointArrayOutputWithContext(context.Context) ClusterPublicEndpointArrayOutput
}

type ClusterPublicEndpointArray []ClusterPublicEndpointInput

func (ClusterPublicEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPublicEndpoint)(nil)).Elem()
}

func (i ClusterPublicEndpointArray) ToClusterPublicEndpointArrayOutput() ClusterPublicEndpointArrayOutput {
	return i.ToClusterPublicEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterPublicEndpointArray) ToClusterPublicEndpointArrayOutputWithContext(ctx context.Context) ClusterPublicEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicEndpointArrayOutput)
}

type ClusterPublicEndpointOutput struct{ *pulumi.OutputState }

func (ClusterPublicEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPublicEndpoint)(nil)).Elem()
}

func (o ClusterPublicEndpointOutput) ToClusterPublicEndpointOutput() ClusterPublicEndpointOutput {
	return o
}

func (o ClusterPublicEndpointOutput) ToClusterPublicEndpointOutputWithContext(ctx context.Context) ClusterPublicEndpointOutput {
	return o
}

// (Optional, String)
// JDBC URL. The following is the default format:
// jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
func (o ClusterPublicEndpointOutput) JdbcUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPublicEndpoint) *string { return v.JdbcUrl }).(pulumi.StringPtrOutput)
}

// (Optional, String)
// Public network connection information.
func (o ClusterPublicEndpointOutput) PublicConnectInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPublicEndpoint) *string { return v.PublicConnectInfo }).(pulumi.StringPtrOutput)
}

type ClusterPublicEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterPublicEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPublicEndpoint)(nil)).Elem()
}

func (o ClusterPublicEndpointArrayOutput) ToClusterPublicEndpointArrayOutput() ClusterPublicEndpointArrayOutput {
	return o
}

func (o ClusterPublicEndpointArrayOutput) ToClusterPublicEndpointArrayOutputWithContext(ctx context.Context) ClusterPublicEndpointArrayOutput {
	return o
}

func (o ClusterPublicEndpointArrayOutput) Index(i pulumi.IntInput) ClusterPublicEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPublicEndpoint {
		return vs[0].([]ClusterPublicEndpoint)[vs[1].(int)]
	}).(ClusterPublicEndpointOutput)
}

type ClusterPublicIp struct {
	// EIP ID.
	EipId *string `pulumi:"eipId"`
	// Binding type of an EIP. The value can be either of the following:
	// autoAssign not_use bindExisting The default value is not_use.
	PublicBindType *string `pulumi:"publicBindType"`
}

// ClusterPublicIpInput is an input type that accepts ClusterPublicIpArgs and ClusterPublicIpOutput values.
// You can construct a concrete instance of `ClusterPublicIpInput` via:
//
//	ClusterPublicIpArgs{...}
type ClusterPublicIpInput interface {
	pulumi.Input

	ToClusterPublicIpOutput() ClusterPublicIpOutput
	ToClusterPublicIpOutputWithContext(context.Context) ClusterPublicIpOutput
}

type ClusterPublicIpArgs struct {
	// EIP ID.
	EipId pulumi.StringPtrInput `pulumi:"eipId"`
	// Binding type of an EIP. The value can be either of the following:
	// autoAssign not_use bindExisting The default value is not_use.
	PublicBindType pulumi.StringPtrInput `pulumi:"publicBindType"`
}

func (ClusterPublicIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPublicIp)(nil)).Elem()
}

func (i ClusterPublicIpArgs) ToClusterPublicIpOutput() ClusterPublicIpOutput {
	return i.ToClusterPublicIpOutputWithContext(context.Background())
}

func (i ClusterPublicIpArgs) ToClusterPublicIpOutputWithContext(ctx context.Context) ClusterPublicIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicIpOutput)
}

func (i ClusterPublicIpArgs) ToClusterPublicIpPtrOutput() ClusterPublicIpPtrOutput {
	return i.ToClusterPublicIpPtrOutputWithContext(context.Background())
}

func (i ClusterPublicIpArgs) ToClusterPublicIpPtrOutputWithContext(ctx context.Context) ClusterPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicIpOutput).ToClusterPublicIpPtrOutputWithContext(ctx)
}

// ClusterPublicIpPtrInput is an input type that accepts ClusterPublicIpArgs, ClusterPublicIpPtr and ClusterPublicIpPtrOutput values.
// You can construct a concrete instance of `ClusterPublicIpPtrInput` via:
//
//	        ClusterPublicIpArgs{...}
//
//	or:
//
//	        nil
type ClusterPublicIpPtrInput interface {
	pulumi.Input

	ToClusterPublicIpPtrOutput() ClusterPublicIpPtrOutput
	ToClusterPublicIpPtrOutputWithContext(context.Context) ClusterPublicIpPtrOutput
}

type clusterPublicIpPtrType ClusterPublicIpArgs

func ClusterPublicIpPtr(v *ClusterPublicIpArgs) ClusterPublicIpPtrInput {
	return (*clusterPublicIpPtrType)(v)
}

func (*clusterPublicIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPublicIp)(nil)).Elem()
}

func (i *clusterPublicIpPtrType) ToClusterPublicIpPtrOutput() ClusterPublicIpPtrOutput {
	return i.ToClusterPublicIpPtrOutputWithContext(context.Background())
}

func (i *clusterPublicIpPtrType) ToClusterPublicIpPtrOutputWithContext(ctx context.Context) ClusterPublicIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPublicIpPtrOutput)
}

type ClusterPublicIpOutput struct{ *pulumi.OutputState }

func (ClusterPublicIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPublicIp)(nil)).Elem()
}

func (o ClusterPublicIpOutput) ToClusterPublicIpOutput() ClusterPublicIpOutput {
	return o
}

func (o ClusterPublicIpOutput) ToClusterPublicIpOutputWithContext(ctx context.Context) ClusterPublicIpOutput {
	return o
}

func (o ClusterPublicIpOutput) ToClusterPublicIpPtrOutput() ClusterPublicIpPtrOutput {
	return o.ToClusterPublicIpPtrOutputWithContext(context.Background())
}

func (o ClusterPublicIpOutput) ToClusterPublicIpPtrOutputWithContext(ctx context.Context) ClusterPublicIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPublicIp) *ClusterPublicIp {
		return &v
	}).(ClusterPublicIpPtrOutput)
}

// EIP ID.
func (o ClusterPublicIpOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPublicIp) *string { return v.EipId }).(pulumi.StringPtrOutput)
}

// Binding type of an EIP. The value can be either of the following:
// autoAssign not_use bindExisting The default value is not_use.
func (o ClusterPublicIpOutput) PublicBindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPublicIp) *string { return v.PublicBindType }).(pulumi.StringPtrOutput)
}

type ClusterPublicIpPtrOutput struct{ *pulumi.OutputState }

func (ClusterPublicIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPublicIp)(nil)).Elem()
}

func (o ClusterPublicIpPtrOutput) ToClusterPublicIpPtrOutput() ClusterPublicIpPtrOutput {
	return o
}

func (o ClusterPublicIpPtrOutput) ToClusterPublicIpPtrOutputWithContext(ctx context.Context) ClusterPublicIpPtrOutput {
	return o
}

func (o ClusterPublicIpPtrOutput) Elem() ClusterPublicIpOutput {
	return o.ApplyT(func(v *ClusterPublicIp) ClusterPublicIp {
		if v != nil {
			return *v
		}
		var ret ClusterPublicIp
		return ret
	}).(ClusterPublicIpOutput)
}

// EIP ID.
func (o ClusterPublicIpPtrOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.EipId
	}).(pulumi.StringPtrOutput)
}

// Binding type of an EIP. The value can be either of the following:
// autoAssign not_use bindExisting The default value is not_use.
func (o ClusterPublicIpPtrOutput) PublicBindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterPublicIp) *string {
		if v == nil {
			return nil
		}
		return v.PublicBindType
	}).(pulumi.StringPtrOutput)
}

type GetFlaovrsFlavor struct {
	// Specifies the availability zone name.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The name of the dws node flavor. It is referenced by `nodeType` in `Dws.getFlaovrs`.
	FlavorId string `pulumi:"flavorId"`
	// Specifies the ram of the dws node flavor in GB.
	Memory int `pulumi:"memory"`
	// Indicates the Disk size in GB.
	Size int `pulumi:"size"`
	// Specifies the vcpus of the dws node flavor.
	Vcpus int `pulumi:"vcpus"`
	// Indicates Disk type.
	// + **LOCAL_DISK**: common I/O disk
	// + **SSD**: ultra-high I/O disk
	Volumetype string `pulumi:"volumetype"`
}

// GetFlaovrsFlavorInput is an input type that accepts GetFlaovrsFlavorArgs and GetFlaovrsFlavorOutput values.
// You can construct a concrete instance of `GetFlaovrsFlavorInput` via:
//
//	GetFlaovrsFlavorArgs{...}
type GetFlaovrsFlavorInput interface {
	pulumi.Input

	ToGetFlaovrsFlavorOutput() GetFlaovrsFlavorOutput
	ToGetFlaovrsFlavorOutputWithContext(context.Context) GetFlaovrsFlavorOutput
}

type GetFlaovrsFlavorArgs struct {
	// Specifies the availability zone name.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The name of the dws node flavor. It is referenced by `nodeType` in `Dws.getFlaovrs`.
	FlavorId pulumi.StringInput `pulumi:"flavorId"`
	// Specifies the ram of the dws node flavor in GB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Indicates the Disk size in GB.
	Size pulumi.IntInput `pulumi:"size"`
	// Specifies the vcpus of the dws node flavor.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
	// Indicates Disk type.
	// + **LOCAL_DISK**: common I/O disk
	// + **SSD**: ultra-high I/O disk
	Volumetype pulumi.StringInput `pulumi:"volumetype"`
}

func (GetFlaovrsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlaovrsFlavor)(nil)).Elem()
}

func (i GetFlaovrsFlavorArgs) ToGetFlaovrsFlavorOutput() GetFlaovrsFlavorOutput {
	return i.ToGetFlaovrsFlavorOutputWithContext(context.Background())
}

func (i GetFlaovrsFlavorArgs) ToGetFlaovrsFlavorOutputWithContext(ctx context.Context) GetFlaovrsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlaovrsFlavorOutput)
}

// GetFlaovrsFlavorArrayInput is an input type that accepts GetFlaovrsFlavorArray and GetFlaovrsFlavorArrayOutput values.
// You can construct a concrete instance of `GetFlaovrsFlavorArrayInput` via:
//
//	GetFlaovrsFlavorArray{ GetFlaovrsFlavorArgs{...} }
type GetFlaovrsFlavorArrayInput interface {
	pulumi.Input

	ToGetFlaovrsFlavorArrayOutput() GetFlaovrsFlavorArrayOutput
	ToGetFlaovrsFlavorArrayOutputWithContext(context.Context) GetFlaovrsFlavorArrayOutput
}

type GetFlaovrsFlavorArray []GetFlaovrsFlavorInput

func (GetFlaovrsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlaovrsFlavor)(nil)).Elem()
}

func (i GetFlaovrsFlavorArray) ToGetFlaovrsFlavorArrayOutput() GetFlaovrsFlavorArrayOutput {
	return i.ToGetFlaovrsFlavorArrayOutputWithContext(context.Background())
}

func (i GetFlaovrsFlavorArray) ToGetFlaovrsFlavorArrayOutputWithContext(ctx context.Context) GetFlaovrsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlaovrsFlavorArrayOutput)
}

type GetFlaovrsFlavorOutput struct{ *pulumi.OutputState }

func (GetFlaovrsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlaovrsFlavor)(nil)).Elem()
}

func (o GetFlaovrsFlavorOutput) ToGetFlaovrsFlavorOutput() GetFlaovrsFlavorOutput {
	return o
}

func (o GetFlaovrsFlavorOutput) ToGetFlaovrsFlavorOutputWithContext(ctx context.Context) GetFlaovrsFlavorOutput {
	return o
}

// Specifies the availability zone name.
func (o GetFlaovrsFlavorOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlaovrsFlavor) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The name of the dws node flavor. It is referenced by `nodeType` in `Dws.getFlaovrs`.
func (o GetFlaovrsFlavorOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlaovrsFlavor) string { return v.FlavorId }).(pulumi.StringOutput)
}

// Specifies the ram of the dws node flavor in GB.
func (o GetFlaovrsFlavorOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlaovrsFlavor) int { return v.Memory }).(pulumi.IntOutput)
}

// Indicates the Disk size in GB.
func (o GetFlaovrsFlavorOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlaovrsFlavor) int { return v.Size }).(pulumi.IntOutput)
}

// Specifies the vcpus of the dws node flavor.
func (o GetFlaovrsFlavorOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlaovrsFlavor) int { return v.Vcpus }).(pulumi.IntOutput)
}

// Indicates Disk type.
// + **LOCAL_DISK**: common I/O disk
// + **SSD**: ultra-high I/O disk
func (o GetFlaovrsFlavorOutput) Volumetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlaovrsFlavor) string { return v.Volumetype }).(pulumi.StringOutput)
}

type GetFlaovrsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetFlaovrsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlaovrsFlavor)(nil)).Elem()
}

func (o GetFlaovrsFlavorArrayOutput) ToGetFlaovrsFlavorArrayOutput() GetFlaovrsFlavorArrayOutput {
	return o
}

func (o GetFlaovrsFlavorArrayOutput) ToGetFlaovrsFlavorArrayOutputWithContext(ctx context.Context) GetFlaovrsFlavorArrayOutput {
	return o
}

func (o GetFlaovrsFlavorArrayOutput) Index(i pulumi.IntInput) GetFlaovrsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlaovrsFlavor {
		return vs[0].([]GetFlaovrsFlavor)[vs[1].(int)]
	}).(GetFlaovrsFlavorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointInput)(nil)).Elem(), ClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointArrayInput)(nil)).Elem(), ClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPublicEndpointInput)(nil)).Elem(), ClusterPublicEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPublicEndpointArrayInput)(nil)).Elem(), ClusterPublicEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPublicIpInput)(nil)).Elem(), ClusterPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterPublicIpPtrInput)(nil)).Elem(), ClusterPublicIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlaovrsFlavorInput)(nil)).Elem(), GetFlaovrsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlaovrsFlavorArrayInput)(nil)).Elem(), GetFlaovrsFlavorArray{})
	pulumi.RegisterOutputType(ClusterEndpointOutput{})
	pulumi.RegisterOutputType(ClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterPublicEndpointOutput{})
	pulumi.RegisterOutputType(ClusterPublicEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterPublicIpOutput{})
	pulumi.RegisterOutputType(ClusterPublicIpPtrOutput{})
	pulumi.RegisterOutputType(GetFlaovrsFlavorOutput{})
	pulumi.RegisterOutputType(GetFlaovrsFlavorArrayOutput{})
}
