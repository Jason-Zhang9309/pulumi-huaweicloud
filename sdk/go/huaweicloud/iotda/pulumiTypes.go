// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotda

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataforwardingRuleTarget struct {
	// Specifies the detail of AMQP forwards. It is required when type
	// is `AMQP_FORWARDING`. The amqpForwarding structure is documented below.
	AmqpForwarding *DataforwardingRuleTargetAmqpForwarding `pulumi:"amqpForwarding"`
	// Specifies the detail of the DIS forwards. It is required when type
	// is `DIS_FORWARDING`. The disForwarding structure is documented below.
	DisForwarding *DataforwardingRuleTargetDisForwarding `pulumi:"disForwarding"`
	// Specifies the detail of the HTTP forwards. It is required when type
	// is `HTTP_FORWARDING`. The httpForwarding structure is documented below.
	HttpForwarding *DataforwardingRuleTargetHttpForwarding `pulumi:"httpForwarding"`
	// The resource ID in UUID format.
	Id *string `pulumi:"id"`
	// Specifies the detail of the KAFKA forwards. It is required when type
	// is `DMS_KAFKA_FORWARDING`. The properties structure is documented below.
	KafkaForwarding *DataforwardingRuleTargetKafkaForwarding `pulumi:"kafkaForwarding"`
	// Specifies the detail of the OBS forwards. It is required when type
	// is `OBS_FORWARDING`. The obsForwarding structure is documented below.
	ObsForwarding *DataforwardingRuleTargetObsForwarding `pulumi:"obsForwarding"`
	// Specifies the type of forwarding target. The options are as follows:
	// + **HTTP_FORWARDING**: The platform can push specified device data to a Third-party application (HTTP push).
	//   You can set different addresses that different types of device data are pushed to.
	// + **DIS_FORWARDING**: DIS provides efficient collection, transmission, and distribution of real-time data. It also
	//   provides an abundant selection of APIs to help you quickly create real-time data applications.
	// + **OBS_FORWARDING**: OBS is a stable, secure, cloud storage service that is scalable, efficient and easy-to-use.
	//   It allows you to store any amount of unstructured data in any format, and provides REST APIs so you can access your
	//   data from anywhere.
	// + **AMQP_FORWARDING**: AMQP provides a scalable, distributed message queue that supports high throughput with low
	//   latency. AMQP is ready from the get-go and is O&M free.
	// + **DMS_KAFKA_FORWARDING**: Distributed Message Service (DMS) for Kafka features high throughput, concurrency, and
	//   scalability. It is suitable for real-time data transmission, stream data processing, system decoupling,
	//   and traffic balancing.
	Type string `pulumi:"type"`
}

// DataforwardingRuleTargetInput is an input type that accepts DataforwardingRuleTargetArgs and DataforwardingRuleTargetOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetInput` via:
//
//	DataforwardingRuleTargetArgs{...}
type DataforwardingRuleTargetInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetOutput() DataforwardingRuleTargetOutput
	ToDataforwardingRuleTargetOutputWithContext(context.Context) DataforwardingRuleTargetOutput
}

type DataforwardingRuleTargetArgs struct {
	// Specifies the detail of AMQP forwards. It is required when type
	// is `AMQP_FORWARDING`. The amqpForwarding structure is documented below.
	AmqpForwarding DataforwardingRuleTargetAmqpForwardingPtrInput `pulumi:"amqpForwarding"`
	// Specifies the detail of the DIS forwards. It is required when type
	// is `DIS_FORWARDING`. The disForwarding structure is documented below.
	DisForwarding DataforwardingRuleTargetDisForwardingPtrInput `pulumi:"disForwarding"`
	// Specifies the detail of the HTTP forwards. It is required when type
	// is `HTTP_FORWARDING`. The httpForwarding structure is documented below.
	HttpForwarding DataforwardingRuleTargetHttpForwardingPtrInput `pulumi:"httpForwarding"`
	// The resource ID in UUID format.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the detail of the KAFKA forwards. It is required when type
	// is `DMS_KAFKA_FORWARDING`. The properties structure is documented below.
	KafkaForwarding DataforwardingRuleTargetKafkaForwardingPtrInput `pulumi:"kafkaForwarding"`
	// Specifies the detail of the OBS forwards. It is required when type
	// is `OBS_FORWARDING`. The obsForwarding structure is documented below.
	ObsForwarding DataforwardingRuleTargetObsForwardingPtrInput `pulumi:"obsForwarding"`
	// Specifies the type of forwarding target. The options are as follows:
	// + **HTTP_FORWARDING**: The platform can push specified device data to a Third-party application (HTTP push).
	//   You can set different addresses that different types of device data are pushed to.
	// + **DIS_FORWARDING**: DIS provides efficient collection, transmission, and distribution of real-time data. It also
	//   provides an abundant selection of APIs to help you quickly create real-time data applications.
	// + **OBS_FORWARDING**: OBS is a stable, secure, cloud storage service that is scalable, efficient and easy-to-use.
	//   It allows you to store any amount of unstructured data in any format, and provides REST APIs so you can access your
	//   data from anywhere.
	// + **AMQP_FORWARDING**: AMQP provides a scalable, distributed message queue that supports high throughput with low
	//   latency. AMQP is ready from the get-go and is O&M free.
	// + **DMS_KAFKA_FORWARDING**: Distributed Message Service (DMS) for Kafka features high throughput, concurrency, and
	//   scalability. It is suitable for real-time data transmission, stream data processing, system decoupling,
	//   and traffic balancing.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DataforwardingRuleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTarget)(nil)).Elem()
}

func (i DataforwardingRuleTargetArgs) ToDataforwardingRuleTargetOutput() DataforwardingRuleTargetOutput {
	return i.ToDataforwardingRuleTargetOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetArgs) ToDataforwardingRuleTargetOutputWithContext(ctx context.Context) DataforwardingRuleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetOutput)
}

// DataforwardingRuleTargetArrayInput is an input type that accepts DataforwardingRuleTargetArray and DataforwardingRuleTargetArrayOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetArrayInput` via:
//
//	DataforwardingRuleTargetArray{ DataforwardingRuleTargetArgs{...} }
type DataforwardingRuleTargetArrayInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetArrayOutput() DataforwardingRuleTargetArrayOutput
	ToDataforwardingRuleTargetArrayOutputWithContext(context.Context) DataforwardingRuleTargetArrayOutput
}

type DataforwardingRuleTargetArray []DataforwardingRuleTargetInput

func (DataforwardingRuleTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataforwardingRuleTarget)(nil)).Elem()
}

func (i DataforwardingRuleTargetArray) ToDataforwardingRuleTargetArrayOutput() DataforwardingRuleTargetArrayOutput {
	return i.ToDataforwardingRuleTargetArrayOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetArray) ToDataforwardingRuleTargetArrayOutputWithContext(ctx context.Context) DataforwardingRuleTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetArrayOutput)
}

type DataforwardingRuleTargetOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTarget)(nil)).Elem()
}

func (o DataforwardingRuleTargetOutput) ToDataforwardingRuleTargetOutput() DataforwardingRuleTargetOutput {
	return o
}

func (o DataforwardingRuleTargetOutput) ToDataforwardingRuleTargetOutputWithContext(ctx context.Context) DataforwardingRuleTargetOutput {
	return o
}

// Specifies the detail of AMQP forwards. It is required when type
// is `AMQP_FORWARDING`. The amqpForwarding structure is documented below.
func (o DataforwardingRuleTargetOutput) AmqpForwarding() DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) *DataforwardingRuleTargetAmqpForwarding { return v.AmqpForwarding }).(DataforwardingRuleTargetAmqpForwardingPtrOutput)
}

// Specifies the detail of the DIS forwards. It is required when type
// is `DIS_FORWARDING`. The disForwarding structure is documented below.
func (o DataforwardingRuleTargetOutput) DisForwarding() DataforwardingRuleTargetDisForwardingPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) *DataforwardingRuleTargetDisForwarding { return v.DisForwarding }).(DataforwardingRuleTargetDisForwardingPtrOutput)
}

// Specifies the detail of the HTTP forwards. It is required when type
// is `HTTP_FORWARDING`. The httpForwarding structure is documented below.
func (o DataforwardingRuleTargetOutput) HttpForwarding() DataforwardingRuleTargetHttpForwardingPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) *DataforwardingRuleTargetHttpForwarding { return v.HttpForwarding }).(DataforwardingRuleTargetHttpForwardingPtrOutput)
}

// The resource ID in UUID format.
func (o DataforwardingRuleTargetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the detail of the KAFKA forwards. It is required when type
// is `DMS_KAFKA_FORWARDING`. The properties structure is documented below.
func (o DataforwardingRuleTargetOutput) KafkaForwarding() DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) *DataforwardingRuleTargetKafkaForwarding { return v.KafkaForwarding }).(DataforwardingRuleTargetKafkaForwardingPtrOutput)
}

// Specifies the detail of the OBS forwards. It is required when type
// is `OBS_FORWARDING`. The obsForwarding structure is documented below.
func (o DataforwardingRuleTargetOutput) ObsForwarding() DataforwardingRuleTargetObsForwardingPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) *DataforwardingRuleTargetObsForwarding { return v.ObsForwarding }).(DataforwardingRuleTargetObsForwardingPtrOutput)
}

// Specifies the type of forwarding target. The options are as follows:
//   - **HTTP_FORWARDING**: The platform can push specified device data to a Third-party application (HTTP push).
//     You can set different addresses that different types of device data are pushed to.
//   - **DIS_FORWARDING**: DIS provides efficient collection, transmission, and distribution of real-time data. It also
//     provides an abundant selection of APIs to help you quickly create real-time data applications.
//   - **OBS_FORWARDING**: OBS is a stable, secure, cloud storage service that is scalable, efficient and easy-to-use.
//     It allows you to store any amount of unstructured data in any format, and provides REST APIs so you can access your
//     data from anywhere.
//   - **AMQP_FORWARDING**: AMQP provides a scalable, distributed message queue that supports high throughput with low
//     latency. AMQP is ready from the get-go and is O&M free.
//   - **DMS_KAFKA_FORWARDING**: Distributed Message Service (DMS) for Kafka features high throughput, concurrency, and
//     scalability. It is suitable for real-time data transmission, stream data processing, system decoupling,
//     and traffic balancing.
func (o DataforwardingRuleTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTarget) string { return v.Type }).(pulumi.StringOutput)
}

type DataforwardingRuleTargetArrayOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataforwardingRuleTarget)(nil)).Elem()
}

func (o DataforwardingRuleTargetArrayOutput) ToDataforwardingRuleTargetArrayOutput() DataforwardingRuleTargetArrayOutput {
	return o
}

func (o DataforwardingRuleTargetArrayOutput) ToDataforwardingRuleTargetArrayOutputWithContext(ctx context.Context) DataforwardingRuleTargetArrayOutput {
	return o
}

func (o DataforwardingRuleTargetArrayOutput) Index(i pulumi.IntInput) DataforwardingRuleTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataforwardingRuleTarget {
		return vs[0].([]DataforwardingRuleTarget)[vs[1].(int)]
	}).(DataforwardingRuleTargetOutput)
}

type DataforwardingRuleTargetAmqpForwarding struct {
	// Specifies the AMQP Queue name.
	QueueName string `pulumi:"queueName"`
}

// DataforwardingRuleTargetAmqpForwardingInput is an input type that accepts DataforwardingRuleTargetAmqpForwardingArgs and DataforwardingRuleTargetAmqpForwardingOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetAmqpForwardingInput` via:
//
//	DataforwardingRuleTargetAmqpForwardingArgs{...}
type DataforwardingRuleTargetAmqpForwardingInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetAmqpForwardingOutput() DataforwardingRuleTargetAmqpForwardingOutput
	ToDataforwardingRuleTargetAmqpForwardingOutputWithContext(context.Context) DataforwardingRuleTargetAmqpForwardingOutput
}

type DataforwardingRuleTargetAmqpForwardingArgs struct {
	// Specifies the AMQP Queue name.
	QueueName pulumi.StringInput `pulumi:"queueName"`
}

func (DataforwardingRuleTargetAmqpForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetAmqpForwarding)(nil)).Elem()
}

func (i DataforwardingRuleTargetAmqpForwardingArgs) ToDataforwardingRuleTargetAmqpForwardingOutput() DataforwardingRuleTargetAmqpForwardingOutput {
	return i.ToDataforwardingRuleTargetAmqpForwardingOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetAmqpForwardingArgs) ToDataforwardingRuleTargetAmqpForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetAmqpForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetAmqpForwardingOutput)
}

func (i DataforwardingRuleTargetAmqpForwardingArgs) ToDataforwardingRuleTargetAmqpForwardingPtrOutput() DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetAmqpForwardingArgs) ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetAmqpForwardingOutput).ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(ctx)
}

// DataforwardingRuleTargetAmqpForwardingPtrInput is an input type that accepts DataforwardingRuleTargetAmqpForwardingArgs, DataforwardingRuleTargetAmqpForwardingPtr and DataforwardingRuleTargetAmqpForwardingPtrOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetAmqpForwardingPtrInput` via:
//
//	        DataforwardingRuleTargetAmqpForwardingArgs{...}
//
//	or:
//
//	        nil
type DataforwardingRuleTargetAmqpForwardingPtrInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetAmqpForwardingPtrOutput() DataforwardingRuleTargetAmqpForwardingPtrOutput
	ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(context.Context) DataforwardingRuleTargetAmqpForwardingPtrOutput
}

type dataforwardingRuleTargetAmqpForwardingPtrType DataforwardingRuleTargetAmqpForwardingArgs

func DataforwardingRuleTargetAmqpForwardingPtr(v *DataforwardingRuleTargetAmqpForwardingArgs) DataforwardingRuleTargetAmqpForwardingPtrInput {
	return (*dataforwardingRuleTargetAmqpForwardingPtrType)(v)
}

func (*dataforwardingRuleTargetAmqpForwardingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetAmqpForwarding)(nil)).Elem()
}

func (i *dataforwardingRuleTargetAmqpForwardingPtrType) ToDataforwardingRuleTargetAmqpForwardingPtrOutput() DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(context.Background())
}

func (i *dataforwardingRuleTargetAmqpForwardingPtrType) ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetAmqpForwardingPtrOutput)
}

type DataforwardingRuleTargetAmqpForwardingOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetAmqpForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetAmqpForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetAmqpForwardingOutput) ToDataforwardingRuleTargetAmqpForwardingOutput() DataforwardingRuleTargetAmqpForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetAmqpForwardingOutput) ToDataforwardingRuleTargetAmqpForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetAmqpForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetAmqpForwardingOutput) ToDataforwardingRuleTargetAmqpForwardingPtrOutput() DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return o.ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(context.Background())
}

func (o DataforwardingRuleTargetAmqpForwardingOutput) ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataforwardingRuleTargetAmqpForwarding) *DataforwardingRuleTargetAmqpForwarding {
		return &v
	}).(DataforwardingRuleTargetAmqpForwardingPtrOutput)
}

// Specifies the AMQP Queue name.
func (o DataforwardingRuleTargetAmqpForwardingOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetAmqpForwarding) string { return v.QueueName }).(pulumi.StringOutput)
}

type DataforwardingRuleTargetAmqpForwardingPtrOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetAmqpForwardingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetAmqpForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetAmqpForwardingPtrOutput) ToDataforwardingRuleTargetAmqpForwardingPtrOutput() DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetAmqpForwardingPtrOutput) ToDataforwardingRuleTargetAmqpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetAmqpForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetAmqpForwardingPtrOutput) Elem() DataforwardingRuleTargetAmqpForwardingOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetAmqpForwarding) DataforwardingRuleTargetAmqpForwarding {
		if v != nil {
			return *v
		}
		var ret DataforwardingRuleTargetAmqpForwarding
		return ret
	}).(DataforwardingRuleTargetAmqpForwardingOutput)
}

// Specifies the AMQP Queue name.
func (o DataforwardingRuleTargetAmqpForwardingPtrOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetAmqpForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.QueueName
	}).(pulumi.StringPtrOutput)
}

type DataforwardingRuleTargetDisForwarding struct {
	// Specifies the project ID to which the KAFKA belongs.
	// If omitted, the default project in the region will be used.
	ProjectId *string `pulumi:"projectId"`
	// Specifies the region to which the KAFKA belongs.
	Region string `pulumi:"region"`
	// Specifies the DIS stream ID.
	StreamId string `pulumi:"streamId"`
}

// DataforwardingRuleTargetDisForwardingInput is an input type that accepts DataforwardingRuleTargetDisForwardingArgs and DataforwardingRuleTargetDisForwardingOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetDisForwardingInput` via:
//
//	DataforwardingRuleTargetDisForwardingArgs{...}
type DataforwardingRuleTargetDisForwardingInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetDisForwardingOutput() DataforwardingRuleTargetDisForwardingOutput
	ToDataforwardingRuleTargetDisForwardingOutputWithContext(context.Context) DataforwardingRuleTargetDisForwardingOutput
}

type DataforwardingRuleTargetDisForwardingArgs struct {
	// Specifies the project ID to which the KAFKA belongs.
	// If omitted, the default project in the region will be used.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Specifies the region to which the KAFKA belongs.
	Region pulumi.StringInput `pulumi:"region"`
	// Specifies the DIS stream ID.
	StreamId pulumi.StringInput `pulumi:"streamId"`
}

func (DataforwardingRuleTargetDisForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetDisForwarding)(nil)).Elem()
}

func (i DataforwardingRuleTargetDisForwardingArgs) ToDataforwardingRuleTargetDisForwardingOutput() DataforwardingRuleTargetDisForwardingOutput {
	return i.ToDataforwardingRuleTargetDisForwardingOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetDisForwardingArgs) ToDataforwardingRuleTargetDisForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetDisForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetDisForwardingOutput)
}

func (i DataforwardingRuleTargetDisForwardingArgs) ToDataforwardingRuleTargetDisForwardingPtrOutput() DataforwardingRuleTargetDisForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetDisForwardingArgs) ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetDisForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetDisForwardingOutput).ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(ctx)
}

// DataforwardingRuleTargetDisForwardingPtrInput is an input type that accepts DataforwardingRuleTargetDisForwardingArgs, DataforwardingRuleTargetDisForwardingPtr and DataforwardingRuleTargetDisForwardingPtrOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetDisForwardingPtrInput` via:
//
//	        DataforwardingRuleTargetDisForwardingArgs{...}
//
//	or:
//
//	        nil
type DataforwardingRuleTargetDisForwardingPtrInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetDisForwardingPtrOutput() DataforwardingRuleTargetDisForwardingPtrOutput
	ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(context.Context) DataforwardingRuleTargetDisForwardingPtrOutput
}

type dataforwardingRuleTargetDisForwardingPtrType DataforwardingRuleTargetDisForwardingArgs

func DataforwardingRuleTargetDisForwardingPtr(v *DataforwardingRuleTargetDisForwardingArgs) DataforwardingRuleTargetDisForwardingPtrInput {
	return (*dataforwardingRuleTargetDisForwardingPtrType)(v)
}

func (*dataforwardingRuleTargetDisForwardingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetDisForwarding)(nil)).Elem()
}

func (i *dataforwardingRuleTargetDisForwardingPtrType) ToDataforwardingRuleTargetDisForwardingPtrOutput() DataforwardingRuleTargetDisForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(context.Background())
}

func (i *dataforwardingRuleTargetDisForwardingPtrType) ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetDisForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetDisForwardingPtrOutput)
}

type DataforwardingRuleTargetDisForwardingOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetDisForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetDisForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetDisForwardingOutput) ToDataforwardingRuleTargetDisForwardingOutput() DataforwardingRuleTargetDisForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetDisForwardingOutput) ToDataforwardingRuleTargetDisForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetDisForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetDisForwardingOutput) ToDataforwardingRuleTargetDisForwardingPtrOutput() DataforwardingRuleTargetDisForwardingPtrOutput {
	return o.ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(context.Background())
}

func (o DataforwardingRuleTargetDisForwardingOutput) ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetDisForwardingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataforwardingRuleTargetDisForwarding) *DataforwardingRuleTargetDisForwarding {
		return &v
	}).(DataforwardingRuleTargetDisForwardingPtrOutput)
}

// Specifies the project ID to which the KAFKA belongs.
// If omitted, the default project in the region will be used.
func (o DataforwardingRuleTargetDisForwardingOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetDisForwarding) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the region to which the KAFKA belongs.
func (o DataforwardingRuleTargetDisForwardingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetDisForwarding) string { return v.Region }).(pulumi.StringOutput)
}

// Specifies the DIS stream ID.
func (o DataforwardingRuleTargetDisForwardingOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetDisForwarding) string { return v.StreamId }).(pulumi.StringOutput)
}

type DataforwardingRuleTargetDisForwardingPtrOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetDisForwardingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetDisForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetDisForwardingPtrOutput) ToDataforwardingRuleTargetDisForwardingPtrOutput() DataforwardingRuleTargetDisForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetDisForwardingPtrOutput) ToDataforwardingRuleTargetDisForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetDisForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetDisForwardingPtrOutput) Elem() DataforwardingRuleTargetDisForwardingOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetDisForwarding) DataforwardingRuleTargetDisForwarding {
		if v != nil {
			return *v
		}
		var ret DataforwardingRuleTargetDisForwarding
		return ret
	}).(DataforwardingRuleTargetDisForwardingOutput)
}

// Specifies the project ID to which the KAFKA belongs.
// If omitted, the default project in the region will be used.
func (o DataforwardingRuleTargetDisForwardingPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetDisForwarding) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Specifies the region to which the KAFKA belongs.
func (o DataforwardingRuleTargetDisForwardingPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetDisForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Specifies the DIS stream ID.
func (o DataforwardingRuleTargetDisForwardingPtrOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetDisForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.StreamId
	}).(pulumi.StringPtrOutput)
}

type DataforwardingRuleTargetHttpForwarding struct {
	// Specifies the Push URL. The request method must is post.
	Url string `pulumi:"url"`
}

// DataforwardingRuleTargetHttpForwardingInput is an input type that accepts DataforwardingRuleTargetHttpForwardingArgs and DataforwardingRuleTargetHttpForwardingOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetHttpForwardingInput` via:
//
//	DataforwardingRuleTargetHttpForwardingArgs{...}
type DataforwardingRuleTargetHttpForwardingInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetHttpForwardingOutput() DataforwardingRuleTargetHttpForwardingOutput
	ToDataforwardingRuleTargetHttpForwardingOutputWithContext(context.Context) DataforwardingRuleTargetHttpForwardingOutput
}

type DataforwardingRuleTargetHttpForwardingArgs struct {
	// Specifies the Push URL. The request method must is post.
	Url pulumi.StringInput `pulumi:"url"`
}

func (DataforwardingRuleTargetHttpForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetHttpForwarding)(nil)).Elem()
}

func (i DataforwardingRuleTargetHttpForwardingArgs) ToDataforwardingRuleTargetHttpForwardingOutput() DataforwardingRuleTargetHttpForwardingOutput {
	return i.ToDataforwardingRuleTargetHttpForwardingOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetHttpForwardingArgs) ToDataforwardingRuleTargetHttpForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetHttpForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetHttpForwardingOutput)
}

func (i DataforwardingRuleTargetHttpForwardingArgs) ToDataforwardingRuleTargetHttpForwardingPtrOutput() DataforwardingRuleTargetHttpForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetHttpForwardingArgs) ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetHttpForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetHttpForwardingOutput).ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(ctx)
}

// DataforwardingRuleTargetHttpForwardingPtrInput is an input type that accepts DataforwardingRuleTargetHttpForwardingArgs, DataforwardingRuleTargetHttpForwardingPtr and DataforwardingRuleTargetHttpForwardingPtrOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetHttpForwardingPtrInput` via:
//
//	        DataforwardingRuleTargetHttpForwardingArgs{...}
//
//	or:
//
//	        nil
type DataforwardingRuleTargetHttpForwardingPtrInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetHttpForwardingPtrOutput() DataforwardingRuleTargetHttpForwardingPtrOutput
	ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(context.Context) DataforwardingRuleTargetHttpForwardingPtrOutput
}

type dataforwardingRuleTargetHttpForwardingPtrType DataforwardingRuleTargetHttpForwardingArgs

func DataforwardingRuleTargetHttpForwardingPtr(v *DataforwardingRuleTargetHttpForwardingArgs) DataforwardingRuleTargetHttpForwardingPtrInput {
	return (*dataforwardingRuleTargetHttpForwardingPtrType)(v)
}

func (*dataforwardingRuleTargetHttpForwardingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetHttpForwarding)(nil)).Elem()
}

func (i *dataforwardingRuleTargetHttpForwardingPtrType) ToDataforwardingRuleTargetHttpForwardingPtrOutput() DataforwardingRuleTargetHttpForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(context.Background())
}

func (i *dataforwardingRuleTargetHttpForwardingPtrType) ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetHttpForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetHttpForwardingPtrOutput)
}

type DataforwardingRuleTargetHttpForwardingOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetHttpForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetHttpForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetHttpForwardingOutput) ToDataforwardingRuleTargetHttpForwardingOutput() DataforwardingRuleTargetHttpForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetHttpForwardingOutput) ToDataforwardingRuleTargetHttpForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetHttpForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetHttpForwardingOutput) ToDataforwardingRuleTargetHttpForwardingPtrOutput() DataforwardingRuleTargetHttpForwardingPtrOutput {
	return o.ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(context.Background())
}

func (o DataforwardingRuleTargetHttpForwardingOutput) ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetHttpForwardingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataforwardingRuleTargetHttpForwarding) *DataforwardingRuleTargetHttpForwarding {
		return &v
	}).(DataforwardingRuleTargetHttpForwardingPtrOutput)
}

// Specifies the Push URL. The request method must is post.
func (o DataforwardingRuleTargetHttpForwardingOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetHttpForwarding) string { return v.Url }).(pulumi.StringOutput)
}

type DataforwardingRuleTargetHttpForwardingPtrOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetHttpForwardingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetHttpForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetHttpForwardingPtrOutput) ToDataforwardingRuleTargetHttpForwardingPtrOutput() DataforwardingRuleTargetHttpForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetHttpForwardingPtrOutput) ToDataforwardingRuleTargetHttpForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetHttpForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetHttpForwardingPtrOutput) Elem() DataforwardingRuleTargetHttpForwardingOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetHttpForwarding) DataforwardingRuleTargetHttpForwarding {
		if v != nil {
			return *v
		}
		var ret DataforwardingRuleTargetHttpForwarding
		return ret
	}).(DataforwardingRuleTargetHttpForwardingOutput)
}

// Specifies the Push URL. The request method must is post.
func (o DataforwardingRuleTargetHttpForwardingPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetHttpForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type DataforwardingRuleTargetKafkaForwarding struct {
	// Specifies the list of the connected service addresses.
	// The addresses structure is documented below.
	Addresses []DataforwardingRuleTargetKafkaForwardingAddress `pulumi:"addresses"`
	// Specifies the password.
	Password *string `pulumi:"password"`
	// Specifies the project ID to which the KAFKA belongs.
	// If omitted, the default project in the region will be used.
	ProjectId *string `pulumi:"projectId"`
	// Specifies the region to which the KAFKA belongs.
	Region string `pulumi:"region"`
	// Specifies the topic.
	Topic string `pulumi:"topic"`
	// Specifies the SASL user name.
	UserName *string `pulumi:"userName"`
}

// DataforwardingRuleTargetKafkaForwardingInput is an input type that accepts DataforwardingRuleTargetKafkaForwardingArgs and DataforwardingRuleTargetKafkaForwardingOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetKafkaForwardingInput` via:
//
//	DataforwardingRuleTargetKafkaForwardingArgs{...}
type DataforwardingRuleTargetKafkaForwardingInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetKafkaForwardingOutput() DataforwardingRuleTargetKafkaForwardingOutput
	ToDataforwardingRuleTargetKafkaForwardingOutputWithContext(context.Context) DataforwardingRuleTargetKafkaForwardingOutput
}

type DataforwardingRuleTargetKafkaForwardingArgs struct {
	// Specifies the list of the connected service addresses.
	// The addresses structure is documented below.
	Addresses DataforwardingRuleTargetKafkaForwardingAddressArrayInput `pulumi:"addresses"`
	// Specifies the password.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Specifies the project ID to which the KAFKA belongs.
	// If omitted, the default project in the region will be used.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Specifies the region to which the KAFKA belongs.
	Region pulumi.StringInput `pulumi:"region"`
	// Specifies the topic.
	Topic pulumi.StringInput `pulumi:"topic"`
	// Specifies the SASL user name.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (DataforwardingRuleTargetKafkaForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetKafkaForwarding)(nil)).Elem()
}

func (i DataforwardingRuleTargetKafkaForwardingArgs) ToDataforwardingRuleTargetKafkaForwardingOutput() DataforwardingRuleTargetKafkaForwardingOutput {
	return i.ToDataforwardingRuleTargetKafkaForwardingOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetKafkaForwardingArgs) ToDataforwardingRuleTargetKafkaForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetKafkaForwardingOutput)
}

func (i DataforwardingRuleTargetKafkaForwardingArgs) ToDataforwardingRuleTargetKafkaForwardingPtrOutput() DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetKafkaForwardingArgs) ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetKafkaForwardingOutput).ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(ctx)
}

// DataforwardingRuleTargetKafkaForwardingPtrInput is an input type that accepts DataforwardingRuleTargetKafkaForwardingArgs, DataforwardingRuleTargetKafkaForwardingPtr and DataforwardingRuleTargetKafkaForwardingPtrOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetKafkaForwardingPtrInput` via:
//
//	        DataforwardingRuleTargetKafkaForwardingArgs{...}
//
//	or:
//
//	        nil
type DataforwardingRuleTargetKafkaForwardingPtrInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetKafkaForwardingPtrOutput() DataforwardingRuleTargetKafkaForwardingPtrOutput
	ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(context.Context) DataforwardingRuleTargetKafkaForwardingPtrOutput
}

type dataforwardingRuleTargetKafkaForwardingPtrType DataforwardingRuleTargetKafkaForwardingArgs

func DataforwardingRuleTargetKafkaForwardingPtr(v *DataforwardingRuleTargetKafkaForwardingArgs) DataforwardingRuleTargetKafkaForwardingPtrInput {
	return (*dataforwardingRuleTargetKafkaForwardingPtrType)(v)
}

func (*dataforwardingRuleTargetKafkaForwardingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetKafkaForwarding)(nil)).Elem()
}

func (i *dataforwardingRuleTargetKafkaForwardingPtrType) ToDataforwardingRuleTargetKafkaForwardingPtrOutput() DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(context.Background())
}

func (i *dataforwardingRuleTargetKafkaForwardingPtrType) ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetKafkaForwardingPtrOutput)
}

type DataforwardingRuleTargetKafkaForwardingOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetKafkaForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetKafkaForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetKafkaForwardingOutput) ToDataforwardingRuleTargetKafkaForwardingOutput() DataforwardingRuleTargetKafkaForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingOutput) ToDataforwardingRuleTargetKafkaForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingOutput) ToDataforwardingRuleTargetKafkaForwardingPtrOutput() DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return o.ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(context.Background())
}

func (o DataforwardingRuleTargetKafkaForwardingOutput) ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataforwardingRuleTargetKafkaForwarding) *DataforwardingRuleTargetKafkaForwarding {
		return &v
	}).(DataforwardingRuleTargetKafkaForwardingPtrOutput)
}

// Specifies the list of the connected service addresses.
// The addresses structure is documented below.
func (o DataforwardingRuleTargetKafkaForwardingOutput) Addresses() DataforwardingRuleTargetKafkaForwardingAddressArrayOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwarding) []DataforwardingRuleTargetKafkaForwardingAddress {
		return v.Addresses
	}).(DataforwardingRuleTargetKafkaForwardingAddressArrayOutput)
}

// Specifies the password.
func (o DataforwardingRuleTargetKafkaForwardingOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwarding) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Specifies the project ID to which the KAFKA belongs.
// If omitted, the default project in the region will be used.
func (o DataforwardingRuleTargetKafkaForwardingOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwarding) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the region to which the KAFKA belongs.
func (o DataforwardingRuleTargetKafkaForwardingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwarding) string { return v.Region }).(pulumi.StringOutput)
}

// Specifies the topic.
func (o DataforwardingRuleTargetKafkaForwardingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwarding) string { return v.Topic }).(pulumi.StringOutput)
}

// Specifies the SASL user name.
func (o DataforwardingRuleTargetKafkaForwardingOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwarding) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type DataforwardingRuleTargetKafkaForwardingPtrOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetKafkaForwardingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetKafkaForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) ToDataforwardingRuleTargetKafkaForwardingPtrOutput() DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) ToDataforwardingRuleTargetKafkaForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) Elem() DataforwardingRuleTargetKafkaForwardingOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) DataforwardingRuleTargetKafkaForwarding {
		if v != nil {
			return *v
		}
		var ret DataforwardingRuleTargetKafkaForwarding
		return ret
	}).(DataforwardingRuleTargetKafkaForwardingOutput)
}

// Specifies the list of the connected service addresses.
// The addresses structure is documented below.
func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) Addresses() DataforwardingRuleTargetKafkaForwardingAddressArrayOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) []DataforwardingRuleTargetKafkaForwardingAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(DataforwardingRuleTargetKafkaForwardingAddressArrayOutput)
}

// Specifies the password.
func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Specifies the project ID to which the KAFKA belongs.
// If omitted, the default project in the region will be used.
func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Specifies the region to which the KAFKA belongs.
func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Specifies the topic.
func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

// Specifies the SASL user name.
func (o DataforwardingRuleTargetKafkaForwardingPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetKafkaForwarding) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type DataforwardingRuleTargetKafkaForwardingAddress struct {
	// Specifies the domain of the connected service address.
	// Exactly one of `ip` or `domain` must be provided.
	Domain *string `pulumi:"domain"`
	// Specifies the IP of the connected service address.
	// Exactly one of `ip` or `domain` must be provided.
	Ip *string `pulumi:"ip"`
	// Specifies the port of the connected service address.
	Port int `pulumi:"port"`
}

// DataforwardingRuleTargetKafkaForwardingAddressInput is an input type that accepts DataforwardingRuleTargetKafkaForwardingAddressArgs and DataforwardingRuleTargetKafkaForwardingAddressOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetKafkaForwardingAddressInput` via:
//
//	DataforwardingRuleTargetKafkaForwardingAddressArgs{...}
type DataforwardingRuleTargetKafkaForwardingAddressInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetKafkaForwardingAddressOutput() DataforwardingRuleTargetKafkaForwardingAddressOutput
	ToDataforwardingRuleTargetKafkaForwardingAddressOutputWithContext(context.Context) DataforwardingRuleTargetKafkaForwardingAddressOutput
}

type DataforwardingRuleTargetKafkaForwardingAddressArgs struct {
	// Specifies the domain of the connected service address.
	// Exactly one of `ip` or `domain` must be provided.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Specifies the IP of the connected service address.
	// Exactly one of `ip` or `domain` must be provided.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// Specifies the port of the connected service address.
	Port pulumi.IntInput `pulumi:"port"`
}

func (DataforwardingRuleTargetKafkaForwardingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetKafkaForwardingAddress)(nil)).Elem()
}

func (i DataforwardingRuleTargetKafkaForwardingAddressArgs) ToDataforwardingRuleTargetKafkaForwardingAddressOutput() DataforwardingRuleTargetKafkaForwardingAddressOutput {
	return i.ToDataforwardingRuleTargetKafkaForwardingAddressOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetKafkaForwardingAddressArgs) ToDataforwardingRuleTargetKafkaForwardingAddressOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetKafkaForwardingAddressOutput)
}

// DataforwardingRuleTargetKafkaForwardingAddressArrayInput is an input type that accepts DataforwardingRuleTargetKafkaForwardingAddressArray and DataforwardingRuleTargetKafkaForwardingAddressArrayOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetKafkaForwardingAddressArrayInput` via:
//
//	DataforwardingRuleTargetKafkaForwardingAddressArray{ DataforwardingRuleTargetKafkaForwardingAddressArgs{...} }
type DataforwardingRuleTargetKafkaForwardingAddressArrayInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutput() DataforwardingRuleTargetKafkaForwardingAddressArrayOutput
	ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutputWithContext(context.Context) DataforwardingRuleTargetKafkaForwardingAddressArrayOutput
}

type DataforwardingRuleTargetKafkaForwardingAddressArray []DataforwardingRuleTargetKafkaForwardingAddressInput

func (DataforwardingRuleTargetKafkaForwardingAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataforwardingRuleTargetKafkaForwardingAddress)(nil)).Elem()
}

func (i DataforwardingRuleTargetKafkaForwardingAddressArray) ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutput() DataforwardingRuleTargetKafkaForwardingAddressArrayOutput {
	return i.ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetKafkaForwardingAddressArray) ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetKafkaForwardingAddressArrayOutput)
}

type DataforwardingRuleTargetKafkaForwardingAddressOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetKafkaForwardingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetKafkaForwardingAddress)(nil)).Elem()
}

func (o DataforwardingRuleTargetKafkaForwardingAddressOutput) ToDataforwardingRuleTargetKafkaForwardingAddressOutput() DataforwardingRuleTargetKafkaForwardingAddressOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingAddressOutput) ToDataforwardingRuleTargetKafkaForwardingAddressOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingAddressOutput {
	return o
}

// Specifies the domain of the connected service address.
// Exactly one of `ip` or `domain` must be provided.
func (o DataforwardingRuleTargetKafkaForwardingAddressOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwardingAddress) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Specifies the IP of the connected service address.
// Exactly one of `ip` or `domain` must be provided.
func (o DataforwardingRuleTargetKafkaForwardingAddressOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwardingAddress) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Specifies the port of the connected service address.
func (o DataforwardingRuleTargetKafkaForwardingAddressOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetKafkaForwardingAddress) int { return v.Port }).(pulumi.IntOutput)
}

type DataforwardingRuleTargetKafkaForwardingAddressArrayOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetKafkaForwardingAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataforwardingRuleTargetKafkaForwardingAddress)(nil)).Elem()
}

func (o DataforwardingRuleTargetKafkaForwardingAddressArrayOutput) ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutput() DataforwardingRuleTargetKafkaForwardingAddressArrayOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingAddressArrayOutput) ToDataforwardingRuleTargetKafkaForwardingAddressArrayOutputWithContext(ctx context.Context) DataforwardingRuleTargetKafkaForwardingAddressArrayOutput {
	return o
}

func (o DataforwardingRuleTargetKafkaForwardingAddressArrayOutput) Index(i pulumi.IntInput) DataforwardingRuleTargetKafkaForwardingAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataforwardingRuleTargetKafkaForwardingAddress {
		return vs[0].([]DataforwardingRuleTargetKafkaForwardingAddress)[vs[1].(int)]
	}).(DataforwardingRuleTargetKafkaForwardingAddressOutput)
}

type DataforwardingRuleTargetObsForwarding struct {
	// Specifies the OBS Bucket.
	Bucket string `pulumi:"bucket"`
	// Specifies the custom directory for storing channel files. The ID contains a
	// maximum of 256 characters. Multi-level directories can be separated by (/), and cannot start or end with a slash (/),
	// and cannot contain more than two adjacent slashes (/). Only letters, digits, hyphens (-), underscores (_), slash (/)
	// and braces ({}) are allowed. Braces can be used only for the time template parameters. For example, if the custom
	// directory is in the format of {YYYY}/{MM}/{DD}/{HH}, data is generated in the directory based on the current
	// time(for example, 2022/06/14/10) when data is forwarded.
	CustomDirectory *string `pulumi:"customDirectory"`
	// Specifies the project ID to which the KAFKA belongs.
	// If omitted, the default project in the region will be used.
	ProjectId *string `pulumi:"projectId"`
	// Specifies the region to which the KAFKA belongs.
	Region string `pulumi:"region"`
}

// DataforwardingRuleTargetObsForwardingInput is an input type that accepts DataforwardingRuleTargetObsForwardingArgs and DataforwardingRuleTargetObsForwardingOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetObsForwardingInput` via:
//
//	DataforwardingRuleTargetObsForwardingArgs{...}
type DataforwardingRuleTargetObsForwardingInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetObsForwardingOutput() DataforwardingRuleTargetObsForwardingOutput
	ToDataforwardingRuleTargetObsForwardingOutputWithContext(context.Context) DataforwardingRuleTargetObsForwardingOutput
}

type DataforwardingRuleTargetObsForwardingArgs struct {
	// Specifies the OBS Bucket.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies the custom directory for storing channel files. The ID contains a
	// maximum of 256 characters. Multi-level directories can be separated by (/), and cannot start or end with a slash (/),
	// and cannot contain more than two adjacent slashes (/). Only letters, digits, hyphens (-), underscores (_), slash (/)
	// and braces ({}) are allowed. Braces can be used only for the time template parameters. For example, if the custom
	// directory is in the format of {YYYY}/{MM}/{DD}/{HH}, data is generated in the directory based on the current
	// time(for example, 2022/06/14/10) when data is forwarded.
	CustomDirectory pulumi.StringPtrInput `pulumi:"customDirectory"`
	// Specifies the project ID to which the KAFKA belongs.
	// If omitted, the default project in the region will be used.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Specifies the region to which the KAFKA belongs.
	Region pulumi.StringInput `pulumi:"region"`
}

func (DataforwardingRuleTargetObsForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetObsForwarding)(nil)).Elem()
}

func (i DataforwardingRuleTargetObsForwardingArgs) ToDataforwardingRuleTargetObsForwardingOutput() DataforwardingRuleTargetObsForwardingOutput {
	return i.ToDataforwardingRuleTargetObsForwardingOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetObsForwardingArgs) ToDataforwardingRuleTargetObsForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetObsForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetObsForwardingOutput)
}

func (i DataforwardingRuleTargetObsForwardingArgs) ToDataforwardingRuleTargetObsForwardingPtrOutput() DataforwardingRuleTargetObsForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(context.Background())
}

func (i DataforwardingRuleTargetObsForwardingArgs) ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetObsForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetObsForwardingOutput).ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(ctx)
}

// DataforwardingRuleTargetObsForwardingPtrInput is an input type that accepts DataforwardingRuleTargetObsForwardingArgs, DataforwardingRuleTargetObsForwardingPtr and DataforwardingRuleTargetObsForwardingPtrOutput values.
// You can construct a concrete instance of `DataforwardingRuleTargetObsForwardingPtrInput` via:
//
//	        DataforwardingRuleTargetObsForwardingArgs{...}
//
//	or:
//
//	        nil
type DataforwardingRuleTargetObsForwardingPtrInput interface {
	pulumi.Input

	ToDataforwardingRuleTargetObsForwardingPtrOutput() DataforwardingRuleTargetObsForwardingPtrOutput
	ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(context.Context) DataforwardingRuleTargetObsForwardingPtrOutput
}

type dataforwardingRuleTargetObsForwardingPtrType DataforwardingRuleTargetObsForwardingArgs

func DataforwardingRuleTargetObsForwardingPtr(v *DataforwardingRuleTargetObsForwardingArgs) DataforwardingRuleTargetObsForwardingPtrInput {
	return (*dataforwardingRuleTargetObsForwardingPtrType)(v)
}

func (*dataforwardingRuleTargetObsForwardingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetObsForwarding)(nil)).Elem()
}

func (i *dataforwardingRuleTargetObsForwardingPtrType) ToDataforwardingRuleTargetObsForwardingPtrOutput() DataforwardingRuleTargetObsForwardingPtrOutput {
	return i.ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(context.Background())
}

func (i *dataforwardingRuleTargetObsForwardingPtrType) ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetObsForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataforwardingRuleTargetObsForwardingPtrOutput)
}

type DataforwardingRuleTargetObsForwardingOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetObsForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataforwardingRuleTargetObsForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetObsForwardingOutput) ToDataforwardingRuleTargetObsForwardingOutput() DataforwardingRuleTargetObsForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetObsForwardingOutput) ToDataforwardingRuleTargetObsForwardingOutputWithContext(ctx context.Context) DataforwardingRuleTargetObsForwardingOutput {
	return o
}

func (o DataforwardingRuleTargetObsForwardingOutput) ToDataforwardingRuleTargetObsForwardingPtrOutput() DataforwardingRuleTargetObsForwardingPtrOutput {
	return o.ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(context.Background())
}

func (o DataforwardingRuleTargetObsForwardingOutput) ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetObsForwardingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataforwardingRuleTargetObsForwarding) *DataforwardingRuleTargetObsForwarding {
		return &v
	}).(DataforwardingRuleTargetObsForwardingPtrOutput)
}

// Specifies the OBS Bucket.
func (o DataforwardingRuleTargetObsForwardingOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetObsForwarding) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies the custom directory for storing channel files. The ID contains a
// maximum of 256 characters. Multi-level directories can be separated by (/), and cannot start or end with a slash (/),
// and cannot contain more than two adjacent slashes (/). Only letters, digits, hyphens (-), underscores (_), slash (/)
// and braces ({}) are allowed. Braces can be used only for the time template parameters. For example, if the custom
// directory is in the format of {YYYY}/{MM}/{DD}/{HH}, data is generated in the directory based on the current
// time(for example, 2022/06/14/10) when data is forwarded.
func (o DataforwardingRuleTargetObsForwardingOutput) CustomDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetObsForwarding) *string { return v.CustomDirectory }).(pulumi.StringPtrOutput)
}

// Specifies the project ID to which the KAFKA belongs.
// If omitted, the default project in the region will be used.
func (o DataforwardingRuleTargetObsForwardingOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetObsForwarding) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the region to which the KAFKA belongs.
func (o DataforwardingRuleTargetObsForwardingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataforwardingRuleTargetObsForwarding) string { return v.Region }).(pulumi.StringOutput)
}

type DataforwardingRuleTargetObsForwardingPtrOutput struct{ *pulumi.OutputState }

func (DataforwardingRuleTargetObsForwardingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataforwardingRuleTargetObsForwarding)(nil)).Elem()
}

func (o DataforwardingRuleTargetObsForwardingPtrOutput) ToDataforwardingRuleTargetObsForwardingPtrOutput() DataforwardingRuleTargetObsForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetObsForwardingPtrOutput) ToDataforwardingRuleTargetObsForwardingPtrOutputWithContext(ctx context.Context) DataforwardingRuleTargetObsForwardingPtrOutput {
	return o
}

func (o DataforwardingRuleTargetObsForwardingPtrOutput) Elem() DataforwardingRuleTargetObsForwardingOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetObsForwarding) DataforwardingRuleTargetObsForwarding {
		if v != nil {
			return *v
		}
		var ret DataforwardingRuleTargetObsForwarding
		return ret
	}).(DataforwardingRuleTargetObsForwardingOutput)
}

// Specifies the OBS Bucket.
func (o DataforwardingRuleTargetObsForwardingPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetObsForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies the custom directory for storing channel files. The ID contains a
// maximum of 256 characters. Multi-level directories can be separated by (/), and cannot start or end with a slash (/),
// and cannot contain more than two adjacent slashes (/). Only letters, digits, hyphens (-), underscores (_), slash (/)
// and braces ({}) are allowed. Braces can be used only for the time template parameters. For example, if the custom
// directory is in the format of {YYYY}/{MM}/{DD}/{HH}, data is generated in the directory based on the current
// time(for example, 2022/06/14/10) when data is forwarded.
func (o DataforwardingRuleTargetObsForwardingPtrOutput) CustomDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetObsForwarding) *string {
		if v == nil {
			return nil
		}
		return v.CustomDirectory
	}).(pulumi.StringPtrOutput)
}

// Specifies the project ID to which the KAFKA belongs.
// If omitted, the default project in the region will be used.
func (o DataforwardingRuleTargetObsForwardingPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetObsForwarding) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Specifies the region to which the KAFKA belongs.
func (o DataforwardingRuleTargetObsForwardingPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataforwardingRuleTargetObsForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleAction struct {
	// Specifies the detail of device alarm. It is required when type
	// is `DEVICE_ALARM`. The deviceAlarm structure is documented below.
	DeviceAlarm *DeviceLinkageRuleActionDeviceAlarm `pulumi:"deviceAlarm"`
	// Specifies the detail of device command. It is required when type
	// is `DEVICE_CMD`. The deviceCommand structure is documented below.
	DeviceCommand *DeviceLinkageRuleActionDeviceCommand `pulumi:"deviceCommand"`
	// Specifies the detail of SMN notifications. It is required when type
	// is `SMN_FORWARDING`. The smnForwarding structure is documented below.
	SmnForwarding *DeviceLinkageRuleActionSmnForwarding `pulumi:"smnForwarding"`
	// Specifies the type of the alarm. The options are as follows:
	// + **fault**: Report alarms.
	// + **recovery**: Clear alarms.
	Type string `pulumi:"type"`
}

// DeviceLinkageRuleActionInput is an input type that accepts DeviceLinkageRuleActionArgs and DeviceLinkageRuleActionOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionInput` via:
//
//	DeviceLinkageRuleActionArgs{...}
type DeviceLinkageRuleActionInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionOutput() DeviceLinkageRuleActionOutput
	ToDeviceLinkageRuleActionOutputWithContext(context.Context) DeviceLinkageRuleActionOutput
}

type DeviceLinkageRuleActionArgs struct {
	// Specifies the detail of device alarm. It is required when type
	// is `DEVICE_ALARM`. The deviceAlarm structure is documented below.
	DeviceAlarm DeviceLinkageRuleActionDeviceAlarmPtrInput `pulumi:"deviceAlarm"`
	// Specifies the detail of device command. It is required when type
	// is `DEVICE_CMD`. The deviceCommand structure is documented below.
	DeviceCommand DeviceLinkageRuleActionDeviceCommandPtrInput `pulumi:"deviceCommand"`
	// Specifies the detail of SMN notifications. It is required when type
	// is `SMN_FORWARDING`. The smnForwarding structure is documented below.
	SmnForwarding DeviceLinkageRuleActionSmnForwardingPtrInput `pulumi:"smnForwarding"`
	// Specifies the type of the alarm. The options are as follows:
	// + **fault**: Report alarms.
	// + **recovery**: Clear alarms.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeviceLinkageRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleAction)(nil)).Elem()
}

func (i DeviceLinkageRuleActionArgs) ToDeviceLinkageRuleActionOutput() DeviceLinkageRuleActionOutput {
	return i.ToDeviceLinkageRuleActionOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionArgs) ToDeviceLinkageRuleActionOutputWithContext(ctx context.Context) DeviceLinkageRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionOutput)
}

// DeviceLinkageRuleActionArrayInput is an input type that accepts DeviceLinkageRuleActionArray and DeviceLinkageRuleActionArrayOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionArrayInput` via:
//
//	DeviceLinkageRuleActionArray{ DeviceLinkageRuleActionArgs{...} }
type DeviceLinkageRuleActionArrayInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionArrayOutput() DeviceLinkageRuleActionArrayOutput
	ToDeviceLinkageRuleActionArrayOutputWithContext(context.Context) DeviceLinkageRuleActionArrayOutput
}

type DeviceLinkageRuleActionArray []DeviceLinkageRuleActionInput

func (DeviceLinkageRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceLinkageRuleAction)(nil)).Elem()
}

func (i DeviceLinkageRuleActionArray) ToDeviceLinkageRuleActionArrayOutput() DeviceLinkageRuleActionArrayOutput {
	return i.ToDeviceLinkageRuleActionArrayOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionArray) ToDeviceLinkageRuleActionArrayOutputWithContext(ctx context.Context) DeviceLinkageRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionArrayOutput)
}

type DeviceLinkageRuleActionOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleAction)(nil)).Elem()
}

func (o DeviceLinkageRuleActionOutput) ToDeviceLinkageRuleActionOutput() DeviceLinkageRuleActionOutput {
	return o
}

func (o DeviceLinkageRuleActionOutput) ToDeviceLinkageRuleActionOutputWithContext(ctx context.Context) DeviceLinkageRuleActionOutput {
	return o
}

// Specifies the detail of device alarm. It is required when type
// is `DEVICE_ALARM`. The deviceAlarm structure is documented below.
func (o DeviceLinkageRuleActionOutput) DeviceAlarm() DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleAction) *DeviceLinkageRuleActionDeviceAlarm { return v.DeviceAlarm }).(DeviceLinkageRuleActionDeviceAlarmPtrOutput)
}

// Specifies the detail of device command. It is required when type
// is `DEVICE_CMD`. The deviceCommand structure is documented below.
func (o DeviceLinkageRuleActionOutput) DeviceCommand() DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleAction) *DeviceLinkageRuleActionDeviceCommand { return v.DeviceCommand }).(DeviceLinkageRuleActionDeviceCommandPtrOutput)
}

// Specifies the detail of SMN notifications. It is required when type
// is `SMN_FORWARDING`. The smnForwarding structure is documented below.
func (o DeviceLinkageRuleActionOutput) SmnForwarding() DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleAction) *DeviceLinkageRuleActionSmnForwarding { return v.SmnForwarding }).(DeviceLinkageRuleActionSmnForwardingPtrOutput)
}

// Specifies the type of the alarm. The options are as follows:
// + **fault**: Report alarms.
// + **recovery**: Clear alarms.
func (o DeviceLinkageRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type DeviceLinkageRuleActionArrayOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceLinkageRuleAction)(nil)).Elem()
}

func (o DeviceLinkageRuleActionArrayOutput) ToDeviceLinkageRuleActionArrayOutput() DeviceLinkageRuleActionArrayOutput {
	return o
}

func (o DeviceLinkageRuleActionArrayOutput) ToDeviceLinkageRuleActionArrayOutputWithContext(ctx context.Context) DeviceLinkageRuleActionArrayOutput {
	return o
}

func (o DeviceLinkageRuleActionArrayOutput) Index(i pulumi.IntInput) DeviceLinkageRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceLinkageRuleAction {
		return vs[0].([]DeviceLinkageRuleAction)[vs[1].(int)]
	}).(DeviceLinkageRuleActionOutput)
}

type DeviceLinkageRuleActionDeviceAlarm struct {
	// Specifies the description of the alarm.
	Description *string `pulumi:"description"`
	// Specifies the name of the alarm.
	Name string `pulumi:"name"`
	// Specifies the severity level of the alarm.
	// The valid values are **warning**, **minor**, **major** and **critical**.
	Severity string `pulumi:"severity"`
	// Specifies the type of the alarm. The options are as follows:
	// + **fault**: Report alarms.
	// + **recovery**: Clear alarms.
	Type string `pulumi:"type"`
}

// DeviceLinkageRuleActionDeviceAlarmInput is an input type that accepts DeviceLinkageRuleActionDeviceAlarmArgs and DeviceLinkageRuleActionDeviceAlarmOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionDeviceAlarmInput` via:
//
//	DeviceLinkageRuleActionDeviceAlarmArgs{...}
type DeviceLinkageRuleActionDeviceAlarmInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionDeviceAlarmOutput() DeviceLinkageRuleActionDeviceAlarmOutput
	ToDeviceLinkageRuleActionDeviceAlarmOutputWithContext(context.Context) DeviceLinkageRuleActionDeviceAlarmOutput
}

type DeviceLinkageRuleActionDeviceAlarmArgs struct {
	// Specifies the description of the alarm.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the name of the alarm.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the severity level of the alarm.
	// The valid values are **warning**, **minor**, **major** and **critical**.
	Severity pulumi.StringInput `pulumi:"severity"`
	// Specifies the type of the alarm. The options are as follows:
	// + **fault**: Report alarms.
	// + **recovery**: Clear alarms.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeviceLinkageRuleActionDeviceAlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleActionDeviceAlarm)(nil)).Elem()
}

func (i DeviceLinkageRuleActionDeviceAlarmArgs) ToDeviceLinkageRuleActionDeviceAlarmOutput() DeviceLinkageRuleActionDeviceAlarmOutput {
	return i.ToDeviceLinkageRuleActionDeviceAlarmOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionDeviceAlarmArgs) ToDeviceLinkageRuleActionDeviceAlarmOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceAlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionDeviceAlarmOutput)
}

func (i DeviceLinkageRuleActionDeviceAlarmArgs) ToDeviceLinkageRuleActionDeviceAlarmPtrOutput() DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return i.ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionDeviceAlarmArgs) ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionDeviceAlarmOutput).ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleActionDeviceAlarmPtrInput is an input type that accepts DeviceLinkageRuleActionDeviceAlarmArgs, DeviceLinkageRuleActionDeviceAlarmPtr and DeviceLinkageRuleActionDeviceAlarmPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionDeviceAlarmPtrInput` via:
//
//	        DeviceLinkageRuleActionDeviceAlarmArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleActionDeviceAlarmPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionDeviceAlarmPtrOutput() DeviceLinkageRuleActionDeviceAlarmPtrOutput
	ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(context.Context) DeviceLinkageRuleActionDeviceAlarmPtrOutput
}

type deviceLinkageRuleActionDeviceAlarmPtrType DeviceLinkageRuleActionDeviceAlarmArgs

func DeviceLinkageRuleActionDeviceAlarmPtr(v *DeviceLinkageRuleActionDeviceAlarmArgs) DeviceLinkageRuleActionDeviceAlarmPtrInput {
	return (*deviceLinkageRuleActionDeviceAlarmPtrType)(v)
}

func (*deviceLinkageRuleActionDeviceAlarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleActionDeviceAlarm)(nil)).Elem()
}

func (i *deviceLinkageRuleActionDeviceAlarmPtrType) ToDeviceLinkageRuleActionDeviceAlarmPtrOutput() DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return i.ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleActionDeviceAlarmPtrType) ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionDeviceAlarmPtrOutput)
}

type DeviceLinkageRuleActionDeviceAlarmOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionDeviceAlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleActionDeviceAlarm)(nil)).Elem()
}

func (o DeviceLinkageRuleActionDeviceAlarmOutput) ToDeviceLinkageRuleActionDeviceAlarmOutput() DeviceLinkageRuleActionDeviceAlarmOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceAlarmOutput) ToDeviceLinkageRuleActionDeviceAlarmOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceAlarmOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceAlarmOutput) ToDeviceLinkageRuleActionDeviceAlarmPtrOutput() DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return o.ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleActionDeviceAlarmOutput) ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleActionDeviceAlarm) *DeviceLinkageRuleActionDeviceAlarm {
		return &v
	}).(DeviceLinkageRuleActionDeviceAlarmPtrOutput)
}

// Specifies the description of the alarm.
func (o DeviceLinkageRuleActionDeviceAlarmOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceAlarm) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the name of the alarm.
func (o DeviceLinkageRuleActionDeviceAlarmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceAlarm) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the severity level of the alarm.
// The valid values are **warning**, **minor**, **major** and **critical**.
func (o DeviceLinkageRuleActionDeviceAlarmOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceAlarm) string { return v.Severity }).(pulumi.StringOutput)
}

// Specifies the type of the alarm. The options are as follows:
// + **fault**: Report alarms.
// + **recovery**: Clear alarms.
func (o DeviceLinkageRuleActionDeviceAlarmOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceAlarm) string { return v.Type }).(pulumi.StringOutput)
}

type DeviceLinkageRuleActionDeviceAlarmPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionDeviceAlarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleActionDeviceAlarm)(nil)).Elem()
}

func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) ToDeviceLinkageRuleActionDeviceAlarmPtrOutput() DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) ToDeviceLinkageRuleActionDeviceAlarmPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceAlarmPtrOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) Elem() DeviceLinkageRuleActionDeviceAlarmOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceAlarm) DeviceLinkageRuleActionDeviceAlarm {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleActionDeviceAlarm
		return ret
	}).(DeviceLinkageRuleActionDeviceAlarmOutput)
}

// Specifies the description of the alarm.
func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceAlarm) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the alarm.
func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the severity level of the alarm.
// The valid values are **warning**, **minor**, **major** and **critical**.
func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of the alarm. The options are as follows:
// + **fault**: Report alarms.
// + **recovery**: Clear alarms.
func (o DeviceLinkageRuleActionDeviceAlarmPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleActionDeviceCommand struct {
	// Specifies the command parameters, in json format.
	// + Example of device command using LWM2M protocol: `{"value":"1"}`, there are key-value pairs, each key is the
	//   parameter name of the command in the product model.
	// + Example of device command using MQTT protocol: `{"header": {"mode": "ACK","from": "/users/testUser","method":
	//   "SET_TEMPERATURE_READ_PERIOD","to":"/devices/{device_id }/services/{service_id}"},"body": {"value" : "1"}}`.
	// - **mode**: Required, whether the device needs to reply to the confirmation message after receiving the command.
	//   The default is ACK mode. `ACK` indicates that the confirmation message needs to be replied,
	//   `NOACK` indicates that the confirmation message does not need to be replied.
	// - **from**: Optional, the address of the command sender.
	//   When the App initiates a request, the format is /users/{userId},
	//   when the application server initiates a request, the format is /{serviceName},
	//   and when the IoT platform initiates a request, the format is /cloud/{serviceName}.
	// - **to**: optional, the address of the command receiver, the format is /devices/{device_id}/services/{service_id}.
	// - **method**: optional, the command name defined in the product model.
	// - **body**: optional, the message body of the command, which contains key-value pairs, each key is the parameter
	//   name of the command in the product model. The specific format requires application and device conventions.
	CommandBody string `pulumi:"commandBody"`
	// Specifies the command name.
	CommandName string `pulumi:"commandName"`
	// Specifies the device id which excutes the command.
	DeviceId string `pulumi:"deviceId"`
	// Specifies the service id to which the command belongs.
	ServiceId string `pulumi:"serviceId"`
}

// DeviceLinkageRuleActionDeviceCommandInput is an input type that accepts DeviceLinkageRuleActionDeviceCommandArgs and DeviceLinkageRuleActionDeviceCommandOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionDeviceCommandInput` via:
//
//	DeviceLinkageRuleActionDeviceCommandArgs{...}
type DeviceLinkageRuleActionDeviceCommandInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionDeviceCommandOutput() DeviceLinkageRuleActionDeviceCommandOutput
	ToDeviceLinkageRuleActionDeviceCommandOutputWithContext(context.Context) DeviceLinkageRuleActionDeviceCommandOutput
}

type DeviceLinkageRuleActionDeviceCommandArgs struct {
	// Specifies the command parameters, in json format.
	// + Example of device command using LWM2M protocol: `{"value":"1"}`, there are key-value pairs, each key is the
	//   parameter name of the command in the product model.
	// + Example of device command using MQTT protocol: `{"header": {"mode": "ACK","from": "/users/testUser","method":
	//   "SET_TEMPERATURE_READ_PERIOD","to":"/devices/{device_id }/services/{service_id}"},"body": {"value" : "1"}}`.
	// - **mode**: Required, whether the device needs to reply to the confirmation message after receiving the command.
	//   The default is ACK mode. `ACK` indicates that the confirmation message needs to be replied,
	//   `NOACK` indicates that the confirmation message does not need to be replied.
	// - **from**: Optional, the address of the command sender.
	//   When the App initiates a request, the format is /users/{userId},
	//   when the application server initiates a request, the format is /{serviceName},
	//   and when the IoT platform initiates a request, the format is /cloud/{serviceName}.
	// - **to**: optional, the address of the command receiver, the format is /devices/{device_id}/services/{service_id}.
	// - **method**: optional, the command name defined in the product model.
	// - **body**: optional, the message body of the command, which contains key-value pairs, each key is the parameter
	//   name of the command in the product model. The specific format requires application and device conventions.
	CommandBody pulumi.StringInput `pulumi:"commandBody"`
	// Specifies the command name.
	CommandName pulumi.StringInput `pulumi:"commandName"`
	// Specifies the device id which excutes the command.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// Specifies the service id to which the command belongs.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (DeviceLinkageRuleActionDeviceCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleActionDeviceCommand)(nil)).Elem()
}

func (i DeviceLinkageRuleActionDeviceCommandArgs) ToDeviceLinkageRuleActionDeviceCommandOutput() DeviceLinkageRuleActionDeviceCommandOutput {
	return i.ToDeviceLinkageRuleActionDeviceCommandOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionDeviceCommandArgs) ToDeviceLinkageRuleActionDeviceCommandOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionDeviceCommandOutput)
}

func (i DeviceLinkageRuleActionDeviceCommandArgs) ToDeviceLinkageRuleActionDeviceCommandPtrOutput() DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return i.ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionDeviceCommandArgs) ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionDeviceCommandOutput).ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleActionDeviceCommandPtrInput is an input type that accepts DeviceLinkageRuleActionDeviceCommandArgs, DeviceLinkageRuleActionDeviceCommandPtr and DeviceLinkageRuleActionDeviceCommandPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionDeviceCommandPtrInput` via:
//
//	        DeviceLinkageRuleActionDeviceCommandArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleActionDeviceCommandPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionDeviceCommandPtrOutput() DeviceLinkageRuleActionDeviceCommandPtrOutput
	ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(context.Context) DeviceLinkageRuleActionDeviceCommandPtrOutput
}

type deviceLinkageRuleActionDeviceCommandPtrType DeviceLinkageRuleActionDeviceCommandArgs

func DeviceLinkageRuleActionDeviceCommandPtr(v *DeviceLinkageRuleActionDeviceCommandArgs) DeviceLinkageRuleActionDeviceCommandPtrInput {
	return (*deviceLinkageRuleActionDeviceCommandPtrType)(v)
}

func (*deviceLinkageRuleActionDeviceCommandPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleActionDeviceCommand)(nil)).Elem()
}

func (i *deviceLinkageRuleActionDeviceCommandPtrType) ToDeviceLinkageRuleActionDeviceCommandPtrOutput() DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return i.ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleActionDeviceCommandPtrType) ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionDeviceCommandPtrOutput)
}

type DeviceLinkageRuleActionDeviceCommandOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionDeviceCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleActionDeviceCommand)(nil)).Elem()
}

func (o DeviceLinkageRuleActionDeviceCommandOutput) ToDeviceLinkageRuleActionDeviceCommandOutput() DeviceLinkageRuleActionDeviceCommandOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceCommandOutput) ToDeviceLinkageRuleActionDeviceCommandOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceCommandOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceCommandOutput) ToDeviceLinkageRuleActionDeviceCommandPtrOutput() DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return o.ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleActionDeviceCommandOutput) ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleActionDeviceCommand) *DeviceLinkageRuleActionDeviceCommand {
		return &v
	}).(DeviceLinkageRuleActionDeviceCommandPtrOutput)
}

// Specifies the command parameters, in json format.
//   - Example of device command using LWM2M protocol: `{"value":"1"}`, there are key-value pairs, each key is the
//     parameter name of the command in the product model.
//   - Example of device command using MQTT protocol: `{"header": {"mode": "ACK","from": "/users/testUser","method":
//     "SET_TEMPERATURE_READ_PERIOD","to":"/devices/{device_id }/services/{service_id}"},"body": {"value" : "1"}}`.
//   - **mode**: Required, whether the device needs to reply to the confirmation message after receiving the command.
//     The default is ACK mode. `ACK` indicates that the confirmation message needs to be replied,
//     `NOACK` indicates that the confirmation message does not need to be replied.
//   - **from**: Optional, the address of the command sender.
//     When the App initiates a request, the format is /users/{userId},
//     when the application server initiates a request, the format is /{serviceName},
//     and when the IoT platform initiates a request, the format is /cloud/{serviceName}.
//   - **to**: optional, the address of the command receiver, the format is /devices/{device_id}/services/{service_id}.
//   - **method**: optional, the command name defined in the product model.
//   - **body**: optional, the message body of the command, which contains key-value pairs, each key is the parameter
//     name of the command in the product model. The specific format requires application and device conventions.
func (o DeviceLinkageRuleActionDeviceCommandOutput) CommandBody() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceCommand) string { return v.CommandBody }).(pulumi.StringOutput)
}

// Specifies the command name.
func (o DeviceLinkageRuleActionDeviceCommandOutput) CommandName() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceCommand) string { return v.CommandName }).(pulumi.StringOutput)
}

// Specifies the device id which excutes the command.
func (o DeviceLinkageRuleActionDeviceCommandOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceCommand) string { return v.DeviceId }).(pulumi.StringOutput)
}

// Specifies the service id to which the command belongs.
func (o DeviceLinkageRuleActionDeviceCommandOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionDeviceCommand) string { return v.ServiceId }).(pulumi.StringOutput)
}

type DeviceLinkageRuleActionDeviceCommandPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionDeviceCommandPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleActionDeviceCommand)(nil)).Elem()
}

func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) ToDeviceLinkageRuleActionDeviceCommandPtrOutput() DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) ToDeviceLinkageRuleActionDeviceCommandPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionDeviceCommandPtrOutput {
	return o
}

func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) Elem() DeviceLinkageRuleActionDeviceCommandOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceCommand) DeviceLinkageRuleActionDeviceCommand {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleActionDeviceCommand
		return ret
	}).(DeviceLinkageRuleActionDeviceCommandOutput)
}

// Specifies the command parameters, in json format.
//   - Example of device command using LWM2M protocol: `{"value":"1"}`, there are key-value pairs, each key is the
//     parameter name of the command in the product model.
//   - Example of device command using MQTT protocol: `{"header": {"mode": "ACK","from": "/users/testUser","method":
//     "SET_TEMPERATURE_READ_PERIOD","to":"/devices/{device_id }/services/{service_id}"},"body": {"value" : "1"}}`.
//   - **mode**: Required, whether the device needs to reply to the confirmation message after receiving the command.
//     The default is ACK mode. `ACK` indicates that the confirmation message needs to be replied,
//     `NOACK` indicates that the confirmation message does not need to be replied.
//   - **from**: Optional, the address of the command sender.
//     When the App initiates a request, the format is /users/{userId},
//     when the application server initiates a request, the format is /{serviceName},
//     and when the IoT platform initiates a request, the format is /cloud/{serviceName}.
//   - **to**: optional, the address of the command receiver, the format is /devices/{device_id}/services/{service_id}.
//   - **method**: optional, the command name defined in the product model.
//   - **body**: optional, the message body of the command, which contains key-value pairs, each key is the parameter
//     name of the command in the product model. The specific format requires application and device conventions.
func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) CommandBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceCommand) *string {
		if v == nil {
			return nil
		}
		return &v.CommandBody
	}).(pulumi.StringPtrOutput)
}

// Specifies the command name.
func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) CommandName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceCommand) *string {
		if v == nil {
			return nil
		}
		return &v.CommandName
	}).(pulumi.StringPtrOutput)
}

// Specifies the device id which excutes the command.
func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceCommand) *string {
		if v == nil {
			return nil
		}
		return &v.DeviceId
	}).(pulumi.StringPtrOutput)
}

// Specifies the service id to which the command belongs.
func (o DeviceLinkageRuleActionDeviceCommandPtrOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionDeviceCommand) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceId
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleActionSmnForwarding struct {
	// Specifies the message content.
	MessageContent string `pulumi:"messageContent"`
	// Specifies the message title.
	MessageTitle string `pulumi:"messageTitle"`
	// Specifies the project ID to which the SMN belongs.
	// If omitted, the default project in the region will be used.
	ProjectId *string `pulumi:"projectId"`
	// Specifies the region to which the SMN belongs.
	Region string `pulumi:"region"`
	// Specifies the topic name of the SMN.
	TopicName string `pulumi:"topicName"`
	// Specifies the topic URN of the SMN.
	TopicUrn string `pulumi:"topicUrn"`
}

// DeviceLinkageRuleActionSmnForwardingInput is an input type that accepts DeviceLinkageRuleActionSmnForwardingArgs and DeviceLinkageRuleActionSmnForwardingOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionSmnForwardingInput` via:
//
//	DeviceLinkageRuleActionSmnForwardingArgs{...}
type DeviceLinkageRuleActionSmnForwardingInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionSmnForwardingOutput() DeviceLinkageRuleActionSmnForwardingOutput
	ToDeviceLinkageRuleActionSmnForwardingOutputWithContext(context.Context) DeviceLinkageRuleActionSmnForwardingOutput
}

type DeviceLinkageRuleActionSmnForwardingArgs struct {
	// Specifies the message content.
	MessageContent pulumi.StringInput `pulumi:"messageContent"`
	// Specifies the message title.
	MessageTitle pulumi.StringInput `pulumi:"messageTitle"`
	// Specifies the project ID to which the SMN belongs.
	// If omitted, the default project in the region will be used.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Specifies the region to which the SMN belongs.
	Region pulumi.StringInput `pulumi:"region"`
	// Specifies the topic name of the SMN.
	TopicName pulumi.StringInput `pulumi:"topicName"`
	// Specifies the topic URN of the SMN.
	TopicUrn pulumi.StringInput `pulumi:"topicUrn"`
}

func (DeviceLinkageRuleActionSmnForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleActionSmnForwarding)(nil)).Elem()
}

func (i DeviceLinkageRuleActionSmnForwardingArgs) ToDeviceLinkageRuleActionSmnForwardingOutput() DeviceLinkageRuleActionSmnForwardingOutput {
	return i.ToDeviceLinkageRuleActionSmnForwardingOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionSmnForwardingArgs) ToDeviceLinkageRuleActionSmnForwardingOutputWithContext(ctx context.Context) DeviceLinkageRuleActionSmnForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionSmnForwardingOutput)
}

func (i DeviceLinkageRuleActionSmnForwardingArgs) ToDeviceLinkageRuleActionSmnForwardingPtrOutput() DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return i.ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleActionSmnForwardingArgs) ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionSmnForwardingOutput).ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleActionSmnForwardingPtrInput is an input type that accepts DeviceLinkageRuleActionSmnForwardingArgs, DeviceLinkageRuleActionSmnForwardingPtr and DeviceLinkageRuleActionSmnForwardingPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleActionSmnForwardingPtrInput` via:
//
//	        DeviceLinkageRuleActionSmnForwardingArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleActionSmnForwardingPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleActionSmnForwardingPtrOutput() DeviceLinkageRuleActionSmnForwardingPtrOutput
	ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(context.Context) DeviceLinkageRuleActionSmnForwardingPtrOutput
}

type deviceLinkageRuleActionSmnForwardingPtrType DeviceLinkageRuleActionSmnForwardingArgs

func DeviceLinkageRuleActionSmnForwardingPtr(v *DeviceLinkageRuleActionSmnForwardingArgs) DeviceLinkageRuleActionSmnForwardingPtrInput {
	return (*deviceLinkageRuleActionSmnForwardingPtrType)(v)
}

func (*deviceLinkageRuleActionSmnForwardingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleActionSmnForwarding)(nil)).Elem()
}

func (i *deviceLinkageRuleActionSmnForwardingPtrType) ToDeviceLinkageRuleActionSmnForwardingPtrOutput() DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return i.ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleActionSmnForwardingPtrType) ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleActionSmnForwardingPtrOutput)
}

type DeviceLinkageRuleActionSmnForwardingOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionSmnForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleActionSmnForwarding)(nil)).Elem()
}

func (o DeviceLinkageRuleActionSmnForwardingOutput) ToDeviceLinkageRuleActionSmnForwardingOutput() DeviceLinkageRuleActionSmnForwardingOutput {
	return o
}

func (o DeviceLinkageRuleActionSmnForwardingOutput) ToDeviceLinkageRuleActionSmnForwardingOutputWithContext(ctx context.Context) DeviceLinkageRuleActionSmnForwardingOutput {
	return o
}

func (o DeviceLinkageRuleActionSmnForwardingOutput) ToDeviceLinkageRuleActionSmnForwardingPtrOutput() DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return o.ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleActionSmnForwardingOutput) ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleActionSmnForwarding) *DeviceLinkageRuleActionSmnForwarding {
		return &v
	}).(DeviceLinkageRuleActionSmnForwardingPtrOutput)
}

// Specifies the message content.
func (o DeviceLinkageRuleActionSmnForwardingOutput) MessageContent() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionSmnForwarding) string { return v.MessageContent }).(pulumi.StringOutput)
}

// Specifies the message title.
func (o DeviceLinkageRuleActionSmnForwardingOutput) MessageTitle() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionSmnForwarding) string { return v.MessageTitle }).(pulumi.StringOutput)
}

// Specifies the project ID to which the SMN belongs.
// If omitted, the default project in the region will be used.
func (o DeviceLinkageRuleActionSmnForwardingOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionSmnForwarding) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the region to which the SMN belongs.
func (o DeviceLinkageRuleActionSmnForwardingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionSmnForwarding) string { return v.Region }).(pulumi.StringOutput)
}

// Specifies the topic name of the SMN.
func (o DeviceLinkageRuleActionSmnForwardingOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionSmnForwarding) string { return v.TopicName }).(pulumi.StringOutput)
}

// Specifies the topic URN of the SMN.
func (o DeviceLinkageRuleActionSmnForwardingOutput) TopicUrn() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleActionSmnForwarding) string { return v.TopicUrn }).(pulumi.StringOutput)
}

type DeviceLinkageRuleActionSmnForwardingPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleActionSmnForwardingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleActionSmnForwarding)(nil)).Elem()
}

func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) ToDeviceLinkageRuleActionSmnForwardingPtrOutput() DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return o
}

func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) ToDeviceLinkageRuleActionSmnForwardingPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleActionSmnForwardingPtrOutput {
	return o
}

func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) Elem() DeviceLinkageRuleActionSmnForwardingOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) DeviceLinkageRuleActionSmnForwarding {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleActionSmnForwarding
		return ret
	}).(DeviceLinkageRuleActionSmnForwardingOutput)
}

// Specifies the message content.
func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) MessageContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.MessageContent
	}).(pulumi.StringPtrOutput)
}

// Specifies the message title.
func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) MessageTitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.MessageTitle
	}).(pulumi.StringPtrOutput)
}

// Specifies the project ID to which the SMN belongs.
// If omitted, the default project in the region will be used.
func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Specifies the region to which the SMN belongs.
func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Specifies the topic name of the SMN.
func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

// Specifies the topic URN of the SMN.
func (o DeviceLinkageRuleActionSmnForwardingPtrOutput) TopicUrn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleActionSmnForwarding) *string {
		if v == nil {
			return nil
		}
		return &v.TopicUrn
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleEffectivePeriod struct {
	// Specifies a list of days of week, separated by commas. 1 represents Sunday,
	// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
	DaysOfWeek *string `pulumi:"daysOfWeek"`
	// Specifies the end time, in the format: `HH:mm`.
	// For example: `10:00`. If the end time is the same as the start time, the effective period is the whole day.
	EndTime string `pulumi:"endTime"`
	// Specifies the start time, in the format: `HH:mm`.
	// For example: `03:00`.
	StartTime string `pulumi:"startTime"`
}

// DeviceLinkageRuleEffectivePeriodInput is an input type that accepts DeviceLinkageRuleEffectivePeriodArgs and DeviceLinkageRuleEffectivePeriodOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleEffectivePeriodInput` via:
//
//	DeviceLinkageRuleEffectivePeriodArgs{...}
type DeviceLinkageRuleEffectivePeriodInput interface {
	pulumi.Input

	ToDeviceLinkageRuleEffectivePeriodOutput() DeviceLinkageRuleEffectivePeriodOutput
	ToDeviceLinkageRuleEffectivePeriodOutputWithContext(context.Context) DeviceLinkageRuleEffectivePeriodOutput
}

type DeviceLinkageRuleEffectivePeriodArgs struct {
	// Specifies a list of days of week, separated by commas. 1 represents Sunday,
	// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
	DaysOfWeek pulumi.StringPtrInput `pulumi:"daysOfWeek"`
	// Specifies the end time, in the format: `HH:mm`.
	// For example: `10:00`. If the end time is the same as the start time, the effective period is the whole day.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Specifies the start time, in the format: `HH:mm`.
	// For example: `03:00`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (DeviceLinkageRuleEffectivePeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleEffectivePeriod)(nil)).Elem()
}

func (i DeviceLinkageRuleEffectivePeriodArgs) ToDeviceLinkageRuleEffectivePeriodOutput() DeviceLinkageRuleEffectivePeriodOutput {
	return i.ToDeviceLinkageRuleEffectivePeriodOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleEffectivePeriodArgs) ToDeviceLinkageRuleEffectivePeriodOutputWithContext(ctx context.Context) DeviceLinkageRuleEffectivePeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleEffectivePeriodOutput)
}

func (i DeviceLinkageRuleEffectivePeriodArgs) ToDeviceLinkageRuleEffectivePeriodPtrOutput() DeviceLinkageRuleEffectivePeriodPtrOutput {
	return i.ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleEffectivePeriodArgs) ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleEffectivePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleEffectivePeriodOutput).ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleEffectivePeriodPtrInput is an input type that accepts DeviceLinkageRuleEffectivePeriodArgs, DeviceLinkageRuleEffectivePeriodPtr and DeviceLinkageRuleEffectivePeriodPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleEffectivePeriodPtrInput` via:
//
//	        DeviceLinkageRuleEffectivePeriodArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleEffectivePeriodPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleEffectivePeriodPtrOutput() DeviceLinkageRuleEffectivePeriodPtrOutput
	ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(context.Context) DeviceLinkageRuleEffectivePeriodPtrOutput
}

type deviceLinkageRuleEffectivePeriodPtrType DeviceLinkageRuleEffectivePeriodArgs

func DeviceLinkageRuleEffectivePeriodPtr(v *DeviceLinkageRuleEffectivePeriodArgs) DeviceLinkageRuleEffectivePeriodPtrInput {
	return (*deviceLinkageRuleEffectivePeriodPtrType)(v)
}

func (*deviceLinkageRuleEffectivePeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleEffectivePeriod)(nil)).Elem()
}

func (i *deviceLinkageRuleEffectivePeriodPtrType) ToDeviceLinkageRuleEffectivePeriodPtrOutput() DeviceLinkageRuleEffectivePeriodPtrOutput {
	return i.ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleEffectivePeriodPtrType) ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleEffectivePeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleEffectivePeriodPtrOutput)
}

type DeviceLinkageRuleEffectivePeriodOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleEffectivePeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleEffectivePeriod)(nil)).Elem()
}

func (o DeviceLinkageRuleEffectivePeriodOutput) ToDeviceLinkageRuleEffectivePeriodOutput() DeviceLinkageRuleEffectivePeriodOutput {
	return o
}

func (o DeviceLinkageRuleEffectivePeriodOutput) ToDeviceLinkageRuleEffectivePeriodOutputWithContext(ctx context.Context) DeviceLinkageRuleEffectivePeriodOutput {
	return o
}

func (o DeviceLinkageRuleEffectivePeriodOutput) ToDeviceLinkageRuleEffectivePeriodPtrOutput() DeviceLinkageRuleEffectivePeriodPtrOutput {
	return o.ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleEffectivePeriodOutput) ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleEffectivePeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleEffectivePeriod) *DeviceLinkageRuleEffectivePeriod {
		return &v
	}).(DeviceLinkageRuleEffectivePeriodPtrOutput)
}

// Specifies a list of days of week, separated by commas. 1 represents Sunday,
// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
func (o DeviceLinkageRuleEffectivePeriodOutput) DaysOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleEffectivePeriod) *string { return v.DaysOfWeek }).(pulumi.StringPtrOutput)
}

// Specifies the end time, in the format: `HH:mm`.
// For example: `10:00`. If the end time is the same as the start time, the effective period is the whole day.
func (o DeviceLinkageRuleEffectivePeriodOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleEffectivePeriod) string { return v.EndTime }).(pulumi.StringOutput)
}

// Specifies the start time, in the format: `HH:mm`.
// For example: `03:00`.
func (o DeviceLinkageRuleEffectivePeriodOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleEffectivePeriod) string { return v.StartTime }).(pulumi.StringOutput)
}

type DeviceLinkageRuleEffectivePeriodPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleEffectivePeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleEffectivePeriod)(nil)).Elem()
}

func (o DeviceLinkageRuleEffectivePeriodPtrOutput) ToDeviceLinkageRuleEffectivePeriodPtrOutput() DeviceLinkageRuleEffectivePeriodPtrOutput {
	return o
}

func (o DeviceLinkageRuleEffectivePeriodPtrOutput) ToDeviceLinkageRuleEffectivePeriodPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleEffectivePeriodPtrOutput {
	return o
}

func (o DeviceLinkageRuleEffectivePeriodPtrOutput) Elem() DeviceLinkageRuleEffectivePeriodOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleEffectivePeriod) DeviceLinkageRuleEffectivePeriod {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleEffectivePeriod
		return ret
	}).(DeviceLinkageRuleEffectivePeriodOutput)
}

// Specifies a list of days of week, separated by commas. 1 represents Sunday,
// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
func (o DeviceLinkageRuleEffectivePeriodPtrOutput) DaysOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleEffectivePeriod) *string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeek
	}).(pulumi.StringPtrOutput)
}

// Specifies the end time, in the format: `HH:mm`.
// For example: `10:00`. If the end time is the same as the start time, the effective period is the whole day.
func (o DeviceLinkageRuleEffectivePeriodPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleEffectivePeriod) *string {
		if v == nil {
			return nil
		}
		return &v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Specifies the start time, in the format: `HH:mm`.
// For example: `03:00`.
func (o DeviceLinkageRuleEffectivePeriodPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleEffectivePeriod) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleTrigger struct {
	// Specifies the condition triggered at specified time every day. It is
	// required when type is `DAILY_TIMER`. The dailyTimerCondition structure is
	// documented below.
	DailyTimerCondition *DeviceLinkageRuleTriggerDailyTimerCondition `pulumi:"dailyTimerCondition"`
	// Specifies the condition triggered upon the property of device. It is
	// required when type is `DEVICE_DATA`. The deviceDataCondition structure is
	// documented below.
	DeviceDataCondition *DeviceLinkageRuleTriggerDeviceDataCondition `pulumi:"deviceDataCondition"`
	// Specifies the condition triggered by policy. It is required when type
	// is `SIMPLE_TIMER`. The simpleTimerCondition structure is documented below.
	SimpleTimerCondition *DeviceLinkageRuleTriggerSimpleTimerCondition `pulumi:"simpleTimerCondition"`
	// Specifies the type of the alarm. The options are as follows:
	// + **fault**: Report alarms.
	// + **recovery**: Clear alarms.
	Type string `pulumi:"type"`
}

// DeviceLinkageRuleTriggerInput is an input type that accepts DeviceLinkageRuleTriggerArgs and DeviceLinkageRuleTriggerOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerInput` via:
//
//	DeviceLinkageRuleTriggerArgs{...}
type DeviceLinkageRuleTriggerInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerOutput() DeviceLinkageRuleTriggerOutput
	ToDeviceLinkageRuleTriggerOutputWithContext(context.Context) DeviceLinkageRuleTriggerOutput
}

type DeviceLinkageRuleTriggerArgs struct {
	// Specifies the condition triggered at specified time every day. It is
	// required when type is `DAILY_TIMER`. The dailyTimerCondition structure is
	// documented below.
	DailyTimerCondition DeviceLinkageRuleTriggerDailyTimerConditionPtrInput `pulumi:"dailyTimerCondition"`
	// Specifies the condition triggered upon the property of device. It is
	// required when type is `DEVICE_DATA`. The deviceDataCondition structure is
	// documented below.
	DeviceDataCondition DeviceLinkageRuleTriggerDeviceDataConditionPtrInput `pulumi:"deviceDataCondition"`
	// Specifies the condition triggered by policy. It is required when type
	// is `SIMPLE_TIMER`. The simpleTimerCondition structure is documented below.
	SimpleTimerCondition DeviceLinkageRuleTriggerSimpleTimerConditionPtrInput `pulumi:"simpleTimerCondition"`
	// Specifies the type of the alarm. The options are as follows:
	// + **fault**: Report alarms.
	// + **recovery**: Clear alarms.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeviceLinkageRuleTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTrigger)(nil)).Elem()
}

func (i DeviceLinkageRuleTriggerArgs) ToDeviceLinkageRuleTriggerOutput() DeviceLinkageRuleTriggerOutput {
	return i.ToDeviceLinkageRuleTriggerOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerArgs) ToDeviceLinkageRuleTriggerOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerOutput)
}

// DeviceLinkageRuleTriggerArrayInput is an input type that accepts DeviceLinkageRuleTriggerArray and DeviceLinkageRuleTriggerArrayOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerArrayInput` via:
//
//	DeviceLinkageRuleTriggerArray{ DeviceLinkageRuleTriggerArgs{...} }
type DeviceLinkageRuleTriggerArrayInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerArrayOutput() DeviceLinkageRuleTriggerArrayOutput
	ToDeviceLinkageRuleTriggerArrayOutputWithContext(context.Context) DeviceLinkageRuleTriggerArrayOutput
}

type DeviceLinkageRuleTriggerArray []DeviceLinkageRuleTriggerInput

func (DeviceLinkageRuleTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceLinkageRuleTrigger)(nil)).Elem()
}

func (i DeviceLinkageRuleTriggerArray) ToDeviceLinkageRuleTriggerArrayOutput() DeviceLinkageRuleTriggerArrayOutput {
	return i.ToDeviceLinkageRuleTriggerArrayOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerArray) ToDeviceLinkageRuleTriggerArrayOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerArrayOutput)
}

type DeviceLinkageRuleTriggerOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTrigger)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerOutput) ToDeviceLinkageRuleTriggerOutput() DeviceLinkageRuleTriggerOutput {
	return o
}

func (o DeviceLinkageRuleTriggerOutput) ToDeviceLinkageRuleTriggerOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerOutput {
	return o
}

// Specifies the condition triggered at specified time every day. It is
// required when type is `DAILY_TIMER`. The dailyTimerCondition structure is
// documented below.
func (o DeviceLinkageRuleTriggerOutput) DailyTimerCondition() DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTrigger) *DeviceLinkageRuleTriggerDailyTimerCondition {
		return v.DailyTimerCondition
	}).(DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput)
}

// Specifies the condition triggered upon the property of device. It is
// required when type is `DEVICE_DATA`. The deviceDataCondition structure is
// documented below.
func (o DeviceLinkageRuleTriggerOutput) DeviceDataCondition() DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTrigger) *DeviceLinkageRuleTriggerDeviceDataCondition {
		return v.DeviceDataCondition
	}).(DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput)
}

// Specifies the condition triggered by policy. It is required when type
// is `SIMPLE_TIMER`. The simpleTimerCondition structure is documented below.
func (o DeviceLinkageRuleTriggerOutput) SimpleTimerCondition() DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTrigger) *DeviceLinkageRuleTriggerSimpleTimerCondition {
		return v.SimpleTimerCondition
	}).(DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput)
}

// Specifies the type of the alarm. The options are as follows:
// + **fault**: Report alarms.
// + **recovery**: Clear alarms.
func (o DeviceLinkageRuleTriggerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTrigger) string { return v.Type }).(pulumi.StringOutput)
}

type DeviceLinkageRuleTriggerArrayOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceLinkageRuleTrigger)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerArrayOutput) ToDeviceLinkageRuleTriggerArrayOutput() DeviceLinkageRuleTriggerArrayOutput {
	return o
}

func (o DeviceLinkageRuleTriggerArrayOutput) ToDeviceLinkageRuleTriggerArrayOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerArrayOutput {
	return o
}

func (o DeviceLinkageRuleTriggerArrayOutput) Index(i pulumi.IntInput) DeviceLinkageRuleTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceLinkageRuleTrigger {
		return vs[0].([]DeviceLinkageRuleTrigger)[vs[1].(int)]
	}).(DeviceLinkageRuleTriggerOutput)
}

type DeviceLinkageRuleTriggerDailyTimerCondition struct {
	// Specifies a list of days of week, separated by commas. 1 represents Sunday,
	// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
	DaysOfWeek *string `pulumi:"daysOfWeek"`
	// Specifies the start time, in the format: `HH:mm`.
	// For example: `03:00`.
	StartTime string `pulumi:"startTime"`
}

// DeviceLinkageRuleTriggerDailyTimerConditionInput is an input type that accepts DeviceLinkageRuleTriggerDailyTimerConditionArgs and DeviceLinkageRuleTriggerDailyTimerConditionOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerDailyTimerConditionInput` via:
//
//	DeviceLinkageRuleTriggerDailyTimerConditionArgs{...}
type DeviceLinkageRuleTriggerDailyTimerConditionInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerDailyTimerConditionOutput() DeviceLinkageRuleTriggerDailyTimerConditionOutput
	ToDeviceLinkageRuleTriggerDailyTimerConditionOutputWithContext(context.Context) DeviceLinkageRuleTriggerDailyTimerConditionOutput
}

type DeviceLinkageRuleTriggerDailyTimerConditionArgs struct {
	// Specifies a list of days of week, separated by commas. 1 represents Sunday,
	// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
	DaysOfWeek pulumi.StringPtrInput `pulumi:"daysOfWeek"`
	// Specifies the start time, in the format: `HH:mm`.
	// For example: `03:00`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (DeviceLinkageRuleTriggerDailyTimerConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTriggerDailyTimerCondition)(nil)).Elem()
}

func (i DeviceLinkageRuleTriggerDailyTimerConditionArgs) ToDeviceLinkageRuleTriggerDailyTimerConditionOutput() DeviceLinkageRuleTriggerDailyTimerConditionOutput {
	return i.ToDeviceLinkageRuleTriggerDailyTimerConditionOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerDailyTimerConditionArgs) ToDeviceLinkageRuleTriggerDailyTimerConditionOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDailyTimerConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerDailyTimerConditionOutput)
}

func (i DeviceLinkageRuleTriggerDailyTimerConditionArgs) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutput() DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return i.ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerDailyTimerConditionArgs) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerDailyTimerConditionOutput).ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleTriggerDailyTimerConditionPtrInput is an input type that accepts DeviceLinkageRuleTriggerDailyTimerConditionArgs, DeviceLinkageRuleTriggerDailyTimerConditionPtr and DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerDailyTimerConditionPtrInput` via:
//
//	        DeviceLinkageRuleTriggerDailyTimerConditionArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleTriggerDailyTimerConditionPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutput() DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput
	ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(context.Context) DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput
}

type deviceLinkageRuleTriggerDailyTimerConditionPtrType DeviceLinkageRuleTriggerDailyTimerConditionArgs

func DeviceLinkageRuleTriggerDailyTimerConditionPtr(v *DeviceLinkageRuleTriggerDailyTimerConditionArgs) DeviceLinkageRuleTriggerDailyTimerConditionPtrInput {
	return (*deviceLinkageRuleTriggerDailyTimerConditionPtrType)(v)
}

func (*deviceLinkageRuleTriggerDailyTimerConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleTriggerDailyTimerCondition)(nil)).Elem()
}

func (i *deviceLinkageRuleTriggerDailyTimerConditionPtrType) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutput() DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return i.ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleTriggerDailyTimerConditionPtrType) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput)
}

type DeviceLinkageRuleTriggerDailyTimerConditionOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerDailyTimerConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTriggerDailyTimerCondition)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionOutput) ToDeviceLinkageRuleTriggerDailyTimerConditionOutput() DeviceLinkageRuleTriggerDailyTimerConditionOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionOutput) ToDeviceLinkageRuleTriggerDailyTimerConditionOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDailyTimerConditionOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionOutput) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutput() DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return o.ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionOutput) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleTriggerDailyTimerCondition) *DeviceLinkageRuleTriggerDailyTimerCondition {
		return &v
	}).(DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput)
}

// Specifies a list of days of week, separated by commas. 1 represents Sunday,
// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
func (o DeviceLinkageRuleTriggerDailyTimerConditionOutput) DaysOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDailyTimerCondition) *string { return v.DaysOfWeek }).(pulumi.StringPtrOutput)
}

// Specifies the start time, in the format: `HH:mm`.
// For example: `03:00`.
func (o DeviceLinkageRuleTriggerDailyTimerConditionOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDailyTimerCondition) string { return v.StartTime }).(pulumi.StringOutput)
}

type DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleTriggerDailyTimerCondition)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutput() DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput) ToDeviceLinkageRuleTriggerDailyTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput) Elem() DeviceLinkageRuleTriggerDailyTimerConditionOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDailyTimerCondition) DeviceLinkageRuleTriggerDailyTimerCondition {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleTriggerDailyTimerCondition
		return ret
	}).(DeviceLinkageRuleTriggerDailyTimerConditionOutput)
}

// Specifies a list of days of week, separated by commas. 1 represents Sunday,
// 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
func (o DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput) DaysOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDailyTimerCondition) *string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeek
	}).(pulumi.StringPtrOutput)
}

// Specifies the start time, in the format: `HH:mm`.
// For example: `03:00`.
func (o DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDailyTimerCondition) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleTriggerDeviceDataCondition struct {
	// Specifies data validity period, Unit is `seconds`. Defaults to `300`.
	// For example, if Data Validity Period is set to 30 minutes, a device generates data at 19:00, and the platform receives
	// the data at 20:00, the action is nottriggered regardless of whether the conditions are met.
	DataValidatiyPeriod *int `pulumi:"dataValidatiyPeriod"`
	// Specifies the device id which excutes the command.
	DeviceId *string `pulumi:"deviceId"`
	// Specifies the data comparison operator. The valid values are: **>**, **<**,
	// **>=**, **<=**, **=** and **between**.
	Operator string `pulumi:"operator"`
	// Specifies the path of the device property, in the format: **service_id/DataProperty**.
	Path string `pulumi:"path"`
	// Specifies the product id, all devices belonging to this product will trigger
	// the rule. Exactly one of `deviceId` or `productId` must be provided.
	ProductId *string `pulumi:"productId"`
	// Specifies the trigger strategy. The options are as follows:
	// + **pulse**: When the data reported by the device meets the conditions, the rule can be triggered.
	// + **reverse**: Repetition suppression. For example, if an alarm is configured to be triggered when the battery level
	//   is lower than 20%, the alarm will be triggered once the battery initially drops below 20% but will not be triggered
	//   again each time the battery drops to a lower level.
	TriggerStrategy *string `pulumi:"triggerStrategy"`
	// Specifies the Rvalue of a data comparison expression. When the `operator` is `between`,
	// the Rvalue represents the minimum and maximum values, separated by commas, such as "20,30",
	// which means greater than or equal to 20 and less than 30.
	Value string `pulumi:"value"`
}

// DeviceLinkageRuleTriggerDeviceDataConditionInput is an input type that accepts DeviceLinkageRuleTriggerDeviceDataConditionArgs and DeviceLinkageRuleTriggerDeviceDataConditionOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerDeviceDataConditionInput` via:
//
//	DeviceLinkageRuleTriggerDeviceDataConditionArgs{...}
type DeviceLinkageRuleTriggerDeviceDataConditionInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerDeviceDataConditionOutput() DeviceLinkageRuleTriggerDeviceDataConditionOutput
	ToDeviceLinkageRuleTriggerDeviceDataConditionOutputWithContext(context.Context) DeviceLinkageRuleTriggerDeviceDataConditionOutput
}

type DeviceLinkageRuleTriggerDeviceDataConditionArgs struct {
	// Specifies data validity period, Unit is `seconds`. Defaults to `300`.
	// For example, if Data Validity Period is set to 30 minutes, a device generates data at 19:00, and the platform receives
	// the data at 20:00, the action is nottriggered regardless of whether the conditions are met.
	DataValidatiyPeriod pulumi.IntPtrInput `pulumi:"dataValidatiyPeriod"`
	// Specifies the device id which excutes the command.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// Specifies the data comparison operator. The valid values are: **>**, **<**,
	// **>=**, **<=**, **=** and **between**.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Specifies the path of the device property, in the format: **service_id/DataProperty**.
	Path pulumi.StringInput `pulumi:"path"`
	// Specifies the product id, all devices belonging to this product will trigger
	// the rule. Exactly one of `deviceId` or `productId` must be provided.
	ProductId pulumi.StringPtrInput `pulumi:"productId"`
	// Specifies the trigger strategy. The options are as follows:
	// + **pulse**: When the data reported by the device meets the conditions, the rule can be triggered.
	// + **reverse**: Repetition suppression. For example, if an alarm is configured to be triggered when the battery level
	//   is lower than 20%, the alarm will be triggered once the battery initially drops below 20% but will not be triggered
	//   again each time the battery drops to a lower level.
	TriggerStrategy pulumi.StringPtrInput `pulumi:"triggerStrategy"`
	// Specifies the Rvalue of a data comparison expression. When the `operator` is `between`,
	// the Rvalue represents the minimum and maximum values, separated by commas, such as "20,30",
	// which means greater than or equal to 20 and less than 30.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DeviceLinkageRuleTriggerDeviceDataConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTriggerDeviceDataCondition)(nil)).Elem()
}

func (i DeviceLinkageRuleTriggerDeviceDataConditionArgs) ToDeviceLinkageRuleTriggerDeviceDataConditionOutput() DeviceLinkageRuleTriggerDeviceDataConditionOutput {
	return i.ToDeviceLinkageRuleTriggerDeviceDataConditionOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerDeviceDataConditionArgs) ToDeviceLinkageRuleTriggerDeviceDataConditionOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDeviceDataConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerDeviceDataConditionOutput)
}

func (i DeviceLinkageRuleTriggerDeviceDataConditionArgs) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutput() DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return i.ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerDeviceDataConditionArgs) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerDeviceDataConditionOutput).ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleTriggerDeviceDataConditionPtrInput is an input type that accepts DeviceLinkageRuleTriggerDeviceDataConditionArgs, DeviceLinkageRuleTriggerDeviceDataConditionPtr and DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerDeviceDataConditionPtrInput` via:
//
//	        DeviceLinkageRuleTriggerDeviceDataConditionArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleTriggerDeviceDataConditionPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutput() DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput
	ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(context.Context) DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput
}

type deviceLinkageRuleTriggerDeviceDataConditionPtrType DeviceLinkageRuleTriggerDeviceDataConditionArgs

func DeviceLinkageRuleTriggerDeviceDataConditionPtr(v *DeviceLinkageRuleTriggerDeviceDataConditionArgs) DeviceLinkageRuleTriggerDeviceDataConditionPtrInput {
	return (*deviceLinkageRuleTriggerDeviceDataConditionPtrType)(v)
}

func (*deviceLinkageRuleTriggerDeviceDataConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleTriggerDeviceDataCondition)(nil)).Elem()
}

func (i *deviceLinkageRuleTriggerDeviceDataConditionPtrType) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutput() DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return i.ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleTriggerDeviceDataConditionPtrType) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput)
}

type DeviceLinkageRuleTriggerDeviceDataConditionOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerDeviceDataConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTriggerDeviceDataCondition)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) ToDeviceLinkageRuleTriggerDeviceDataConditionOutput() DeviceLinkageRuleTriggerDeviceDataConditionOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) ToDeviceLinkageRuleTriggerDeviceDataConditionOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDeviceDataConditionOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutput() DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return o.ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleTriggerDeviceDataCondition) *DeviceLinkageRuleTriggerDeviceDataCondition {
		return &v
	}).(DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput)
}

// Specifies data validity period, Unit is `seconds`. Defaults to `300`.
// For example, if Data Validity Period is set to 30 minutes, a device generates data at 19:00, and the platform receives
// the data at 20:00, the action is nottriggered regardless of whether the conditions are met.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) DataValidatiyPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) *int { return v.DataValidatiyPeriod }).(pulumi.IntPtrOutput)
}

// Specifies the device id which excutes the command.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

// Specifies the data comparison operator. The valid values are: **>**, **<**,
// **>=**, **<=**, **=** and **between**.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// Specifies the path of the device property, in the format: **service_id/DataProperty**.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the product id, all devices belonging to this product will trigger
// the rule. Exactly one of `deviceId` or `productId` must be provided.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) *string { return v.ProductId }).(pulumi.StringPtrOutput)
}

// Specifies the trigger strategy. The options are as follows:
//   - **pulse**: When the data reported by the device meets the conditions, the rule can be triggered.
//   - **reverse**: Repetition suppression. For example, if an alarm is configured to be triggered when the battery level
//     is lower than 20%, the alarm will be triggered once the battery initially drops below 20% but will not be triggered
//     again each time the battery drops to a lower level.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) TriggerStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) *string { return v.TriggerStrategy }).(pulumi.StringPtrOutput)
}

// Specifies the Rvalue of a data comparison expression. When the `operator` is `between`,
// the Rvalue represents the minimum and maximum values, separated by commas, such as "20,30",
// which means greater than or equal to 20 and less than 30.
func (o DeviceLinkageRuleTriggerDeviceDataConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerDeviceDataCondition) string { return v.Value }).(pulumi.StringOutput)
}

type DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleTriggerDeviceDataCondition)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutput() DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) ToDeviceLinkageRuleTriggerDeviceDataConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput {
	return o
}

func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) Elem() DeviceLinkageRuleTriggerDeviceDataConditionOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) DeviceLinkageRuleTriggerDeviceDataCondition {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleTriggerDeviceDataCondition
		return ret
	}).(DeviceLinkageRuleTriggerDeviceDataConditionOutput)
}

// Specifies data validity period, Unit is `seconds`. Defaults to `300`.
// For example, if Data Validity Period is set to 30 minutes, a device generates data at 19:00, and the platform receives
// the data at 20:00, the action is nottriggered regardless of whether the conditions are met.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) DataValidatiyPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *int {
		if v == nil {
			return nil
		}
		return v.DataValidatiyPeriod
	}).(pulumi.IntPtrOutput)
}

// Specifies the device id which excutes the command.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *string {
		if v == nil {
			return nil
		}
		return v.DeviceId
	}).(pulumi.StringPtrOutput)
}

// Specifies the data comparison operator. The valid values are: **>**, **<**,
// **>=**, **<=**, **=** and **between**.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Specifies the path of the device property, in the format: **service_id/DataProperty**.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the product id, all devices belonging to this product will trigger
// the rule. Exactly one of `deviceId` or `productId` must be provided.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *string {
		if v == nil {
			return nil
		}
		return v.ProductId
	}).(pulumi.StringPtrOutput)
}

// Specifies the trigger strategy. The options are as follows:
//   - **pulse**: When the data reported by the device meets the conditions, the rule can be triggered.
//   - **reverse**: Repetition suppression. For example, if an alarm is configured to be triggered when the battery level
//     is lower than 20%, the alarm will be triggered once the battery initially drops below 20% but will not be triggered
//     again each time the battery drops to a lower level.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) TriggerStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *string {
		if v == nil {
			return nil
		}
		return v.TriggerStrategy
	}).(pulumi.StringPtrOutput)
}

// Specifies the Rvalue of a data comparison expression. When the `operator` is `between`,
// the Rvalue represents the minimum and maximum values, separated by commas, such as "20,30",
// which means greater than or equal to 20 and less than 30.
func (o DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerDeviceDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type DeviceLinkageRuleTriggerSimpleTimerCondition struct {
	// Specifies total number of repetition.
	RepeatCount int `pulumi:"repeatCount"`
	// Specifies the interval of repetition, Unit is `minutes`.
	RepeatInterval int `pulumi:"repeatInterval"`
	// Specifies the start time, in the format: `HH:mm`.
	// For example: `03:00`.
	StartTime string `pulumi:"startTime"`
}

// DeviceLinkageRuleTriggerSimpleTimerConditionInput is an input type that accepts DeviceLinkageRuleTriggerSimpleTimerConditionArgs and DeviceLinkageRuleTriggerSimpleTimerConditionOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerSimpleTimerConditionInput` via:
//
//	DeviceLinkageRuleTriggerSimpleTimerConditionArgs{...}
type DeviceLinkageRuleTriggerSimpleTimerConditionInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerSimpleTimerConditionOutput() DeviceLinkageRuleTriggerSimpleTimerConditionOutput
	ToDeviceLinkageRuleTriggerSimpleTimerConditionOutputWithContext(context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionOutput
}

type DeviceLinkageRuleTriggerSimpleTimerConditionArgs struct {
	// Specifies total number of repetition.
	RepeatCount pulumi.IntInput `pulumi:"repeatCount"`
	// Specifies the interval of repetition, Unit is `minutes`.
	RepeatInterval pulumi.IntInput `pulumi:"repeatInterval"`
	// Specifies the start time, in the format: `HH:mm`.
	// For example: `03:00`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (DeviceLinkageRuleTriggerSimpleTimerConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTriggerSimpleTimerCondition)(nil)).Elem()
}

func (i DeviceLinkageRuleTriggerSimpleTimerConditionArgs) ToDeviceLinkageRuleTriggerSimpleTimerConditionOutput() DeviceLinkageRuleTriggerSimpleTimerConditionOutput {
	return i.ToDeviceLinkageRuleTriggerSimpleTimerConditionOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerSimpleTimerConditionArgs) ToDeviceLinkageRuleTriggerSimpleTimerConditionOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerSimpleTimerConditionOutput)
}

func (i DeviceLinkageRuleTriggerSimpleTimerConditionArgs) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput() DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return i.ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(context.Background())
}

func (i DeviceLinkageRuleTriggerSimpleTimerConditionArgs) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerSimpleTimerConditionOutput).ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(ctx)
}

// DeviceLinkageRuleTriggerSimpleTimerConditionPtrInput is an input type that accepts DeviceLinkageRuleTriggerSimpleTimerConditionArgs, DeviceLinkageRuleTriggerSimpleTimerConditionPtr and DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput values.
// You can construct a concrete instance of `DeviceLinkageRuleTriggerSimpleTimerConditionPtrInput` via:
//
//	        DeviceLinkageRuleTriggerSimpleTimerConditionArgs{...}
//
//	or:
//
//	        nil
type DeviceLinkageRuleTriggerSimpleTimerConditionPtrInput interface {
	pulumi.Input

	ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput() DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput
	ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput
}

type deviceLinkageRuleTriggerSimpleTimerConditionPtrType DeviceLinkageRuleTriggerSimpleTimerConditionArgs

func DeviceLinkageRuleTriggerSimpleTimerConditionPtr(v *DeviceLinkageRuleTriggerSimpleTimerConditionArgs) DeviceLinkageRuleTriggerSimpleTimerConditionPtrInput {
	return (*deviceLinkageRuleTriggerSimpleTimerConditionPtrType)(v)
}

func (*deviceLinkageRuleTriggerSimpleTimerConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleTriggerSimpleTimerCondition)(nil)).Elem()
}

func (i *deviceLinkageRuleTriggerSimpleTimerConditionPtrType) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput() DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return i.ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(context.Background())
}

func (i *deviceLinkageRuleTriggerSimpleTimerConditionPtrType) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput)
}

type DeviceLinkageRuleTriggerSimpleTimerConditionOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerSimpleTimerConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLinkageRuleTriggerSimpleTimerCondition)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) ToDeviceLinkageRuleTriggerSimpleTimerConditionOutput() DeviceLinkageRuleTriggerSimpleTimerConditionOutput {
	return o
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) ToDeviceLinkageRuleTriggerSimpleTimerConditionOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionOutput {
	return o
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput() DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return o.ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(context.Background())
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLinkageRuleTriggerSimpleTimerCondition) *DeviceLinkageRuleTriggerSimpleTimerCondition {
		return &v
	}).(DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput)
}

// Specifies total number of repetition.
func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) RepeatCount() pulumi.IntOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerSimpleTimerCondition) int { return v.RepeatCount }).(pulumi.IntOutput)
}

// Specifies the interval of repetition, Unit is `minutes`.
func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) RepeatInterval() pulumi.IntOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerSimpleTimerCondition) int { return v.RepeatInterval }).(pulumi.IntOutput)
}

// Specifies the start time, in the format: `HH:mm`.
// For example: `03:00`.
func (o DeviceLinkageRuleTriggerSimpleTimerConditionOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceLinkageRuleTriggerSimpleTimerCondition) string { return v.StartTime }).(pulumi.StringOutput)
}

type DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput struct{ *pulumi.OutputState }

func (DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLinkageRuleTriggerSimpleTimerCondition)(nil)).Elem()
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput() DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return o
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) ToDeviceLinkageRuleTriggerSimpleTimerConditionPtrOutputWithContext(ctx context.Context) DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput {
	return o
}

func (o DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) Elem() DeviceLinkageRuleTriggerSimpleTimerConditionOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerSimpleTimerCondition) DeviceLinkageRuleTriggerSimpleTimerCondition {
		if v != nil {
			return *v
		}
		var ret DeviceLinkageRuleTriggerSimpleTimerCondition
		return ret
	}).(DeviceLinkageRuleTriggerSimpleTimerConditionOutput)
}

// Specifies total number of repetition.
func (o DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) RepeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerSimpleTimerCondition) *int {
		if v == nil {
			return nil
		}
		return &v.RepeatCount
	}).(pulumi.IntPtrOutput)
}

// Specifies the interval of repetition, Unit is `minutes`.
func (o DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) RepeatInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerSimpleTimerCondition) *int {
		if v == nil {
			return nil
		}
		return &v.RepeatInterval
	}).(pulumi.IntPtrOutput)
}

// Specifies the start time, in the format: `HH:mm`.
// For example: `03:00`.
func (o DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLinkageRuleTriggerSimpleTimerCondition) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type ProductService struct {
	// Specifies the list of commands for the service.
	// The commands structure is documented below.
	Commands []ProductServiceCommand `pulumi:"commands"`
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description *string `pulumi:"description"`
	// Specifies the service ID. The ID contains a maximum of 64 characters. Only letters,
	// Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are allowed: `?'#().,&%@!`.
	Id string `pulumi:"id"`
	// Specifies the list of properties for the service.
	// The properties structure is documented below.
	Properties []ProductServiceProperty `pulumi:"properties"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type *string `pulumi:"type"`
}

// ProductServiceInput is an input type that accepts ProductServiceArgs and ProductServiceOutput values.
// You can construct a concrete instance of `ProductServiceInput` via:
//
//	ProductServiceArgs{...}
type ProductServiceInput interface {
	pulumi.Input

	ToProductServiceOutput() ProductServiceOutput
	ToProductServiceOutputWithContext(context.Context) ProductServiceOutput
}

type ProductServiceArgs struct {
	// Specifies the list of commands for the service.
	// The commands structure is documented below.
	Commands ProductServiceCommandArrayInput `pulumi:"commands"`
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the service ID. The ID contains a maximum of 64 characters. Only letters,
	// Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are allowed: `?'#().,&%@!`.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the list of properties for the service.
	// The properties structure is documented below.
	Properties ProductServicePropertyArrayInput `pulumi:"properties"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ProductServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductService)(nil)).Elem()
}

func (i ProductServiceArgs) ToProductServiceOutput() ProductServiceOutput {
	return i.ToProductServiceOutputWithContext(context.Background())
}

func (i ProductServiceArgs) ToProductServiceOutputWithContext(ctx context.Context) ProductServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceOutput)
}

// ProductServiceArrayInput is an input type that accepts ProductServiceArray and ProductServiceArrayOutput values.
// You can construct a concrete instance of `ProductServiceArrayInput` via:
//
//	ProductServiceArray{ ProductServiceArgs{...} }
type ProductServiceArrayInput interface {
	pulumi.Input

	ToProductServiceArrayOutput() ProductServiceArrayOutput
	ToProductServiceArrayOutputWithContext(context.Context) ProductServiceArrayOutput
}

type ProductServiceArray []ProductServiceInput

func (ProductServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductService)(nil)).Elem()
}

func (i ProductServiceArray) ToProductServiceArrayOutput() ProductServiceArrayOutput {
	return i.ToProductServiceArrayOutputWithContext(context.Background())
}

func (i ProductServiceArray) ToProductServiceArrayOutputWithContext(ctx context.Context) ProductServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceArrayOutput)
}

type ProductServiceOutput struct{ *pulumi.OutputState }

func (ProductServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductService)(nil)).Elem()
}

func (o ProductServiceOutput) ToProductServiceOutput() ProductServiceOutput {
	return o
}

func (o ProductServiceOutput) ToProductServiceOutputWithContext(ctx context.Context) ProductServiceOutput {
	return o
}

// Specifies the list of commands for the service.
// The commands structure is documented below.
func (o ProductServiceOutput) Commands() ProductServiceCommandArrayOutput {
	return o.ApplyT(func(v ProductService) []ProductServiceCommand { return v.Commands }).(ProductServiceCommandArrayOutput)
}

// Specifies the description of the parameter. The description contains a maximum of
// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
// characters are allowed: `?'#().,&%@!`.
func (o ProductServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductService) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the service ID. The ID contains a maximum of 64 characters. Only letters,
// Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are allowed: `?'#().,&%@!`.
func (o ProductServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ProductService) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the list of properties for the service.
// The properties structure is documented below.
func (o ProductServiceOutput) Properties() ProductServicePropertyArrayOutput {
	return o.ApplyT(func(v ProductService) []ProductServiceProperty { return v.Properties }).(ProductServicePropertyArrayOutput)
}

// Specifies the type of the parameter.
// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
func (o ProductServiceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductService) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProductServiceArrayOutput struct{ *pulumi.OutputState }

func (ProductServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductService)(nil)).Elem()
}

func (o ProductServiceArrayOutput) ToProductServiceArrayOutput() ProductServiceArrayOutput {
	return o
}

func (o ProductServiceArrayOutput) ToProductServiceArrayOutputWithContext(ctx context.Context) ProductServiceArrayOutput {
	return o
}

func (o ProductServiceArrayOutput) Index(i pulumi.IntInput) ProductServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductService {
		return vs[0].([]ProductService)[vs[1].(int)]
	}).(ProductServiceOutput)
}

type ProductServiceCommand struct {
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name string `pulumi:"name"`
	// Specifies the list of parameters for the command.
	// The paras structure is documented below.
	Paras []ProductServiceCommandPara `pulumi:"paras"`
	// Specifies the list of responses for the command.
	// The responses structure is documented below.
	Responses []ProductServiceCommandResponse `pulumi:"responses"`
}

// ProductServiceCommandInput is an input type that accepts ProductServiceCommandArgs and ProductServiceCommandOutput values.
// You can construct a concrete instance of `ProductServiceCommandInput` via:
//
//	ProductServiceCommandArgs{...}
type ProductServiceCommandInput interface {
	pulumi.Input

	ToProductServiceCommandOutput() ProductServiceCommandOutput
	ToProductServiceCommandOutputWithContext(context.Context) ProductServiceCommandOutput
}

type ProductServiceCommandArgs struct {
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the list of parameters for the command.
	// The paras structure is documented below.
	Paras ProductServiceCommandParaArrayInput `pulumi:"paras"`
	// Specifies the list of responses for the command.
	// The responses structure is documented below.
	Responses ProductServiceCommandResponseArrayInput `pulumi:"responses"`
}

func (ProductServiceCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceCommand)(nil)).Elem()
}

func (i ProductServiceCommandArgs) ToProductServiceCommandOutput() ProductServiceCommandOutput {
	return i.ToProductServiceCommandOutputWithContext(context.Background())
}

func (i ProductServiceCommandArgs) ToProductServiceCommandOutputWithContext(ctx context.Context) ProductServiceCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceCommandOutput)
}

// ProductServiceCommandArrayInput is an input type that accepts ProductServiceCommandArray and ProductServiceCommandArrayOutput values.
// You can construct a concrete instance of `ProductServiceCommandArrayInput` via:
//
//	ProductServiceCommandArray{ ProductServiceCommandArgs{...} }
type ProductServiceCommandArrayInput interface {
	pulumi.Input

	ToProductServiceCommandArrayOutput() ProductServiceCommandArrayOutput
	ToProductServiceCommandArrayOutputWithContext(context.Context) ProductServiceCommandArrayOutput
}

type ProductServiceCommandArray []ProductServiceCommandInput

func (ProductServiceCommandArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceCommand)(nil)).Elem()
}

func (i ProductServiceCommandArray) ToProductServiceCommandArrayOutput() ProductServiceCommandArrayOutput {
	return i.ToProductServiceCommandArrayOutputWithContext(context.Background())
}

func (i ProductServiceCommandArray) ToProductServiceCommandArrayOutputWithContext(ctx context.Context) ProductServiceCommandArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceCommandArrayOutput)
}

type ProductServiceCommandOutput struct{ *pulumi.OutputState }

func (ProductServiceCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceCommand)(nil)).Elem()
}

func (o ProductServiceCommandOutput) ToProductServiceCommandOutput() ProductServiceCommandOutput {
	return o
}

func (o ProductServiceCommandOutput) ToProductServiceCommandOutputWithContext(ctx context.Context) ProductServiceCommandOutput {
	return o
}

// Specifies the name of the parameter. The name contains a maximum of 64 characters.
// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
// allowed: `?'#().,&%@!`.
func (o ProductServiceCommandOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceCommand) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the list of parameters for the command.
// The paras structure is documented below.
func (o ProductServiceCommandOutput) Paras() ProductServiceCommandParaArrayOutput {
	return o.ApplyT(func(v ProductServiceCommand) []ProductServiceCommandPara { return v.Paras }).(ProductServiceCommandParaArrayOutput)
}

// Specifies the list of responses for the command.
// The responses structure is documented below.
func (o ProductServiceCommandOutput) Responses() ProductServiceCommandResponseArrayOutput {
	return o.ApplyT(func(v ProductServiceCommand) []ProductServiceCommandResponse { return v.Responses }).(ProductServiceCommandResponseArrayOutput)
}

type ProductServiceCommandArrayOutput struct{ *pulumi.OutputState }

func (ProductServiceCommandArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceCommand)(nil)).Elem()
}

func (o ProductServiceCommandArrayOutput) ToProductServiceCommandArrayOutput() ProductServiceCommandArrayOutput {
	return o
}

func (o ProductServiceCommandArrayOutput) ToProductServiceCommandArrayOutputWithContext(ctx context.Context) ProductServiceCommandArrayOutput {
	return o
}

func (o ProductServiceCommandArrayOutput) Index(i pulumi.IntInput) ProductServiceCommandOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductServiceCommand {
		return vs[0].([]ProductServiceCommand)[vs[1].(int)]
	}).(ProductServiceCommandOutput)
}

type ProductServiceCommandPara struct {
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description *string `pulumi:"description"`
	// Specifies the list of enumerated values of the parameter.
	EnumLists []string `pulumi:"enumLists"`
	// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
	Max *string `pulumi:"max"`
	// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
	// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
	MaxLength *int `pulumi:"maxLength"`
	// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
	Min *string `pulumi:"min"`
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name string `pulumi:"name"`
	// Specifies the step of the parameter when the `type` is **int** or **decimal**.
	// Value range: 0 ~ 2147483647. Defaults to **0**.
	Step *float64 `pulumi:"step"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type string `pulumi:"type"`
	// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
	// The unit contains a maximum of 16 characters.
	Unit *string `pulumi:"unit"`
}

// ProductServiceCommandParaInput is an input type that accepts ProductServiceCommandParaArgs and ProductServiceCommandParaOutput values.
// You can construct a concrete instance of `ProductServiceCommandParaInput` via:
//
//	ProductServiceCommandParaArgs{...}
type ProductServiceCommandParaInput interface {
	pulumi.Input

	ToProductServiceCommandParaOutput() ProductServiceCommandParaOutput
	ToProductServiceCommandParaOutputWithContext(context.Context) ProductServiceCommandParaOutput
}

type ProductServiceCommandParaArgs struct {
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the list of enumerated values of the parameter.
	EnumLists pulumi.StringArrayInput `pulumi:"enumLists"`
	// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
	// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
	MaxLength pulumi.IntPtrInput `pulumi:"maxLength"`
	// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the step of the parameter when the `type` is **int** or **decimal**.
	// Value range: 0 ~ 2147483647. Defaults to **0**.
	Step pulumi.Float64PtrInput `pulumi:"step"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
	// The unit contains a maximum of 16 characters.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ProductServiceCommandParaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceCommandPara)(nil)).Elem()
}

func (i ProductServiceCommandParaArgs) ToProductServiceCommandParaOutput() ProductServiceCommandParaOutput {
	return i.ToProductServiceCommandParaOutputWithContext(context.Background())
}

func (i ProductServiceCommandParaArgs) ToProductServiceCommandParaOutputWithContext(ctx context.Context) ProductServiceCommandParaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceCommandParaOutput)
}

// ProductServiceCommandParaArrayInput is an input type that accepts ProductServiceCommandParaArray and ProductServiceCommandParaArrayOutput values.
// You can construct a concrete instance of `ProductServiceCommandParaArrayInput` via:
//
//	ProductServiceCommandParaArray{ ProductServiceCommandParaArgs{...} }
type ProductServiceCommandParaArrayInput interface {
	pulumi.Input

	ToProductServiceCommandParaArrayOutput() ProductServiceCommandParaArrayOutput
	ToProductServiceCommandParaArrayOutputWithContext(context.Context) ProductServiceCommandParaArrayOutput
}

type ProductServiceCommandParaArray []ProductServiceCommandParaInput

func (ProductServiceCommandParaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceCommandPara)(nil)).Elem()
}

func (i ProductServiceCommandParaArray) ToProductServiceCommandParaArrayOutput() ProductServiceCommandParaArrayOutput {
	return i.ToProductServiceCommandParaArrayOutputWithContext(context.Background())
}

func (i ProductServiceCommandParaArray) ToProductServiceCommandParaArrayOutputWithContext(ctx context.Context) ProductServiceCommandParaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceCommandParaArrayOutput)
}

type ProductServiceCommandParaOutput struct{ *pulumi.OutputState }

func (ProductServiceCommandParaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceCommandPara)(nil)).Elem()
}

func (o ProductServiceCommandParaOutput) ToProductServiceCommandParaOutput() ProductServiceCommandParaOutput {
	return o
}

func (o ProductServiceCommandParaOutput) ToProductServiceCommandParaOutputWithContext(ctx context.Context) ProductServiceCommandParaOutput {
	return o
}

// Specifies the description of the parameter. The description contains a maximum of
// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
// characters are allowed: `?'#().,&%@!`.
func (o ProductServiceCommandParaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the list of enumerated values of the parameter.
func (o ProductServiceCommandParaOutput) EnumLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) []string { return v.EnumLists }).(pulumi.StringArrayOutput)
}

// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
func (o ProductServiceCommandParaOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
func (o ProductServiceCommandParaOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
func (o ProductServiceCommandParaOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// Specifies the name of the parameter. The name contains a maximum of 64 characters.
// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
// allowed: `?'#().,&%@!`.
func (o ProductServiceCommandParaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the step of the parameter when the `type` is **int** or **decimal**.
// Value range: 0 ~ 2147483647. Defaults to **0**.
func (o ProductServiceCommandParaOutput) Step() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) *float64 { return v.Step }).(pulumi.Float64PtrOutput)
}

// Specifies the type of the parameter.
// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
func (o ProductServiceCommandParaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
// The unit contains a maximum of 16 characters.
func (o ProductServiceCommandParaOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandPara) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ProductServiceCommandParaArrayOutput struct{ *pulumi.OutputState }

func (ProductServiceCommandParaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceCommandPara)(nil)).Elem()
}

func (o ProductServiceCommandParaArrayOutput) ToProductServiceCommandParaArrayOutput() ProductServiceCommandParaArrayOutput {
	return o
}

func (o ProductServiceCommandParaArrayOutput) ToProductServiceCommandParaArrayOutputWithContext(ctx context.Context) ProductServiceCommandParaArrayOutput {
	return o
}

func (o ProductServiceCommandParaArrayOutput) Index(i pulumi.IntInput) ProductServiceCommandParaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductServiceCommandPara {
		return vs[0].([]ProductServiceCommandPara)[vs[1].(int)]
	}).(ProductServiceCommandParaOutput)
}

type ProductServiceCommandResponse struct {
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description *string `pulumi:"description"`
	// Specifies the list of enumerated values of the parameter.
	EnumLists []string `pulumi:"enumLists"`
	// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
	Max *string `pulumi:"max"`
	// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
	// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
	MaxLength *int `pulumi:"maxLength"`
	// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
	Min *string `pulumi:"min"`
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name string `pulumi:"name"`
	// Specifies the step of the parameter when the `type` is **int** or **decimal**.
	// Value range: 0 ~ 2147483647. Defaults to **0**.
	Step *float64 `pulumi:"step"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type string `pulumi:"type"`
	// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
	// The unit contains a maximum of 16 characters.
	Unit *string `pulumi:"unit"`
}

// ProductServiceCommandResponseInput is an input type that accepts ProductServiceCommandResponseArgs and ProductServiceCommandResponseOutput values.
// You can construct a concrete instance of `ProductServiceCommandResponseInput` via:
//
//	ProductServiceCommandResponseArgs{...}
type ProductServiceCommandResponseInput interface {
	pulumi.Input

	ToProductServiceCommandResponseOutput() ProductServiceCommandResponseOutput
	ToProductServiceCommandResponseOutputWithContext(context.Context) ProductServiceCommandResponseOutput
}

type ProductServiceCommandResponseArgs struct {
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the list of enumerated values of the parameter.
	EnumLists pulumi.StringArrayInput `pulumi:"enumLists"`
	// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
	// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
	MaxLength pulumi.IntPtrInput `pulumi:"maxLength"`
	// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the step of the parameter when the `type` is **int** or **decimal**.
	// Value range: 0 ~ 2147483647. Defaults to **0**.
	Step pulumi.Float64PtrInput `pulumi:"step"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
	// The unit contains a maximum of 16 characters.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ProductServiceCommandResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceCommandResponse)(nil)).Elem()
}

func (i ProductServiceCommandResponseArgs) ToProductServiceCommandResponseOutput() ProductServiceCommandResponseOutput {
	return i.ToProductServiceCommandResponseOutputWithContext(context.Background())
}

func (i ProductServiceCommandResponseArgs) ToProductServiceCommandResponseOutputWithContext(ctx context.Context) ProductServiceCommandResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceCommandResponseOutput)
}

// ProductServiceCommandResponseArrayInput is an input type that accepts ProductServiceCommandResponseArray and ProductServiceCommandResponseArrayOutput values.
// You can construct a concrete instance of `ProductServiceCommandResponseArrayInput` via:
//
//	ProductServiceCommandResponseArray{ ProductServiceCommandResponseArgs{...} }
type ProductServiceCommandResponseArrayInput interface {
	pulumi.Input

	ToProductServiceCommandResponseArrayOutput() ProductServiceCommandResponseArrayOutput
	ToProductServiceCommandResponseArrayOutputWithContext(context.Context) ProductServiceCommandResponseArrayOutput
}

type ProductServiceCommandResponseArray []ProductServiceCommandResponseInput

func (ProductServiceCommandResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceCommandResponse)(nil)).Elem()
}

func (i ProductServiceCommandResponseArray) ToProductServiceCommandResponseArrayOutput() ProductServiceCommandResponseArrayOutput {
	return i.ToProductServiceCommandResponseArrayOutputWithContext(context.Background())
}

func (i ProductServiceCommandResponseArray) ToProductServiceCommandResponseArrayOutputWithContext(ctx context.Context) ProductServiceCommandResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServiceCommandResponseArrayOutput)
}

type ProductServiceCommandResponseOutput struct{ *pulumi.OutputState }

func (ProductServiceCommandResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceCommandResponse)(nil)).Elem()
}

func (o ProductServiceCommandResponseOutput) ToProductServiceCommandResponseOutput() ProductServiceCommandResponseOutput {
	return o
}

func (o ProductServiceCommandResponseOutput) ToProductServiceCommandResponseOutputWithContext(ctx context.Context) ProductServiceCommandResponseOutput {
	return o
}

// Specifies the description of the parameter. The description contains a maximum of
// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
// characters are allowed: `?'#().,&%@!`.
func (o ProductServiceCommandResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the list of enumerated values of the parameter.
func (o ProductServiceCommandResponseOutput) EnumLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) []string { return v.EnumLists }).(pulumi.StringArrayOutput)
}

// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
func (o ProductServiceCommandResponseOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
func (o ProductServiceCommandResponseOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
func (o ProductServiceCommandResponseOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// Specifies the name of the parameter. The name contains a maximum of 64 characters.
// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
// allowed: `?'#().,&%@!`.
func (o ProductServiceCommandResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the step of the parameter when the `type` is **int** or **decimal**.
// Value range: 0 ~ 2147483647. Defaults to **0**.
func (o ProductServiceCommandResponseOutput) Step() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) *float64 { return v.Step }).(pulumi.Float64PtrOutput)
}

// Specifies the type of the parameter.
// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
func (o ProductServiceCommandResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
// The unit contains a maximum of 16 characters.
func (o ProductServiceCommandResponseOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceCommandResponse) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ProductServiceCommandResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductServiceCommandResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceCommandResponse)(nil)).Elem()
}

func (o ProductServiceCommandResponseArrayOutput) ToProductServiceCommandResponseArrayOutput() ProductServiceCommandResponseArrayOutput {
	return o
}

func (o ProductServiceCommandResponseArrayOutput) ToProductServiceCommandResponseArrayOutputWithContext(ctx context.Context) ProductServiceCommandResponseArrayOutput {
	return o
}

func (o ProductServiceCommandResponseArrayOutput) Index(i pulumi.IntInput) ProductServiceCommandResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductServiceCommandResponse {
		return vs[0].([]ProductServiceCommandResponse)[vs[1].(int)]
	}).(ProductServiceCommandResponseOutput)
}

type ProductServiceProperty struct {
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description *string `pulumi:"description"`
	// Specifies the list of enumerated values of the parameter.
	EnumLists []string `pulumi:"enumLists"`
	// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
	Max *string `pulumi:"max"`
	// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
	// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
	MaxLength *int `pulumi:"maxLength"`
	// Specifies the access mode of the device property.
	// Options: **RW**, **W**, **R**.
	Method string `pulumi:"method"`
	// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
	Min *string `pulumi:"min"`
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name string `pulumi:"name"`
	// Specifies the step of the parameter when the `type` is **int** or **decimal**.
	// Value range: 0 ~ 2147483647. Defaults to **0**.
	Step *float64 `pulumi:"step"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type string `pulumi:"type"`
	// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
	// The unit contains a maximum of 16 characters.
	Unit *string `pulumi:"unit"`
}

// ProductServicePropertyInput is an input type that accepts ProductServicePropertyArgs and ProductServicePropertyOutput values.
// You can construct a concrete instance of `ProductServicePropertyInput` via:
//
//	ProductServicePropertyArgs{...}
type ProductServicePropertyInput interface {
	pulumi.Input

	ToProductServicePropertyOutput() ProductServicePropertyOutput
	ToProductServicePropertyOutputWithContext(context.Context) ProductServicePropertyOutput
}

type ProductServicePropertyArgs struct {
	// Specifies the description of the parameter. The description contains a maximum of
	// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
	// characters are allowed: `?'#().,&%@!`.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies the list of enumerated values of the parameter.
	EnumLists pulumi.StringArrayInput `pulumi:"enumLists"`
	// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
	// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
	MaxLength pulumi.IntPtrInput `pulumi:"maxLength"`
	// Specifies the access mode of the device property.
	// Options: **RW**, **W**, **R**.
	Method pulumi.StringInput `pulumi:"method"`
	// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
	// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// Specifies the name of the parameter. The name contains a maximum of 64 characters.
	// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
	// allowed: `?'#().,&%@!`.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the step of the parameter when the `type` is **int** or **decimal**.
	// Value range: 0 ~ 2147483647. Defaults to **0**.
	Step pulumi.Float64PtrInput `pulumi:"step"`
	// Specifies the type of the parameter.
	// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
	// The unit contains a maximum of 16 characters.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (ProductServicePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceProperty)(nil)).Elem()
}

func (i ProductServicePropertyArgs) ToProductServicePropertyOutput() ProductServicePropertyOutput {
	return i.ToProductServicePropertyOutputWithContext(context.Background())
}

func (i ProductServicePropertyArgs) ToProductServicePropertyOutputWithContext(ctx context.Context) ProductServicePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServicePropertyOutput)
}

// ProductServicePropertyArrayInput is an input type that accepts ProductServicePropertyArray and ProductServicePropertyArrayOutput values.
// You can construct a concrete instance of `ProductServicePropertyArrayInput` via:
//
//	ProductServicePropertyArray{ ProductServicePropertyArgs{...} }
type ProductServicePropertyArrayInput interface {
	pulumi.Input

	ToProductServicePropertyArrayOutput() ProductServicePropertyArrayOutput
	ToProductServicePropertyArrayOutputWithContext(context.Context) ProductServicePropertyArrayOutput
}

type ProductServicePropertyArray []ProductServicePropertyInput

func (ProductServicePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceProperty)(nil)).Elem()
}

func (i ProductServicePropertyArray) ToProductServicePropertyArrayOutput() ProductServicePropertyArrayOutput {
	return i.ToProductServicePropertyArrayOutputWithContext(context.Background())
}

func (i ProductServicePropertyArray) ToProductServicePropertyArrayOutputWithContext(ctx context.Context) ProductServicePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductServicePropertyArrayOutput)
}

type ProductServicePropertyOutput struct{ *pulumi.OutputState }

func (ProductServicePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductServiceProperty)(nil)).Elem()
}

func (o ProductServicePropertyOutput) ToProductServicePropertyOutput() ProductServicePropertyOutput {
	return o
}

func (o ProductServicePropertyOutput) ToProductServicePropertyOutputWithContext(ctx context.Context) ProductServicePropertyOutput {
	return o
}

// Specifies the description of the parameter. The description contains a maximum of
// 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special
// characters are allowed: `?'#().,&%@!`.
func (o ProductServicePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the list of enumerated values of the parameter.
func (o ProductServicePropertyOutput) EnumLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProductServiceProperty) []string { return v.EnumLists }).(pulumi.StringArrayOutput)
}

// Specifies the max value of the parameter when the `type` is **int** or **decimal**.
// Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
func (o ProductServicePropertyOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceProperty) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
// **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
func (o ProductServicePropertyOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductServiceProperty) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

// Specifies the access mode of the device property.
// Options: **RW**, **W**, **R**.
func (o ProductServicePropertyOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceProperty) string { return v.Method }).(pulumi.StringOutput)
}

// Specifies the min value of the parameter when the `type` is **int** or **decimal**.
// Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
func (o ProductServicePropertyOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceProperty) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// Specifies the name of the parameter. The name contains a maximum of 64 characters.
// Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following special characters are
// allowed: `?'#().,&%@!`.
func (o ProductServicePropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceProperty) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the step of the parameter when the `type` is **int** or **decimal**.
// Value range: 0 ~ 2147483647. Defaults to **0**.
func (o ProductServicePropertyOutput) Step() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ProductServiceProperty) *float64 { return v.Step }).(pulumi.Float64PtrOutput)
}

// Specifies the type of the parameter.
// The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
func (o ProductServicePropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProductServiceProperty) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the unit of the parameter when the `type` is **int** or **decimal**.
// The unit contains a maximum of 16 characters.
func (o ProductServicePropertyOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProductServiceProperty) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type ProductServicePropertyArrayOutput struct{ *pulumi.OutputState }

func (ProductServicePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductServiceProperty)(nil)).Elem()
}

func (o ProductServicePropertyArrayOutput) ToProductServicePropertyArrayOutput() ProductServicePropertyArrayOutput {
	return o
}

func (o ProductServicePropertyArrayOutput) ToProductServicePropertyArrayOutputWithContext(ctx context.Context) ProductServicePropertyArrayOutput {
	return o
}

func (o ProductServicePropertyArrayOutput) Index(i pulumi.IntInput) ProductServicePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductServiceProperty {
		return vs[0].([]ProductServiceProperty)[vs[1].(int)]
	}).(ProductServicePropertyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetInput)(nil)).Elem(), DataforwardingRuleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetArrayInput)(nil)).Elem(), DataforwardingRuleTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetAmqpForwardingInput)(nil)).Elem(), DataforwardingRuleTargetAmqpForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetAmqpForwardingPtrInput)(nil)).Elem(), DataforwardingRuleTargetAmqpForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetDisForwardingInput)(nil)).Elem(), DataforwardingRuleTargetDisForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetDisForwardingPtrInput)(nil)).Elem(), DataforwardingRuleTargetDisForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetHttpForwardingInput)(nil)).Elem(), DataforwardingRuleTargetHttpForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetHttpForwardingPtrInput)(nil)).Elem(), DataforwardingRuleTargetHttpForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetKafkaForwardingInput)(nil)).Elem(), DataforwardingRuleTargetKafkaForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetKafkaForwardingPtrInput)(nil)).Elem(), DataforwardingRuleTargetKafkaForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetKafkaForwardingAddressInput)(nil)).Elem(), DataforwardingRuleTargetKafkaForwardingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetKafkaForwardingAddressArrayInput)(nil)).Elem(), DataforwardingRuleTargetKafkaForwardingAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetObsForwardingInput)(nil)).Elem(), DataforwardingRuleTargetObsForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataforwardingRuleTargetObsForwardingPtrInput)(nil)).Elem(), DataforwardingRuleTargetObsForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionInput)(nil)).Elem(), DeviceLinkageRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionArrayInput)(nil)).Elem(), DeviceLinkageRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionDeviceAlarmInput)(nil)).Elem(), DeviceLinkageRuleActionDeviceAlarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionDeviceAlarmPtrInput)(nil)).Elem(), DeviceLinkageRuleActionDeviceAlarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionDeviceCommandInput)(nil)).Elem(), DeviceLinkageRuleActionDeviceCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionDeviceCommandPtrInput)(nil)).Elem(), DeviceLinkageRuleActionDeviceCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionSmnForwardingInput)(nil)).Elem(), DeviceLinkageRuleActionSmnForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleActionSmnForwardingPtrInput)(nil)).Elem(), DeviceLinkageRuleActionSmnForwardingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleEffectivePeriodInput)(nil)).Elem(), DeviceLinkageRuleEffectivePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleEffectivePeriodPtrInput)(nil)).Elem(), DeviceLinkageRuleEffectivePeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerInput)(nil)).Elem(), DeviceLinkageRuleTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerArrayInput)(nil)).Elem(), DeviceLinkageRuleTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerDailyTimerConditionInput)(nil)).Elem(), DeviceLinkageRuleTriggerDailyTimerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerDailyTimerConditionPtrInput)(nil)).Elem(), DeviceLinkageRuleTriggerDailyTimerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerDeviceDataConditionInput)(nil)).Elem(), DeviceLinkageRuleTriggerDeviceDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerDeviceDataConditionPtrInput)(nil)).Elem(), DeviceLinkageRuleTriggerDeviceDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerSimpleTimerConditionInput)(nil)).Elem(), DeviceLinkageRuleTriggerSimpleTimerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLinkageRuleTriggerSimpleTimerConditionPtrInput)(nil)).Elem(), DeviceLinkageRuleTriggerSimpleTimerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceInput)(nil)).Elem(), ProductServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceArrayInput)(nil)).Elem(), ProductServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceCommandInput)(nil)).Elem(), ProductServiceCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceCommandArrayInput)(nil)).Elem(), ProductServiceCommandArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceCommandParaInput)(nil)).Elem(), ProductServiceCommandParaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceCommandParaArrayInput)(nil)).Elem(), ProductServiceCommandParaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceCommandResponseInput)(nil)).Elem(), ProductServiceCommandResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServiceCommandResponseArrayInput)(nil)).Elem(), ProductServiceCommandResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServicePropertyInput)(nil)).Elem(), ProductServicePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProductServicePropertyArrayInput)(nil)).Elem(), ProductServicePropertyArray{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetArrayOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetAmqpForwardingOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetAmqpForwardingPtrOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetDisForwardingOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetDisForwardingPtrOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetHttpForwardingOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetHttpForwardingPtrOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetKafkaForwardingOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetKafkaForwardingPtrOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetKafkaForwardingAddressOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetKafkaForwardingAddressArrayOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetObsForwardingOutput{})
	pulumi.RegisterOutputType(DataforwardingRuleTargetObsForwardingPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionArrayOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionDeviceAlarmOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionDeviceAlarmPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionDeviceCommandOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionDeviceCommandPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionSmnForwardingOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleActionSmnForwardingPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleEffectivePeriodOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleEffectivePeriodPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerArrayOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerDailyTimerConditionOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerDailyTimerConditionPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerDeviceDataConditionOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerDeviceDataConditionPtrOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerSimpleTimerConditionOutput{})
	pulumi.RegisterOutputType(DeviceLinkageRuleTriggerSimpleTimerConditionPtrOutput{})
	pulumi.RegisterOutputType(ProductServiceOutput{})
	pulumi.RegisterOutputType(ProductServiceArrayOutput{})
	pulumi.RegisterOutputType(ProductServiceCommandOutput{})
	pulumi.RegisterOutputType(ProductServiceCommandArrayOutput{})
	pulumi.RegisterOutputType(ProductServiceCommandParaOutput{})
	pulumi.RegisterOutputType(ProductServiceCommandParaArrayOutput{})
	pulumi.RegisterOutputType(ProductServiceCommandResponseOutput{})
	pulumi.RegisterOutputType(ProductServiceCommandResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductServicePropertyOutput{})
	pulumi.RegisterOutputType(ProductServicePropertyArrayOutput{})
}
