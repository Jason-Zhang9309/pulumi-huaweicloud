// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage DMS Kafka instance resources within HuaweiCloud.
//
// ## Example Usage
// ### Create a Kafka instance using flavor ID
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Dms"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Dms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			vpcId := cfg.RequireObject("vpcId")
//			subnetId := cfg.RequireObject("subnetId")
//			securityGroupId := cfg.RequireObject("securityGroupId")
//			accessPassword := cfg.RequireObject("accessPassword")
//			availabilityZones := []string{
//				"your_availability_zones_a",
//				"your_availability_zones_b",
//				"your_availability_zones_c",
//			}
//			if param := cfg.GetBool("availabilityZones"); param != nil {
//				availabilityZones = param
//			}
//			flavorId := "your_flavor_id, such: c6.2u4g.cluster"
//			if param := cfg.Get("flavorId"); param != "" {
//				flavorId = param
//			}
//			storageSpecCode := "your_storage_spec_code, such: dms.physical.storage.ultra.v2"
//			if param := cfg.Get("storageSpecCode"); param != "" {
//				storageSpecCode = param
//			}
//			testFlavors, err := Dms.GetFlavors(ctx, &dms.GetFlavorsArgs{
//				Type:              pulumi.StringRef("cluster"),
//				FlavorId:          pulumi.StringRef(flavorId),
//				AvailabilityZones: availabilityZones,
//				StorageSpecCode:   pulumi.StringRef(storageSpecCode),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Dms.NewKafkaInstance(ctx, "testKafkaInstance", &Dms.KafkaInstanceArgs{
//				VpcId:             pulumi.Any(vpcId),
//				NetworkId:         pulumi.Any(subnetId),
//				SecurityGroupId:   pulumi.Any(securityGroupId),
//				FlavorId:          pulumi.String(testFlavors.FlavorId),
//				StorageSpecCode:   pulumi.String(testFlavors.Flavors[0].Ios[0].StorageSpecCode),
//				AvailabilityZones: pulumi.Any(availabilityZones),
//				EngineVersion:     pulumi.String("2.7"),
//				StorageSpace:      pulumi.Int(600),
//				BrokerNum:         pulumi.Int(3),
//				SslEnable:         pulumi.Bool(true),
//				AccessUser:        pulumi.String("user"),
//				Password:          pulumi.Any(accessPassword),
//				Parameters: dms.KafkaInstanceParameterArray{
//					&dms.KafkaInstanceParameterArgs{
//						Name:  pulumi.String("min.insync.replicas"),
//						Value: pulumi.String("2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DMS Kafka instance can be imported using the instance id, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:Dms/kafkaInstance:KafkaInstance huaweicloud_dms_kafka_instance.instance_1 8d3c7938-dc47-4937-a30f-c80de381c5e3
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`password`, `public_ip_ids`, `security_protocol`, `enabled_mechanisms` and `arch_type`. It is generally recommended running `terraform plan` after importing a DMS Kafka instance. You can then decide if changes should be applied to the instance, or the resource definition should be updated to align with the instance. Also you can ignore changes as below. hcl resource "huaweicloud_dms_kafka_instance" "instance_1" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	password,
//
//	]
//
//	} }
type KafkaInstance struct {
	pulumi.CustomResourceState

	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser pulumi.StringPtrOutput `pulumi:"accessUser"`
	// Specifies the CPU architecture. Valid value is **X86**.
	// Changing this creates a new instance resource.
	ArchType pulumi.StringPtrOutput `pulumi:"archType"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// The names of the AZ where the Kafka instances reside.
	// The parameter value can not be left blank or an empty array. Changing this creates a new instance resource.
	AvailabilityZones pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availability_zones" instead.
	AvailableZones pulumi.StringArrayOutput `pulumi:"availableZones"`
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth pulumi.StringOutput `pulumi:"bandwidth"`
	// Specifies the broker numbers.
	// It is required when creating an instance with `flavorId`.
	BrokerNum pulumi.IntOutput `pulumi:"brokerNum"`
	// Indicates whether the certificate can be replaced.
	CertReplaced pulumi.BoolOutput `pulumi:"certReplaced"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Indicates the IP address of the DMS Kafka instance.
	ConnectAddress pulumi.StringOutput `pulumi:"connectAddress"`
	// Indicates the connector ID.
	ConnectorId pulumi.StringOutput `pulumi:"connectorId"`
	// Indicates the number of connector node.
	ConnectorNodeNum pulumi.IntOutput `pulumi:"connectorNodeNum"`
	// Indicates the create time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVpcAccesses KafkaInstanceCrossVpcAccessArrayOutput `pulumi:"crossVpcAccesses"`
	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to enable  message dumping(smart connect).
	// Changing this creates a new instance resource.
	Dumping pulumi.BoolOutput `pulumi:"dumping"`
	// Specifies whether to enable automatic topic creation. If automatic
	// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
	// produced to or consumed from a topic that does not exist.
	// The default value is false.
	EnableAutoTopic pulumi.BoolOutput `pulumi:"enableAutoTopic"`
	// Indicates whether public access to the DMS Kafka instance is enabled.
	EnablePublicIp pulumi.BoolOutput `pulumi:"enablePublicIp"`
	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// + **PLAIN**: Simple username and password verification.
	// + **SCRAM-SHA-512**: User credential verification, which is more secure than **PLAIN**.
	EnabledMechanisms pulumi.StringArrayOutput `pulumi:"enabledMechanisms"`
	// Indicates the message engine.
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Specifies the version of the Kafka engine,
	// such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Specifies the enterprise project ID of the Kafka instance.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Indicates the extend times. If the value exceeds `20`, disk expansion is no longer allowed.
	ExtendTimes pulumi.IntOutput `pulumi:"extendTimes"`
	// Specifies the Kafka [flavor ID](https://support.huaweicloud.com/intl/en-us/productdesc-kafka/Kafka-specification.html),
	// e.g. **c6.2u4g.cluster**. This parameter and `productId` are alternative.
	FlavorId pulumi.StringPtrOutput `pulumi:"flavorId"`
	// Indicates the IPv6 connect addresses list.
	Ipv6ConnectAddresses pulumi.StringArrayOutput `pulumi:"ipv6ConnectAddresses"`
	// Specifies whether to enable IPv6. Defaults to **false**.
	// Changing this creates a new instance resource.
	Ipv6Enable pulumi.BoolOutput `pulumi:"ipv6Enable"`
	// Indicates whether the instance is a new instance.
	IsLogicalVolume pulumi.BoolOutput `pulumi:"isLogicalVolume"`
	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin pulumi.StringOutput `pulumi:"maintainBegin"`
	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainEnd` is left blank, parameter
	// `maintainBegin` is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd pulumi.StringOutput `pulumi:"maintainEnd"`
	// Deprecated: Deprecated
	ManagementConnectAddress pulumi.StringOutput `pulumi:"managementConnectAddress"`
	// Deprecated: Deprecated
	ManagerPassword pulumi.StringPtrOutput `pulumi:"managerPassword"`
	// Deprecated: Deprecated
	ManagerUser pulumi.StringPtrOutput `pulumi:"managerUser"`
	// Deprecated: typo in manegement_connect_address, please use "management_connect_address" instead.
	ManegementConnectAddress pulumi.StringOutput `pulumi:"manegementConnectAddress"`
	// Indicates whether message query is enabled.
	MessageQueryInstEnable pulumi.BoolOutput `pulumi:"messageQueryInstEnable"`
	// Specifies the parameter name. Static parameter needs to restart the instance to take effect.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps pulumi.StringArrayOutput `pulumi:"newTenantIps"`
	// Indicates the node quantity.
	NodeNum pulumi.IntOutput `pulumi:"nodeNum"`
	// Specifies the array of one or more parameters to be set to the Kafka instance after
	// launched. The parameters structure is documented below.
	Parameters KafkaInstanceParameterArrayOutput `pulumi:"parameters"`
	// Indicates the number of partitions in Kafka instance.
	PartitionNum pulumi.IntOutput `pulumi:"partitionNum"`
	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Indicates the connection address on the tenant side.
	PodConnectAddress pulumi.StringOutput `pulumi:"podConnectAddress"`
	// The port number.
	Port pulumi.IntOutput `pulumi:"port"`
	// Indicates instance connection address. The structure is documented below.
	// The portProtocols structure is documented below.
	PortProtocols KafkaInstancePortProtocolArrayOutput `pulumi:"portProtocols"`
	// Specifies a product ID, which includes bandwidth, partition, broker and default
	// storage capacity.
	ProductId pulumi.StringPtrOutput `pulumi:"productId"`
	// Indicates the public network access bandwidth.
	PublicBandwidth pulumi.IntOutput `pulumi:"publicBandwidth"`
	// Indicates the public IP addresses list of the instance.
	PublicIpAddresses pulumi.StringArrayOutput `pulumi:"publicIpAddresses"`
	// Specifies the IDs of the elastic IP address (EIP)
	// bound to the DMS Kafka instance. Changing this creates a new instance resource.
	// + If the instance is created with `flavorId`, the total number of public IPs is equal to `brokerNum`.
	// + If the instance is created with `productId`, the total number of public IPs must provide as follows:
	PublicIpIds pulumi.StringArrayOutput `pulumi:"publicIpIds"`
	// The region in which to create the DMS Kafka instances. If omitted, the
	// provider-level region will be used. Changing this creates a new instance resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Indicates a resource specifications identifier.
	ResourceSpecCode pulumi.StringOutput `pulumi:"resourceSpecCode"`
	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	// + **time_base**: Automatically delete the earliest messages.
	// + **produce_reject**: Stop producing new messages.
	RetentionPolicy pulumi.StringOutput `pulumi:"retentionPolicy"`
	// Specifies the ID of a security group.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies the protocol to use after SASL is enabled. Value options:
	// + **SASL_SSL**: Data is encrypted with SSL certificates for high-security transmission.
	// + **SASL_PLAINTEXT**: Data is transmitted in plaintext with username and password authentication. This protocol only
	//   uses the SCRAM-SHA-512 mechanism and delivers high performance.
	SecurityProtocol pulumi.StringPtrOutput `pulumi:"securityProtocol"`
	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SslEnable pulumi.BoolOutput `pulumi:"sslEnable"`
	// Indicates whether to enable two-way authentication.
	SslTwoWayEnable pulumi.BoolOutput `pulumi:"sslTwoWayEnable"`
	// Indicates the status of the DMS Kafka instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// Indicates the storage resource ID.
	StorageResourceId pulumi.StringOutput `pulumi:"storageResourceId"`
	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	// + **c6.2u4g.cluster** (100MB bandwidth): `300` to `300,000` GB
	// + **c6.4u8g.cluster** (300MB bandwidth): `300` to `600,000` GB
	// + **c6.8u16g.cluster** (600MB bandwidth): `300` to `900,000` GB
	// + **c6.12u12g.cluster**: `300` to `900,000` GB
	// + **c6.16u32g.cluster** (1,200MB bandwidth): `300` to `900,000` GB
	StorageSpace pulumi.IntOutput `pulumi:"storageSpace"`
	// Specifies the storage I/O specification.
	// If the instance is created with `flavorId`, the valid values are as follows:
	// + **dms.physical.storage.high.v2**: Type of the disk that uses high I/O.
	// + **dms.physical.storage.ultra.v2**: Type of the disk that uses ultra-high I/O.
	StorageSpecCode pulumi.StringOutput `pulumi:"storageSpecCode"`
	// Indicates the storage type.
	StorageType pulumi.StringOutput `pulumi:"storageType"`
	// The key/value pairs to associate with the DMS Kafka instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Indicates the DMS Kafka instance type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Indicates the used message storage space. Unit: GB
	UsedStorageSpace pulumi.IntOutput `pulumi:"usedStorageSpace"`
	// Indicates the ID of the user who created the DMS Kafka instance
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Indicates the name of the user who created the DMS Kafka instance
	UserName pulumi.StringOutput `pulumi:"userName"`
	// Specifies whether the intra-VPC plaintext access is enabled.
	// Defaults to **false**. Changing this creates a new resource.
	VpcClientPlain pulumi.BoolOutput `pulumi:"vpcClientPlain"`
	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewKafkaInstance registers a new resource with the given unique name, arguments, and options.
func NewKafkaInstance(ctx *pulumi.Context,
	name string, args *KafkaInstanceArgs, opts ...pulumi.ResourceOption) (*KafkaInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	if args.StorageSpecCode == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpecCode'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource KafkaInstance
	err := ctx.RegisterResource("huaweicloud:Dms/kafkaInstance:KafkaInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKafkaInstance gets an existing KafkaInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKafkaInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KafkaInstanceState, opts ...pulumi.ResourceOption) (*KafkaInstance, error) {
	var resource KafkaInstance
	err := ctx.ReadResource("huaweicloud:Dms/kafkaInstance:KafkaInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KafkaInstance resources.
type kafkaInstanceState struct {
	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser *string `pulumi:"accessUser"`
	// Specifies the CPU architecture. Valid value is **X86**.
	// Changing this creates a new instance resource.
	ArchType *string `pulumi:"archType"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew *string `pulumi:"autoRenew"`
	// The names of the AZ where the Kafka instances reside.
	// The parameter value can not be left blank or an empty array. Changing this creates a new instance resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availability_zones" instead.
	AvailableZones []string `pulumi:"availableZones"`
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth *string `pulumi:"bandwidth"`
	// Specifies the broker numbers.
	// It is required when creating an instance with `flavorId`.
	BrokerNum *int `pulumi:"brokerNum"`
	// Indicates whether the certificate can be replaced.
	CertReplaced *bool `pulumi:"certReplaced"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Indicates the IP address of the DMS Kafka instance.
	ConnectAddress *string `pulumi:"connectAddress"`
	// Indicates the connector ID.
	ConnectorId *string `pulumi:"connectorId"`
	// Indicates the number of connector node.
	ConnectorNodeNum *int `pulumi:"connectorNodeNum"`
	// Indicates the create time.
	CreatedAt *string `pulumi:"createdAt"`
	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVpcAccesses []KafkaInstanceCrossVpcAccess `pulumi:"crossVpcAccesses"`
	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description *string `pulumi:"description"`
	// Specifies whether to enable  message dumping(smart connect).
	// Changing this creates a new instance resource.
	Dumping *bool `pulumi:"dumping"`
	// Specifies whether to enable automatic topic creation. If automatic
	// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
	// produced to or consumed from a topic that does not exist.
	// The default value is false.
	EnableAutoTopic *bool `pulumi:"enableAutoTopic"`
	// Indicates whether public access to the DMS Kafka instance is enabled.
	EnablePublicIp *bool `pulumi:"enablePublicIp"`
	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// + **PLAIN**: Simple username and password verification.
	// + **SCRAM-SHA-512**: User credential verification, which is more secure than **PLAIN**.
	EnabledMechanisms []string `pulumi:"enabledMechanisms"`
	// Indicates the message engine.
	Engine *string `pulumi:"engine"`
	// Specifies the version of the Kafka engine,
	// such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion *string `pulumi:"engineVersion"`
	// Specifies the enterprise project ID of the Kafka instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Indicates the extend times. If the value exceeds `20`, disk expansion is no longer allowed.
	ExtendTimes *int `pulumi:"extendTimes"`
	// Specifies the Kafka [flavor ID](https://support.huaweicloud.com/intl/en-us/productdesc-kafka/Kafka-specification.html),
	// e.g. **c6.2u4g.cluster**. This parameter and `productId` are alternative.
	FlavorId *string `pulumi:"flavorId"`
	// Indicates the IPv6 connect addresses list.
	Ipv6ConnectAddresses []string `pulumi:"ipv6ConnectAddresses"`
	// Specifies whether to enable IPv6. Defaults to **false**.
	// Changing this creates a new instance resource.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// Indicates whether the instance is a new instance.
	IsLogicalVolume *bool `pulumi:"isLogicalVolume"`
	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainEnd` is left blank, parameter
	// `maintainBegin` is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Deprecated: Deprecated
	ManagementConnectAddress *string `pulumi:"managementConnectAddress"`
	// Deprecated: Deprecated
	ManagerPassword *string `pulumi:"managerPassword"`
	// Deprecated: Deprecated
	ManagerUser *string `pulumi:"managerUser"`
	// Deprecated: typo in manegement_connect_address, please use "management_connect_address" instead.
	ManegementConnectAddress *string `pulumi:"manegementConnectAddress"`
	// Indicates whether message query is enabled.
	MessageQueryInstEnable *bool `pulumi:"messageQueryInstEnable"`
	// Specifies the parameter name. Static parameter needs to restart the instance to take effect.
	Name *string `pulumi:"name"`
	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkId *string `pulumi:"networkId"`
	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps []string `pulumi:"newTenantIps"`
	// Indicates the node quantity.
	NodeNum *int `pulumi:"nodeNum"`
	// Specifies the array of one or more parameters to be set to the Kafka instance after
	// launched. The parameters structure is documented below.
	Parameters []KafkaInstanceParameter `pulumi:"parameters"`
	// Indicates the number of partitions in Kafka instance.
	PartitionNum *int `pulumi:"partitionNum"`
	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
	Password *string `pulumi:"password"`
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Indicates the connection address on the tenant side.
	PodConnectAddress *string `pulumi:"podConnectAddress"`
	// The port number.
	Port *int `pulumi:"port"`
	// Indicates instance connection address. The structure is documented below.
	// The portProtocols structure is documented below.
	PortProtocols []KafkaInstancePortProtocol `pulumi:"portProtocols"`
	// Specifies a product ID, which includes bandwidth, partition, broker and default
	// storage capacity.
	ProductId *string `pulumi:"productId"`
	// Indicates the public network access bandwidth.
	PublicBandwidth *int `pulumi:"publicBandwidth"`
	// Indicates the public IP addresses list of the instance.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// Specifies the IDs of the elastic IP address (EIP)
	// bound to the DMS Kafka instance. Changing this creates a new instance resource.
	// + If the instance is created with `flavorId`, the total number of public IPs is equal to `brokerNum`.
	// + If the instance is created with `productId`, the total number of public IPs must provide as follows:
	PublicIpIds []string `pulumi:"publicIpIds"`
	// The region in which to create the DMS Kafka instances. If omitted, the
	// provider-level region will be used. Changing this creates a new instance resource.
	Region *string `pulumi:"region"`
	// Indicates a resource specifications identifier.
	ResourceSpecCode *string `pulumi:"resourceSpecCode"`
	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	// + **time_base**: Automatically delete the earliest messages.
	// + **produce_reject**: Stop producing new messages.
	RetentionPolicy *string `pulumi:"retentionPolicy"`
	// Specifies the ID of a security group.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the protocol to use after SASL is enabled. Value options:
	// + **SASL_SSL**: Data is encrypted with SSL certificates for high-security transmission.
	// + **SASL_PLAINTEXT**: Data is transmitted in plaintext with username and password authentication. This protocol only
	//   uses the SCRAM-SHA-512 mechanism and delivers high performance.
	SecurityProtocol *string `pulumi:"securityProtocol"`
	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SslEnable *bool `pulumi:"sslEnable"`
	// Indicates whether to enable two-way authentication.
	SslTwoWayEnable *bool `pulumi:"sslTwoWayEnable"`
	// Indicates the status of the DMS Kafka instance.
	Status *string `pulumi:"status"`
	// Indicates the storage resource ID.
	StorageResourceId *string `pulumi:"storageResourceId"`
	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	// + **c6.2u4g.cluster** (100MB bandwidth): `300` to `300,000` GB
	// + **c6.4u8g.cluster** (300MB bandwidth): `300` to `600,000` GB
	// + **c6.8u16g.cluster** (600MB bandwidth): `300` to `900,000` GB
	// + **c6.12u12g.cluster**: `300` to `900,000` GB
	// + **c6.16u32g.cluster** (1,200MB bandwidth): `300` to `900,000` GB
	StorageSpace *int `pulumi:"storageSpace"`
	// Specifies the storage I/O specification.
	// If the instance is created with `flavorId`, the valid values are as follows:
	// + **dms.physical.storage.high.v2**: Type of the disk that uses high I/O.
	// + **dms.physical.storage.ultra.v2**: Type of the disk that uses ultra-high I/O.
	StorageSpecCode *string `pulumi:"storageSpecCode"`
	// Indicates the storage type.
	StorageType *string `pulumi:"storageType"`
	// The key/value pairs to associate with the DMS Kafka instance.
	Tags map[string]string `pulumi:"tags"`
	// Indicates the DMS Kafka instance type.
	Type *string `pulumi:"type"`
	// Indicates the used message storage space. Unit: GB
	UsedStorageSpace *int `pulumi:"usedStorageSpace"`
	// Indicates the ID of the user who created the DMS Kafka instance
	UserId *string `pulumi:"userId"`
	// Indicates the name of the user who created the DMS Kafka instance
	UserName *string `pulumi:"userName"`
	// Specifies whether the intra-VPC plaintext access is enabled.
	// Defaults to **false**. Changing this creates a new resource.
	VpcClientPlain *bool `pulumi:"vpcClientPlain"`
	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VpcId *string `pulumi:"vpcId"`
}

type KafkaInstanceState struct {
	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser pulumi.StringPtrInput
	// Specifies the CPU architecture. Valid value is **X86**.
	// Changing this creates a new instance resource.
	ArchType pulumi.StringPtrInput
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrInput
	// The names of the AZ where the Kafka instances reside.
	// The parameter value can not be left blank or an empty array. Changing this creates a new instance resource.
	AvailabilityZones pulumi.StringArrayInput
	// Deprecated: available_zones has deprecated, please use "availability_zones" instead.
	AvailableZones pulumi.StringArrayInput
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth pulumi.StringPtrInput
	// Specifies the broker numbers.
	// It is required when creating an instance with `flavorId`.
	BrokerNum pulumi.IntPtrInput
	// Indicates whether the certificate can be replaced.
	CertReplaced pulumi.BoolPtrInput
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Indicates the IP address of the DMS Kafka instance.
	ConnectAddress pulumi.StringPtrInput
	// Indicates the connector ID.
	ConnectorId pulumi.StringPtrInput
	// Indicates the number of connector node.
	ConnectorNodeNum pulumi.IntPtrInput
	// Indicates the create time.
	CreatedAt pulumi.StringPtrInput
	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVpcAccesses KafkaInstanceCrossVpcAccessArrayInput
	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description pulumi.StringPtrInput
	// Specifies whether to enable  message dumping(smart connect).
	// Changing this creates a new instance resource.
	Dumping pulumi.BoolPtrInput
	// Specifies whether to enable automatic topic creation. If automatic
	// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
	// produced to or consumed from a topic that does not exist.
	// The default value is false.
	EnableAutoTopic pulumi.BoolPtrInput
	// Indicates whether public access to the DMS Kafka instance is enabled.
	EnablePublicIp pulumi.BoolPtrInput
	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// + **PLAIN**: Simple username and password verification.
	// + **SCRAM-SHA-512**: User credential verification, which is more secure than **PLAIN**.
	EnabledMechanisms pulumi.StringArrayInput
	// Indicates the message engine.
	Engine pulumi.StringPtrInput
	// Specifies the version of the Kafka engine,
	// such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion pulumi.StringPtrInput
	// Specifies the enterprise project ID of the Kafka instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Indicates the extend times. If the value exceeds `20`, disk expansion is no longer allowed.
	ExtendTimes pulumi.IntPtrInput
	// Specifies the Kafka [flavor ID](https://support.huaweicloud.com/intl/en-us/productdesc-kafka/Kafka-specification.html),
	// e.g. **c6.2u4g.cluster**. This parameter and `productId` are alternative.
	FlavorId pulumi.StringPtrInput
	// Indicates the IPv6 connect addresses list.
	Ipv6ConnectAddresses pulumi.StringArrayInput
	// Specifies whether to enable IPv6. Defaults to **false**.
	// Changing this creates a new instance resource.
	Ipv6Enable pulumi.BoolPtrInput
	// Indicates whether the instance is a new instance.
	IsLogicalVolume pulumi.BoolPtrInput
	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin pulumi.StringPtrInput
	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainEnd` is left blank, parameter
	// `maintainBegin` is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagementConnectAddress pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerPassword pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerUser pulumi.StringPtrInput
	// Deprecated: typo in manegement_connect_address, please use "management_connect_address" instead.
	ManegementConnectAddress pulumi.StringPtrInput
	// Indicates whether message query is enabled.
	MessageQueryInstEnable pulumi.BoolPtrInput
	// Specifies the parameter name. Static parameter needs to restart the instance to take effect.
	Name pulumi.StringPtrInput
	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkId pulumi.StringPtrInput
	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps pulumi.StringArrayInput
	// Indicates the node quantity.
	NodeNum pulumi.IntPtrInput
	// Specifies the array of one or more parameters to be set to the Kafka instance after
	// launched. The parameters structure is documented below.
	Parameters KafkaInstanceParameterArrayInput
	// Indicates the number of partitions in Kafka instance.
	PartitionNum pulumi.IntPtrInput
	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
	Password pulumi.StringPtrInput
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Indicates the connection address on the tenant side.
	PodConnectAddress pulumi.StringPtrInput
	// The port number.
	Port pulumi.IntPtrInput
	// Indicates instance connection address. The structure is documented below.
	// The portProtocols structure is documented below.
	PortProtocols KafkaInstancePortProtocolArrayInput
	// Specifies a product ID, which includes bandwidth, partition, broker and default
	// storage capacity.
	ProductId pulumi.StringPtrInput
	// Indicates the public network access bandwidth.
	PublicBandwidth pulumi.IntPtrInput
	// Indicates the public IP addresses list of the instance.
	PublicIpAddresses pulumi.StringArrayInput
	// Specifies the IDs of the elastic IP address (EIP)
	// bound to the DMS Kafka instance. Changing this creates a new instance resource.
	// + If the instance is created with `flavorId`, the total number of public IPs is equal to `brokerNum`.
	// + If the instance is created with `productId`, the total number of public IPs must provide as follows:
	PublicIpIds pulumi.StringArrayInput
	// The region in which to create the DMS Kafka instances. If omitted, the
	// provider-level region will be used. Changing this creates a new instance resource.
	Region pulumi.StringPtrInput
	// Indicates a resource specifications identifier.
	ResourceSpecCode pulumi.StringPtrInput
	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	// + **time_base**: Automatically delete the earliest messages.
	// + **produce_reject**: Stop producing new messages.
	RetentionPolicy pulumi.StringPtrInput
	// Specifies the ID of a security group.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the protocol to use after SASL is enabled. Value options:
	// + **SASL_SSL**: Data is encrypted with SSL certificates for high-security transmission.
	// + **SASL_PLAINTEXT**: Data is transmitted in plaintext with username and password authentication. This protocol only
	//   uses the SCRAM-SHA-512 mechanism and delivers high performance.
	SecurityProtocol pulumi.StringPtrInput
	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SslEnable pulumi.BoolPtrInput
	// Indicates whether to enable two-way authentication.
	SslTwoWayEnable pulumi.BoolPtrInput
	// Indicates the status of the DMS Kafka instance.
	Status pulumi.StringPtrInput
	// Indicates the storage resource ID.
	StorageResourceId pulumi.StringPtrInput
	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	// + **c6.2u4g.cluster** (100MB bandwidth): `300` to `300,000` GB
	// + **c6.4u8g.cluster** (300MB bandwidth): `300` to `600,000` GB
	// + **c6.8u16g.cluster** (600MB bandwidth): `300` to `900,000` GB
	// + **c6.12u12g.cluster**: `300` to `900,000` GB
	// + **c6.16u32g.cluster** (1,200MB bandwidth): `300` to `900,000` GB
	StorageSpace pulumi.IntPtrInput
	// Specifies the storage I/O specification.
	// If the instance is created with `flavorId`, the valid values are as follows:
	// + **dms.physical.storage.high.v2**: Type of the disk that uses high I/O.
	// + **dms.physical.storage.ultra.v2**: Type of the disk that uses ultra-high I/O.
	StorageSpecCode pulumi.StringPtrInput
	// Indicates the storage type.
	StorageType pulumi.StringPtrInput
	// The key/value pairs to associate with the DMS Kafka instance.
	Tags pulumi.StringMapInput
	// Indicates the DMS Kafka instance type.
	Type pulumi.StringPtrInput
	// Indicates the used message storage space. Unit: GB
	UsedStorageSpace pulumi.IntPtrInput
	// Indicates the ID of the user who created the DMS Kafka instance
	UserId pulumi.StringPtrInput
	// Indicates the name of the user who created the DMS Kafka instance
	UserName pulumi.StringPtrInput
	// Specifies whether the intra-VPC plaintext access is enabled.
	// Defaults to **false**. Changing this creates a new resource.
	VpcClientPlain pulumi.BoolPtrInput
	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VpcId pulumi.StringPtrInput
}

func (KafkaInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaInstanceState)(nil)).Elem()
}

type kafkaInstanceArgs struct {
	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser *string `pulumi:"accessUser"`
	// Specifies the CPU architecture. Valid value is **X86**.
	// Changing this creates a new instance resource.
	ArchType *string `pulumi:"archType"`
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew *string `pulumi:"autoRenew"`
	// The names of the AZ where the Kafka instances reside.
	// The parameter value can not be left blank or an empty array. Changing this creates a new instance resource.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Deprecated: available_zones has deprecated, please use "availability_zones" instead.
	AvailableZones []string `pulumi:"availableZones"`
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth *string `pulumi:"bandwidth"`
	// Specifies the broker numbers.
	// It is required when creating an instance with `flavorId`.
	BrokerNum *int `pulumi:"brokerNum"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVpcAccesses []KafkaInstanceCrossVpcAccess `pulumi:"crossVpcAccesses"`
	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description *string `pulumi:"description"`
	// Specifies whether to enable  message dumping(smart connect).
	// Changing this creates a new instance resource.
	Dumping *bool `pulumi:"dumping"`
	// Specifies whether to enable automatic topic creation. If automatic
	// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
	// produced to or consumed from a topic that does not exist.
	// The default value is false.
	EnableAutoTopic *bool `pulumi:"enableAutoTopic"`
	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// + **PLAIN**: Simple username and password verification.
	// + **SCRAM-SHA-512**: User credential verification, which is more secure than **PLAIN**.
	EnabledMechanisms []string `pulumi:"enabledMechanisms"`
	// Specifies the version of the Kafka engine,
	// such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion string `pulumi:"engineVersion"`
	// Specifies the enterprise project ID of the Kafka instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the Kafka [flavor ID](https://support.huaweicloud.com/intl/en-us/productdesc-kafka/Kafka-specification.html),
	// e.g. **c6.2u4g.cluster**. This parameter and `productId` are alternative.
	FlavorId *string `pulumi:"flavorId"`
	// Specifies whether to enable IPv6. Defaults to **false**.
	// Changing this creates a new instance resource.
	Ipv6Enable *bool `pulumi:"ipv6Enable"`
	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainEnd` is left blank, parameter
	// `maintainBegin` is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Deprecated: Deprecated
	ManagerPassword *string `pulumi:"managerPassword"`
	// Deprecated: Deprecated
	ManagerUser *string `pulumi:"managerUser"`
	// Specifies the parameter name. Static parameter needs to restart the instance to take effect.
	Name *string `pulumi:"name"`
	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkId string `pulumi:"networkId"`
	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps []string `pulumi:"newTenantIps"`
	// Specifies the array of one or more parameters to be set to the Kafka instance after
	// launched. The parameters structure is documented below.
	Parameters []KafkaInstanceParameter `pulumi:"parameters"`
	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
	Password *string `pulumi:"password"`
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies a product ID, which includes bandwidth, partition, broker and default
	// storage capacity.
	ProductId *string `pulumi:"productId"`
	// Specifies the IDs of the elastic IP address (EIP)
	// bound to the DMS Kafka instance. Changing this creates a new instance resource.
	// + If the instance is created with `flavorId`, the total number of public IPs is equal to `brokerNum`.
	// + If the instance is created with `productId`, the total number of public IPs must provide as follows:
	PublicIpIds []string `pulumi:"publicIpIds"`
	// The region in which to create the DMS Kafka instances. If omitted, the
	// provider-level region will be used. Changing this creates a new instance resource.
	Region *string `pulumi:"region"`
	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	// + **time_base**: Automatically delete the earliest messages.
	// + **produce_reject**: Stop producing new messages.
	RetentionPolicy *string `pulumi:"retentionPolicy"`
	// Specifies the ID of a security group.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Specifies the protocol to use after SASL is enabled. Value options:
	// + **SASL_SSL**: Data is encrypted with SSL certificates for high-security transmission.
	// + **SASL_PLAINTEXT**: Data is transmitted in plaintext with username and password authentication. This protocol only
	//   uses the SCRAM-SHA-512 mechanism and delivers high performance.
	SecurityProtocol *string `pulumi:"securityProtocol"`
	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SslEnable *bool `pulumi:"sslEnable"`
	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	// + **c6.2u4g.cluster** (100MB bandwidth): `300` to `300,000` GB
	// + **c6.4u8g.cluster** (300MB bandwidth): `300` to `600,000` GB
	// + **c6.8u16g.cluster** (600MB bandwidth): `300` to `900,000` GB
	// + **c6.12u12g.cluster**: `300` to `900,000` GB
	// + **c6.16u32g.cluster** (1,200MB bandwidth): `300` to `900,000` GB
	StorageSpace *int `pulumi:"storageSpace"`
	// Specifies the storage I/O specification.
	// If the instance is created with `flavorId`, the valid values are as follows:
	// + **dms.physical.storage.high.v2**: Type of the disk that uses high I/O.
	// + **dms.physical.storage.ultra.v2**: Type of the disk that uses ultra-high I/O.
	StorageSpecCode string `pulumi:"storageSpecCode"`
	// The key/value pairs to associate with the DMS Kafka instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies whether the intra-VPC plaintext access is enabled.
	// Defaults to **false**. Changing this creates a new resource.
	VpcClientPlain *bool `pulumi:"vpcClientPlain"`
	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a KafkaInstance resource.
type KafkaInstanceArgs struct {
	// Specifies the username of SASL_SSL user. A username consists of 4
	// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
	AccessUser pulumi.StringPtrInput
	// Specifies the CPU architecture. Valid value is **X86**.
	// Changing this creates a new instance resource.
	ArchType pulumi.StringPtrInput
	// Specifies whether auto renew is enabled. Valid values are "true" and "false".
	AutoRenew pulumi.StringPtrInput
	// The names of the AZ where the Kafka instances reside.
	// The parameter value can not be left blank or an empty array. Changing this creates a new instance resource.
	AvailabilityZones pulumi.StringArrayInput
	// Deprecated: available_zones has deprecated, please use "availability_zones" instead.
	AvailableZones pulumi.StringArrayInput
	// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
	Bandwidth pulumi.StringPtrInput
	// Specifies the broker numbers.
	// It is required when creating an instance with `flavorId`.
	BrokerNum pulumi.IntPtrInput
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
	ChargingMode pulumi.StringPtrInput
	// Specifies the cross-VPC access information.
	// The object structure is documented below.
	CrossVpcAccesses KafkaInstanceCrossVpcAccessArrayInput
	// Specifies the description of the DMS Kafka instance. It is a character string
	// containing not more than 1,024 characters.
	Description pulumi.StringPtrInput
	// Specifies whether to enable  message dumping(smart connect).
	// Changing this creates a new instance resource.
	Dumping pulumi.BoolPtrInput
	// Specifies whether to enable automatic topic creation. If automatic
	// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
	// produced to or consumed from a topic that does not exist.
	// The default value is false.
	EnableAutoTopic pulumi.BoolPtrInput
	// Specifies the authentication mechanisms to use after SASL is
	// enabled. Value options:
	// + **PLAIN**: Simple username and password verification.
	// + **SCRAM-SHA-512**: User credential verification, which is more secure than **PLAIN**.
	EnabledMechanisms pulumi.StringArrayInput
	// Specifies the version of the Kafka engine,
	// such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
	EngineVersion pulumi.StringInput
	// Specifies the enterprise project ID of the Kafka instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the Kafka [flavor ID](https://support.huaweicloud.com/intl/en-us/productdesc-kafka/Kafka-specification.html),
	// e.g. **c6.2u4g.cluster**. This parameter and `productId` are alternative.
	FlavorId pulumi.StringPtrInput
	// Specifies whether to enable IPv6. Defaults to **false**.
	// Changing this creates a new instance resource.
	Ipv6Enable pulumi.BoolPtrInput
	// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
	// blank. In this case, the system automatically allocates the default start time 02:00.
	MaintainBegin pulumi.StringPtrInput
	// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
	// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
	// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
	// 02:00. Parameters `maintainBegin`
	// and `maintainEnd` must be set in pairs. If parameter `maintainEnd` is left blank, parameter
	// `maintainBegin` is also blank. In this case, the system automatically allocates the default end time 06:00.
	MaintainEnd pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerPassword pulumi.StringPtrInput
	// Deprecated: Deprecated
	ManagerUser pulumi.StringPtrInput
	// Specifies the parameter name. Static parameter needs to restart the instance to take effect.
	Name pulumi.StringPtrInput
	// Specifies the ID of a subnet. Changing this creates a new instance
	// resource.
	NetworkId pulumi.StringInput
	// Specifies the IPv4 private IP addresses for the new brokers.
	NewTenantIps pulumi.StringArrayInput
	// Specifies the array of one or more parameters to be set to the Kafka instance after
	// launched. The parameters structure is documented below.
	Parameters KafkaInstanceParameterArrayInput
	// Specifies the password of SASL_SSL user. A password must meet the following
	// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
	// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
	Password pulumi.StringPtrInput
	// Specifies the charging period of the instance. If `periodUnit` is set to *month*
	// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This parameter is
	// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new resource.
	PeriodUnit pulumi.StringPtrInput
	// Specifies a product ID, which includes bandwidth, partition, broker and default
	// storage capacity.
	ProductId pulumi.StringPtrInput
	// Specifies the IDs of the elastic IP address (EIP)
	// bound to the DMS Kafka instance. Changing this creates a new instance resource.
	// + If the instance is created with `flavorId`, the total number of public IPs is equal to `brokerNum`.
	// + If the instance is created with `productId`, the total number of public IPs must provide as follows:
	PublicIpIds pulumi.StringArrayInput
	// The region in which to create the DMS Kafka instances. If omitted, the
	// provider-level region will be used. Changing this creates a new instance resource.
	Region pulumi.StringPtrInput
	// Specifies the action to be taken when the memory usage reaches the disk
	// capacity threshold. The valid values are as follows:
	// + **time_base**: Automatically delete the earliest messages.
	// + **produce_reject**: Stop producing new messages.
	RetentionPolicy pulumi.StringPtrInput
	// Specifies the ID of a security group.
	SecurityGroupId pulumi.StringInput
	// Specifies the protocol to use after SASL is enabled. Value options:
	// + **SASL_SSL**: Data is encrypted with SSL certificates for high-security transmission.
	// + **SASL_PLAINTEXT**: Data is transmitted in plaintext with username and password authentication. This protocol only
	//   uses the SCRAM-SHA-512 mechanism and delivers high performance.
	SecurityProtocol pulumi.StringPtrInput
	// Specifies whether the Kafka SASL_SSL is enabled.
	// Changing this creates a new resource.
	SslEnable pulumi.BoolPtrInput
	// Specifies the message storage capacity, the unit is GB.
	// The storage spaces corresponding to the product IDs are as follows:
	// + **c6.2u4g.cluster** (100MB bandwidth): `300` to `300,000` GB
	// + **c6.4u8g.cluster** (300MB bandwidth): `300` to `600,000` GB
	// + **c6.8u16g.cluster** (600MB bandwidth): `300` to `900,000` GB
	// + **c6.12u12g.cluster**: `300` to `900,000` GB
	// + **c6.16u32g.cluster** (1,200MB bandwidth): `300` to `900,000` GB
	StorageSpace pulumi.IntPtrInput
	// Specifies the storage I/O specification.
	// If the instance is created with `flavorId`, the valid values are as follows:
	// + **dms.physical.storage.high.v2**: Type of the disk that uses high I/O.
	// + **dms.physical.storage.ultra.v2**: Type of the disk that uses ultra-high I/O.
	StorageSpecCode pulumi.StringInput
	// The key/value pairs to associate with the DMS Kafka instance.
	Tags pulumi.StringMapInput
	// Specifies whether the intra-VPC plaintext access is enabled.
	// Defaults to **false**. Changing this creates a new resource.
	VpcClientPlain pulumi.BoolPtrInput
	// Specifies the ID of a VPC. Changing this creates a new instance resource.
	VpcId pulumi.StringInput
}

func (KafkaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaInstanceArgs)(nil)).Elem()
}

type KafkaInstanceInput interface {
	pulumi.Input

	ToKafkaInstanceOutput() KafkaInstanceOutput
	ToKafkaInstanceOutputWithContext(ctx context.Context) KafkaInstanceOutput
}

func (*KafkaInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaInstance)(nil)).Elem()
}

func (i *KafkaInstance) ToKafkaInstanceOutput() KafkaInstanceOutput {
	return i.ToKafkaInstanceOutputWithContext(context.Background())
}

func (i *KafkaInstance) ToKafkaInstanceOutputWithContext(ctx context.Context) KafkaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaInstanceOutput)
}

// KafkaInstanceArrayInput is an input type that accepts KafkaInstanceArray and KafkaInstanceArrayOutput values.
// You can construct a concrete instance of `KafkaInstanceArrayInput` via:
//
//	KafkaInstanceArray{ KafkaInstanceArgs{...} }
type KafkaInstanceArrayInput interface {
	pulumi.Input

	ToKafkaInstanceArrayOutput() KafkaInstanceArrayOutput
	ToKafkaInstanceArrayOutputWithContext(context.Context) KafkaInstanceArrayOutput
}

type KafkaInstanceArray []KafkaInstanceInput

func (KafkaInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaInstance)(nil)).Elem()
}

func (i KafkaInstanceArray) ToKafkaInstanceArrayOutput() KafkaInstanceArrayOutput {
	return i.ToKafkaInstanceArrayOutputWithContext(context.Background())
}

func (i KafkaInstanceArray) ToKafkaInstanceArrayOutputWithContext(ctx context.Context) KafkaInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaInstanceArrayOutput)
}

// KafkaInstanceMapInput is an input type that accepts KafkaInstanceMap and KafkaInstanceMapOutput values.
// You can construct a concrete instance of `KafkaInstanceMapInput` via:
//
//	KafkaInstanceMap{ "key": KafkaInstanceArgs{...} }
type KafkaInstanceMapInput interface {
	pulumi.Input

	ToKafkaInstanceMapOutput() KafkaInstanceMapOutput
	ToKafkaInstanceMapOutputWithContext(context.Context) KafkaInstanceMapOutput
}

type KafkaInstanceMap map[string]KafkaInstanceInput

func (KafkaInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaInstance)(nil)).Elem()
}

func (i KafkaInstanceMap) ToKafkaInstanceMapOutput() KafkaInstanceMapOutput {
	return i.ToKafkaInstanceMapOutputWithContext(context.Background())
}

func (i KafkaInstanceMap) ToKafkaInstanceMapOutputWithContext(ctx context.Context) KafkaInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaInstanceMapOutput)
}

type KafkaInstanceOutput struct{ *pulumi.OutputState }

func (KafkaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaInstance)(nil)).Elem()
}

func (o KafkaInstanceOutput) ToKafkaInstanceOutput() KafkaInstanceOutput {
	return o
}

func (o KafkaInstanceOutput) ToKafkaInstanceOutputWithContext(ctx context.Context) KafkaInstanceOutput {
	return o
}

// Specifies the username of SASL_SSL user. A username consists of 4
// to 64 characters and supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
func (o KafkaInstanceOutput) AccessUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.AccessUser }).(pulumi.StringPtrOutput)
}

// Specifies the CPU architecture. Valid value is **X86**.
// Changing this creates a new instance resource.
func (o KafkaInstanceOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.ArchType }).(pulumi.StringPtrOutput)
}

// Specifies whether auto renew is enabled. Valid values are "true" and "false".
func (o KafkaInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// The names of the AZ where the Kafka instances reside.
// The parameter value can not be left blank or an empty array. Changing this creates a new instance resource.
func (o KafkaInstanceOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Deprecated: available_zones has deprecated, please use "availability_zones" instead.
func (o KafkaInstanceOutput) AvailableZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.AvailableZones }).(pulumi.StringArrayOutput)
}

// Deprecated: The bandwidth has been deprecated. If you need to change the bandwidth, please update the product_id.
func (o KafkaInstanceOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.Bandwidth }).(pulumi.StringOutput)
}

// Specifies the broker numbers.
// It is required when creating an instance with `flavorId`.
func (o KafkaInstanceOutput) BrokerNum() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.BrokerNum }).(pulumi.IntOutput)
}

// Indicates whether the certificate can be replaced.
func (o KafkaInstanceOutput) CertReplaced() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.CertReplaced }).(pulumi.BoolOutput)
}

// Specifies the charging mode of the instance. Valid values are *prePaid*
// and *postPaid*, defaults to *postPaid*. Changing this creates a new resource.
func (o KafkaInstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Indicates the IP address of the DMS Kafka instance.
func (o KafkaInstanceOutput) ConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.ConnectAddress }).(pulumi.StringOutput)
}

// Indicates the connector ID.
func (o KafkaInstanceOutput) ConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.ConnectorId }).(pulumi.StringOutput)
}

// Indicates the number of connector node.
func (o KafkaInstanceOutput) ConnectorNodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.ConnectorNodeNum }).(pulumi.IntOutput)
}

// Indicates the create time.
func (o KafkaInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Specifies the cross-VPC access information.
// The object structure is documented below.
func (o KafkaInstanceOutput) CrossVpcAccesses() KafkaInstanceCrossVpcAccessArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) KafkaInstanceCrossVpcAccessArrayOutput { return v.CrossVpcAccesses }).(KafkaInstanceCrossVpcAccessArrayOutput)
}

// Specifies the description of the DMS Kafka instance. It is a character string
// containing not more than 1,024 characters.
func (o KafkaInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable  message dumping(smart connect).
// Changing this creates a new instance resource.
func (o KafkaInstanceOutput) Dumping() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.Dumping }).(pulumi.BoolOutput)
}

// Specifies whether to enable automatic topic creation. If automatic
// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
// produced to or consumed from a topic that does not exist.
// The default value is false.
func (o KafkaInstanceOutput) EnableAutoTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.EnableAutoTopic }).(pulumi.BoolOutput)
}

// Indicates whether public access to the DMS Kafka instance is enabled.
func (o KafkaInstanceOutput) EnablePublicIp() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.EnablePublicIp }).(pulumi.BoolOutput)
}

// Specifies the authentication mechanisms to use after SASL is
// enabled. Value options:
// + **PLAIN**: Simple username and password verification.
// + **SCRAM-SHA-512**: User credential verification, which is more secure than **PLAIN**.
func (o KafkaInstanceOutput) EnabledMechanisms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.EnabledMechanisms }).(pulumi.StringArrayOutput)
}

// Indicates the message engine.
func (o KafkaInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the version of the Kafka engine,
// such as 1.1.0, 2.3.0, 2.7 or other supported versions. Changing this creates a new instance resource.
func (o KafkaInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// Specifies the enterprise project ID of the Kafka instance.
func (o KafkaInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates the extend times. If the value exceeds `20`, disk expansion is no longer allowed.
func (o KafkaInstanceOutput) ExtendTimes() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.ExtendTimes }).(pulumi.IntOutput)
}

// Specifies the Kafka [flavor ID](https://support.huaweicloud.com/intl/en-us/productdesc-kafka/Kafka-specification.html),
// e.g. **c6.2u4g.cluster**. This parameter and `productId` are alternative.
func (o KafkaInstanceOutput) FlavorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.FlavorId }).(pulumi.StringPtrOutput)
}

// Indicates the IPv6 connect addresses list.
func (o KafkaInstanceOutput) Ipv6ConnectAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.Ipv6ConnectAddresses }).(pulumi.StringArrayOutput)
}

// Specifies whether to enable IPv6. Defaults to **false**.
// Changing this creates a new instance resource.
func (o KafkaInstanceOutput) Ipv6Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.Ipv6Enable }).(pulumi.BoolOutput)
}

// Indicates whether the instance is a new instance.
func (o KafkaInstanceOutput) IsLogicalVolume() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.IsLogicalVolume }).(pulumi.BoolOutput)
}

// Specifies the time at which a maintenance time window starts. Format: HH:mm. The
// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
// window. The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
// and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
// blank. In this case, the system automatically allocates the default start time 02:00.
func (o KafkaInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

// Specifies the time at which a maintenance time window ends. Format: HH:mm. The
// start time and end time of a maintenance time window must indicate the time segment of a supported maintenance time
// window. The end time is four hours later than the start time. For example, if the start time is 22:00, the end time is
// 02:00. Parameters `maintainBegin`
// and `maintainEnd` must be set in pairs. If parameter `maintainEnd` is left blank, parameter
// `maintainBegin` is also blank. In this case, the system automatically allocates the default end time 06:00.
func (o KafkaInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o KafkaInstanceOutput) ManagementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.ManagementConnectAddress }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o KafkaInstanceOutput) ManagerPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.ManagerPassword }).(pulumi.StringPtrOutput)
}

// Deprecated: Deprecated
func (o KafkaInstanceOutput) ManagerUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.ManagerUser }).(pulumi.StringPtrOutput)
}

// Deprecated: typo in manegement_connect_address, please use "management_connect_address" instead.
func (o KafkaInstanceOutput) ManegementConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.ManegementConnectAddress }).(pulumi.StringOutput)
}

// Indicates whether message query is enabled.
func (o KafkaInstanceOutput) MessageQueryInstEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.MessageQueryInstEnable }).(pulumi.BoolOutput)
}

// Specifies the parameter name. Static parameter needs to restart the instance to take effect.
func (o KafkaInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the ID of a subnet. Changing this creates a new instance
// resource.
func (o KafkaInstanceOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Specifies the IPv4 private IP addresses for the new brokers.
func (o KafkaInstanceOutput) NewTenantIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.NewTenantIps }).(pulumi.StringArrayOutput)
}

// Indicates the node quantity.
func (o KafkaInstanceOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.NodeNum }).(pulumi.IntOutput)
}

// Specifies the array of one or more parameters to be set to the Kafka instance after
// launched. The parameters structure is documented below.
func (o KafkaInstanceOutput) Parameters() KafkaInstanceParameterArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) KafkaInstanceParameterArrayOutput { return v.Parameters }).(KafkaInstanceParameterArrayOutput)
}

// Indicates the number of partitions in Kafka instance.
func (o KafkaInstanceOutput) PartitionNum() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.PartitionNum }).(pulumi.IntOutput)
}

// Specifies the password of SASL_SSL user. A password must meet the following
// complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character types:
// lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
func (o KafkaInstanceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Specifies the charging period of the instance. If `periodUnit` is set to *month*
// , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value ranges from 1 to 3. This parameter is
// mandatory if `chargingMode` is set to *prePaid*. Changing this creates a new resource.
func (o KafkaInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the instance.
// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
// Changing this creates a new resource.
func (o KafkaInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Indicates the connection address on the tenant side.
func (o KafkaInstanceOutput) PodConnectAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.PodConnectAddress }).(pulumi.StringOutput)
}

// The port number.
func (o KafkaInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Indicates instance connection address. The structure is documented below.
// The portProtocols structure is documented below.
func (o KafkaInstanceOutput) PortProtocols() KafkaInstancePortProtocolArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) KafkaInstancePortProtocolArrayOutput { return v.PortProtocols }).(KafkaInstancePortProtocolArrayOutput)
}

// Specifies a product ID, which includes bandwidth, partition, broker and default
// storage capacity.
func (o KafkaInstanceOutput) ProductId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.ProductId }).(pulumi.StringPtrOutput)
}

// Indicates the public network access bandwidth.
func (o KafkaInstanceOutput) PublicBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.PublicBandwidth }).(pulumi.IntOutput)
}

// Indicates the public IP addresses list of the instance.
func (o KafkaInstanceOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

// Specifies the IDs of the elastic IP address (EIP)
// bound to the DMS Kafka instance. Changing this creates a new instance resource.
// + If the instance is created with `flavorId`, the total number of public IPs is equal to `brokerNum`.
// + If the instance is created with `productId`, the total number of public IPs must provide as follows:
func (o KafkaInstanceOutput) PublicIpIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringArrayOutput { return v.PublicIpIds }).(pulumi.StringArrayOutput)
}

// The region in which to create the DMS Kafka instances. If omitted, the
// provider-level region will be used. Changing this creates a new instance resource.
func (o KafkaInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates a resource specifications identifier.
func (o KafkaInstanceOutput) ResourceSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.ResourceSpecCode }).(pulumi.StringOutput)
}

// Specifies the action to be taken when the memory usage reaches the disk
// capacity threshold. The valid values are as follows:
// + **time_base**: Automatically delete the earliest messages.
// + **produce_reject**: Stop producing new messages.
func (o KafkaInstanceOutput) RetentionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.RetentionPolicy }).(pulumi.StringOutput)
}

// Specifies the ID of a security group.
func (o KafkaInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies the protocol to use after SASL is enabled. Value options:
//   - **SASL_SSL**: Data is encrypted with SSL certificates for high-security transmission.
//   - **SASL_PLAINTEXT**: Data is transmitted in plaintext with username and password authentication. This protocol only
//     uses the SCRAM-SHA-512 mechanism and delivers high performance.
func (o KafkaInstanceOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringPtrOutput { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

// Specifies whether the Kafka SASL_SSL is enabled.
// Changing this creates a new resource.
func (o KafkaInstanceOutput) SslEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.SslEnable }).(pulumi.BoolOutput)
}

// Indicates whether to enable two-way authentication.
func (o KafkaInstanceOutput) SslTwoWayEnable() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.SslTwoWayEnable }).(pulumi.BoolOutput)
}

// Indicates the status of the DMS Kafka instance.
func (o KafkaInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Indicates the storage resource ID.
func (o KafkaInstanceOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.StorageResourceId }).(pulumi.StringOutput)
}

// Specifies the message storage capacity, the unit is GB.
// The storage spaces corresponding to the product IDs are as follows:
// + **c6.2u4g.cluster** (100MB bandwidth): `300` to `300,000` GB
// + **c6.4u8g.cluster** (300MB bandwidth): `300` to `600,000` GB
// + **c6.8u16g.cluster** (600MB bandwidth): `300` to `900,000` GB
// + **c6.12u12g.cluster**: `300` to `900,000` GB
// + **c6.16u32g.cluster** (1,200MB bandwidth): `300` to `900,000` GB
func (o KafkaInstanceOutput) StorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.StorageSpace }).(pulumi.IntOutput)
}

// Specifies the storage I/O specification.
// If the instance is created with `flavorId`, the valid values are as follows:
// + **dms.physical.storage.high.v2**: Type of the disk that uses high I/O.
// + **dms.physical.storage.ultra.v2**: Type of the disk that uses ultra-high I/O.
func (o KafkaInstanceOutput) StorageSpecCode() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.StorageSpecCode }).(pulumi.StringOutput)
}

// Indicates the storage type.
func (o KafkaInstanceOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

// The key/value pairs to associate with the DMS Kafka instance.
func (o KafkaInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Indicates the DMS Kafka instance type.
func (o KafkaInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Indicates the used message storage space. Unit: GB
func (o KafkaInstanceOutput) UsedStorageSpace() pulumi.IntOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.IntOutput { return v.UsedStorageSpace }).(pulumi.IntOutput)
}

// Indicates the ID of the user who created the DMS Kafka instance
func (o KafkaInstanceOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// Indicates the name of the user who created the DMS Kafka instance
func (o KafkaInstanceOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

// Specifies whether the intra-VPC plaintext access is enabled.
// Defaults to **false**. Changing this creates a new resource.
func (o KafkaInstanceOutput) VpcClientPlain() pulumi.BoolOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.BoolOutput { return v.VpcClientPlain }).(pulumi.BoolOutput)
}

// Specifies the ID of a VPC. Changing this creates a new instance resource.
func (o KafkaInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type KafkaInstanceArrayOutput struct{ *pulumi.OutputState }

func (KafkaInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaInstance)(nil)).Elem()
}

func (o KafkaInstanceArrayOutput) ToKafkaInstanceArrayOutput() KafkaInstanceArrayOutput {
	return o
}

func (o KafkaInstanceArrayOutput) ToKafkaInstanceArrayOutputWithContext(ctx context.Context) KafkaInstanceArrayOutput {
	return o
}

func (o KafkaInstanceArrayOutput) Index(i pulumi.IntInput) KafkaInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KafkaInstance {
		return vs[0].([]*KafkaInstance)[vs[1].(int)]
	}).(KafkaInstanceOutput)
}

type KafkaInstanceMapOutput struct{ *pulumi.OutputState }

func (KafkaInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaInstance)(nil)).Elem()
}

func (o KafkaInstanceMapOutput) ToKafkaInstanceMapOutput() KafkaInstanceMapOutput {
	return o
}

func (o KafkaInstanceMapOutput) ToKafkaInstanceMapOutputWithContext(ctx context.Context) KafkaInstanceMapOutput {
	return o
}

func (o KafkaInstanceMapOutput) MapIndex(k pulumi.StringInput) KafkaInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KafkaInstance {
		return vs[0].(map[string]*KafkaInstance)[vs[1].(string)]
	}).(KafkaInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaInstanceInput)(nil)).Elem(), &KafkaInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaInstanceArrayInput)(nil)).Elem(), KafkaInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaInstanceMapInput)(nil)).Elem(), KafkaInstanceMap{})
	pulumi.RegisterOutputType(KafkaInstanceOutput{})
	pulumi.RegisterOutputType(KafkaInstanceArrayOutput{})
	pulumi.RegisterOutputType(KafkaInstanceMapOutput{})
}
