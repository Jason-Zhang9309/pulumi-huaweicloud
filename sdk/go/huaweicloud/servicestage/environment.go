// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicestage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an environment resource within HuaweiCloud ServiceStage.
//
// ## Example Usage
// ### Create an environment based on some cce clusters
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/ServiceStage"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/ServiceStage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			envName := cfg.RequireObject("envName")
//			vpcId := cfg.RequireObject("vpcId")
//			cceClusterId := cfg.RequireObject("cceClusterId")
//			cciNamespaceName := cfg.RequireObject("cciNamespaceName")
//			_, err := ServiceStage.NewEnvironment(ctx, "test", &ServiceStage.EnvironmentArgs{
//				VpcId: pulumi.Any(vpcId),
//				BasicResources: servicestage.EnvironmentBasicResourceArray{
//					&servicestage.EnvironmentBasicResourceArgs{
//						Type: pulumi.String("cce"),
//						Id:   pulumi.Any(cceClusterId),
//					},
//					&servicestage.EnvironmentBasicResourceArgs{
//						Type: pulumi.String("cci"),
//						Id:   pulumi.Any(cciNamespaceName),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Environments can be imported using their `id`, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:ServiceStage/environment:Environment test 17383329-b686-47e4-8f70-0d8dcddb65e9
//
// ```
type Environment struct {
	pulumi.CustomResourceState

	// Specifies the basic resources.
	// The object structure is documented below.
	BasicResources EnvironmentBasicResourceArrayOutput `pulumi:"basicResources"`
	// Specifies the environment description.
	// The description can contain a maximum of 128 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the enterprise projcet ID to which the application
	// belongs. Changing this will create a new resource.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Specifies the environment name.
	// The name can contain of 2 to 64 characters, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// The name must start with a letter and end with a letter or a digit.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the optional resources.
	// The object structure is documented below.
	OptionalResources EnvironmentOptionalResourceArrayOutput `pulumi:"optionalResources"`
	// Specifies the region in which to create the ServiceStage environment.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the VPC ID to which the environment belongs.
	// Changing this will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BasicResources == nil {
		return nil, errors.New("invalid value for required argument 'BasicResources'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Environment
	err := ctx.RegisterResource("huaweicloud:ServiceStage/environment:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("huaweicloud:ServiceStage/environment:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
	// Specifies the basic resources.
	// The object structure is documented below.
	BasicResources []EnvironmentBasicResource `pulumi:"basicResources"`
	// Specifies the environment description.
	// The description can contain a maximum of 128 characters.
	Description *string `pulumi:"description"`
	// Specifies the enterprise projcet ID to which the application
	// belongs. Changing this will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the environment name.
	// The name can contain of 2 to 64 characters, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// The name must start with a letter and end with a letter or a digit.
	Name *string `pulumi:"name"`
	// Specifies the optional resources.
	// The object structure is documented below.
	OptionalResources []EnvironmentOptionalResource `pulumi:"optionalResources"`
	// Specifies the region in which to create the ServiceStage environment.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the VPC ID to which the environment belongs.
	// Changing this will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type EnvironmentState struct {
	// Specifies the basic resources.
	// The object structure is documented below.
	BasicResources EnvironmentBasicResourceArrayInput
	// Specifies the environment description.
	// The description can contain a maximum of 128 characters.
	Description pulumi.StringPtrInput
	// Specifies the enterprise projcet ID to which the application
	// belongs. Changing this will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the environment name.
	// The name can contain of 2 to 64 characters, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// The name must start with a letter and end with a letter or a digit.
	Name pulumi.StringPtrInput
	// Specifies the optional resources.
	// The object structure is documented below.
	OptionalResources EnvironmentOptionalResourceArrayInput
	// Specifies the region in which to create the ServiceStage environment.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the VPC ID to which the environment belongs.
	// Changing this will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// Specifies the basic resources.
	// The object structure is documented below.
	BasicResources []EnvironmentBasicResource `pulumi:"basicResources"`
	// Specifies the environment description.
	// The description can contain a maximum of 128 characters.
	Description *string `pulumi:"description"`
	// Specifies the enterprise projcet ID to which the application
	// belongs. Changing this will create a new resource.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the environment name.
	// The name can contain of 2 to 64 characters, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// The name must start with a letter and end with a letter or a digit.
	Name *string `pulumi:"name"`
	// Specifies the optional resources.
	// The object structure is documented below.
	OptionalResources []EnvironmentOptionalResource `pulumi:"optionalResources"`
	// Specifies the region in which to create the ServiceStage environment.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the VPC ID to which the environment belongs.
	// Changing this will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// Specifies the basic resources.
	// The object structure is documented below.
	BasicResources EnvironmentBasicResourceArrayInput
	// Specifies the environment description.
	// The description can contain a maximum of 128 characters.
	Description pulumi.StringPtrInput
	// Specifies the enterprise projcet ID to which the application
	// belongs. Changing this will create a new resource.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the environment name.
	// The name can contain of 2 to 64 characters, only letters, digits, hyphens (-) and underscores (_) are allowed.
	// The name must start with a letter and end with a letter or a digit.
	Name pulumi.StringPtrInput
	// Specifies the optional resources.
	// The object structure is documented below.
	OptionalResources EnvironmentOptionalResourceArrayInput
	// Specifies the region in which to create the ServiceStage environment.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the VPC ID to which the environment belongs.
	// Changing this will create a new resource.
	VpcId pulumi.StringInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

// EnvironmentArrayInput is an input type that accepts EnvironmentArray and EnvironmentArrayOutput values.
// You can construct a concrete instance of `EnvironmentArrayInput` via:
//
//	EnvironmentArray{ EnvironmentArgs{...} }
type EnvironmentArrayInput interface {
	pulumi.Input

	ToEnvironmentArrayOutput() EnvironmentArrayOutput
	ToEnvironmentArrayOutputWithContext(context.Context) EnvironmentArrayOutput
}

type EnvironmentArray []EnvironmentInput

func (EnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (i EnvironmentArray) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return i.ToEnvironmentArrayOutputWithContext(context.Background())
}

func (i EnvironmentArray) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentArrayOutput)
}

// EnvironmentMapInput is an input type that accepts EnvironmentMap and EnvironmentMapOutput values.
// You can construct a concrete instance of `EnvironmentMapInput` via:
//
//	EnvironmentMap{ "key": EnvironmentArgs{...} }
type EnvironmentMapInput interface {
	pulumi.Input

	ToEnvironmentMapOutput() EnvironmentMapOutput
	ToEnvironmentMapOutputWithContext(context.Context) EnvironmentMapOutput
}

type EnvironmentMap map[string]EnvironmentInput

func (EnvironmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (i EnvironmentMap) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return i.ToEnvironmentMapOutputWithContext(context.Background())
}

func (i EnvironmentMap) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMapOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

// Specifies the basic resources.
// The object structure is documented below.
func (o EnvironmentOutput) BasicResources() EnvironmentBasicResourceArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentBasicResourceArrayOutput { return v.BasicResources }).(EnvironmentBasicResourceArrayOutput)
}

// Specifies the environment description.
// The description can contain a maximum of 128 characters.
func (o EnvironmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the enterprise projcet ID to which the application
// belongs. Changing this will create a new resource.
func (o EnvironmentOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Specifies the environment name.
// The name can contain of 2 to 64 characters, only letters, digits, hyphens (-) and underscores (_) are allowed.
// The name must start with a letter and end with a letter or a digit.
func (o EnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the optional resources.
// The object structure is documented below.
func (o EnvironmentOutput) OptionalResources() EnvironmentOptionalResourceArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentOptionalResourceArrayOutput { return v.OptionalResources }).(EnvironmentOptionalResourceArrayOutput)
}

// Specifies the region in which to create the ServiceStage environment.
// If omitted, the provider-level region will be used. Changing this will create a new resource.
func (o EnvironmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the VPC ID to which the environment belongs.
// Changing this will create a new resource.
func (o EnvironmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type EnvironmentArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) Index(i pulumi.IntInput) EnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].([]*Environment)[vs[1].(int)]
	}).(EnvironmentOutput)
}

type EnvironmentMapOutput struct{ *pulumi.OutputState }

func (EnvironmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) MapIndex(k pulumi.StringInput) EnvironmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].(map[string]*Environment)[vs[1].(string)]
	}).(EnvironmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentArrayInput)(nil)).Elem(), EnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMapInput)(nil)).Elem(), EnvironmentMap{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMapOutput{})
}
