// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicestage

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource is used to deploy a component under specified application within HuaweiCloud ServiceStage service.
//
// ## Example Usage
// ### Deploy a component in the container with specified SWR image
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/ServiceStage"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/ServiceStage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			appId := cfg.RequireObject("appId")
//			componentId := cfg.RequireObject("componentId")
//			envId := cfg.RequireObject("envId")
//			instanceName := cfg.RequireObject("instanceName")
//			flavorId := cfg.RequireObject("flavorId")
//			componentName := cfg.RequireObject("componentName")
//			swrImageUrl := cfg.RequireObject("swrImageUrl")
//			cceClusterId := cfg.RequireObject("cceClusterId")
//			cseEngineId := cfg.RequireObject("cseEngineId")
//			_, err := ServiceStage.NewComponentInstance(ctx, "default", &ServiceStage.ComponentInstanceArgs{
//				ApplicationId: pulumi.Any(appId),
//				ComponentId:   pulumi.Any(componentId),
//				EnvironmentId: pulumi.Any(envId),
//				Version:       pulumi.String("1.0.0"),
//				Replica:       pulumi.Int(1),
//				FlavorId:      pulumi.Any(flavorId),
//				Artifacts: servicestage.ComponentInstanceArtifactArray{
//					&servicestage.ComponentInstanceArtifactArgs{
//						Name:     pulumi.Any(componentName),
//						Type:     pulumi.String("image"),
//						Storage:  pulumi.String("swr"),
//						Url:      pulumi.Any(swrImageUrl),
//						AuthType: pulumi.String("iam"),
//					},
//				},
//				ReferResources: servicestage.ComponentInstanceReferResourceArray{
//					&servicestage.ComponentInstanceReferResourceArgs{
//						Type: pulumi.String("cce"),
//						Id:   pulumi.Any(cceClusterId),
//						Parameters: pulumi.StringMap{
//							"type":      pulumi.String("VirtualMachine"),
//							"namespace": pulumi.String("default"),
//						},
//					},
//					&servicestage.ComponentInstanceReferResourceArgs{
//						Type: pulumi.String("cse"),
//						Id:   pulumi.Any(cseEngineId),
//					},
//				},
//				Configuration: &servicestage.ComponentInstanceConfigurationArgs{
//					EnvVariables: servicestage.ComponentInstanceConfigurationEnvVariableArray{
//						&servicestage.ComponentInstanceConfigurationEnvVariableArgs{
//							Name:  pulumi.String("TZ"),
//							Value: pulumi.String("Asia/Shanghai"),
//						},
//					},
//					LogCollectionPolicies: servicestage.ComponentInstanceConfigurationLogCollectionPolicyArray{
//						&servicestage.ComponentInstanceConfigurationLogCollectionPolicyArgs{
//							HostPath: pulumi.String("/tmp"),
//							ContainerMountings: servicestage.ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray{
//								&servicestage.ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs{
//									Path:        pulumi.String("/attached/01"),
//									AgingPeriod: pulumi.String("Hourly"),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Deploy a component in the ECS instance with specified jar package
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/ServiceStage"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/ServiceStage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			appId := cfg.RequireObject("appId")
//			componentId := cfg.RequireObject("componentId")
//			envId := cfg.RequireObject("envId")
//			instanceName := cfg.RequireObject("instanceName")
//			flavorId := cfg.RequireObject("flavorId")
//			componentName := cfg.RequireObject("componentName")
//			jarUrl := cfg.RequireObject("jarUrl")
//			obsBucketName := cfg.RequireObject("obsBucketName")
//			obsBucketEndpoint := cfg.RequireObject("obsBucketEndpoint")
//			obsObjectKey := cfg.RequireObject("obsObjectKey")
//			ecsInstanceId := cfg.RequireObject("ecsInstanceId")
//			_, err := ServiceStage.NewComponentInstance(ctx, "test", &ServiceStage.ComponentInstanceArgs{
//				ApplicationId: pulumi.Any(appId),
//				ComponentId:   pulumi.Any(componentId),
//				EnvironmentId: pulumi.Any(envId),
//				Version:       pulumi.String("1.0.0"),
//				Replica:       pulumi.Int(1),
//				FlavorId:      pulumi.Any(flavorId),
//				Artifacts: servicestage.ComponentInstanceArtifactArray{
//					&servicestage.ComponentInstanceArtifactArgs{
//						Name:     pulumi.Any(componentName),
//						AuthType: pulumi.String("iam"),
//						Type:     pulumi.String("package"),
//						Storage:  pulumi.String("obs"),
//						Url:      pulumi.Any(jarUrl),
//						Properties: &servicestage.ComponentInstanceArtifactPropertiesArgs{
//							Bucket:   pulumi.Any(obsBucketName),
//							Endpoint: pulumi.Any(obsBucketEndpoint),
//							Key:      pulumi.Any(obsObjectKey),
//						},
//					},
//				},
//				ReferResources: servicestage.ComponentInstanceReferResourceArray{
//					&servicestage.ComponentInstanceReferResourceArgs{
//						Type: pulumi.String("ecs"),
//						Id:   pulumi.String("Default"),
//						Parameters: pulumi.StringMap{
//							"hosts": pulumi.String(fmt.Sprintf("[\"%v\"]", ecsInstanceId)),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instances can be imported using their related `application_id`, `component_id` and `id`, separated by a slash (/), e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:ServiceStage/componentInstance:ComponentInstance test 4e65a759-e7b1-4e9e-8277-857f8e261f3c/4e65a759-e7b1-4e9e-8277-857f8e261f3c/c0a13d88-d4e3-11ec-93a9-0255ac101d30
//
// ```
type ComponentInstance struct {
	pulumi.CustomResourceState

	// Specifies the application ID to which the instance belongs.
	// Changing this will create a new instance.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Specifies the component artifact settings.
	// The key indicates the component name. In the Docker container scenario, the key indicates the container name.
	// The object structure is documented below.
	Artifacts ComponentInstanceArtifactArrayOutput `pulumi:"artifacts"`
	// Specifies the component ID to build (deploy).
	// Changing this will create a new instance.
	ComponentId pulumi.StringOutput `pulumi:"componentId"`
	// Specifies the configuration parameters, such as environment variables,
	// deployment configurations, and O&M monitoring.
	// The object structure is documented below.
	Configuration ComponentInstanceConfigurationOutput `pulumi:"configuration"`
	// Specifies the description of the instance.
	// The description can contian a maximum of `128` characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the environment ID in which the component to build (deployed).
	// Changing this will create a new instance.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// Specifies the configuration of the external network access.
	// The object structure is documented below.
	ExternalAccesses ComponentInstanceExternalAccessArrayOutput `pulumi:"externalAccesses"`
	// Specifies the resource specifications, which can be obtained by using data source or
	// the customize resource specifications.
	// The format of customize resource specifications is **CUSTOM-xxG:xxC-xxC:xxGi-xxGi**.
	// The meaning of each part is:
	// + **xxG**: storage capacity allocated to a component instance (reserved field). You can set it to a fixed number.
	// + **xxC-xxC**: the maximum and minimum number of CPU cores allocated to a component instance.
	// + **xxGi-xxGi**: the maximum and minimum memory allocated to a component instance.
	FlavorId pulumi.StringOutput `pulumi:"flavorId"`
	// Specifies the name of a configuration item or secret.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the deployed resources.
	// The object structure is documented below.
	ReferResources ComponentInstanceReferResourceArrayOutput `pulumi:"referResources"`
	// Specifies the region in which to create (deploy) the ServiceStage (component) instance.
	// If omitted, the provider-level region will be used. Changing this will create a new instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the number of instance replicas.
	// Changing this will create a new instance.
	Replica pulumi.IntOutput `pulumi:"replica"`
	// The instance status, which supports:
	// + **FAILED**
	// + **RUNNING**
	// + **DOWN**
	// + **STOPPED**
	// + **UNKNOWN**
	// + **PARTIALLY_FAILED**
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the version number.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewComponentInstance registers a new resource with the given unique name, arguments, and options.
func NewComponentInstance(ctx *pulumi.Context,
	name string, args *ComponentInstanceArgs, opts ...pulumi.ResourceOption) (*ComponentInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ComponentId == nil {
		return nil, errors.New("invalid value for required argument 'ComponentId'")
	}
	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.FlavorId == nil {
		return nil, errors.New("invalid value for required argument 'FlavorId'")
	}
	if args.ReferResources == nil {
		return nil, errors.New("invalid value for required argument 'ReferResources'")
	}
	if args.Replica == nil {
		return nil, errors.New("invalid value for required argument 'Replica'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource ComponentInstance
	err := ctx.RegisterResource("huaweicloud:ServiceStage/componentInstance:ComponentInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComponentInstance gets an existing ComponentInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComponentInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComponentInstanceState, opts ...pulumi.ResourceOption) (*ComponentInstance, error) {
	var resource ComponentInstance
	err := ctx.ReadResource("huaweicloud:ServiceStage/componentInstance:ComponentInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComponentInstance resources.
type componentInstanceState struct {
	// Specifies the application ID to which the instance belongs.
	// Changing this will create a new instance.
	ApplicationId *string `pulumi:"applicationId"`
	// Specifies the component artifact settings.
	// The key indicates the component name. In the Docker container scenario, the key indicates the container name.
	// The object structure is documented below.
	Artifacts []ComponentInstanceArtifact `pulumi:"artifacts"`
	// Specifies the component ID to build (deploy).
	// Changing this will create a new instance.
	ComponentId *string `pulumi:"componentId"`
	// Specifies the configuration parameters, such as environment variables,
	// deployment configurations, and O&M monitoring.
	// The object structure is documented below.
	Configuration *ComponentInstanceConfiguration `pulumi:"configuration"`
	// Specifies the description of the instance.
	// The description can contian a maximum of `128` characters.
	Description *string `pulumi:"description"`
	// Specifies the environment ID in which the component to build (deployed).
	// Changing this will create a new instance.
	EnvironmentId *string `pulumi:"environmentId"`
	// Specifies the configuration of the external network access.
	// The object structure is documented below.
	ExternalAccesses []ComponentInstanceExternalAccess `pulumi:"externalAccesses"`
	// Specifies the resource specifications, which can be obtained by using data source or
	// the customize resource specifications.
	// The format of customize resource specifications is **CUSTOM-xxG:xxC-xxC:xxGi-xxGi**.
	// The meaning of each part is:
	// + **xxG**: storage capacity allocated to a component instance (reserved field). You can set it to a fixed number.
	// + **xxC-xxC**: the maximum and minimum number of CPU cores allocated to a component instance.
	// + **xxGi-xxGi**: the maximum and minimum memory allocated to a component instance.
	FlavorId *string `pulumi:"flavorId"`
	// Specifies the name of a configuration item or secret.
	Name *string `pulumi:"name"`
	// Specifies the deployed resources.
	// The object structure is documented below.
	ReferResources []ComponentInstanceReferResource `pulumi:"referResources"`
	// Specifies the region in which to create (deploy) the ServiceStage (component) instance.
	// If omitted, the provider-level region will be used. Changing this will create a new instance.
	Region *string `pulumi:"region"`
	// Specifies the number of instance replicas.
	// Changing this will create a new instance.
	Replica *int `pulumi:"replica"`
	// The instance status, which supports:
	// + **FAILED**
	// + **RUNNING**
	// + **DOWN**
	// + **STOPPED**
	// + **UNKNOWN**
	// + **PARTIALLY_FAILED**
	Status *string `pulumi:"status"`
	// Specifies the version number.
	Version *string `pulumi:"version"`
}

type ComponentInstanceState struct {
	// Specifies the application ID to which the instance belongs.
	// Changing this will create a new instance.
	ApplicationId pulumi.StringPtrInput
	// Specifies the component artifact settings.
	// The key indicates the component name. In the Docker container scenario, the key indicates the container name.
	// The object structure is documented below.
	Artifacts ComponentInstanceArtifactArrayInput
	// Specifies the component ID to build (deploy).
	// Changing this will create a new instance.
	ComponentId pulumi.StringPtrInput
	// Specifies the configuration parameters, such as environment variables,
	// deployment configurations, and O&M monitoring.
	// The object structure is documented below.
	Configuration ComponentInstanceConfigurationPtrInput
	// Specifies the description of the instance.
	// The description can contian a maximum of `128` characters.
	Description pulumi.StringPtrInput
	// Specifies the environment ID in which the component to build (deployed).
	// Changing this will create a new instance.
	EnvironmentId pulumi.StringPtrInput
	// Specifies the configuration of the external network access.
	// The object structure is documented below.
	ExternalAccesses ComponentInstanceExternalAccessArrayInput
	// Specifies the resource specifications, which can be obtained by using data source or
	// the customize resource specifications.
	// The format of customize resource specifications is **CUSTOM-xxG:xxC-xxC:xxGi-xxGi**.
	// The meaning of each part is:
	// + **xxG**: storage capacity allocated to a component instance (reserved field). You can set it to a fixed number.
	// + **xxC-xxC**: the maximum and minimum number of CPU cores allocated to a component instance.
	// + **xxGi-xxGi**: the maximum and minimum memory allocated to a component instance.
	FlavorId pulumi.StringPtrInput
	// Specifies the name of a configuration item or secret.
	Name pulumi.StringPtrInput
	// Specifies the deployed resources.
	// The object structure is documented below.
	ReferResources ComponentInstanceReferResourceArrayInput
	// Specifies the region in which to create (deploy) the ServiceStage (component) instance.
	// If omitted, the provider-level region will be used. Changing this will create a new instance.
	Region pulumi.StringPtrInput
	// Specifies the number of instance replicas.
	// Changing this will create a new instance.
	Replica pulumi.IntPtrInput
	// The instance status, which supports:
	// + **FAILED**
	// + **RUNNING**
	// + **DOWN**
	// + **STOPPED**
	// + **UNKNOWN**
	// + **PARTIALLY_FAILED**
	Status pulumi.StringPtrInput
	// Specifies the version number.
	Version pulumi.StringPtrInput
}

func (ComponentInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*componentInstanceState)(nil)).Elem()
}

type componentInstanceArgs struct {
	// Specifies the application ID to which the instance belongs.
	// Changing this will create a new instance.
	ApplicationId string `pulumi:"applicationId"`
	// Specifies the component artifact settings.
	// The key indicates the component name. In the Docker container scenario, the key indicates the container name.
	// The object structure is documented below.
	Artifacts []ComponentInstanceArtifact `pulumi:"artifacts"`
	// Specifies the component ID to build (deploy).
	// Changing this will create a new instance.
	ComponentId string `pulumi:"componentId"`
	// Specifies the configuration parameters, such as environment variables,
	// deployment configurations, and O&M monitoring.
	// The object structure is documented below.
	Configuration *ComponentInstanceConfiguration `pulumi:"configuration"`
	// Specifies the description of the instance.
	// The description can contian a maximum of `128` characters.
	Description *string `pulumi:"description"`
	// Specifies the environment ID in which the component to build (deployed).
	// Changing this will create a new instance.
	EnvironmentId string `pulumi:"environmentId"`
	// Specifies the configuration of the external network access.
	// The object structure is documented below.
	ExternalAccesses []ComponentInstanceExternalAccess `pulumi:"externalAccesses"`
	// Specifies the resource specifications, which can be obtained by using data source or
	// the customize resource specifications.
	// The format of customize resource specifications is **CUSTOM-xxG:xxC-xxC:xxGi-xxGi**.
	// The meaning of each part is:
	// + **xxG**: storage capacity allocated to a component instance (reserved field). You can set it to a fixed number.
	// + **xxC-xxC**: the maximum and minimum number of CPU cores allocated to a component instance.
	// + **xxGi-xxGi**: the maximum and minimum memory allocated to a component instance.
	FlavorId string `pulumi:"flavorId"`
	// Specifies the name of a configuration item or secret.
	Name *string `pulumi:"name"`
	// Specifies the deployed resources.
	// The object structure is documented below.
	ReferResources []ComponentInstanceReferResource `pulumi:"referResources"`
	// Specifies the region in which to create (deploy) the ServiceStage (component) instance.
	// If omitted, the provider-level region will be used. Changing this will create a new instance.
	Region *string `pulumi:"region"`
	// Specifies the number of instance replicas.
	// Changing this will create a new instance.
	Replica int `pulumi:"replica"`
	// Specifies the version number.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a ComponentInstance resource.
type ComponentInstanceArgs struct {
	// Specifies the application ID to which the instance belongs.
	// Changing this will create a new instance.
	ApplicationId pulumi.StringInput
	// Specifies the component artifact settings.
	// The key indicates the component name. In the Docker container scenario, the key indicates the container name.
	// The object structure is documented below.
	Artifacts ComponentInstanceArtifactArrayInput
	// Specifies the component ID to build (deploy).
	// Changing this will create a new instance.
	ComponentId pulumi.StringInput
	// Specifies the configuration parameters, such as environment variables,
	// deployment configurations, and O&M monitoring.
	// The object structure is documented below.
	Configuration ComponentInstanceConfigurationPtrInput
	// Specifies the description of the instance.
	// The description can contian a maximum of `128` characters.
	Description pulumi.StringPtrInput
	// Specifies the environment ID in which the component to build (deployed).
	// Changing this will create a new instance.
	EnvironmentId pulumi.StringInput
	// Specifies the configuration of the external network access.
	// The object structure is documented below.
	ExternalAccesses ComponentInstanceExternalAccessArrayInput
	// Specifies the resource specifications, which can be obtained by using data source or
	// the customize resource specifications.
	// The format of customize resource specifications is **CUSTOM-xxG:xxC-xxC:xxGi-xxGi**.
	// The meaning of each part is:
	// + **xxG**: storage capacity allocated to a component instance (reserved field). You can set it to a fixed number.
	// + **xxC-xxC**: the maximum and minimum number of CPU cores allocated to a component instance.
	// + **xxGi-xxGi**: the maximum and minimum memory allocated to a component instance.
	FlavorId pulumi.StringInput
	// Specifies the name of a configuration item or secret.
	Name pulumi.StringPtrInput
	// Specifies the deployed resources.
	// The object structure is documented below.
	ReferResources ComponentInstanceReferResourceArrayInput
	// Specifies the region in which to create (deploy) the ServiceStage (component) instance.
	// If omitted, the provider-level region will be used. Changing this will create a new instance.
	Region pulumi.StringPtrInput
	// Specifies the number of instance replicas.
	// Changing this will create a new instance.
	Replica pulumi.IntInput
	// Specifies the version number.
	Version pulumi.StringInput
}

func (ComponentInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*componentInstanceArgs)(nil)).Elem()
}

type ComponentInstanceInput interface {
	pulumi.Input

	ToComponentInstanceOutput() ComponentInstanceOutput
	ToComponentInstanceOutputWithContext(ctx context.Context) ComponentInstanceOutput
}

func (*ComponentInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstance)(nil)).Elem()
}

func (i *ComponentInstance) ToComponentInstanceOutput() ComponentInstanceOutput {
	return i.ToComponentInstanceOutputWithContext(context.Background())
}

func (i *ComponentInstance) ToComponentInstanceOutputWithContext(ctx context.Context) ComponentInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceOutput)
}

// ComponentInstanceArrayInput is an input type that accepts ComponentInstanceArray and ComponentInstanceArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceArrayInput` via:
//
//	ComponentInstanceArray{ ComponentInstanceArgs{...} }
type ComponentInstanceArrayInput interface {
	pulumi.Input

	ToComponentInstanceArrayOutput() ComponentInstanceArrayOutput
	ToComponentInstanceArrayOutputWithContext(context.Context) ComponentInstanceArrayOutput
}

type ComponentInstanceArray []ComponentInstanceInput

func (ComponentInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComponentInstance)(nil)).Elem()
}

func (i ComponentInstanceArray) ToComponentInstanceArrayOutput() ComponentInstanceArrayOutput {
	return i.ToComponentInstanceArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceArray) ToComponentInstanceArrayOutputWithContext(ctx context.Context) ComponentInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceArrayOutput)
}

// ComponentInstanceMapInput is an input type that accepts ComponentInstanceMap and ComponentInstanceMapOutput values.
// You can construct a concrete instance of `ComponentInstanceMapInput` via:
//
//	ComponentInstanceMap{ "key": ComponentInstanceArgs{...} }
type ComponentInstanceMapInput interface {
	pulumi.Input

	ToComponentInstanceMapOutput() ComponentInstanceMapOutput
	ToComponentInstanceMapOutputWithContext(context.Context) ComponentInstanceMapOutput
}

type ComponentInstanceMap map[string]ComponentInstanceInput

func (ComponentInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComponentInstance)(nil)).Elem()
}

func (i ComponentInstanceMap) ToComponentInstanceMapOutput() ComponentInstanceMapOutput {
	return i.ToComponentInstanceMapOutputWithContext(context.Background())
}

func (i ComponentInstanceMap) ToComponentInstanceMapOutputWithContext(ctx context.Context) ComponentInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceMapOutput)
}

type ComponentInstanceOutput struct{ *pulumi.OutputState }

func (ComponentInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstance)(nil)).Elem()
}

func (o ComponentInstanceOutput) ToComponentInstanceOutput() ComponentInstanceOutput {
	return o
}

func (o ComponentInstanceOutput) ToComponentInstanceOutputWithContext(ctx context.Context) ComponentInstanceOutput {
	return o
}

// Specifies the application ID to which the instance belongs.
// Changing this will create a new instance.
func (o ComponentInstanceOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Specifies the component artifact settings.
// The key indicates the component name. In the Docker container scenario, the key indicates the container name.
// The object structure is documented below.
func (o ComponentInstanceOutput) Artifacts() ComponentInstanceArtifactArrayOutput {
	return o.ApplyT(func(v *ComponentInstance) ComponentInstanceArtifactArrayOutput { return v.Artifacts }).(ComponentInstanceArtifactArrayOutput)
}

// Specifies the component ID to build (deploy).
// Changing this will create a new instance.
func (o ComponentInstanceOutput) ComponentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.ComponentId }).(pulumi.StringOutput)
}

// Specifies the configuration parameters, such as environment variables,
// deployment configurations, and O&M monitoring.
// The object structure is documented below.
func (o ComponentInstanceOutput) Configuration() ComponentInstanceConfigurationOutput {
	return o.ApplyT(func(v *ComponentInstance) ComponentInstanceConfigurationOutput { return v.Configuration }).(ComponentInstanceConfigurationOutput)
}

// Specifies the description of the instance.
// The description can contian a maximum of `128` characters.
func (o ComponentInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the environment ID in which the component to build (deployed).
// Changing this will create a new instance.
func (o ComponentInstanceOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

// Specifies the configuration of the external network access.
// The object structure is documented below.
func (o ComponentInstanceOutput) ExternalAccesses() ComponentInstanceExternalAccessArrayOutput {
	return o.ApplyT(func(v *ComponentInstance) ComponentInstanceExternalAccessArrayOutput { return v.ExternalAccesses }).(ComponentInstanceExternalAccessArrayOutput)
}

// Specifies the resource specifications, which can be obtained by using data source or
// the customize resource specifications.
// The format of customize resource specifications is **CUSTOM-xxG:xxC-xxC:xxGi-xxGi**.
// The meaning of each part is:
// + **xxG**: storage capacity allocated to a component instance (reserved field). You can set it to a fixed number.
// + **xxC-xxC**: the maximum and minimum number of CPU cores allocated to a component instance.
// + **xxGi-xxGi**: the maximum and minimum memory allocated to a component instance.
func (o ComponentInstanceOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

// Specifies the name of a configuration item or secret.
func (o ComponentInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the deployed resources.
// The object structure is documented below.
func (o ComponentInstanceOutput) ReferResources() ComponentInstanceReferResourceArrayOutput {
	return o.ApplyT(func(v *ComponentInstance) ComponentInstanceReferResourceArrayOutput { return v.ReferResources }).(ComponentInstanceReferResourceArrayOutput)
}

// Specifies the region in which to create (deploy) the ServiceStage (component) instance.
// If omitted, the provider-level region will be used. Changing this will create a new instance.
func (o ComponentInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the number of instance replicas.
// Changing this will create a new instance.
func (o ComponentInstanceOutput) Replica() pulumi.IntOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.IntOutput { return v.Replica }).(pulumi.IntOutput)
}

// The instance status, which supports:
// + **FAILED**
// + **RUNNING**
// + **DOWN**
// + **STOPPED**
// + **UNKNOWN**
// + **PARTIALLY_FAILED**
func (o ComponentInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the version number.
func (o ComponentInstanceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ComponentInstance) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type ComponentInstanceArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComponentInstance)(nil)).Elem()
}

func (o ComponentInstanceArrayOutput) ToComponentInstanceArrayOutput() ComponentInstanceArrayOutput {
	return o
}

func (o ComponentInstanceArrayOutput) ToComponentInstanceArrayOutputWithContext(ctx context.Context) ComponentInstanceArrayOutput {
	return o
}

func (o ComponentInstanceArrayOutput) Index(i pulumi.IntInput) ComponentInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComponentInstance {
		return vs[0].([]*ComponentInstance)[vs[1].(int)]
	}).(ComponentInstanceOutput)
}

type ComponentInstanceMapOutput struct{ *pulumi.OutputState }

func (ComponentInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComponentInstance)(nil)).Elem()
}

func (o ComponentInstanceMapOutput) ToComponentInstanceMapOutput() ComponentInstanceMapOutput {
	return o
}

func (o ComponentInstanceMapOutput) ToComponentInstanceMapOutputWithContext(ctx context.Context) ComponentInstanceMapOutput {
	return o
}

func (o ComponentInstanceMapOutput) MapIndex(k pulumi.StringInput) ComponentInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComponentInstance {
		return vs[0].(map[string]*ComponentInstance)[vs[1].(string)]
	}).(ComponentInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceInput)(nil)).Elem(), &ComponentInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceArrayInput)(nil)).Elem(), ComponentInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceMapInput)(nil)).Elem(), ComponentInstanceMap{})
	pulumi.RegisterOutputType(ComponentInstanceOutput{})
	pulumi.RegisterOutputType(ComponentInstanceArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceMapOutput{})
}
