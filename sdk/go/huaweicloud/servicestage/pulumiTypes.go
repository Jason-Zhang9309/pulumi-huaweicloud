// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicestage

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationEnvironment struct {
	// Specifies the environment ID to which the variables belongs.
	Id string `pulumi:"id"`
	// Specifies the list of environment variables.
	// The object structure is documented below.
	Variables []ApplicationEnvironmentVariable `pulumi:"variables"`
}

// ApplicationEnvironmentInput is an input type that accepts ApplicationEnvironmentArgs and ApplicationEnvironmentOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentInput` via:
//
//	ApplicationEnvironmentArgs{...}
type ApplicationEnvironmentInput interface {
	pulumi.Input

	ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput
	ToApplicationEnvironmentOutputWithContext(context.Context) ApplicationEnvironmentOutput
}

type ApplicationEnvironmentArgs struct {
	// Specifies the environment ID to which the variables belongs.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the list of environment variables.
	// The object structure is documented below.
	Variables ApplicationEnvironmentVariableArrayInput `pulumi:"variables"`
}

func (ApplicationEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return i.ToApplicationEnvironmentOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArgs) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentOutput)
}

// ApplicationEnvironmentArrayInput is an input type that accepts ApplicationEnvironmentArray and ApplicationEnvironmentArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentArrayInput` via:
//
//	ApplicationEnvironmentArray{ ApplicationEnvironmentArgs{...} }
type ApplicationEnvironmentArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput
	ToApplicationEnvironmentArrayOutputWithContext(context.Context) ApplicationEnvironmentArrayOutput
}

type ApplicationEnvironmentArray []ApplicationEnvironmentInput

func (ApplicationEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return i.ToApplicationEnvironmentArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentArray) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentArrayOutput)
}

type ApplicationEnvironmentOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutput() ApplicationEnvironmentOutput {
	return o
}

func (o ApplicationEnvironmentOutput) ToApplicationEnvironmentOutputWithContext(ctx context.Context) ApplicationEnvironmentOutput {
	return o
}

// Specifies the environment ID to which the variables belongs.
func (o ApplicationEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the list of environment variables.
// The object structure is documented below.
func (o ApplicationEnvironmentOutput) Variables() ApplicationEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v ApplicationEnvironment) []ApplicationEnvironmentVariable { return v.Variables }).(ApplicationEnvironmentVariableArrayOutput)
}

type ApplicationEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironment)(nil)).Elem()
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutput() ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) ToApplicationEnvironmentArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentArrayOutput {
	return o
}

func (o ApplicationEnvironmentArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironment {
		return vs[0].([]ApplicationEnvironment)[vs[1].(int)]
	}).(ApplicationEnvironmentOutput)
}

type ApplicationEnvironmentVariable struct {
	// Specifies the variable name. The name can contain `1` to `64` characters, only letters,
	// digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
	Name string `pulumi:"name"`
	// Specifies the variable value. The value can contian a maximum of `2,048` characters.
	Value string `pulumi:"value"`
}

// ApplicationEnvironmentVariableInput is an input type that accepts ApplicationEnvironmentVariableArgs and ApplicationEnvironmentVariableOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableInput` via:
//
//	ApplicationEnvironmentVariableArgs{...}
type ApplicationEnvironmentVariableInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableOutput() ApplicationEnvironmentVariableOutput
	ToApplicationEnvironmentVariableOutputWithContext(context.Context) ApplicationEnvironmentVariableOutput
}

type ApplicationEnvironmentVariableArgs struct {
	// Specifies the variable name. The name can contain `1` to `64` characters, only letters,
	// digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the variable value. The value can contian a maximum of `2,048` characters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApplicationEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariable)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableArgs) ToApplicationEnvironmentVariableOutput() ApplicationEnvironmentVariableOutput {
	return i.ToApplicationEnvironmentVariableOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableArgs) ToApplicationEnvironmentVariableOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableOutput)
}

// ApplicationEnvironmentVariableArrayInput is an input type that accepts ApplicationEnvironmentVariableArray and ApplicationEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ApplicationEnvironmentVariableArrayInput` via:
//
//	ApplicationEnvironmentVariableArray{ ApplicationEnvironmentVariableArgs{...} }
type ApplicationEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToApplicationEnvironmentVariableArrayOutput() ApplicationEnvironmentVariableArrayOutput
	ToApplicationEnvironmentVariableArrayOutputWithContext(context.Context) ApplicationEnvironmentVariableArrayOutput
}

type ApplicationEnvironmentVariableArray []ApplicationEnvironmentVariableInput

func (ApplicationEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariable)(nil)).Elem()
}

func (i ApplicationEnvironmentVariableArray) ToApplicationEnvironmentVariableArrayOutput() ApplicationEnvironmentVariableArrayOutput {
	return i.ToApplicationEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ApplicationEnvironmentVariableArray) ToApplicationEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationEnvironmentVariableArrayOutput)
}

type ApplicationEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationEnvironmentVariable)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableOutput) ToApplicationEnvironmentVariableOutput() ApplicationEnvironmentVariableOutput {
	return o
}

func (o ApplicationEnvironmentVariableOutput) ToApplicationEnvironmentVariableOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableOutput {
	return o
}

// Specifies the variable name. The name can contain `1` to `64` characters, only letters,
// digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
func (o ApplicationEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the variable value. The value can contian a maximum of `2,048` characters.
func (o ApplicationEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ApplicationEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ApplicationEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationEnvironmentVariable)(nil)).Elem()
}

func (o ApplicationEnvironmentVariableArrayOutput) ToApplicationEnvironmentVariableArrayOutput() ApplicationEnvironmentVariableArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableArrayOutput) ToApplicationEnvironmentVariableArrayOutputWithContext(ctx context.Context) ApplicationEnvironmentVariableArrayOutput {
	return o
}

func (o ApplicationEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ApplicationEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationEnvironmentVariable {
		return vs[0].([]ApplicationEnvironmentVariable)[vs[1].(int)]
	}).(ApplicationEnvironmentVariableOutput)
}

type ComponentBuilder struct {
	// Specifies the cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Specifies the build command. If omitted, the default command will be used.
	// + About the  default command or script: build.sh in the root directory will be preferentially executed.
	//   If build.sh does not exist, the code will be compiled using the common method of the selected language,
	//   for example, mvn clean package for Java.
	// + About the custom command: Commands will be customized using the selected language.
	//   Alternatively, the default command or script will be used after build.sh is modified.
	Cmd *string `pulumi:"cmd"`
	// Specifies the filter labels for CCE nodes.
	NodeLabel map[string]string `pulumi:"nodeLabel"`
	// Specifies the organization name.
	// The organization is usually **domain name**. You can find out in the organization management of SWR.
	Organization string `pulumi:"organization"`
}

// ComponentBuilderInput is an input type that accepts ComponentBuilderArgs and ComponentBuilderOutput values.
// You can construct a concrete instance of `ComponentBuilderInput` via:
//
//	ComponentBuilderArgs{...}
type ComponentBuilderInput interface {
	pulumi.Input

	ToComponentBuilderOutput() ComponentBuilderOutput
	ToComponentBuilderOutputWithContext(context.Context) ComponentBuilderOutput
}

type ComponentBuilderArgs struct {
	// Specifies the cluster ID.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Specifies the build command. If omitted, the default command will be used.
	// + About the  default command or script: build.sh in the root directory will be preferentially executed.
	//   If build.sh does not exist, the code will be compiled using the common method of the selected language,
	//   for example, mvn clean package for Java.
	// + About the custom command: Commands will be customized using the selected language.
	//   Alternatively, the default command or script will be used after build.sh is modified.
	Cmd pulumi.StringPtrInput `pulumi:"cmd"`
	// Specifies the filter labels for CCE nodes.
	NodeLabel pulumi.StringMapInput `pulumi:"nodeLabel"`
	// Specifies the organization name.
	// The organization is usually **domain name**. You can find out in the organization management of SWR.
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (ComponentBuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentBuilder)(nil)).Elem()
}

func (i ComponentBuilderArgs) ToComponentBuilderOutput() ComponentBuilderOutput {
	return i.ToComponentBuilderOutputWithContext(context.Background())
}

func (i ComponentBuilderArgs) ToComponentBuilderOutputWithContext(ctx context.Context) ComponentBuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentBuilderOutput)
}

func (i ComponentBuilderArgs) ToComponentBuilderPtrOutput() ComponentBuilderPtrOutput {
	return i.ToComponentBuilderPtrOutputWithContext(context.Background())
}

func (i ComponentBuilderArgs) ToComponentBuilderPtrOutputWithContext(ctx context.Context) ComponentBuilderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentBuilderOutput).ToComponentBuilderPtrOutputWithContext(ctx)
}

// ComponentBuilderPtrInput is an input type that accepts ComponentBuilderArgs, ComponentBuilderPtr and ComponentBuilderPtrOutput values.
// You can construct a concrete instance of `ComponentBuilderPtrInput` via:
//
//	        ComponentBuilderArgs{...}
//
//	or:
//
//	        nil
type ComponentBuilderPtrInput interface {
	pulumi.Input

	ToComponentBuilderPtrOutput() ComponentBuilderPtrOutput
	ToComponentBuilderPtrOutputWithContext(context.Context) ComponentBuilderPtrOutput
}

type componentBuilderPtrType ComponentBuilderArgs

func ComponentBuilderPtr(v *ComponentBuilderArgs) ComponentBuilderPtrInput {
	return (*componentBuilderPtrType)(v)
}

func (*componentBuilderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentBuilder)(nil)).Elem()
}

func (i *componentBuilderPtrType) ToComponentBuilderPtrOutput() ComponentBuilderPtrOutput {
	return i.ToComponentBuilderPtrOutputWithContext(context.Background())
}

func (i *componentBuilderPtrType) ToComponentBuilderPtrOutputWithContext(ctx context.Context) ComponentBuilderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentBuilderPtrOutput)
}

type ComponentBuilderOutput struct{ *pulumi.OutputState }

func (ComponentBuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentBuilder)(nil)).Elem()
}

func (o ComponentBuilderOutput) ToComponentBuilderOutput() ComponentBuilderOutput {
	return o
}

func (o ComponentBuilderOutput) ToComponentBuilderOutputWithContext(ctx context.Context) ComponentBuilderOutput {
	return o
}

func (o ComponentBuilderOutput) ToComponentBuilderPtrOutput() ComponentBuilderPtrOutput {
	return o.ToComponentBuilderPtrOutputWithContext(context.Background())
}

func (o ComponentBuilderOutput) ToComponentBuilderPtrOutputWithContext(ctx context.Context) ComponentBuilderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentBuilder) *ComponentBuilder {
		return &v
	}).(ComponentBuilderPtrOutput)
}

// Specifies the cluster ID.
func (o ComponentBuilderOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentBuilder) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Specifies the build command. If omitted, the default command will be used.
//   - About the  default command or script: build.sh in the root directory will be preferentially executed.
//     If build.sh does not exist, the code will be compiled using the common method of the selected language,
//     for example, mvn clean package for Java.
//   - About the custom command: Commands will be customized using the selected language.
//     Alternatively, the default command or script will be used after build.sh is modified.
func (o ComponentBuilderOutput) Cmd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentBuilder) *string { return v.Cmd }).(pulumi.StringPtrOutput)
}

// Specifies the filter labels for CCE nodes.
func (o ComponentBuilderOutput) NodeLabel() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComponentBuilder) map[string]string { return v.NodeLabel }).(pulumi.StringMapOutput)
}

// Specifies the organization name.
// The organization is usually **domain name**. You can find out in the organization management of SWR.
func (o ComponentBuilderOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentBuilder) string { return v.Organization }).(pulumi.StringOutput)
}

type ComponentBuilderPtrOutput struct{ *pulumi.OutputState }

func (ComponentBuilderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentBuilder)(nil)).Elem()
}

func (o ComponentBuilderPtrOutput) ToComponentBuilderPtrOutput() ComponentBuilderPtrOutput {
	return o
}

func (o ComponentBuilderPtrOutput) ToComponentBuilderPtrOutputWithContext(ctx context.Context) ComponentBuilderPtrOutput {
	return o
}

func (o ComponentBuilderPtrOutput) Elem() ComponentBuilderOutput {
	return o.ApplyT(func(v *ComponentBuilder) ComponentBuilder {
		if v != nil {
			return *v
		}
		var ret ComponentBuilder
		return ret
	}).(ComponentBuilderOutput)
}

// Specifies the cluster ID.
func (o ComponentBuilderPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentBuilder) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// Specifies the build command. If omitted, the default command will be used.
//   - About the  default command or script: build.sh in the root directory will be preferentially executed.
//     If build.sh does not exist, the code will be compiled using the common method of the selected language,
//     for example, mvn clean package for Java.
//   - About the custom command: Commands will be customized using the selected language.
//     Alternatively, the default command or script will be used after build.sh is modified.
func (o ComponentBuilderPtrOutput) Cmd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentBuilder) *string {
		if v == nil {
			return nil
		}
		return v.Cmd
	}).(pulumi.StringPtrOutput)
}

// Specifies the filter labels for CCE nodes.
func (o ComponentBuilderPtrOutput) NodeLabel() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComponentBuilder) map[string]string {
		if v == nil {
			return nil
		}
		return v.NodeLabel
	}).(pulumi.StringMapOutput)
}

// Specifies the organization name.
// The organization is usually **domain name**. You can find out in the organization management of SWR.
func (o ComponentBuilderPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentBuilder) *string {
		if v == nil {
			return nil
		}
		return &v.Organization
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceArtifact struct {
	// Specifies the authentication mode.
	// The valid values are **iam** and **none**. Defaults to **iam**.
	AuthType *string `pulumi:"authType"`
	// Specifies the name of a configuration item or secret.
	Name string `pulumi:"name"`
	// Specifies the properties of the OBS object.
	// This parameter is available only `storage` is **obs**.
	// The object structure is documented below.
	Properties *ComponentInstanceArtifactProperties `pulumi:"properties"`
	// Specifies the data storage configuration.
	// The object structure is documented below.
	Storage string `pulumi:"storage"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
	// Specifies the software package or image address.
	// For a component deployed on a VM, this parameter is the software package address.
	// For a component deployed based on a container, this parameter is the image address or component name:v${index}.
	// The latter indicates that the component source code or the image automatically built using the software package
	// will be used.
	Url string `pulumi:"url"`
	// Specifies the version number.
	Version *string `pulumi:"version"`
}

// ComponentInstanceArtifactInput is an input type that accepts ComponentInstanceArtifactArgs and ComponentInstanceArtifactOutput values.
// You can construct a concrete instance of `ComponentInstanceArtifactInput` via:
//
//	ComponentInstanceArtifactArgs{...}
type ComponentInstanceArtifactInput interface {
	pulumi.Input

	ToComponentInstanceArtifactOutput() ComponentInstanceArtifactOutput
	ToComponentInstanceArtifactOutputWithContext(context.Context) ComponentInstanceArtifactOutput
}

type ComponentInstanceArtifactArgs struct {
	// Specifies the authentication mode.
	// The valid values are **iam** and **none**. Defaults to **iam**.
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// Specifies the name of a configuration item or secret.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the properties of the OBS object.
	// This parameter is available only `storage` is **obs**.
	// The object structure is documented below.
	Properties ComponentInstanceArtifactPropertiesPtrInput `pulumi:"properties"`
	// Specifies the data storage configuration.
	// The object structure is documented below.
	Storage pulumi.StringInput `pulumi:"storage"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the software package or image address.
	// For a component deployed on a VM, this parameter is the software package address.
	// For a component deployed based on a container, this parameter is the image address or component name:v${index}.
	// The latter indicates that the component source code or the image automatically built using the software package
	// will be used.
	Url pulumi.StringInput `pulumi:"url"`
	// Specifies the version number.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ComponentInstanceArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceArtifact)(nil)).Elem()
}

func (i ComponentInstanceArtifactArgs) ToComponentInstanceArtifactOutput() ComponentInstanceArtifactOutput {
	return i.ToComponentInstanceArtifactOutputWithContext(context.Background())
}

func (i ComponentInstanceArtifactArgs) ToComponentInstanceArtifactOutputWithContext(ctx context.Context) ComponentInstanceArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceArtifactOutput)
}

// ComponentInstanceArtifactArrayInput is an input type that accepts ComponentInstanceArtifactArray and ComponentInstanceArtifactArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceArtifactArrayInput` via:
//
//	ComponentInstanceArtifactArray{ ComponentInstanceArtifactArgs{...} }
type ComponentInstanceArtifactArrayInput interface {
	pulumi.Input

	ToComponentInstanceArtifactArrayOutput() ComponentInstanceArtifactArrayOutput
	ToComponentInstanceArtifactArrayOutputWithContext(context.Context) ComponentInstanceArtifactArrayOutput
}

type ComponentInstanceArtifactArray []ComponentInstanceArtifactInput

func (ComponentInstanceArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceArtifact)(nil)).Elem()
}

func (i ComponentInstanceArtifactArray) ToComponentInstanceArtifactArrayOutput() ComponentInstanceArtifactArrayOutput {
	return i.ToComponentInstanceArtifactArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceArtifactArray) ToComponentInstanceArtifactArrayOutputWithContext(ctx context.Context) ComponentInstanceArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceArtifactArrayOutput)
}

type ComponentInstanceArtifactOutput struct{ *pulumi.OutputState }

func (ComponentInstanceArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceArtifact)(nil)).Elem()
}

func (o ComponentInstanceArtifactOutput) ToComponentInstanceArtifactOutput() ComponentInstanceArtifactOutput {
	return o
}

func (o ComponentInstanceArtifactOutput) ToComponentInstanceArtifactOutputWithContext(ctx context.Context) ComponentInstanceArtifactOutput {
	return o
}

// Specifies the authentication mode.
// The valid values are **iam** and **none**. Defaults to **iam**.
func (o ComponentInstanceArtifactOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Specifies the name of a configuration item or secret.
func (o ComponentInstanceArtifactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the properties of the OBS object.
// This parameter is available only `storage` is **obs**.
// The object structure is documented below.
func (o ComponentInstanceArtifactOutput) Properties() ComponentInstanceArtifactPropertiesPtrOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) *ComponentInstanceArtifactProperties { return v.Properties }).(ComponentInstanceArtifactPropertiesPtrOutput)
}

// Specifies the data storage configuration.
// The object structure is documented below.
func (o ComponentInstanceArtifactOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) string { return v.Storage }).(pulumi.StringOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceArtifactOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the software package or image address.
// For a component deployed on a VM, this parameter is the software package address.
// For a component deployed based on a container, this parameter is the image address or component name:v${index}.
// The latter indicates that the component source code or the image automatically built using the software package
// will be used.
func (o ComponentInstanceArtifactOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) string { return v.Url }).(pulumi.StringOutput)
}

// Specifies the version number.
func (o ComponentInstanceArtifactOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceArtifact) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ComponentInstanceArtifactArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceArtifact)(nil)).Elem()
}

func (o ComponentInstanceArtifactArrayOutput) ToComponentInstanceArtifactArrayOutput() ComponentInstanceArtifactArrayOutput {
	return o
}

func (o ComponentInstanceArtifactArrayOutput) ToComponentInstanceArtifactArrayOutputWithContext(ctx context.Context) ComponentInstanceArtifactArrayOutput {
	return o
}

func (o ComponentInstanceArtifactArrayOutput) Index(i pulumi.IntInput) ComponentInstanceArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceArtifact {
		return vs[0].([]ComponentInstanceArtifact)[vs[1].(int)]
	}).(ComponentInstanceArtifactOutput)
}

type ComponentInstanceArtifactProperties struct {
	// Specifies the OBS bucket name.
	Bucket *string `pulumi:"bucket"`
	// Specifies the OBS bucket endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Specifies the key name of the OBS object.
	Key *string `pulumi:"key"`
}

// ComponentInstanceArtifactPropertiesInput is an input type that accepts ComponentInstanceArtifactPropertiesArgs and ComponentInstanceArtifactPropertiesOutput values.
// You can construct a concrete instance of `ComponentInstanceArtifactPropertiesInput` via:
//
//	ComponentInstanceArtifactPropertiesArgs{...}
type ComponentInstanceArtifactPropertiesInput interface {
	pulumi.Input

	ToComponentInstanceArtifactPropertiesOutput() ComponentInstanceArtifactPropertiesOutput
	ToComponentInstanceArtifactPropertiesOutputWithContext(context.Context) ComponentInstanceArtifactPropertiesOutput
}

type ComponentInstanceArtifactPropertiesArgs struct {
	// Specifies the OBS bucket name.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Specifies the OBS bucket endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Specifies the key name of the OBS object.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (ComponentInstanceArtifactPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceArtifactProperties)(nil)).Elem()
}

func (i ComponentInstanceArtifactPropertiesArgs) ToComponentInstanceArtifactPropertiesOutput() ComponentInstanceArtifactPropertiesOutput {
	return i.ToComponentInstanceArtifactPropertiesOutputWithContext(context.Background())
}

func (i ComponentInstanceArtifactPropertiesArgs) ToComponentInstanceArtifactPropertiesOutputWithContext(ctx context.Context) ComponentInstanceArtifactPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceArtifactPropertiesOutput)
}

func (i ComponentInstanceArtifactPropertiesArgs) ToComponentInstanceArtifactPropertiesPtrOutput() ComponentInstanceArtifactPropertiesPtrOutput {
	return i.ToComponentInstanceArtifactPropertiesPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceArtifactPropertiesArgs) ToComponentInstanceArtifactPropertiesPtrOutputWithContext(ctx context.Context) ComponentInstanceArtifactPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceArtifactPropertiesOutput).ToComponentInstanceArtifactPropertiesPtrOutputWithContext(ctx)
}

// ComponentInstanceArtifactPropertiesPtrInput is an input type that accepts ComponentInstanceArtifactPropertiesArgs, ComponentInstanceArtifactPropertiesPtr and ComponentInstanceArtifactPropertiesPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceArtifactPropertiesPtrInput` via:
//
//	        ComponentInstanceArtifactPropertiesArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceArtifactPropertiesPtrInput interface {
	pulumi.Input

	ToComponentInstanceArtifactPropertiesPtrOutput() ComponentInstanceArtifactPropertiesPtrOutput
	ToComponentInstanceArtifactPropertiesPtrOutputWithContext(context.Context) ComponentInstanceArtifactPropertiesPtrOutput
}

type componentInstanceArtifactPropertiesPtrType ComponentInstanceArtifactPropertiesArgs

func ComponentInstanceArtifactPropertiesPtr(v *ComponentInstanceArtifactPropertiesArgs) ComponentInstanceArtifactPropertiesPtrInput {
	return (*componentInstanceArtifactPropertiesPtrType)(v)
}

func (*componentInstanceArtifactPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceArtifactProperties)(nil)).Elem()
}

func (i *componentInstanceArtifactPropertiesPtrType) ToComponentInstanceArtifactPropertiesPtrOutput() ComponentInstanceArtifactPropertiesPtrOutput {
	return i.ToComponentInstanceArtifactPropertiesPtrOutputWithContext(context.Background())
}

func (i *componentInstanceArtifactPropertiesPtrType) ToComponentInstanceArtifactPropertiesPtrOutputWithContext(ctx context.Context) ComponentInstanceArtifactPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceArtifactPropertiesPtrOutput)
}

type ComponentInstanceArtifactPropertiesOutput struct{ *pulumi.OutputState }

func (ComponentInstanceArtifactPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceArtifactProperties)(nil)).Elem()
}

func (o ComponentInstanceArtifactPropertiesOutput) ToComponentInstanceArtifactPropertiesOutput() ComponentInstanceArtifactPropertiesOutput {
	return o
}

func (o ComponentInstanceArtifactPropertiesOutput) ToComponentInstanceArtifactPropertiesOutputWithContext(ctx context.Context) ComponentInstanceArtifactPropertiesOutput {
	return o
}

func (o ComponentInstanceArtifactPropertiesOutput) ToComponentInstanceArtifactPropertiesPtrOutput() ComponentInstanceArtifactPropertiesPtrOutput {
	return o.ToComponentInstanceArtifactPropertiesPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceArtifactPropertiesOutput) ToComponentInstanceArtifactPropertiesPtrOutputWithContext(ctx context.Context) ComponentInstanceArtifactPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceArtifactProperties) *ComponentInstanceArtifactProperties {
		return &v
	}).(ComponentInstanceArtifactPropertiesPtrOutput)
}

// Specifies the OBS bucket name.
func (o ComponentInstanceArtifactPropertiesOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceArtifactProperties) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Specifies the OBS bucket endpoint.
func (o ComponentInstanceArtifactPropertiesOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceArtifactProperties) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Specifies the key name of the OBS object.
func (o ComponentInstanceArtifactPropertiesOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceArtifactProperties) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ComponentInstanceArtifactPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceArtifactPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceArtifactProperties)(nil)).Elem()
}

func (o ComponentInstanceArtifactPropertiesPtrOutput) ToComponentInstanceArtifactPropertiesPtrOutput() ComponentInstanceArtifactPropertiesPtrOutput {
	return o
}

func (o ComponentInstanceArtifactPropertiesPtrOutput) ToComponentInstanceArtifactPropertiesPtrOutputWithContext(ctx context.Context) ComponentInstanceArtifactPropertiesPtrOutput {
	return o
}

func (o ComponentInstanceArtifactPropertiesPtrOutput) Elem() ComponentInstanceArtifactPropertiesOutput {
	return o.ApplyT(func(v *ComponentInstanceArtifactProperties) ComponentInstanceArtifactProperties {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceArtifactProperties
		return ret
	}).(ComponentInstanceArtifactPropertiesOutput)
}

// Specifies the OBS bucket name.
func (o ComponentInstanceArtifactPropertiesPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceArtifactProperties) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies the OBS bucket endpoint.
func (o ComponentInstanceArtifactPropertiesPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceArtifactProperties) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Specifies the key name of the OBS object.
func (o ComponentInstanceArtifactPropertiesPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceArtifactProperties) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfiguration struct {
	// Specifies the environment variables.
	// The object structure is documented below.
	EnvVariables []ComponentInstanceConfigurationEnvVariable `pulumi:"envVariables"`
	// Specifies the lifecycle.
	// The object structure is documented below.
	Lifecycle *ComponentInstanceConfigurationLifecycle `pulumi:"lifecycle"`
	// Specifies the policies of the log collection.
	// The object structure is documented below.
	LogCollectionPolicies []ComponentInstanceConfigurationLogCollectionPolicy `pulumi:"logCollectionPolicies"`
	// Specifies the variable value.
	// The object structure is documented below.
	Probe *ComponentInstanceConfigurationProbe `pulumi:"probe"`
	// Specifies the scheduling policy.
	// The key indicates the component name. In the Docker container scenario, key indicates the container name.
	// If the source parameters of a component specify the software package source, this parameter is optional, and the
	// software package source of the component is inherited by default. Otherwise, this parameter is required.
	// The object structure is documented below.
	Scheduler *ComponentInstanceConfigurationScheduler `pulumi:"scheduler"`
	// Specifies the data storage configuration.
	// The object structure is documented below.
	Storages []ComponentInstanceConfigurationStorage `pulumi:"storages"`
	// Specifies the upgrade policy.
	// The object structure is documented below.
	Strategy *ComponentInstanceConfigurationStrategy `pulumi:"strategy"`
}

// ComponentInstanceConfigurationInput is an input type that accepts ComponentInstanceConfigurationArgs and ComponentInstanceConfigurationOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationInput` via:
//
//	ComponentInstanceConfigurationArgs{...}
type ComponentInstanceConfigurationInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationOutput() ComponentInstanceConfigurationOutput
	ToComponentInstanceConfigurationOutputWithContext(context.Context) ComponentInstanceConfigurationOutput
}

type ComponentInstanceConfigurationArgs struct {
	// Specifies the environment variables.
	// The object structure is documented below.
	EnvVariables ComponentInstanceConfigurationEnvVariableArrayInput `pulumi:"envVariables"`
	// Specifies the lifecycle.
	// The object structure is documented below.
	Lifecycle ComponentInstanceConfigurationLifecyclePtrInput `pulumi:"lifecycle"`
	// Specifies the policies of the log collection.
	// The object structure is documented below.
	LogCollectionPolicies ComponentInstanceConfigurationLogCollectionPolicyArrayInput `pulumi:"logCollectionPolicies"`
	// Specifies the variable value.
	// The object structure is documented below.
	Probe ComponentInstanceConfigurationProbePtrInput `pulumi:"probe"`
	// Specifies the scheduling policy.
	// The key indicates the component name. In the Docker container scenario, key indicates the container name.
	// If the source parameters of a component specify the software package source, this parameter is optional, and the
	// software package source of the component is inherited by default. Otherwise, this parameter is required.
	// The object structure is documented below.
	Scheduler ComponentInstanceConfigurationSchedulerPtrInput `pulumi:"scheduler"`
	// Specifies the data storage configuration.
	// The object structure is documented below.
	Storages ComponentInstanceConfigurationStorageArrayInput `pulumi:"storages"`
	// Specifies the upgrade policy.
	// The object structure is documented below.
	Strategy ComponentInstanceConfigurationStrategyPtrInput `pulumi:"strategy"`
}

func (ComponentInstanceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfiguration)(nil)).Elem()
}

func (i ComponentInstanceConfigurationArgs) ToComponentInstanceConfigurationOutput() ComponentInstanceConfigurationOutput {
	return i.ToComponentInstanceConfigurationOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationArgs) ToComponentInstanceConfigurationOutputWithContext(ctx context.Context) ComponentInstanceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationOutput)
}

func (i ComponentInstanceConfigurationArgs) ToComponentInstanceConfigurationPtrOutput() ComponentInstanceConfigurationPtrOutput {
	return i.ToComponentInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationArgs) ToComponentInstanceConfigurationPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationOutput).ToComponentInstanceConfigurationPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationPtrInput is an input type that accepts ComponentInstanceConfigurationArgs, ComponentInstanceConfigurationPtr and ComponentInstanceConfigurationPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationPtrInput` via:
//
//	        ComponentInstanceConfigurationArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationPtrOutput() ComponentInstanceConfigurationPtrOutput
	ToComponentInstanceConfigurationPtrOutputWithContext(context.Context) ComponentInstanceConfigurationPtrOutput
}

type componentInstanceConfigurationPtrType ComponentInstanceConfigurationArgs

func ComponentInstanceConfigurationPtr(v *ComponentInstanceConfigurationArgs) ComponentInstanceConfigurationPtrInput {
	return (*componentInstanceConfigurationPtrType)(v)
}

func (*componentInstanceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfiguration)(nil)).Elem()
}

func (i *componentInstanceConfigurationPtrType) ToComponentInstanceConfigurationPtrOutput() ComponentInstanceConfigurationPtrOutput {
	return i.ToComponentInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationPtrType) ToComponentInstanceConfigurationPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationPtrOutput)
}

type ComponentInstanceConfigurationOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfiguration)(nil)).Elem()
}

func (o ComponentInstanceConfigurationOutput) ToComponentInstanceConfigurationOutput() ComponentInstanceConfigurationOutput {
	return o
}

func (o ComponentInstanceConfigurationOutput) ToComponentInstanceConfigurationOutputWithContext(ctx context.Context) ComponentInstanceConfigurationOutput {
	return o
}

func (o ComponentInstanceConfigurationOutput) ToComponentInstanceConfigurationPtrOutput() ComponentInstanceConfigurationPtrOutput {
	return o.ToComponentInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationOutput) ToComponentInstanceConfigurationPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfiguration) *ComponentInstanceConfiguration {
		return &v
	}).(ComponentInstanceConfigurationPtrOutput)
}

// Specifies the environment variables.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) EnvVariables() ComponentInstanceConfigurationEnvVariableArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) []ComponentInstanceConfigurationEnvVariable {
		return v.EnvVariables
	}).(ComponentInstanceConfigurationEnvVariableArrayOutput)
}

// Specifies the lifecycle.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) Lifecycle() ComponentInstanceConfigurationLifecyclePtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) *ComponentInstanceConfigurationLifecycle { return v.Lifecycle }).(ComponentInstanceConfigurationLifecyclePtrOutput)
}

// Specifies the policies of the log collection.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) LogCollectionPolicies() ComponentInstanceConfigurationLogCollectionPolicyArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) []ComponentInstanceConfigurationLogCollectionPolicy {
		return v.LogCollectionPolicies
	}).(ComponentInstanceConfigurationLogCollectionPolicyArrayOutput)
}

// Specifies the variable value.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) Probe() ComponentInstanceConfigurationProbePtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) *ComponentInstanceConfigurationProbe { return v.Probe }).(ComponentInstanceConfigurationProbePtrOutput)
}

// Specifies the scheduling policy.
// The key indicates the component name. In the Docker container scenario, key indicates the container name.
// If the source parameters of a component specify the software package source, this parameter is optional, and the
// software package source of the component is inherited by default. Otherwise, this parameter is required.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) Scheduler() ComponentInstanceConfigurationSchedulerPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) *ComponentInstanceConfigurationScheduler { return v.Scheduler }).(ComponentInstanceConfigurationSchedulerPtrOutput)
}

// Specifies the data storage configuration.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) Storages() ComponentInstanceConfigurationStorageArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) []ComponentInstanceConfigurationStorage { return v.Storages }).(ComponentInstanceConfigurationStorageArrayOutput)
}

// Specifies the upgrade policy.
// The object structure is documented below.
func (o ComponentInstanceConfigurationOutput) Strategy() ComponentInstanceConfigurationStrategyPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfiguration) *ComponentInstanceConfigurationStrategy { return v.Strategy }).(ComponentInstanceConfigurationStrategyPtrOutput)
}

type ComponentInstanceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfiguration)(nil)).Elem()
}

func (o ComponentInstanceConfigurationPtrOutput) ToComponentInstanceConfigurationPtrOutput() ComponentInstanceConfigurationPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationPtrOutput) ToComponentInstanceConfigurationPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationPtrOutput) Elem() ComponentInstanceConfigurationOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) ComponentInstanceConfiguration {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfiguration
		return ret
	}).(ComponentInstanceConfigurationOutput)
}

// Specifies the environment variables.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) EnvVariables() ComponentInstanceConfigurationEnvVariableArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) []ComponentInstanceConfigurationEnvVariable {
		if v == nil {
			return nil
		}
		return v.EnvVariables
	}).(ComponentInstanceConfigurationEnvVariableArrayOutput)
}

// Specifies the lifecycle.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) Lifecycle() ComponentInstanceConfigurationLifecyclePtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) *ComponentInstanceConfigurationLifecycle {
		if v == nil {
			return nil
		}
		return v.Lifecycle
	}).(ComponentInstanceConfigurationLifecyclePtrOutput)
}

// Specifies the policies of the log collection.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) LogCollectionPolicies() ComponentInstanceConfigurationLogCollectionPolicyArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) []ComponentInstanceConfigurationLogCollectionPolicy {
		if v == nil {
			return nil
		}
		return v.LogCollectionPolicies
	}).(ComponentInstanceConfigurationLogCollectionPolicyArrayOutput)
}

// Specifies the variable value.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) Probe() ComponentInstanceConfigurationProbePtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) *ComponentInstanceConfigurationProbe {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(ComponentInstanceConfigurationProbePtrOutput)
}

// Specifies the scheduling policy.
// The key indicates the component name. In the Docker container scenario, key indicates the container name.
// If the source parameters of a component specify the software package source, this parameter is optional, and the
// software package source of the component is inherited by default. Otherwise, this parameter is required.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) Scheduler() ComponentInstanceConfigurationSchedulerPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) *ComponentInstanceConfigurationScheduler {
		if v == nil {
			return nil
		}
		return v.Scheduler
	}).(ComponentInstanceConfigurationSchedulerPtrOutput)
}

// Specifies the data storage configuration.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) Storages() ComponentInstanceConfigurationStorageArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) []ComponentInstanceConfigurationStorage {
		if v == nil {
			return nil
		}
		return v.Storages
	}).(ComponentInstanceConfigurationStorageArrayOutput)
}

// Specifies the upgrade policy.
// The object structure is documented below.
func (o ComponentInstanceConfigurationPtrOutput) Strategy() ComponentInstanceConfigurationStrategyPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfiguration) *ComponentInstanceConfigurationStrategy {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(ComponentInstanceConfigurationStrategyPtrOutput)
}

type ComponentInstanceConfigurationEnvVariable struct {
	// Specifies the name of a configuration item or secret.
	Name string `pulumi:"name"`
	// Specifies the variable value.
	Value string `pulumi:"value"`
}

// ComponentInstanceConfigurationEnvVariableInput is an input type that accepts ComponentInstanceConfigurationEnvVariableArgs and ComponentInstanceConfigurationEnvVariableOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationEnvVariableInput` via:
//
//	ComponentInstanceConfigurationEnvVariableArgs{...}
type ComponentInstanceConfigurationEnvVariableInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationEnvVariableOutput() ComponentInstanceConfigurationEnvVariableOutput
	ToComponentInstanceConfigurationEnvVariableOutputWithContext(context.Context) ComponentInstanceConfigurationEnvVariableOutput
}

type ComponentInstanceConfigurationEnvVariableArgs struct {
	// Specifies the name of a configuration item or secret.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the variable value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ComponentInstanceConfigurationEnvVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationEnvVariable)(nil)).Elem()
}

func (i ComponentInstanceConfigurationEnvVariableArgs) ToComponentInstanceConfigurationEnvVariableOutput() ComponentInstanceConfigurationEnvVariableOutput {
	return i.ToComponentInstanceConfigurationEnvVariableOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationEnvVariableArgs) ToComponentInstanceConfigurationEnvVariableOutputWithContext(ctx context.Context) ComponentInstanceConfigurationEnvVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationEnvVariableOutput)
}

// ComponentInstanceConfigurationEnvVariableArrayInput is an input type that accepts ComponentInstanceConfigurationEnvVariableArray and ComponentInstanceConfigurationEnvVariableArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationEnvVariableArrayInput` via:
//
//	ComponentInstanceConfigurationEnvVariableArray{ ComponentInstanceConfigurationEnvVariableArgs{...} }
type ComponentInstanceConfigurationEnvVariableArrayInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationEnvVariableArrayOutput() ComponentInstanceConfigurationEnvVariableArrayOutput
	ToComponentInstanceConfigurationEnvVariableArrayOutputWithContext(context.Context) ComponentInstanceConfigurationEnvVariableArrayOutput
}

type ComponentInstanceConfigurationEnvVariableArray []ComponentInstanceConfigurationEnvVariableInput

func (ComponentInstanceConfigurationEnvVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationEnvVariable)(nil)).Elem()
}

func (i ComponentInstanceConfigurationEnvVariableArray) ToComponentInstanceConfigurationEnvVariableArrayOutput() ComponentInstanceConfigurationEnvVariableArrayOutput {
	return i.ToComponentInstanceConfigurationEnvVariableArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationEnvVariableArray) ToComponentInstanceConfigurationEnvVariableArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationEnvVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationEnvVariableArrayOutput)
}

type ComponentInstanceConfigurationEnvVariableOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationEnvVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationEnvVariable)(nil)).Elem()
}

func (o ComponentInstanceConfigurationEnvVariableOutput) ToComponentInstanceConfigurationEnvVariableOutput() ComponentInstanceConfigurationEnvVariableOutput {
	return o
}

func (o ComponentInstanceConfigurationEnvVariableOutput) ToComponentInstanceConfigurationEnvVariableOutputWithContext(ctx context.Context) ComponentInstanceConfigurationEnvVariableOutput {
	return o
}

// Specifies the name of a configuration item or secret.
func (o ComponentInstanceConfigurationEnvVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationEnvVariable) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the variable value.
func (o ComponentInstanceConfigurationEnvVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationEnvVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationEnvVariableArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationEnvVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationEnvVariable)(nil)).Elem()
}

func (o ComponentInstanceConfigurationEnvVariableArrayOutput) ToComponentInstanceConfigurationEnvVariableArrayOutput() ComponentInstanceConfigurationEnvVariableArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationEnvVariableArrayOutput) ToComponentInstanceConfigurationEnvVariableArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationEnvVariableArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationEnvVariableArrayOutput) Index(i pulumi.IntInput) ComponentInstanceConfigurationEnvVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceConfigurationEnvVariable {
		return vs[0].([]ComponentInstanceConfigurationEnvVariable)[vs[1].(int)]
	}).(ComponentInstanceConfigurationEnvVariableOutput)
}

type ComponentInstanceConfigurationLifecycle struct {
	// Specifies the startup commands.
	// The object structure is documented below.
	Entrypoint *ComponentInstanceConfigurationLifecycleEntrypoint `pulumi:"entrypoint"`
	// Specifies the post-start processing.
	// The object structure is documented below.
	PostStart *ComponentInstanceConfigurationLifecyclePostStart `pulumi:"postStart"`
	// Specifies the pre-stop processing.
	// The object structure is documented below.
	PreStop *ComponentInstanceConfigurationLifecyclePreStop `pulumi:"preStop"`
}

// ComponentInstanceConfigurationLifecycleInput is an input type that accepts ComponentInstanceConfigurationLifecycleArgs and ComponentInstanceConfigurationLifecycleOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecycleInput` via:
//
//	ComponentInstanceConfigurationLifecycleArgs{...}
type ComponentInstanceConfigurationLifecycleInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecycleOutput() ComponentInstanceConfigurationLifecycleOutput
	ToComponentInstanceConfigurationLifecycleOutputWithContext(context.Context) ComponentInstanceConfigurationLifecycleOutput
}

type ComponentInstanceConfigurationLifecycleArgs struct {
	// Specifies the startup commands.
	// The object structure is documented below.
	Entrypoint ComponentInstanceConfigurationLifecycleEntrypointPtrInput `pulumi:"entrypoint"`
	// Specifies the post-start processing.
	// The object structure is documented below.
	PostStart ComponentInstanceConfigurationLifecyclePostStartPtrInput `pulumi:"postStart"`
	// Specifies the pre-stop processing.
	// The object structure is documented below.
	PreStop ComponentInstanceConfigurationLifecyclePreStopPtrInput `pulumi:"preStop"`
}

func (ComponentInstanceConfigurationLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecycle)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLifecycleArgs) ToComponentInstanceConfigurationLifecycleOutput() ComponentInstanceConfigurationLifecycleOutput {
	return i.ToComponentInstanceConfigurationLifecycleOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecycleArgs) ToComponentInstanceConfigurationLifecycleOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecycleOutput)
}

func (i ComponentInstanceConfigurationLifecycleArgs) ToComponentInstanceConfigurationLifecyclePtrOutput() ComponentInstanceConfigurationLifecyclePtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecycleArgs) ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecycleOutput).ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationLifecyclePtrInput is an input type that accepts ComponentInstanceConfigurationLifecycleArgs, ComponentInstanceConfigurationLifecyclePtr and ComponentInstanceConfigurationLifecyclePtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePtrInput` via:
//
//	        ComponentInstanceConfigurationLifecycleArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationLifecyclePtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePtrOutput() ComponentInstanceConfigurationLifecyclePtrOutput
	ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePtrOutput
}

type componentInstanceConfigurationLifecyclePtrType ComponentInstanceConfigurationLifecycleArgs

func ComponentInstanceConfigurationLifecyclePtr(v *ComponentInstanceConfigurationLifecycleArgs) ComponentInstanceConfigurationLifecyclePtrInput {
	return (*componentInstanceConfigurationLifecyclePtrType)(v)
}

func (*componentInstanceConfigurationLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecycle)(nil)).Elem()
}

func (i *componentInstanceConfigurationLifecyclePtrType) ToComponentInstanceConfigurationLifecyclePtrOutput() ComponentInstanceConfigurationLifecyclePtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationLifecyclePtrType) ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePtrOutput)
}

type ComponentInstanceConfigurationLifecycleOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecycle)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecycleOutput) ToComponentInstanceConfigurationLifecycleOutput() ComponentInstanceConfigurationLifecycleOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecycleOutput) ToComponentInstanceConfigurationLifecycleOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecycleOutput) ToComponentInstanceConfigurationLifecyclePtrOutput() ComponentInstanceConfigurationLifecyclePtrOutput {
	return o.ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationLifecycleOutput) ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecycle {
		return &v
	}).(ComponentInstanceConfigurationLifecyclePtrOutput)
}

// Specifies the startup commands.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecycleOutput) Entrypoint() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecycleEntrypoint {
		return v.Entrypoint
	}).(ComponentInstanceConfigurationLifecycleEntrypointPtrOutput)
}

// Specifies the post-start processing.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecycleOutput) PostStart() ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecyclePostStart {
		return v.PostStart
	}).(ComponentInstanceConfigurationLifecyclePostStartPtrOutput)
}

// Specifies the pre-stop processing.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecycleOutput) PreStop() ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecyclePreStop {
		return v.PreStop
	}).(ComponentInstanceConfigurationLifecyclePreStopPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecycle)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePtrOutput) ToComponentInstanceConfigurationLifecyclePtrOutput() ComponentInstanceConfigurationLifecyclePtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePtrOutput) ToComponentInstanceConfigurationLifecyclePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePtrOutput) Elem() ComponentInstanceConfigurationLifecycleOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycle) ComponentInstanceConfigurationLifecycle {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationLifecycle
		return ret
	}).(ComponentInstanceConfigurationLifecycleOutput)
}

// Specifies the startup commands.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePtrOutput) Entrypoint() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecycleEntrypoint {
		if v == nil {
			return nil
		}
		return v.Entrypoint
	}).(ComponentInstanceConfigurationLifecycleEntrypointPtrOutput)
}

// Specifies the post-start processing.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePtrOutput) PostStart() ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecyclePostStart {
		if v == nil {
			return nil
		}
		return v.PostStart
	}).(ComponentInstanceConfigurationLifecyclePostStartPtrOutput)
}

// Specifies the pre-stop processing.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePtrOutput) PreStop() ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycle) *ComponentInstanceConfigurationLifecyclePreStop {
		if v == nil {
			return nil
		}
		return v.PreStop
	}).(ComponentInstanceConfigurationLifecyclePreStopPtrOutput)
}

type ComponentInstanceConfigurationLifecycleEntrypoint struct {
	// Specifies the running parameters.
	Args []string `pulumi:"args"`
	// Specifies the command list.
	Commands []string `pulumi:"commands"`
}

// ComponentInstanceConfigurationLifecycleEntrypointInput is an input type that accepts ComponentInstanceConfigurationLifecycleEntrypointArgs and ComponentInstanceConfigurationLifecycleEntrypointOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecycleEntrypointInput` via:
//
//	ComponentInstanceConfigurationLifecycleEntrypointArgs{...}
type ComponentInstanceConfigurationLifecycleEntrypointInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecycleEntrypointOutput() ComponentInstanceConfigurationLifecycleEntrypointOutput
	ToComponentInstanceConfigurationLifecycleEntrypointOutputWithContext(context.Context) ComponentInstanceConfigurationLifecycleEntrypointOutput
}

type ComponentInstanceConfigurationLifecycleEntrypointArgs struct {
	// Specifies the running parameters.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Specifies the command list.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ComponentInstanceConfigurationLifecycleEntrypointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecycleEntrypoint)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLifecycleEntrypointArgs) ToComponentInstanceConfigurationLifecycleEntrypointOutput() ComponentInstanceConfigurationLifecycleEntrypointOutput {
	return i.ToComponentInstanceConfigurationLifecycleEntrypointOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecycleEntrypointArgs) ToComponentInstanceConfigurationLifecycleEntrypointOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleEntrypointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecycleEntrypointOutput)
}

func (i ComponentInstanceConfigurationLifecycleEntrypointArgs) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutput() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return i.ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecycleEntrypointArgs) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecycleEntrypointOutput).ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationLifecycleEntrypointPtrInput is an input type that accepts ComponentInstanceConfigurationLifecycleEntrypointArgs, ComponentInstanceConfigurationLifecycleEntrypointPtr and ComponentInstanceConfigurationLifecycleEntrypointPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecycleEntrypointPtrInput` via:
//
//	        ComponentInstanceConfigurationLifecycleEntrypointArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationLifecycleEntrypointPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecycleEntrypointPtrOutput() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput
	ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(context.Context) ComponentInstanceConfigurationLifecycleEntrypointPtrOutput
}

type componentInstanceConfigurationLifecycleEntrypointPtrType ComponentInstanceConfigurationLifecycleEntrypointArgs

func ComponentInstanceConfigurationLifecycleEntrypointPtr(v *ComponentInstanceConfigurationLifecycleEntrypointArgs) ComponentInstanceConfigurationLifecycleEntrypointPtrInput {
	return (*componentInstanceConfigurationLifecycleEntrypointPtrType)(v)
}

func (*componentInstanceConfigurationLifecycleEntrypointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecycleEntrypoint)(nil)).Elem()
}

func (i *componentInstanceConfigurationLifecycleEntrypointPtrType) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutput() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return i.ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationLifecycleEntrypointPtrType) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecycleEntrypointPtrOutput)
}

type ComponentInstanceConfigurationLifecycleEntrypointOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecycleEntrypointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecycleEntrypoint)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecycleEntrypointOutput) ToComponentInstanceConfigurationLifecycleEntrypointOutput() ComponentInstanceConfigurationLifecycleEntrypointOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecycleEntrypointOutput) ToComponentInstanceConfigurationLifecycleEntrypointOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleEntrypointOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecycleEntrypointOutput) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutput() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return o.ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationLifecycleEntrypointOutput) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationLifecycleEntrypoint) *ComponentInstanceConfigurationLifecycleEntrypoint {
		return &v
	}).(ComponentInstanceConfigurationLifecycleEntrypointPtrOutput)
}

// Specifies the running parameters.
func (o ComponentInstanceConfigurationLifecycleEntrypointOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecycleEntrypoint) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationLifecycleEntrypointOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecycleEntrypoint) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationLifecycleEntrypointPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecycleEntrypointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecycleEntrypoint)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecycleEntrypointPtrOutput) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutput() ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecycleEntrypointPtrOutput) ToComponentInstanceConfigurationLifecycleEntrypointPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecycleEntrypointPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecycleEntrypointPtrOutput) Elem() ComponentInstanceConfigurationLifecycleEntrypointOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycleEntrypoint) ComponentInstanceConfigurationLifecycleEntrypoint {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationLifecycleEntrypoint
		return ret
	}).(ComponentInstanceConfigurationLifecycleEntrypointOutput)
}

// Specifies the running parameters.
func (o ComponentInstanceConfigurationLifecycleEntrypointPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycleEntrypoint) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationLifecycleEntrypointPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecycleEntrypoint) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationLifecyclePostStart struct {
	// Specifies the start post-processing or stop pre-processing parameters.
	// The object structure is documented below.
	Parameters ComponentInstanceConfigurationLifecyclePostStartParameters `pulumi:"parameters"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
}

// ComponentInstanceConfigurationLifecyclePostStartInput is an input type that accepts ComponentInstanceConfigurationLifecyclePostStartArgs and ComponentInstanceConfigurationLifecyclePostStartOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePostStartInput` via:
//
//	ComponentInstanceConfigurationLifecyclePostStartArgs{...}
type ComponentInstanceConfigurationLifecyclePostStartInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePostStartOutput() ComponentInstanceConfigurationLifecyclePostStartOutput
	ToComponentInstanceConfigurationLifecyclePostStartOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePostStartOutput
}

type ComponentInstanceConfigurationLifecyclePostStartArgs struct {
	// Specifies the start post-processing or stop pre-processing parameters.
	// The object structure is documented below.
	Parameters ComponentInstanceConfigurationLifecyclePostStartParametersInput `pulumi:"parameters"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentInstanceConfigurationLifecyclePostStartArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStart)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLifecyclePostStartArgs) ToComponentInstanceConfigurationLifecyclePostStartOutput() ComponentInstanceConfigurationLifecyclePostStartOutput {
	return i.ToComponentInstanceConfigurationLifecyclePostStartOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePostStartArgs) ToComponentInstanceConfigurationLifecyclePostStartOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePostStartOutput)
}

func (i ComponentInstanceConfigurationLifecyclePostStartArgs) ToComponentInstanceConfigurationLifecyclePostStartPtrOutput() ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePostStartArgs) ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePostStartOutput).ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationLifecyclePostStartPtrInput is an input type that accepts ComponentInstanceConfigurationLifecyclePostStartArgs, ComponentInstanceConfigurationLifecyclePostStartPtr and ComponentInstanceConfigurationLifecyclePostStartPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePostStartPtrInput` via:
//
//	        ComponentInstanceConfigurationLifecyclePostStartArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationLifecyclePostStartPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePostStartPtrOutput() ComponentInstanceConfigurationLifecyclePostStartPtrOutput
	ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePostStartPtrOutput
}

type componentInstanceConfigurationLifecyclePostStartPtrType ComponentInstanceConfigurationLifecyclePostStartArgs

func ComponentInstanceConfigurationLifecyclePostStartPtr(v *ComponentInstanceConfigurationLifecyclePostStartArgs) ComponentInstanceConfigurationLifecyclePostStartPtrInput {
	return (*componentInstanceConfigurationLifecyclePostStartPtrType)(v)
}

func (*componentInstanceConfigurationLifecyclePostStartPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePostStart)(nil)).Elem()
}

func (i *componentInstanceConfigurationLifecyclePostStartPtrType) ToComponentInstanceConfigurationLifecyclePostStartPtrOutput() ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationLifecyclePostStartPtrType) ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePostStartPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePostStartOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePostStartOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStart)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePostStartOutput) ToComponentInstanceConfigurationLifecyclePostStartOutput() ComponentInstanceConfigurationLifecyclePostStartOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartOutput) ToComponentInstanceConfigurationLifecyclePostStartOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartOutput) ToComponentInstanceConfigurationLifecyclePostStartPtrOutput() ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return o.ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationLifecyclePostStartOutput) ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationLifecyclePostStart) *ComponentInstanceConfigurationLifecyclePostStart {
		return &v
	}).(ComponentInstanceConfigurationLifecyclePostStartPtrOutput)
}

// Specifies the start post-processing or stop pre-processing parameters.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePostStartOutput) Parameters() ComponentInstanceConfigurationLifecyclePostStartParametersOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePostStart) ComponentInstanceConfigurationLifecyclePostStartParameters {
		return v.Parameters
	}).(ComponentInstanceConfigurationLifecyclePostStartParametersOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationLifecyclePostStartOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePostStart) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationLifecyclePostStartPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePostStartPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePostStart)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePostStartPtrOutput) ToComponentInstanceConfigurationLifecyclePostStartPtrOutput() ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartPtrOutput) ToComponentInstanceConfigurationLifecyclePostStartPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartPtrOutput) Elem() ComponentInstanceConfigurationLifecyclePostStartOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStart) ComponentInstanceConfigurationLifecyclePostStart {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationLifecyclePostStart
		return ret
	}).(ComponentInstanceConfigurationLifecyclePostStartOutput)
}

// Specifies the start post-processing or stop pre-processing parameters.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePostStartPtrOutput) Parameters() ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStart) *ComponentInstanceConfigurationLifecyclePostStartParameters {
		if v == nil {
			return nil
		}
		return &v.Parameters
	}).(ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationLifecyclePostStartPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStart) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePostStartParameters struct {
	// Specifies the command list.
	Commands []string `pulumi:"commands"`
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host *string `pulumi:"host"`
	// Specifies the request path.
	Path string `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port int `pulumi:"port"`
}

// ComponentInstanceConfigurationLifecyclePostStartParametersInput is an input type that accepts ComponentInstanceConfigurationLifecyclePostStartParametersArgs and ComponentInstanceConfigurationLifecyclePostStartParametersOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePostStartParametersInput` via:
//
//	ComponentInstanceConfigurationLifecyclePostStartParametersArgs{...}
type ComponentInstanceConfigurationLifecyclePostStartParametersInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePostStartParametersOutput() ComponentInstanceConfigurationLifecyclePostStartParametersOutput
	ToComponentInstanceConfigurationLifecyclePostStartParametersOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersOutput
}

type ComponentInstanceConfigurationLifecyclePostStartParametersArgs struct {
	// Specifies the command list.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Specifies the request path.
	Path pulumi.StringInput `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ComponentInstanceConfigurationLifecyclePostStartParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStartParameters)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLifecyclePostStartParametersArgs) ToComponentInstanceConfigurationLifecyclePostStartParametersOutput() ComponentInstanceConfigurationLifecyclePostStartParametersOutput {
	return i.ToComponentInstanceConfigurationLifecyclePostStartParametersOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePostStartParametersArgs) ToComponentInstanceConfigurationLifecyclePostStartParametersOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePostStartParametersOutput)
}

func (i ComponentInstanceConfigurationLifecyclePostStartParametersArgs) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput() ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePostStartParametersArgs) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePostStartParametersOutput).ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationLifecyclePostStartParametersPtrInput is an input type that accepts ComponentInstanceConfigurationLifecyclePostStartParametersArgs, ComponentInstanceConfigurationLifecyclePostStartParametersPtr and ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePostStartParametersPtrInput` via:
//
//	        ComponentInstanceConfigurationLifecyclePostStartParametersArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationLifecyclePostStartParametersPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput() ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput
	ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput
}

type componentInstanceConfigurationLifecyclePostStartParametersPtrType ComponentInstanceConfigurationLifecyclePostStartParametersArgs

func ComponentInstanceConfigurationLifecyclePostStartParametersPtr(v *ComponentInstanceConfigurationLifecyclePostStartParametersArgs) ComponentInstanceConfigurationLifecyclePostStartParametersPtrInput {
	return (*componentInstanceConfigurationLifecyclePostStartParametersPtrType)(v)
}

func (*componentInstanceConfigurationLifecyclePostStartParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePostStartParameters)(nil)).Elem()
}

func (i *componentInstanceConfigurationLifecyclePostStartParametersPtrType) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput() ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationLifecyclePostStartParametersPtrType) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePostStartParametersOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePostStartParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStartParameters)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) ToComponentInstanceConfigurationLifecyclePostStartParametersOutput() ComponentInstanceConfigurationLifecyclePostStartParametersOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) ToComponentInstanceConfigurationLifecyclePostStartParametersOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput() ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return o.ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationLifecyclePostStartParameters) *ComponentInstanceConfigurationLifecyclePostStartParameters {
		return &v
	}).(ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePostStartParameters) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePostStartParameters) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePostStartParameters) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePostStartParameters) int { return v.Port }).(pulumi.IntOutput)
}

type ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePostStartParameters)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput() ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) ToComponentInstanceConfigurationLifecyclePostStartParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) Elem() ComponentInstanceConfigurationLifecyclePostStartParametersOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStartParameters) ComponentInstanceConfigurationLifecyclePostStartParameters {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationLifecyclePostStartParameters
		return ret
	}).(ComponentInstanceConfigurationLifecyclePostStartParametersOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStartParameters) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStartParameters) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStartParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePostStartParameters) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePreStop struct {
	// Specifies the start post-processing or stop pre-processing parameters.
	// The object structure is documented below.
	Parameters ComponentInstanceConfigurationLifecyclePreStopParameters `pulumi:"parameters"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
}

// ComponentInstanceConfigurationLifecyclePreStopInput is an input type that accepts ComponentInstanceConfigurationLifecyclePreStopArgs and ComponentInstanceConfigurationLifecyclePreStopOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePreStopInput` via:
//
//	ComponentInstanceConfigurationLifecyclePreStopArgs{...}
type ComponentInstanceConfigurationLifecyclePreStopInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePreStopOutput() ComponentInstanceConfigurationLifecyclePreStopOutput
	ToComponentInstanceConfigurationLifecyclePreStopOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePreStopOutput
}

type ComponentInstanceConfigurationLifecyclePreStopArgs struct {
	// Specifies the start post-processing or stop pre-processing parameters.
	// The object structure is documented below.
	Parameters ComponentInstanceConfigurationLifecyclePreStopParametersInput `pulumi:"parameters"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentInstanceConfigurationLifecyclePreStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStop)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLifecyclePreStopArgs) ToComponentInstanceConfigurationLifecyclePreStopOutput() ComponentInstanceConfigurationLifecyclePreStopOutput {
	return i.ToComponentInstanceConfigurationLifecyclePreStopOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePreStopArgs) ToComponentInstanceConfigurationLifecyclePreStopOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePreStopOutput)
}

func (i ComponentInstanceConfigurationLifecyclePreStopArgs) ToComponentInstanceConfigurationLifecyclePreStopPtrOutput() ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePreStopArgs) ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePreStopOutput).ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationLifecyclePreStopPtrInput is an input type that accepts ComponentInstanceConfigurationLifecyclePreStopArgs, ComponentInstanceConfigurationLifecyclePreStopPtr and ComponentInstanceConfigurationLifecyclePreStopPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePreStopPtrInput` via:
//
//	        ComponentInstanceConfigurationLifecyclePreStopArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationLifecyclePreStopPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePreStopPtrOutput() ComponentInstanceConfigurationLifecyclePreStopPtrOutput
	ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePreStopPtrOutput
}

type componentInstanceConfigurationLifecyclePreStopPtrType ComponentInstanceConfigurationLifecyclePreStopArgs

func ComponentInstanceConfigurationLifecyclePreStopPtr(v *ComponentInstanceConfigurationLifecyclePreStopArgs) ComponentInstanceConfigurationLifecyclePreStopPtrInput {
	return (*componentInstanceConfigurationLifecyclePreStopPtrType)(v)
}

func (*componentInstanceConfigurationLifecyclePreStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePreStop)(nil)).Elem()
}

func (i *componentInstanceConfigurationLifecyclePreStopPtrType) ToComponentInstanceConfigurationLifecyclePreStopPtrOutput() ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationLifecyclePreStopPtrType) ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePreStopPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePreStopOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePreStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStop)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePreStopOutput) ToComponentInstanceConfigurationLifecyclePreStopOutput() ComponentInstanceConfigurationLifecyclePreStopOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopOutput) ToComponentInstanceConfigurationLifecyclePreStopOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopOutput) ToComponentInstanceConfigurationLifecyclePreStopPtrOutput() ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return o.ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationLifecyclePreStopOutput) ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationLifecyclePreStop) *ComponentInstanceConfigurationLifecyclePreStop {
		return &v
	}).(ComponentInstanceConfigurationLifecyclePreStopPtrOutput)
}

// Specifies the start post-processing or stop pre-processing parameters.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePreStopOutput) Parameters() ComponentInstanceConfigurationLifecyclePreStopParametersOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePreStop) ComponentInstanceConfigurationLifecyclePreStopParameters {
		return v.Parameters
	}).(ComponentInstanceConfigurationLifecyclePreStopParametersOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationLifecyclePreStopOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePreStop) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationLifecyclePreStopPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePreStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePreStop)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePreStopPtrOutput) ToComponentInstanceConfigurationLifecyclePreStopPtrOutput() ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopPtrOutput) ToComponentInstanceConfigurationLifecyclePreStopPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopPtrOutput) Elem() ComponentInstanceConfigurationLifecyclePreStopOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStop) ComponentInstanceConfigurationLifecyclePreStop {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationLifecyclePreStop
		return ret
	}).(ComponentInstanceConfigurationLifecyclePreStopOutput)
}

// Specifies the start post-processing or stop pre-processing parameters.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLifecyclePreStopPtrOutput) Parameters() ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStop) *ComponentInstanceConfigurationLifecyclePreStopParameters {
		if v == nil {
			return nil
		}
		return &v.Parameters
	}).(ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationLifecyclePreStopPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStop) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePreStopParameters struct {
	// Specifies the command list.
	Commands []string `pulumi:"commands"`
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host *string `pulumi:"host"`
	// Specifies the request path.
	Path string `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port int `pulumi:"port"`
}

// ComponentInstanceConfigurationLifecyclePreStopParametersInput is an input type that accepts ComponentInstanceConfigurationLifecyclePreStopParametersArgs and ComponentInstanceConfigurationLifecyclePreStopParametersOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePreStopParametersInput` via:
//
//	ComponentInstanceConfigurationLifecyclePreStopParametersArgs{...}
type ComponentInstanceConfigurationLifecyclePreStopParametersInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePreStopParametersOutput() ComponentInstanceConfigurationLifecyclePreStopParametersOutput
	ToComponentInstanceConfigurationLifecyclePreStopParametersOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersOutput
}

type ComponentInstanceConfigurationLifecyclePreStopParametersArgs struct {
	// Specifies the command list.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Specifies the request path.
	Path pulumi.StringInput `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ComponentInstanceConfigurationLifecyclePreStopParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStopParameters)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLifecyclePreStopParametersArgs) ToComponentInstanceConfigurationLifecyclePreStopParametersOutput() ComponentInstanceConfigurationLifecyclePreStopParametersOutput {
	return i.ToComponentInstanceConfigurationLifecyclePreStopParametersOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePreStopParametersArgs) ToComponentInstanceConfigurationLifecyclePreStopParametersOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePreStopParametersOutput)
}

func (i ComponentInstanceConfigurationLifecyclePreStopParametersArgs) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput() ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLifecyclePreStopParametersArgs) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePreStopParametersOutput).ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationLifecyclePreStopParametersPtrInput is an input type that accepts ComponentInstanceConfigurationLifecyclePreStopParametersArgs, ComponentInstanceConfigurationLifecyclePreStopParametersPtr and ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLifecyclePreStopParametersPtrInput` via:
//
//	        ComponentInstanceConfigurationLifecyclePreStopParametersArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationLifecyclePreStopParametersPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput() ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput
	ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput
}

type componentInstanceConfigurationLifecyclePreStopParametersPtrType ComponentInstanceConfigurationLifecyclePreStopParametersArgs

func ComponentInstanceConfigurationLifecyclePreStopParametersPtr(v *ComponentInstanceConfigurationLifecyclePreStopParametersArgs) ComponentInstanceConfigurationLifecyclePreStopParametersPtrInput {
	return (*componentInstanceConfigurationLifecyclePreStopParametersPtrType)(v)
}

func (*componentInstanceConfigurationLifecyclePreStopParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePreStopParameters)(nil)).Elem()
}

func (i *componentInstanceConfigurationLifecyclePreStopParametersPtrType) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput() ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return i.ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationLifecyclePreStopParametersPtrType) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput)
}

type ComponentInstanceConfigurationLifecyclePreStopParametersOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePreStopParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStopParameters)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) ToComponentInstanceConfigurationLifecyclePreStopParametersOutput() ComponentInstanceConfigurationLifecyclePreStopParametersOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) ToComponentInstanceConfigurationLifecyclePreStopParametersOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput() ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return o.ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationLifecyclePreStopParameters) *ComponentInstanceConfigurationLifecyclePreStopParameters {
		return &v
	}).(ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePreStopParameters) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePreStopParameters) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePreStopParameters) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLifecyclePreStopParameters) int { return v.Port }).(pulumi.IntOutput)
}

type ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationLifecyclePreStopParameters)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput() ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) ToComponentInstanceConfigurationLifecyclePreStopParametersPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) Elem() ComponentInstanceConfigurationLifecyclePreStopParametersOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStopParameters) ComponentInstanceConfigurationLifecyclePreStopParameters {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationLifecyclePreStopParameters
		return ret
	}).(ComponentInstanceConfigurationLifecyclePreStopParametersOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStopParameters) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStopParameters) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStopParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationLifecyclePreStopParameters) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ComponentInstanceConfigurationLogCollectionPolicy struct {
	// Specifies the configurations of the container mounting.
	// The object structure is documented below.
	ContainerMountings []ComponentInstanceConfigurationLogCollectionPolicyContainerMounting `pulumi:"containerMountings"`
	// Specifies the The host path that will be mounted to the specified container path.
	HostPath *string `pulumi:"hostPath"`
}

// ComponentInstanceConfigurationLogCollectionPolicyInput is an input type that accepts ComponentInstanceConfigurationLogCollectionPolicyArgs and ComponentInstanceConfigurationLogCollectionPolicyOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLogCollectionPolicyInput` via:
//
//	ComponentInstanceConfigurationLogCollectionPolicyArgs{...}
type ComponentInstanceConfigurationLogCollectionPolicyInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLogCollectionPolicyOutput() ComponentInstanceConfigurationLogCollectionPolicyOutput
	ToComponentInstanceConfigurationLogCollectionPolicyOutputWithContext(context.Context) ComponentInstanceConfigurationLogCollectionPolicyOutput
}

type ComponentInstanceConfigurationLogCollectionPolicyArgs struct {
	// Specifies the configurations of the container mounting.
	// The object structure is documented below.
	ContainerMountings ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayInput `pulumi:"containerMountings"`
	// Specifies the The host path that will be mounted to the specified container path.
	HostPath pulumi.StringPtrInput `pulumi:"hostPath"`
}

func (ComponentInstanceConfigurationLogCollectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicy)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLogCollectionPolicyArgs) ToComponentInstanceConfigurationLogCollectionPolicyOutput() ComponentInstanceConfigurationLogCollectionPolicyOutput {
	return i.ToComponentInstanceConfigurationLogCollectionPolicyOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLogCollectionPolicyArgs) ToComponentInstanceConfigurationLogCollectionPolicyOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLogCollectionPolicyOutput)
}

// ComponentInstanceConfigurationLogCollectionPolicyArrayInput is an input type that accepts ComponentInstanceConfigurationLogCollectionPolicyArray and ComponentInstanceConfigurationLogCollectionPolicyArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLogCollectionPolicyArrayInput` via:
//
//	ComponentInstanceConfigurationLogCollectionPolicyArray{ ComponentInstanceConfigurationLogCollectionPolicyArgs{...} }
type ComponentInstanceConfigurationLogCollectionPolicyArrayInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLogCollectionPolicyArrayOutput() ComponentInstanceConfigurationLogCollectionPolicyArrayOutput
	ToComponentInstanceConfigurationLogCollectionPolicyArrayOutputWithContext(context.Context) ComponentInstanceConfigurationLogCollectionPolicyArrayOutput
}

type ComponentInstanceConfigurationLogCollectionPolicyArray []ComponentInstanceConfigurationLogCollectionPolicyInput

func (ComponentInstanceConfigurationLogCollectionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationLogCollectionPolicy)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLogCollectionPolicyArray) ToComponentInstanceConfigurationLogCollectionPolicyArrayOutput() ComponentInstanceConfigurationLogCollectionPolicyArrayOutput {
	return i.ToComponentInstanceConfigurationLogCollectionPolicyArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLogCollectionPolicyArray) ToComponentInstanceConfigurationLogCollectionPolicyArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLogCollectionPolicyArrayOutput)
}

type ComponentInstanceConfigurationLogCollectionPolicyOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLogCollectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicy)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLogCollectionPolicyOutput) ToComponentInstanceConfigurationLogCollectionPolicyOutput() ComponentInstanceConfigurationLogCollectionPolicyOutput {
	return o
}

func (o ComponentInstanceConfigurationLogCollectionPolicyOutput) ToComponentInstanceConfigurationLogCollectionPolicyOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyOutput {
	return o
}

// Specifies the configurations of the container mounting.
// The object structure is documented below.
func (o ComponentInstanceConfigurationLogCollectionPolicyOutput) ContainerMountings() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLogCollectionPolicy) []ComponentInstanceConfigurationLogCollectionPolicyContainerMounting {
		return v.ContainerMountings
	}).(ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput)
}

// Specifies the The host path that will be mounted to the specified container path.
func (o ComponentInstanceConfigurationLogCollectionPolicyOutput) HostPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLogCollectionPolicy) *string { return v.HostPath }).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationLogCollectionPolicyArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLogCollectionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationLogCollectionPolicy)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLogCollectionPolicyArrayOutput) ToComponentInstanceConfigurationLogCollectionPolicyArrayOutput() ComponentInstanceConfigurationLogCollectionPolicyArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationLogCollectionPolicyArrayOutput) ToComponentInstanceConfigurationLogCollectionPolicyArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationLogCollectionPolicyArrayOutput) Index(i pulumi.IntInput) ComponentInstanceConfigurationLogCollectionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceConfigurationLogCollectionPolicy {
		return vs[0].([]ComponentInstanceConfigurationLogCollectionPolicy)[vs[1].(int)]
	}).(ComponentInstanceConfigurationLogCollectionPolicyOutput)
}

type ComponentInstanceConfigurationLogCollectionPolicyContainerMounting struct {
	// Specifies the aging period.
	// The valid values are **Hourly**, **Daily** and **Weekly**. The default value is **Hourly**.
	AgingPeriod *string `pulumi:"agingPeriod"`
	// Specifies the extended host path.
	// This parameter can be configured only when `hostPath` is configured.
	// The valid values are as follows:
	// + **PodUID**
	// + **PodName**
	// + **PodUID/ContainerName**
	// + **PodName/ContainerName**
	HostExtendPath *string `pulumi:"hostExtendPath"`
	// Specifies the request path.
	Path string `pulumi:"path"`
}

// ComponentInstanceConfigurationLogCollectionPolicyContainerMountingInput is an input type that accepts ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs and ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLogCollectionPolicyContainerMountingInput` via:
//
//	ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs{...}
type ComponentInstanceConfigurationLogCollectionPolicyContainerMountingInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput
	ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutputWithContext(context.Context) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput
}

type ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs struct {
	// Specifies the aging period.
	// The valid values are **Hourly**, **Daily** and **Weekly**. The default value is **Hourly**.
	AgingPeriod pulumi.StringPtrInput `pulumi:"agingPeriod"`
	// Specifies the extended host path.
	// This parameter can be configured only when `hostPath` is configured.
	// The valid values are as follows:
	// + **PodUID**
	// + **PodName**
	// + **PodUID/ContainerName**
	// + **PodName/ContainerName**
	HostExtendPath pulumi.StringPtrInput `pulumi:"hostExtendPath"`
	// Specifies the request path.
	Path pulumi.StringInput `pulumi:"path"`
}

func (ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicyContainerMounting)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput {
	return i.ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput)
}

// ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayInput is an input type that accepts ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray and ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayInput` via:
//
//	ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray{ ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs{...} }
type ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput
	ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutputWithContext(context.Context) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput
}

type ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray []ComponentInstanceConfigurationLogCollectionPolicyContainerMountingInput

func (ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationLogCollectionPolicyContainerMounting)(nil)).Elem()
}

func (i ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput {
	return i.ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput)
}

type ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicyContainerMounting)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput {
	return o
}

func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput {
	return o
}

// Specifies the aging period.
// The valid values are **Hourly**, **Daily** and **Weekly**. The default value is **Hourly**.
func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput) AgingPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLogCollectionPolicyContainerMounting) *string {
		return v.AgingPeriod
	}).(pulumi.StringPtrOutput)
}

// Specifies the extended host path.
// This parameter can be configured only when `hostPath` is configured.
// The valid values are as follows:
// + **PodUID**
// + **PodName**
// + **PodUID/ContainerName**
// + **PodName/ContainerName**
func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput) HostExtendPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLogCollectionPolicyContainerMounting) *string {
		return v.HostExtendPath
	}).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationLogCollectionPolicyContainerMounting) string { return v.Path }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationLogCollectionPolicyContainerMounting)(nil)).Elem()
}

func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput() ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput) ToComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput) Index(i pulumi.IntInput) ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceConfigurationLogCollectionPolicyContainerMounting {
		return vs[0].([]ComponentInstanceConfigurationLogCollectionPolicyContainerMounting)[vs[1].(int)]
	}).(ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput)
}

type ComponentInstanceConfigurationProbe struct {
	// Specifies the component liveness probe.
	// The object structure is documented below.
	Liveness *ComponentInstanceConfigurationProbeLiveness `pulumi:"liveness"`
	// Specifies the component service probe.
	// The object structure is documented below.
	Readiness *ComponentInstanceConfigurationProbeReadiness `pulumi:"readiness"`
}

// ComponentInstanceConfigurationProbeInput is an input type that accepts ComponentInstanceConfigurationProbeArgs and ComponentInstanceConfigurationProbeOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeInput` via:
//
//	ComponentInstanceConfigurationProbeArgs{...}
type ComponentInstanceConfigurationProbeInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeOutput() ComponentInstanceConfigurationProbeOutput
	ToComponentInstanceConfigurationProbeOutputWithContext(context.Context) ComponentInstanceConfigurationProbeOutput
}

type ComponentInstanceConfigurationProbeArgs struct {
	// Specifies the component liveness probe.
	// The object structure is documented below.
	Liveness ComponentInstanceConfigurationProbeLivenessPtrInput `pulumi:"liveness"`
	// Specifies the component service probe.
	// The object structure is documented below.
	Readiness ComponentInstanceConfigurationProbeReadinessPtrInput `pulumi:"readiness"`
}

func (ComponentInstanceConfigurationProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbe)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeArgs) ToComponentInstanceConfigurationProbeOutput() ComponentInstanceConfigurationProbeOutput {
	return i.ToComponentInstanceConfigurationProbeOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeArgs) ToComponentInstanceConfigurationProbeOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeOutput)
}

func (i ComponentInstanceConfigurationProbeArgs) ToComponentInstanceConfigurationProbePtrOutput() ComponentInstanceConfigurationProbePtrOutput {
	return i.ToComponentInstanceConfigurationProbePtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeArgs) ToComponentInstanceConfigurationProbePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeOutput).ToComponentInstanceConfigurationProbePtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbePtrInput is an input type that accepts ComponentInstanceConfigurationProbeArgs, ComponentInstanceConfigurationProbePtr and ComponentInstanceConfigurationProbePtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbePtrInput` via:
//
//	        ComponentInstanceConfigurationProbeArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbePtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbePtrOutput() ComponentInstanceConfigurationProbePtrOutput
	ToComponentInstanceConfigurationProbePtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbePtrOutput
}

type componentInstanceConfigurationProbePtrType ComponentInstanceConfigurationProbeArgs

func ComponentInstanceConfigurationProbePtr(v *ComponentInstanceConfigurationProbeArgs) ComponentInstanceConfigurationProbePtrInput {
	return (*componentInstanceConfigurationProbePtrType)(v)
}

func (*componentInstanceConfigurationProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbe)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbePtrType) ToComponentInstanceConfigurationProbePtrOutput() ComponentInstanceConfigurationProbePtrOutput {
	return i.ToComponentInstanceConfigurationProbePtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbePtrType) ToComponentInstanceConfigurationProbePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbePtrOutput)
}

type ComponentInstanceConfigurationProbeOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbe)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeOutput) ToComponentInstanceConfigurationProbeOutput() ComponentInstanceConfigurationProbeOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeOutput) ToComponentInstanceConfigurationProbeOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeOutput) ToComponentInstanceConfigurationProbePtrOutput() ComponentInstanceConfigurationProbePtrOutput {
	return o.ToComponentInstanceConfigurationProbePtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeOutput) ToComponentInstanceConfigurationProbePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbe) *ComponentInstanceConfigurationProbe {
		return &v
	}).(ComponentInstanceConfigurationProbePtrOutput)
}

// Specifies the component liveness probe.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeOutput) Liveness() ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbe) *ComponentInstanceConfigurationProbeLiveness {
		return v.Liveness
	}).(ComponentInstanceConfigurationProbeLivenessPtrOutput)
}

// Specifies the component service probe.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeOutput) Readiness() ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbe) *ComponentInstanceConfigurationProbeReadiness {
		return v.Readiness
	}).(ComponentInstanceConfigurationProbeReadinessPtrOutput)
}

type ComponentInstanceConfigurationProbePtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbe)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbePtrOutput) ToComponentInstanceConfigurationProbePtrOutput() ComponentInstanceConfigurationProbePtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbePtrOutput) ToComponentInstanceConfigurationProbePtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbePtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbePtrOutput) Elem() ComponentInstanceConfigurationProbeOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbe) ComponentInstanceConfigurationProbe {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbe
		return ret
	}).(ComponentInstanceConfigurationProbeOutput)
}

// Specifies the component liveness probe.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbePtrOutput) Liveness() ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbe) *ComponentInstanceConfigurationProbeLiveness {
		if v == nil {
			return nil
		}
		return v.Liveness
	}).(ComponentInstanceConfigurationProbeLivenessPtrOutput)
}

// Specifies the component service probe.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbePtrOutput) Readiness() ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbe) *ComponentInstanceConfigurationProbeReadiness {
		if v == nil {
			return nil
		}
		return v.Readiness
	}).(ComponentInstanceConfigurationProbeReadinessPtrOutput)
}

type ComponentInstanceConfigurationProbeLiveness struct {
	// Specifies the commands. Required if `type` is **command**.
	// The object structure is documented below.
	CommandParam *ComponentInstanceConfigurationProbeLivenessCommandParam `pulumi:"commandParam"`
	// Specifies the interval between the startup and detection.
	Delay *int `pulumi:"delay"`
	// Specifies the commands. Required if `type` is **http**.
	// The object structure is documented below.
	HttpParam *ComponentInstanceConfigurationProbeLivenessHttpParam `pulumi:"httpParam"`
	// Specifies the commands. Required if `type` is **tcp**.
	// The object structure is documented below.
	TcpParam *ComponentInstanceConfigurationProbeLivenessTcpParam `pulumi:"tcpParam"`
	// Specifies the detection timeout interval.
	Timeout *int `pulumi:"timeout"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
}

// ComponentInstanceConfigurationProbeLivenessInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessArgs and ComponentInstanceConfigurationProbeLivenessOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessInput` via:
//
//	ComponentInstanceConfigurationProbeLivenessArgs{...}
type ComponentInstanceConfigurationProbeLivenessInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessOutput() ComponentInstanceConfigurationProbeLivenessOutput
	ToComponentInstanceConfigurationProbeLivenessOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessOutput
}

type ComponentInstanceConfigurationProbeLivenessArgs struct {
	// Specifies the commands. Required if `type` is **command**.
	// The object structure is documented below.
	CommandParam ComponentInstanceConfigurationProbeLivenessCommandParamPtrInput `pulumi:"commandParam"`
	// Specifies the interval between the startup and detection.
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Specifies the commands. Required if `type` is **http**.
	// The object structure is documented below.
	HttpParam ComponentInstanceConfigurationProbeLivenessHttpParamPtrInput `pulumi:"httpParam"`
	// Specifies the commands. Required if `type` is **tcp**.
	// The object structure is documented below.
	TcpParam ComponentInstanceConfigurationProbeLivenessTcpParamPtrInput `pulumi:"tcpParam"`
	// Specifies the detection timeout interval.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentInstanceConfigurationProbeLivenessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLiveness)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeLivenessArgs) ToComponentInstanceConfigurationProbeLivenessOutput() ComponentInstanceConfigurationProbeLivenessOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessArgs) ToComponentInstanceConfigurationProbeLivenessOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessOutput)
}

func (i ComponentInstanceConfigurationProbeLivenessArgs) ToComponentInstanceConfigurationProbeLivenessPtrOutput() ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessArgs) ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessOutput).ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeLivenessPtrInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessArgs, ComponentInstanceConfigurationProbeLivenessPtr and ComponentInstanceConfigurationProbeLivenessPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeLivenessArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeLivenessPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessPtrOutput() ComponentInstanceConfigurationProbeLivenessPtrOutput
	ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessPtrOutput
}

type componentInstanceConfigurationProbeLivenessPtrType ComponentInstanceConfigurationProbeLivenessArgs

func ComponentInstanceConfigurationProbeLivenessPtr(v *ComponentInstanceConfigurationProbeLivenessArgs) ComponentInstanceConfigurationProbeLivenessPtrInput {
	return (*componentInstanceConfigurationProbeLivenessPtrType)(v)
}

func (*componentInstanceConfigurationProbeLivenessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLiveness)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeLivenessPtrType) ToComponentInstanceConfigurationProbeLivenessPtrOutput() ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeLivenessPtrType) ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessPtrOutput)
}

type ComponentInstanceConfigurationProbeLivenessOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLiveness)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessOutput) ToComponentInstanceConfigurationProbeLivenessOutput() ComponentInstanceConfigurationProbeLivenessOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessOutput) ToComponentInstanceConfigurationProbeLivenessOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessOutput) ToComponentInstanceConfigurationProbeLivenessPtrOutput() ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return o.ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeLivenessOutput) ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLiveness {
		return &v
	}).(ComponentInstanceConfigurationProbeLivenessPtrOutput)
}

// Specifies the commands. Required if `type` is **command**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeLivenessOutput) CommandParam() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLivenessCommandParam {
		return v.CommandParam
	}).(ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput)
}

// Specifies the interval between the startup and detection.
func (o ComponentInstanceConfigurationProbeLivenessOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLiveness) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Specifies the commands. Required if `type` is **http**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeLivenessOutput) HttpParam() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLivenessHttpParam {
		return v.HttpParam
	}).(ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput)
}

// Specifies the commands. Required if `type` is **tcp**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeLivenessOutput) TcpParam() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLivenessTcpParam {
		return v.TcpParam
	}).(ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput)
}

// Specifies the detection timeout interval.
func (o ComponentInstanceConfigurationProbeLivenessOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLiveness) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationProbeLivenessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLiveness) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationProbeLivenessPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLiveness)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) ToComponentInstanceConfigurationProbeLivenessPtrOutput() ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) ToComponentInstanceConfigurationProbeLivenessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) Elem() ComponentInstanceConfigurationProbeLivenessOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) ComponentInstanceConfigurationProbeLiveness {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeLiveness
		return ret
	}).(ComponentInstanceConfigurationProbeLivenessOutput)
}

// Specifies the commands. Required if `type` is **command**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) CommandParam() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLivenessCommandParam {
		if v == nil {
			return nil
		}
		return v.CommandParam
	}).(ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput)
}

// Specifies the interval between the startup and detection.
func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) *int {
		if v == nil {
			return nil
		}
		return v.Delay
	}).(pulumi.IntPtrOutput)
}

// Specifies the commands. Required if `type` is **http**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) HttpParam() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLivenessHttpParam {
		if v == nil {
			return nil
		}
		return v.HttpParam
	}).(ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput)
}

// Specifies the commands. Required if `type` is **tcp**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) TcpParam() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) *ComponentInstanceConfigurationProbeLivenessTcpParam {
		if v == nil {
			return nil
		}
		return v.TcpParam
	}).(ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput)
}

// Specifies the detection timeout interval.
func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationProbeLivenessPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLiveness) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationProbeLivenessCommandParam struct {
	// Specifies the command list.
	Commands []string `pulumi:"commands"`
}

// ComponentInstanceConfigurationProbeLivenessCommandParamInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessCommandParamArgs and ComponentInstanceConfigurationProbeLivenessCommandParamOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessCommandParamInput` via:
//
//	ComponentInstanceConfigurationProbeLivenessCommandParamArgs{...}
type ComponentInstanceConfigurationProbeLivenessCommandParamInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessCommandParamOutput() ComponentInstanceConfigurationProbeLivenessCommandParamOutput
	ToComponentInstanceConfigurationProbeLivenessCommandParamOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamOutput
}

type ComponentInstanceConfigurationProbeLivenessCommandParamArgs struct {
	// Specifies the command list.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ComponentInstanceConfigurationProbeLivenessCommandParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessCommandParam)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeLivenessCommandParamArgs) ToComponentInstanceConfigurationProbeLivenessCommandParamOutput() ComponentInstanceConfigurationProbeLivenessCommandParamOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessCommandParamOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessCommandParamArgs) ToComponentInstanceConfigurationProbeLivenessCommandParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessCommandParamOutput)
}

func (i ComponentInstanceConfigurationProbeLivenessCommandParamArgs) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessCommandParamArgs) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessCommandParamOutput).ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeLivenessCommandParamPtrInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessCommandParamArgs, ComponentInstanceConfigurationProbeLivenessCommandParamPtr and ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessCommandParamPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeLivenessCommandParamArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeLivenessCommandParamPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput
	ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput
}

type componentInstanceConfigurationProbeLivenessCommandParamPtrType ComponentInstanceConfigurationProbeLivenessCommandParamArgs

func ComponentInstanceConfigurationProbeLivenessCommandParamPtr(v *ComponentInstanceConfigurationProbeLivenessCommandParamArgs) ComponentInstanceConfigurationProbeLivenessCommandParamPtrInput {
	return (*componentInstanceConfigurationProbeLivenessCommandParamPtrType)(v)
}

func (*componentInstanceConfigurationProbeLivenessCommandParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLivenessCommandParam)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeLivenessCommandParamPtrType) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeLivenessCommandParamPtrType) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput)
}

type ComponentInstanceConfigurationProbeLivenessCommandParamOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessCommandParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessCommandParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamOutput) ToComponentInstanceConfigurationProbeLivenessCommandParamOutput() ComponentInstanceConfigurationProbeLivenessCommandParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamOutput) ToComponentInstanceConfigurationProbeLivenessCommandParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamOutput) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return o.ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamOutput) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeLivenessCommandParam) *ComponentInstanceConfigurationProbeLivenessCommandParam {
		return &v
	}).(ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationProbeLivenessCommandParamOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLivenessCommandParam) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLivenessCommandParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput() ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput) ToComponentInstanceConfigurationProbeLivenessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput) Elem() ComponentInstanceConfigurationProbeLivenessCommandParamOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessCommandParam) ComponentInstanceConfigurationProbeLivenessCommandParam {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeLivenessCommandParam
		return ret
	}).(ComponentInstanceConfigurationProbeLivenessCommandParamOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessCommandParam) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationProbeLivenessHttpParam struct {
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host *string `pulumi:"host"`
	// Specifies the request path.
	Path string `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port int `pulumi:"port"`
	// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
	Scheme string `pulumi:"scheme"`
}

// ComponentInstanceConfigurationProbeLivenessHttpParamInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessHttpParamArgs and ComponentInstanceConfigurationProbeLivenessHttpParamOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessHttpParamInput` via:
//
//	ComponentInstanceConfigurationProbeLivenessHttpParamArgs{...}
type ComponentInstanceConfigurationProbeLivenessHttpParamInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessHttpParamOutput() ComponentInstanceConfigurationProbeLivenessHttpParamOutput
	ToComponentInstanceConfigurationProbeLivenessHttpParamOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamOutput
}

type ComponentInstanceConfigurationProbeLivenessHttpParamArgs struct {
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Specifies the request path.
	Path pulumi.StringInput `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (ComponentInstanceConfigurationProbeLivenessHttpParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessHttpParam)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeLivenessHttpParamArgs) ToComponentInstanceConfigurationProbeLivenessHttpParamOutput() ComponentInstanceConfigurationProbeLivenessHttpParamOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessHttpParamOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessHttpParamArgs) ToComponentInstanceConfigurationProbeLivenessHttpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessHttpParamOutput)
}

func (i ComponentInstanceConfigurationProbeLivenessHttpParamArgs) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessHttpParamArgs) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessHttpParamOutput).ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeLivenessHttpParamPtrInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessHttpParamArgs, ComponentInstanceConfigurationProbeLivenessHttpParamPtr and ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessHttpParamPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeLivenessHttpParamArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeLivenessHttpParamPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput
	ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput
}

type componentInstanceConfigurationProbeLivenessHttpParamPtrType ComponentInstanceConfigurationProbeLivenessHttpParamArgs

func ComponentInstanceConfigurationProbeLivenessHttpParamPtr(v *ComponentInstanceConfigurationProbeLivenessHttpParamArgs) ComponentInstanceConfigurationProbeLivenessHttpParamPtrInput {
	return (*componentInstanceConfigurationProbeLivenessHttpParamPtrType)(v)
}

func (*componentInstanceConfigurationProbeLivenessHttpParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLivenessHttpParam)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeLivenessHttpParamPtrType) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeLivenessHttpParamPtrType) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput)
}

type ComponentInstanceConfigurationProbeLivenessHttpParamOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessHttpParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessHttpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) ToComponentInstanceConfigurationProbeLivenessHttpParamOutput() ComponentInstanceConfigurationProbeLivenessHttpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) ToComponentInstanceConfigurationProbeLivenessHttpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return o.ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeLivenessHttpParam) *ComponentInstanceConfigurationProbeLivenessHttpParam {
		return &v
	}).(ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLivenessHttpParam) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLivenessHttpParam) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLivenessHttpParam) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLivenessHttpParam) string { return v.Scheme }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLivenessHttpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) ToComponentInstanceConfigurationProbeLivenessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) Elem() ComponentInstanceConfigurationProbeLivenessHttpParamOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessHttpParam) ComponentInstanceConfigurationProbeLivenessHttpParam {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeLivenessHttpParam
		return ret
	}).(ComponentInstanceConfigurationProbeLivenessHttpParamOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessHttpParam) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessHttpParam) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessHttpParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
func (o ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessHttpParam) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationProbeLivenessTcpParam struct {
	// Specifies the listening port of the application component process.
	Port int `pulumi:"port"`
}

// ComponentInstanceConfigurationProbeLivenessTcpParamInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessTcpParamArgs and ComponentInstanceConfigurationProbeLivenessTcpParamOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessTcpParamInput` via:
//
//	ComponentInstanceConfigurationProbeLivenessTcpParamArgs{...}
type ComponentInstanceConfigurationProbeLivenessTcpParamInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessTcpParamOutput() ComponentInstanceConfigurationProbeLivenessTcpParamOutput
	ToComponentInstanceConfigurationProbeLivenessTcpParamOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamOutput
}

type ComponentInstanceConfigurationProbeLivenessTcpParamArgs struct {
	// Specifies the listening port of the application component process.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ComponentInstanceConfigurationProbeLivenessTcpParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessTcpParam)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeLivenessTcpParamArgs) ToComponentInstanceConfigurationProbeLivenessTcpParamOutput() ComponentInstanceConfigurationProbeLivenessTcpParamOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessTcpParamOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessTcpParamArgs) ToComponentInstanceConfigurationProbeLivenessTcpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessTcpParamOutput)
}

func (i ComponentInstanceConfigurationProbeLivenessTcpParamArgs) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeLivenessTcpParamArgs) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessTcpParamOutput).ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeLivenessTcpParamPtrInput is an input type that accepts ComponentInstanceConfigurationProbeLivenessTcpParamArgs, ComponentInstanceConfigurationProbeLivenessTcpParamPtr and ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeLivenessTcpParamPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeLivenessTcpParamArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeLivenessTcpParamPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput
	ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput
}

type componentInstanceConfigurationProbeLivenessTcpParamPtrType ComponentInstanceConfigurationProbeLivenessTcpParamArgs

func ComponentInstanceConfigurationProbeLivenessTcpParamPtr(v *ComponentInstanceConfigurationProbeLivenessTcpParamArgs) ComponentInstanceConfigurationProbeLivenessTcpParamPtrInput {
	return (*componentInstanceConfigurationProbeLivenessTcpParamPtrType)(v)
}

func (*componentInstanceConfigurationProbeLivenessTcpParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLivenessTcpParam)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeLivenessTcpParamPtrType) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeLivenessTcpParamPtrType) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput)
}

type ComponentInstanceConfigurationProbeLivenessTcpParamOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessTcpParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessTcpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamOutput) ToComponentInstanceConfigurationProbeLivenessTcpParamOutput() ComponentInstanceConfigurationProbeLivenessTcpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamOutput) ToComponentInstanceConfigurationProbeLivenessTcpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamOutput) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return o.ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamOutput) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeLivenessTcpParam) *ComponentInstanceConfigurationProbeLivenessTcpParam {
		return &v
	}).(ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeLivenessTcpParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeLivenessTcpParam) int { return v.Port }).(pulumi.IntOutput)
}

type ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeLivenessTcpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput() ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput) ToComponentInstanceConfigurationProbeLivenessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput) Elem() ComponentInstanceConfigurationProbeLivenessTcpParamOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessTcpParam) ComponentInstanceConfigurationProbeLivenessTcpParam {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeLivenessTcpParam
		return ret
	}).(ComponentInstanceConfigurationProbeLivenessTcpParamOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeLivenessTcpParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ComponentInstanceConfigurationProbeReadiness struct {
	// Specifies the commands. Required if `type` is **command**.
	// The object structure is documented below.
	CommandParam *ComponentInstanceConfigurationProbeReadinessCommandParam `pulumi:"commandParam"`
	// Specifies the interval between the startup and detection.
	Delay *int `pulumi:"delay"`
	// Specifies the commands. Required if `type` is **http**.
	// The object structure is documented below.
	HttpParam *ComponentInstanceConfigurationProbeReadinessHttpParam `pulumi:"httpParam"`
	// Specifies the commands. Required if `type` is **tcp**.
	// The object structure is documented below.
	TcpParam *ComponentInstanceConfigurationProbeReadinessTcpParam `pulumi:"tcpParam"`
	// Specifies the detection timeout interval.
	Timeout *int `pulumi:"timeout"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
}

// ComponentInstanceConfigurationProbeReadinessInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessArgs and ComponentInstanceConfigurationProbeReadinessOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessInput` via:
//
//	ComponentInstanceConfigurationProbeReadinessArgs{...}
type ComponentInstanceConfigurationProbeReadinessInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessOutput() ComponentInstanceConfigurationProbeReadinessOutput
	ToComponentInstanceConfigurationProbeReadinessOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessOutput
}

type ComponentInstanceConfigurationProbeReadinessArgs struct {
	// Specifies the commands. Required if `type` is **command**.
	// The object structure is documented below.
	CommandParam ComponentInstanceConfigurationProbeReadinessCommandParamPtrInput `pulumi:"commandParam"`
	// Specifies the interval between the startup and detection.
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Specifies the commands. Required if `type` is **http**.
	// The object structure is documented below.
	HttpParam ComponentInstanceConfigurationProbeReadinessHttpParamPtrInput `pulumi:"httpParam"`
	// Specifies the commands. Required if `type` is **tcp**.
	// The object structure is documented below.
	TcpParam ComponentInstanceConfigurationProbeReadinessTcpParamPtrInput `pulumi:"tcpParam"`
	// Specifies the detection timeout interval.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentInstanceConfigurationProbeReadinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadiness)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeReadinessArgs) ToComponentInstanceConfigurationProbeReadinessOutput() ComponentInstanceConfigurationProbeReadinessOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessArgs) ToComponentInstanceConfigurationProbeReadinessOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessOutput)
}

func (i ComponentInstanceConfigurationProbeReadinessArgs) ToComponentInstanceConfigurationProbeReadinessPtrOutput() ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessArgs) ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessOutput).ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeReadinessPtrInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessArgs, ComponentInstanceConfigurationProbeReadinessPtr and ComponentInstanceConfigurationProbeReadinessPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeReadinessArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeReadinessPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessPtrOutput() ComponentInstanceConfigurationProbeReadinessPtrOutput
	ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessPtrOutput
}

type componentInstanceConfigurationProbeReadinessPtrType ComponentInstanceConfigurationProbeReadinessArgs

func ComponentInstanceConfigurationProbeReadinessPtr(v *ComponentInstanceConfigurationProbeReadinessArgs) ComponentInstanceConfigurationProbeReadinessPtrInput {
	return (*componentInstanceConfigurationProbeReadinessPtrType)(v)
}

func (*componentInstanceConfigurationProbeReadinessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadiness)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeReadinessPtrType) ToComponentInstanceConfigurationProbeReadinessPtrOutput() ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeReadinessPtrType) ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessPtrOutput)
}

type ComponentInstanceConfigurationProbeReadinessOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadiness)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessOutput) ToComponentInstanceConfigurationProbeReadinessOutput() ComponentInstanceConfigurationProbeReadinessOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessOutput) ToComponentInstanceConfigurationProbeReadinessOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessOutput) ToComponentInstanceConfigurationProbeReadinessPtrOutput() ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return o.ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeReadinessOutput) ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadiness {
		return &v
	}).(ComponentInstanceConfigurationProbeReadinessPtrOutput)
}

// Specifies the commands. Required if `type` is **command**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeReadinessOutput) CommandParam() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadinessCommandParam {
		return v.CommandParam
	}).(ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput)
}

// Specifies the interval between the startup and detection.
func (o ComponentInstanceConfigurationProbeReadinessOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadiness) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Specifies the commands. Required if `type` is **http**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeReadinessOutput) HttpParam() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadinessHttpParam {
		return v.HttpParam
	}).(ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput)
}

// Specifies the commands. Required if `type` is **tcp**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeReadinessOutput) TcpParam() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadinessTcpParam {
		return v.TcpParam
	}).(ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput)
}

// Specifies the detection timeout interval.
func (o ComponentInstanceConfigurationProbeReadinessOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadiness) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationProbeReadinessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadiness) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationProbeReadinessPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadiness)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) ToComponentInstanceConfigurationProbeReadinessPtrOutput() ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) ToComponentInstanceConfigurationProbeReadinessPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) Elem() ComponentInstanceConfigurationProbeReadinessOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) ComponentInstanceConfigurationProbeReadiness {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeReadiness
		return ret
	}).(ComponentInstanceConfigurationProbeReadinessOutput)
}

// Specifies the commands. Required if `type` is **command**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) CommandParam() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadinessCommandParam {
		if v == nil {
			return nil
		}
		return v.CommandParam
	}).(ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput)
}

// Specifies the interval between the startup and detection.
func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) *int {
		if v == nil {
			return nil
		}
		return v.Delay
	}).(pulumi.IntPtrOutput)
}

// Specifies the commands. Required if `type` is **http**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) HttpParam() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadinessHttpParam {
		if v == nil {
			return nil
		}
		return v.HttpParam
	}).(ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput)
}

// Specifies the commands. Required if `type` is **tcp**.
// The object structure is documented below.
func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) TcpParam() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) *ComponentInstanceConfigurationProbeReadinessTcpParam {
		if v == nil {
			return nil
		}
		return v.TcpParam
	}).(ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput)
}

// Specifies the detection timeout interval.
func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationProbeReadinessPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadiness) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationProbeReadinessCommandParam struct {
	// Specifies the command list.
	Commands []string `pulumi:"commands"`
}

// ComponentInstanceConfigurationProbeReadinessCommandParamInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessCommandParamArgs and ComponentInstanceConfigurationProbeReadinessCommandParamOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessCommandParamInput` via:
//
//	ComponentInstanceConfigurationProbeReadinessCommandParamArgs{...}
type ComponentInstanceConfigurationProbeReadinessCommandParamInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessCommandParamOutput() ComponentInstanceConfigurationProbeReadinessCommandParamOutput
	ToComponentInstanceConfigurationProbeReadinessCommandParamOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamOutput
}

type ComponentInstanceConfigurationProbeReadinessCommandParamArgs struct {
	// Specifies the command list.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
}

func (ComponentInstanceConfigurationProbeReadinessCommandParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessCommandParam)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeReadinessCommandParamArgs) ToComponentInstanceConfigurationProbeReadinessCommandParamOutput() ComponentInstanceConfigurationProbeReadinessCommandParamOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessCommandParamOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessCommandParamArgs) ToComponentInstanceConfigurationProbeReadinessCommandParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessCommandParamOutput)
}

func (i ComponentInstanceConfigurationProbeReadinessCommandParamArgs) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessCommandParamArgs) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessCommandParamOutput).ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeReadinessCommandParamPtrInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessCommandParamArgs, ComponentInstanceConfigurationProbeReadinessCommandParamPtr and ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessCommandParamPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeReadinessCommandParamArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeReadinessCommandParamPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput
	ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput
}

type componentInstanceConfigurationProbeReadinessCommandParamPtrType ComponentInstanceConfigurationProbeReadinessCommandParamArgs

func ComponentInstanceConfigurationProbeReadinessCommandParamPtr(v *ComponentInstanceConfigurationProbeReadinessCommandParamArgs) ComponentInstanceConfigurationProbeReadinessCommandParamPtrInput {
	return (*componentInstanceConfigurationProbeReadinessCommandParamPtrType)(v)
}

func (*componentInstanceConfigurationProbeReadinessCommandParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadinessCommandParam)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeReadinessCommandParamPtrType) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeReadinessCommandParamPtrType) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput)
}

type ComponentInstanceConfigurationProbeReadinessCommandParamOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessCommandParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessCommandParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamOutput) ToComponentInstanceConfigurationProbeReadinessCommandParamOutput() ComponentInstanceConfigurationProbeReadinessCommandParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamOutput) ToComponentInstanceConfigurationProbeReadinessCommandParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamOutput) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return o.ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamOutput) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeReadinessCommandParam) *ComponentInstanceConfigurationProbeReadinessCommandParam {
		return &v
	}).(ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationProbeReadinessCommandParamOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadinessCommandParam) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadinessCommandParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput() ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput) ToComponentInstanceConfigurationProbeReadinessCommandParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput) Elem() ComponentInstanceConfigurationProbeReadinessCommandParamOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessCommandParam) ComponentInstanceConfigurationProbeReadinessCommandParam {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeReadinessCommandParam
		return ret
	}).(ComponentInstanceConfigurationProbeReadinessCommandParamOutput)
}

// Specifies the command list.
func (o ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessCommandParam) []string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationProbeReadinessHttpParam struct {
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host *string `pulumi:"host"`
	// Specifies the request path.
	Path string `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port int `pulumi:"port"`
	// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
	Scheme string `pulumi:"scheme"`
}

// ComponentInstanceConfigurationProbeReadinessHttpParamInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessHttpParamArgs and ComponentInstanceConfigurationProbeReadinessHttpParamOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessHttpParamInput` via:
//
//	ComponentInstanceConfigurationProbeReadinessHttpParamArgs{...}
type ComponentInstanceConfigurationProbeReadinessHttpParamInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessHttpParamOutput() ComponentInstanceConfigurationProbeReadinessHttpParamOutput
	ToComponentInstanceConfigurationProbeReadinessHttpParamOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamOutput
}

type ComponentInstanceConfigurationProbeReadinessHttpParamArgs struct {
	// Specifies the custom IP address. The defualt address is pod IP address.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Specifies the request path.
	Path pulumi.StringInput `pulumi:"path"`
	// Specifies the listening port of the application component process.
	Port pulumi.IntInput `pulumi:"port"`
	// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
	Scheme pulumi.StringInput `pulumi:"scheme"`
}

func (ComponentInstanceConfigurationProbeReadinessHttpParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessHttpParam)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeReadinessHttpParamArgs) ToComponentInstanceConfigurationProbeReadinessHttpParamOutput() ComponentInstanceConfigurationProbeReadinessHttpParamOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessHttpParamOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessHttpParamArgs) ToComponentInstanceConfigurationProbeReadinessHttpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessHttpParamOutput)
}

func (i ComponentInstanceConfigurationProbeReadinessHttpParamArgs) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessHttpParamArgs) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessHttpParamOutput).ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeReadinessHttpParamPtrInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessHttpParamArgs, ComponentInstanceConfigurationProbeReadinessHttpParamPtr and ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessHttpParamPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeReadinessHttpParamArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeReadinessHttpParamPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput
	ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput
}

type componentInstanceConfigurationProbeReadinessHttpParamPtrType ComponentInstanceConfigurationProbeReadinessHttpParamArgs

func ComponentInstanceConfigurationProbeReadinessHttpParamPtr(v *ComponentInstanceConfigurationProbeReadinessHttpParamArgs) ComponentInstanceConfigurationProbeReadinessHttpParamPtrInput {
	return (*componentInstanceConfigurationProbeReadinessHttpParamPtrType)(v)
}

func (*componentInstanceConfigurationProbeReadinessHttpParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadinessHttpParam)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeReadinessHttpParamPtrType) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeReadinessHttpParamPtrType) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput)
}

type ComponentInstanceConfigurationProbeReadinessHttpParamOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessHttpParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessHttpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) ToComponentInstanceConfigurationProbeReadinessHttpParamOutput() ComponentInstanceConfigurationProbeReadinessHttpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) ToComponentInstanceConfigurationProbeReadinessHttpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return o.ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeReadinessHttpParam) *ComponentInstanceConfigurationProbeReadinessHttpParam {
		return &v
	}).(ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadinessHttpParam) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadinessHttpParam) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadinessHttpParam) int { return v.Port }).(pulumi.IntOutput)
}

// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadinessHttpParam) string { return v.Scheme }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadinessHttpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) ToComponentInstanceConfigurationProbeReadinessHttpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) Elem() ComponentInstanceConfigurationProbeReadinessHttpParamOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessHttpParam) ComponentInstanceConfigurationProbeReadinessHttpParam {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeReadinessHttpParam
		return ret
	}).(ComponentInstanceConfigurationProbeReadinessHttpParamOutput)
}

// Specifies the custom IP address. The defualt address is pod IP address.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessHttpParam) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessHttpParam) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessHttpParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
func (o ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessHttpParam) *string {
		if v == nil {
			return nil
		}
		return &v.Scheme
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationProbeReadinessTcpParam struct {
	// Specifies the listening port of the application component process.
	Port int `pulumi:"port"`
}

// ComponentInstanceConfigurationProbeReadinessTcpParamInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessTcpParamArgs and ComponentInstanceConfigurationProbeReadinessTcpParamOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessTcpParamInput` via:
//
//	ComponentInstanceConfigurationProbeReadinessTcpParamArgs{...}
type ComponentInstanceConfigurationProbeReadinessTcpParamInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessTcpParamOutput() ComponentInstanceConfigurationProbeReadinessTcpParamOutput
	ToComponentInstanceConfigurationProbeReadinessTcpParamOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamOutput
}

type ComponentInstanceConfigurationProbeReadinessTcpParamArgs struct {
	// Specifies the listening port of the application component process.
	Port pulumi.IntInput `pulumi:"port"`
}

func (ComponentInstanceConfigurationProbeReadinessTcpParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessTcpParam)(nil)).Elem()
}

func (i ComponentInstanceConfigurationProbeReadinessTcpParamArgs) ToComponentInstanceConfigurationProbeReadinessTcpParamOutput() ComponentInstanceConfigurationProbeReadinessTcpParamOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessTcpParamOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessTcpParamArgs) ToComponentInstanceConfigurationProbeReadinessTcpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessTcpParamOutput)
}

func (i ComponentInstanceConfigurationProbeReadinessTcpParamArgs) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationProbeReadinessTcpParamArgs) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessTcpParamOutput).ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationProbeReadinessTcpParamPtrInput is an input type that accepts ComponentInstanceConfigurationProbeReadinessTcpParamArgs, ComponentInstanceConfigurationProbeReadinessTcpParamPtr and ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationProbeReadinessTcpParamPtrInput` via:
//
//	        ComponentInstanceConfigurationProbeReadinessTcpParamArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationProbeReadinessTcpParamPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput
	ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput
}

type componentInstanceConfigurationProbeReadinessTcpParamPtrType ComponentInstanceConfigurationProbeReadinessTcpParamArgs

func ComponentInstanceConfigurationProbeReadinessTcpParamPtr(v *ComponentInstanceConfigurationProbeReadinessTcpParamArgs) ComponentInstanceConfigurationProbeReadinessTcpParamPtrInput {
	return (*componentInstanceConfigurationProbeReadinessTcpParamPtrType)(v)
}

func (*componentInstanceConfigurationProbeReadinessTcpParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadinessTcpParam)(nil)).Elem()
}

func (i *componentInstanceConfigurationProbeReadinessTcpParamPtrType) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return i.ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationProbeReadinessTcpParamPtrType) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput)
}

type ComponentInstanceConfigurationProbeReadinessTcpParamOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessTcpParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessTcpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamOutput) ToComponentInstanceConfigurationProbeReadinessTcpParamOutput() ComponentInstanceConfigurationProbeReadinessTcpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamOutput) ToComponentInstanceConfigurationProbeReadinessTcpParamOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamOutput) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return o.ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamOutput) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationProbeReadinessTcpParam) *ComponentInstanceConfigurationProbeReadinessTcpParam {
		return &v
	}).(ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeReadinessTcpParamOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationProbeReadinessTcpParam) int { return v.Port }).(pulumi.IntOutput)
}

type ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationProbeReadinessTcpParam)(nil)).Elem()
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput() ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput) ToComponentInstanceConfigurationProbeReadinessTcpParamPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput) Elem() ComponentInstanceConfigurationProbeReadinessTcpParamOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessTcpParam) ComponentInstanceConfigurationProbeReadinessTcpParam {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationProbeReadinessTcpParam
		return ret
	}).(ComponentInstanceConfigurationProbeReadinessTcpParamOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationProbeReadinessTcpParam) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ComponentInstanceConfigurationScheduler struct {
	// Specifies the commands.
	// The object structure is documented below.
	Affinity *ComponentInstanceConfigurationSchedulerAffinity `pulumi:"affinity"`
	// Specifies the commands.
	// The object structure is documented below.
	AntiAffinity *ComponentInstanceConfigurationSchedulerAntiAffinity `pulumi:"antiAffinity"`
}

// ComponentInstanceConfigurationSchedulerInput is an input type that accepts ComponentInstanceConfigurationSchedulerArgs and ComponentInstanceConfigurationSchedulerOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationSchedulerInput` via:
//
//	ComponentInstanceConfigurationSchedulerArgs{...}
type ComponentInstanceConfigurationSchedulerInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationSchedulerOutput() ComponentInstanceConfigurationSchedulerOutput
	ToComponentInstanceConfigurationSchedulerOutputWithContext(context.Context) ComponentInstanceConfigurationSchedulerOutput
}

type ComponentInstanceConfigurationSchedulerArgs struct {
	// Specifies the commands.
	// The object structure is documented below.
	Affinity ComponentInstanceConfigurationSchedulerAffinityPtrInput `pulumi:"affinity"`
	// Specifies the commands.
	// The object structure is documented below.
	AntiAffinity ComponentInstanceConfigurationSchedulerAntiAffinityPtrInput `pulumi:"antiAffinity"`
}

func (ComponentInstanceConfigurationSchedulerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationScheduler)(nil)).Elem()
}

func (i ComponentInstanceConfigurationSchedulerArgs) ToComponentInstanceConfigurationSchedulerOutput() ComponentInstanceConfigurationSchedulerOutput {
	return i.ToComponentInstanceConfigurationSchedulerOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationSchedulerArgs) ToComponentInstanceConfigurationSchedulerOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerOutput)
}

func (i ComponentInstanceConfigurationSchedulerArgs) ToComponentInstanceConfigurationSchedulerPtrOutput() ComponentInstanceConfigurationSchedulerPtrOutput {
	return i.ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationSchedulerArgs) ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerOutput).ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationSchedulerPtrInput is an input type that accepts ComponentInstanceConfigurationSchedulerArgs, ComponentInstanceConfigurationSchedulerPtr and ComponentInstanceConfigurationSchedulerPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationSchedulerPtrInput` via:
//
//	        ComponentInstanceConfigurationSchedulerArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationSchedulerPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationSchedulerPtrOutput() ComponentInstanceConfigurationSchedulerPtrOutput
	ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(context.Context) ComponentInstanceConfigurationSchedulerPtrOutput
}

type componentInstanceConfigurationSchedulerPtrType ComponentInstanceConfigurationSchedulerArgs

func ComponentInstanceConfigurationSchedulerPtr(v *ComponentInstanceConfigurationSchedulerArgs) ComponentInstanceConfigurationSchedulerPtrInput {
	return (*componentInstanceConfigurationSchedulerPtrType)(v)
}

func (*componentInstanceConfigurationSchedulerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationScheduler)(nil)).Elem()
}

func (i *componentInstanceConfigurationSchedulerPtrType) ToComponentInstanceConfigurationSchedulerPtrOutput() ComponentInstanceConfigurationSchedulerPtrOutput {
	return i.ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationSchedulerPtrType) ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerPtrOutput)
}

type ComponentInstanceConfigurationSchedulerOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationSchedulerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationScheduler)(nil)).Elem()
}

func (o ComponentInstanceConfigurationSchedulerOutput) ToComponentInstanceConfigurationSchedulerOutput() ComponentInstanceConfigurationSchedulerOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerOutput) ToComponentInstanceConfigurationSchedulerOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerOutput) ToComponentInstanceConfigurationSchedulerPtrOutput() ComponentInstanceConfigurationSchedulerPtrOutput {
	return o.ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationSchedulerOutput) ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationScheduler) *ComponentInstanceConfigurationScheduler {
		return &v
	}).(ComponentInstanceConfigurationSchedulerPtrOutput)
}

// Specifies the commands.
// The object structure is documented below.
func (o ComponentInstanceConfigurationSchedulerOutput) Affinity() ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationScheduler) *ComponentInstanceConfigurationSchedulerAffinity {
		return v.Affinity
	}).(ComponentInstanceConfigurationSchedulerAffinityPtrOutput)
}

// Specifies the commands.
// The object structure is documented below.
func (o ComponentInstanceConfigurationSchedulerOutput) AntiAffinity() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationScheduler) *ComponentInstanceConfigurationSchedulerAntiAffinity {
		return v.AntiAffinity
	}).(ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput)
}

type ComponentInstanceConfigurationSchedulerPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationSchedulerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationScheduler)(nil)).Elem()
}

func (o ComponentInstanceConfigurationSchedulerPtrOutput) ToComponentInstanceConfigurationSchedulerPtrOutput() ComponentInstanceConfigurationSchedulerPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerPtrOutput) ToComponentInstanceConfigurationSchedulerPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerPtrOutput) Elem() ComponentInstanceConfigurationSchedulerOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationScheduler) ComponentInstanceConfigurationScheduler {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationScheduler
		return ret
	}).(ComponentInstanceConfigurationSchedulerOutput)
}

// Specifies the commands.
// The object structure is documented below.
func (o ComponentInstanceConfigurationSchedulerPtrOutput) Affinity() ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationScheduler) *ComponentInstanceConfigurationSchedulerAffinity {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(ComponentInstanceConfigurationSchedulerAffinityPtrOutput)
}

// Specifies the commands.
// The object structure is documented below.
func (o ComponentInstanceConfigurationSchedulerPtrOutput) AntiAffinity() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationScheduler) *ComponentInstanceConfigurationSchedulerAntiAffinity {
		if v == nil {
			return nil
		}
		return v.AntiAffinity
	}).(ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput)
}

type ComponentInstanceConfigurationSchedulerAffinity struct {
	// Specifies the AZ list.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the list of component instance names.
	InstanceNames []string `pulumi:"instanceNames"`
	// Specifies the node private IP address list.
	PrivateIps []string `pulumi:"privateIps"`
}

// ComponentInstanceConfigurationSchedulerAffinityInput is an input type that accepts ComponentInstanceConfigurationSchedulerAffinityArgs and ComponentInstanceConfigurationSchedulerAffinityOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationSchedulerAffinityInput` via:
//
//	ComponentInstanceConfigurationSchedulerAffinityArgs{...}
type ComponentInstanceConfigurationSchedulerAffinityInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationSchedulerAffinityOutput() ComponentInstanceConfigurationSchedulerAffinityOutput
	ToComponentInstanceConfigurationSchedulerAffinityOutputWithContext(context.Context) ComponentInstanceConfigurationSchedulerAffinityOutput
}

type ComponentInstanceConfigurationSchedulerAffinityArgs struct {
	// Specifies the AZ list.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Specifies the list of component instance names.
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Specifies the node private IP address list.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
}

func (ComponentInstanceConfigurationSchedulerAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAffinity)(nil)).Elem()
}

func (i ComponentInstanceConfigurationSchedulerAffinityArgs) ToComponentInstanceConfigurationSchedulerAffinityOutput() ComponentInstanceConfigurationSchedulerAffinityOutput {
	return i.ToComponentInstanceConfigurationSchedulerAffinityOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationSchedulerAffinityArgs) ToComponentInstanceConfigurationSchedulerAffinityOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerAffinityOutput)
}

func (i ComponentInstanceConfigurationSchedulerAffinityArgs) ToComponentInstanceConfigurationSchedulerAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return i.ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationSchedulerAffinityArgs) ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerAffinityOutput).ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationSchedulerAffinityPtrInput is an input type that accepts ComponentInstanceConfigurationSchedulerAffinityArgs, ComponentInstanceConfigurationSchedulerAffinityPtr and ComponentInstanceConfigurationSchedulerAffinityPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationSchedulerAffinityPtrInput` via:
//
//	        ComponentInstanceConfigurationSchedulerAffinityArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationSchedulerAffinityPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationSchedulerAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAffinityPtrOutput
	ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(context.Context) ComponentInstanceConfigurationSchedulerAffinityPtrOutput
}

type componentInstanceConfigurationSchedulerAffinityPtrType ComponentInstanceConfigurationSchedulerAffinityArgs

func ComponentInstanceConfigurationSchedulerAffinityPtr(v *ComponentInstanceConfigurationSchedulerAffinityArgs) ComponentInstanceConfigurationSchedulerAffinityPtrInput {
	return (*componentInstanceConfigurationSchedulerAffinityPtrType)(v)
}

func (*componentInstanceConfigurationSchedulerAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationSchedulerAffinity)(nil)).Elem()
}

func (i *componentInstanceConfigurationSchedulerAffinityPtrType) ToComponentInstanceConfigurationSchedulerAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return i.ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationSchedulerAffinityPtrType) ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerAffinityPtrOutput)
}

type ComponentInstanceConfigurationSchedulerAffinityOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationSchedulerAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAffinity)(nil)).Elem()
}

func (o ComponentInstanceConfigurationSchedulerAffinityOutput) ToComponentInstanceConfigurationSchedulerAffinityOutput() ComponentInstanceConfigurationSchedulerAffinityOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAffinityOutput) ToComponentInstanceConfigurationSchedulerAffinityOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAffinityOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAffinityOutput) ToComponentInstanceConfigurationSchedulerAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return o.ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationSchedulerAffinityOutput) ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationSchedulerAffinity) *ComponentInstanceConfigurationSchedulerAffinity {
		return &v
	}).(ComponentInstanceConfigurationSchedulerAffinityPtrOutput)
}

// Specifies the AZ list.
func (o ComponentInstanceConfigurationSchedulerAffinityOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationSchedulerAffinity) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Specifies the list of component instance names.
func (o ComponentInstanceConfigurationSchedulerAffinityOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationSchedulerAffinity) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Specifies the node private IP address list.
func (o ComponentInstanceConfigurationSchedulerAffinityOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationSchedulerAffinity) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationSchedulerAffinityPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationSchedulerAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationSchedulerAffinity)(nil)).Elem()
}

func (o ComponentInstanceConfigurationSchedulerAffinityPtrOutput) ToComponentInstanceConfigurationSchedulerAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAffinityPtrOutput) ToComponentInstanceConfigurationSchedulerAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAffinityPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAffinityPtrOutput) Elem() ComponentInstanceConfigurationSchedulerAffinityOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAffinity) ComponentInstanceConfigurationSchedulerAffinity {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationSchedulerAffinity
		return ret
	}).(ComponentInstanceConfigurationSchedulerAffinityOutput)
}

// Specifies the AZ list.
func (o ComponentInstanceConfigurationSchedulerAffinityPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAffinity) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// Specifies the list of component instance names.
func (o ComponentInstanceConfigurationSchedulerAffinityPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAffinity) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNames
	}).(pulumi.StringArrayOutput)
}

// Specifies the node private IP address list.
func (o ComponentInstanceConfigurationSchedulerAffinityPtrOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAffinity) []string {
		if v == nil {
			return nil
		}
		return v.PrivateIps
	}).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationSchedulerAntiAffinity struct {
	// Specifies the AZ list.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the list of component instance names.
	InstanceNames []string `pulumi:"instanceNames"`
	// Specifies the node private IP address list.
	PrivateIps []string `pulumi:"privateIps"`
}

// ComponentInstanceConfigurationSchedulerAntiAffinityInput is an input type that accepts ComponentInstanceConfigurationSchedulerAntiAffinityArgs and ComponentInstanceConfigurationSchedulerAntiAffinityOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationSchedulerAntiAffinityInput` via:
//
//	ComponentInstanceConfigurationSchedulerAntiAffinityArgs{...}
type ComponentInstanceConfigurationSchedulerAntiAffinityInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationSchedulerAntiAffinityOutput() ComponentInstanceConfigurationSchedulerAntiAffinityOutput
	ToComponentInstanceConfigurationSchedulerAntiAffinityOutputWithContext(context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityOutput
}

type ComponentInstanceConfigurationSchedulerAntiAffinityArgs struct {
	// Specifies the AZ list.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Specifies the list of component instance names.
	InstanceNames pulumi.StringArrayInput `pulumi:"instanceNames"`
	// Specifies the node private IP address list.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
}

func (ComponentInstanceConfigurationSchedulerAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAntiAffinity)(nil)).Elem()
}

func (i ComponentInstanceConfigurationSchedulerAntiAffinityArgs) ToComponentInstanceConfigurationSchedulerAntiAffinityOutput() ComponentInstanceConfigurationSchedulerAntiAffinityOutput {
	return i.ToComponentInstanceConfigurationSchedulerAntiAffinityOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationSchedulerAntiAffinityArgs) ToComponentInstanceConfigurationSchedulerAntiAffinityOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerAntiAffinityOutput)
}

func (i ComponentInstanceConfigurationSchedulerAntiAffinityArgs) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return i.ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationSchedulerAntiAffinityArgs) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerAntiAffinityOutput).ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationSchedulerAntiAffinityPtrInput is an input type that accepts ComponentInstanceConfigurationSchedulerAntiAffinityArgs, ComponentInstanceConfigurationSchedulerAntiAffinityPtr and ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationSchedulerAntiAffinityPtrInput` via:
//
//	        ComponentInstanceConfigurationSchedulerAntiAffinityArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationSchedulerAntiAffinityPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput
	ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput
}

type componentInstanceConfigurationSchedulerAntiAffinityPtrType ComponentInstanceConfigurationSchedulerAntiAffinityArgs

func ComponentInstanceConfigurationSchedulerAntiAffinityPtr(v *ComponentInstanceConfigurationSchedulerAntiAffinityArgs) ComponentInstanceConfigurationSchedulerAntiAffinityPtrInput {
	return (*componentInstanceConfigurationSchedulerAntiAffinityPtrType)(v)
}

func (*componentInstanceConfigurationSchedulerAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationSchedulerAntiAffinity)(nil)).Elem()
}

func (i *componentInstanceConfigurationSchedulerAntiAffinityPtrType) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return i.ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationSchedulerAntiAffinityPtrType) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput)
}

type ComponentInstanceConfigurationSchedulerAntiAffinityOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationSchedulerAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAntiAffinity)(nil)).Elem()
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) ToComponentInstanceConfigurationSchedulerAntiAffinityOutput() ComponentInstanceConfigurationSchedulerAntiAffinityOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) ToComponentInstanceConfigurationSchedulerAntiAffinityOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return o.ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationSchedulerAntiAffinity) *ComponentInstanceConfigurationSchedulerAntiAffinity {
		return &v
	}).(ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput)
}

// Specifies the AZ list.
func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationSchedulerAntiAffinity) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Specifies the list of component instance names.
func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationSchedulerAntiAffinity) []string { return v.InstanceNames }).(pulumi.StringArrayOutput)
}

// Specifies the node private IP address list.
func (o ComponentInstanceConfigurationSchedulerAntiAffinityOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationSchedulerAntiAffinity) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationSchedulerAntiAffinity)(nil)).Elem()
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput() ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) ToComponentInstanceConfigurationSchedulerAntiAffinityPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) Elem() ComponentInstanceConfigurationSchedulerAntiAffinityOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAntiAffinity) ComponentInstanceConfigurationSchedulerAntiAffinity {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationSchedulerAntiAffinity
		return ret
	}).(ComponentInstanceConfigurationSchedulerAntiAffinityOutput)
}

// Specifies the AZ list.
func (o ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAntiAffinity) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// Specifies the list of component instance names.
func (o ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) InstanceNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAntiAffinity) []string {
		if v == nil {
			return nil
		}
		return v.InstanceNames
	}).(pulumi.StringArrayOutput)
}

// Specifies the node private IP address list.
func (o ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationSchedulerAntiAffinity) []string {
		if v == nil {
			return nil
		}
		return v.PrivateIps
	}).(pulumi.StringArrayOutput)
}

type ComponentInstanceConfigurationStorage struct {
	// Specifies the directory mounted to the container.
	// The object structure is documented below.
	Mounts []ComponentInstanceConfigurationStorageMount `pulumi:"mounts"`
	// Specifies the storage parameters.
	// The object structure is documented below.
	Parameter ComponentInstanceConfigurationStorageParameter `pulumi:"parameter"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
}

// ComponentInstanceConfigurationStorageInput is an input type that accepts ComponentInstanceConfigurationStorageArgs and ComponentInstanceConfigurationStorageOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStorageInput` via:
//
//	ComponentInstanceConfigurationStorageArgs{...}
type ComponentInstanceConfigurationStorageInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStorageOutput() ComponentInstanceConfigurationStorageOutput
	ToComponentInstanceConfigurationStorageOutputWithContext(context.Context) ComponentInstanceConfigurationStorageOutput
}

type ComponentInstanceConfigurationStorageArgs struct {
	// Specifies the directory mounted to the container.
	// The object structure is documented below.
	Mounts ComponentInstanceConfigurationStorageMountArrayInput `pulumi:"mounts"`
	// Specifies the storage parameters.
	// The object structure is documented below.
	Parameter ComponentInstanceConfigurationStorageParameterInput `pulumi:"parameter"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentInstanceConfigurationStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStorage)(nil)).Elem()
}

func (i ComponentInstanceConfigurationStorageArgs) ToComponentInstanceConfigurationStorageOutput() ComponentInstanceConfigurationStorageOutput {
	return i.ToComponentInstanceConfigurationStorageOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStorageArgs) ToComponentInstanceConfigurationStorageOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStorageOutput)
}

// ComponentInstanceConfigurationStorageArrayInput is an input type that accepts ComponentInstanceConfigurationStorageArray and ComponentInstanceConfigurationStorageArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStorageArrayInput` via:
//
//	ComponentInstanceConfigurationStorageArray{ ComponentInstanceConfigurationStorageArgs{...} }
type ComponentInstanceConfigurationStorageArrayInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStorageArrayOutput() ComponentInstanceConfigurationStorageArrayOutput
	ToComponentInstanceConfigurationStorageArrayOutputWithContext(context.Context) ComponentInstanceConfigurationStorageArrayOutput
}

type ComponentInstanceConfigurationStorageArray []ComponentInstanceConfigurationStorageInput

func (ComponentInstanceConfigurationStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationStorage)(nil)).Elem()
}

func (i ComponentInstanceConfigurationStorageArray) ToComponentInstanceConfigurationStorageArrayOutput() ComponentInstanceConfigurationStorageArrayOutput {
	return i.ToComponentInstanceConfigurationStorageArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStorageArray) ToComponentInstanceConfigurationStorageArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStorageArrayOutput)
}

type ComponentInstanceConfigurationStorageOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStorage)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStorageOutput) ToComponentInstanceConfigurationStorageOutput() ComponentInstanceConfigurationStorageOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageOutput) ToComponentInstanceConfigurationStorageOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageOutput {
	return o
}

// Specifies the directory mounted to the container.
// The object structure is documented below.
func (o ComponentInstanceConfigurationStorageOutput) Mounts() ComponentInstanceConfigurationStorageMountArrayOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorage) []ComponentInstanceConfigurationStorageMount {
		return v.Mounts
	}).(ComponentInstanceConfigurationStorageMountArrayOutput)
}

// Specifies the storage parameters.
// The object structure is documented below.
func (o ComponentInstanceConfigurationStorageOutput) Parameter() ComponentInstanceConfigurationStorageParameterOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorage) ComponentInstanceConfigurationStorageParameter {
		return v.Parameter
	}).(ComponentInstanceConfigurationStorageParameterOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceConfigurationStorageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorage) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentInstanceConfigurationStorageArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationStorage)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStorageArrayOutput) ToComponentInstanceConfigurationStorageArrayOutput() ComponentInstanceConfigurationStorageArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageArrayOutput) ToComponentInstanceConfigurationStorageArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageArrayOutput) Index(i pulumi.IntInput) ComponentInstanceConfigurationStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceConfigurationStorage {
		return vs[0].([]ComponentInstanceConfigurationStorage)[vs[1].(int)]
	}).(ComponentInstanceConfigurationStorageOutput)
}

type ComponentInstanceConfigurationStorageMount struct {
	// Specifies the request path.
	Path string `pulumi:"path"`
	// Specifies the mounted disk permission is read-only or read-write.
	// + **true**: read-only.
	// + **false**: read-write.
	Readonly bool `pulumi:"readonly"`
	// Specifies the subpath of the mounted disk.
	// This parameter is applicable to `http` type.
	Subpath *string `pulumi:"subpath"`
}

// ComponentInstanceConfigurationStorageMountInput is an input type that accepts ComponentInstanceConfigurationStorageMountArgs and ComponentInstanceConfigurationStorageMountOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStorageMountInput` via:
//
//	ComponentInstanceConfigurationStorageMountArgs{...}
type ComponentInstanceConfigurationStorageMountInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStorageMountOutput() ComponentInstanceConfigurationStorageMountOutput
	ToComponentInstanceConfigurationStorageMountOutputWithContext(context.Context) ComponentInstanceConfigurationStorageMountOutput
}

type ComponentInstanceConfigurationStorageMountArgs struct {
	// Specifies the request path.
	Path pulumi.StringInput `pulumi:"path"`
	// Specifies the mounted disk permission is read-only or read-write.
	// + **true**: read-only.
	// + **false**: read-write.
	Readonly pulumi.BoolInput `pulumi:"readonly"`
	// Specifies the subpath of the mounted disk.
	// This parameter is applicable to `http` type.
	Subpath pulumi.StringPtrInput `pulumi:"subpath"`
}

func (ComponentInstanceConfigurationStorageMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStorageMount)(nil)).Elem()
}

func (i ComponentInstanceConfigurationStorageMountArgs) ToComponentInstanceConfigurationStorageMountOutput() ComponentInstanceConfigurationStorageMountOutput {
	return i.ToComponentInstanceConfigurationStorageMountOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStorageMountArgs) ToComponentInstanceConfigurationStorageMountOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStorageMountOutput)
}

// ComponentInstanceConfigurationStorageMountArrayInput is an input type that accepts ComponentInstanceConfigurationStorageMountArray and ComponentInstanceConfigurationStorageMountArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStorageMountArrayInput` via:
//
//	ComponentInstanceConfigurationStorageMountArray{ ComponentInstanceConfigurationStorageMountArgs{...} }
type ComponentInstanceConfigurationStorageMountArrayInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStorageMountArrayOutput() ComponentInstanceConfigurationStorageMountArrayOutput
	ToComponentInstanceConfigurationStorageMountArrayOutputWithContext(context.Context) ComponentInstanceConfigurationStorageMountArrayOutput
}

type ComponentInstanceConfigurationStorageMountArray []ComponentInstanceConfigurationStorageMountInput

func (ComponentInstanceConfigurationStorageMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationStorageMount)(nil)).Elem()
}

func (i ComponentInstanceConfigurationStorageMountArray) ToComponentInstanceConfigurationStorageMountArrayOutput() ComponentInstanceConfigurationStorageMountArrayOutput {
	return i.ToComponentInstanceConfigurationStorageMountArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStorageMountArray) ToComponentInstanceConfigurationStorageMountArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStorageMountArrayOutput)
}

type ComponentInstanceConfigurationStorageMountOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStorageMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStorageMount)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStorageMountOutput) ToComponentInstanceConfigurationStorageMountOutput() ComponentInstanceConfigurationStorageMountOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageMountOutput) ToComponentInstanceConfigurationStorageMountOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageMountOutput {
	return o
}

// Specifies the request path.
func (o ComponentInstanceConfigurationStorageMountOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorageMount) string { return v.Path }).(pulumi.StringOutput)
}

// Specifies the mounted disk permission is read-only or read-write.
// + **true**: read-only.
// + **false**: read-write.
func (o ComponentInstanceConfigurationStorageMountOutput) Readonly() pulumi.BoolOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorageMount) bool { return v.Readonly }).(pulumi.BoolOutput)
}

// Specifies the subpath of the mounted disk.
// This parameter is applicable to `http` type.
func (o ComponentInstanceConfigurationStorageMountOutput) Subpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorageMount) *string { return v.Subpath }).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationStorageMountArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStorageMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceConfigurationStorageMount)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStorageMountArrayOutput) ToComponentInstanceConfigurationStorageMountArrayOutput() ComponentInstanceConfigurationStorageMountArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageMountArrayOutput) ToComponentInstanceConfigurationStorageMountArrayOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageMountArrayOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageMountArrayOutput) Index(i pulumi.IntInput) ComponentInstanceConfigurationStorageMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceConfigurationStorageMount {
		return vs[0].([]ComponentInstanceConfigurationStorageMount)[vs[1].(int)]
	}).(ComponentInstanceConfigurationStorageMountOutput)
}

type ComponentInstanceConfigurationStorageParameter struct {
	// Specifies the PVC name.
	ClaimName *string `pulumi:"claimName"`
	// Specifies the name of a configuration item or secret.
	Name *string `pulumi:"name"`
	// Specifies the request path.
	Path *string `pulumi:"path"`
}

// ComponentInstanceConfigurationStorageParameterInput is an input type that accepts ComponentInstanceConfigurationStorageParameterArgs and ComponentInstanceConfigurationStorageParameterOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStorageParameterInput` via:
//
//	ComponentInstanceConfigurationStorageParameterArgs{...}
type ComponentInstanceConfigurationStorageParameterInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStorageParameterOutput() ComponentInstanceConfigurationStorageParameterOutput
	ToComponentInstanceConfigurationStorageParameterOutputWithContext(context.Context) ComponentInstanceConfigurationStorageParameterOutput
}

type ComponentInstanceConfigurationStorageParameterArgs struct {
	// Specifies the PVC name.
	ClaimName pulumi.StringPtrInput `pulumi:"claimName"`
	// Specifies the name of a configuration item or secret.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the request path.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ComponentInstanceConfigurationStorageParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStorageParameter)(nil)).Elem()
}

func (i ComponentInstanceConfigurationStorageParameterArgs) ToComponentInstanceConfigurationStorageParameterOutput() ComponentInstanceConfigurationStorageParameterOutput {
	return i.ToComponentInstanceConfigurationStorageParameterOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStorageParameterArgs) ToComponentInstanceConfigurationStorageParameterOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStorageParameterOutput)
}

type ComponentInstanceConfigurationStorageParameterOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStorageParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStorageParameter)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStorageParameterOutput) ToComponentInstanceConfigurationStorageParameterOutput() ComponentInstanceConfigurationStorageParameterOutput {
	return o
}

func (o ComponentInstanceConfigurationStorageParameterOutput) ToComponentInstanceConfigurationStorageParameterOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStorageParameterOutput {
	return o
}

// Specifies the PVC name.
func (o ComponentInstanceConfigurationStorageParameterOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorageParameter) *string { return v.ClaimName }).(pulumi.StringPtrOutput)
}

// Specifies the name of a configuration item or secret.
func (o ComponentInstanceConfigurationStorageParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorageParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the request path.
func (o ComponentInstanceConfigurationStorageParameterOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStorageParameter) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationStrategy struct {
	// Specifies the upgrade policy.
	// The valid values are **Recreate** or **RollingUpdate**. The default value is **RollingUpdate**.
	// The **Recreate** indicates in-place upgrade while the **RollingUpdate** indicates rolling upgrade.
	Upgrade *string `pulumi:"upgrade"`
}

// ComponentInstanceConfigurationStrategyInput is an input type that accepts ComponentInstanceConfigurationStrategyArgs and ComponentInstanceConfigurationStrategyOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStrategyInput` via:
//
//	ComponentInstanceConfigurationStrategyArgs{...}
type ComponentInstanceConfigurationStrategyInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStrategyOutput() ComponentInstanceConfigurationStrategyOutput
	ToComponentInstanceConfigurationStrategyOutputWithContext(context.Context) ComponentInstanceConfigurationStrategyOutput
}

type ComponentInstanceConfigurationStrategyArgs struct {
	// Specifies the upgrade policy.
	// The valid values are **Recreate** or **RollingUpdate**. The default value is **RollingUpdate**.
	// The **Recreate** indicates in-place upgrade while the **RollingUpdate** indicates rolling upgrade.
	Upgrade pulumi.StringPtrInput `pulumi:"upgrade"`
}

func (ComponentInstanceConfigurationStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStrategy)(nil)).Elem()
}

func (i ComponentInstanceConfigurationStrategyArgs) ToComponentInstanceConfigurationStrategyOutput() ComponentInstanceConfigurationStrategyOutput {
	return i.ToComponentInstanceConfigurationStrategyOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStrategyArgs) ToComponentInstanceConfigurationStrategyOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStrategyOutput)
}

func (i ComponentInstanceConfigurationStrategyArgs) ToComponentInstanceConfigurationStrategyPtrOutput() ComponentInstanceConfigurationStrategyPtrOutput {
	return i.ToComponentInstanceConfigurationStrategyPtrOutputWithContext(context.Background())
}

func (i ComponentInstanceConfigurationStrategyArgs) ToComponentInstanceConfigurationStrategyPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStrategyOutput).ToComponentInstanceConfigurationStrategyPtrOutputWithContext(ctx)
}

// ComponentInstanceConfigurationStrategyPtrInput is an input type that accepts ComponentInstanceConfigurationStrategyArgs, ComponentInstanceConfigurationStrategyPtr and ComponentInstanceConfigurationStrategyPtrOutput values.
// You can construct a concrete instance of `ComponentInstanceConfigurationStrategyPtrInput` via:
//
//	        ComponentInstanceConfigurationStrategyArgs{...}
//
//	or:
//
//	        nil
type ComponentInstanceConfigurationStrategyPtrInput interface {
	pulumi.Input

	ToComponentInstanceConfigurationStrategyPtrOutput() ComponentInstanceConfigurationStrategyPtrOutput
	ToComponentInstanceConfigurationStrategyPtrOutputWithContext(context.Context) ComponentInstanceConfigurationStrategyPtrOutput
}

type componentInstanceConfigurationStrategyPtrType ComponentInstanceConfigurationStrategyArgs

func ComponentInstanceConfigurationStrategyPtr(v *ComponentInstanceConfigurationStrategyArgs) ComponentInstanceConfigurationStrategyPtrInput {
	return (*componentInstanceConfigurationStrategyPtrType)(v)
}

func (*componentInstanceConfigurationStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationStrategy)(nil)).Elem()
}

func (i *componentInstanceConfigurationStrategyPtrType) ToComponentInstanceConfigurationStrategyPtrOutput() ComponentInstanceConfigurationStrategyPtrOutput {
	return i.ToComponentInstanceConfigurationStrategyPtrOutputWithContext(context.Background())
}

func (i *componentInstanceConfigurationStrategyPtrType) ToComponentInstanceConfigurationStrategyPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceConfigurationStrategyPtrOutput)
}

type ComponentInstanceConfigurationStrategyOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceConfigurationStrategy)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStrategyOutput) ToComponentInstanceConfigurationStrategyOutput() ComponentInstanceConfigurationStrategyOutput {
	return o
}

func (o ComponentInstanceConfigurationStrategyOutput) ToComponentInstanceConfigurationStrategyOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStrategyOutput {
	return o
}

func (o ComponentInstanceConfigurationStrategyOutput) ToComponentInstanceConfigurationStrategyPtrOutput() ComponentInstanceConfigurationStrategyPtrOutput {
	return o.ToComponentInstanceConfigurationStrategyPtrOutputWithContext(context.Background())
}

func (o ComponentInstanceConfigurationStrategyOutput) ToComponentInstanceConfigurationStrategyPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentInstanceConfigurationStrategy) *ComponentInstanceConfigurationStrategy {
		return &v
	}).(ComponentInstanceConfigurationStrategyPtrOutput)
}

// Specifies the upgrade policy.
// The valid values are **Recreate** or **RollingUpdate**. The default value is **RollingUpdate**.
// The **Recreate** indicates in-place upgrade while the **RollingUpdate** indicates rolling upgrade.
func (o ComponentInstanceConfigurationStrategyOutput) Upgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceConfigurationStrategy) *string { return v.Upgrade }).(pulumi.StringPtrOutput)
}

type ComponentInstanceConfigurationStrategyPtrOutput struct{ *pulumi.OutputState }

func (ComponentInstanceConfigurationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentInstanceConfigurationStrategy)(nil)).Elem()
}

func (o ComponentInstanceConfigurationStrategyPtrOutput) ToComponentInstanceConfigurationStrategyPtrOutput() ComponentInstanceConfigurationStrategyPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationStrategyPtrOutput) ToComponentInstanceConfigurationStrategyPtrOutputWithContext(ctx context.Context) ComponentInstanceConfigurationStrategyPtrOutput {
	return o
}

func (o ComponentInstanceConfigurationStrategyPtrOutput) Elem() ComponentInstanceConfigurationStrategyOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationStrategy) ComponentInstanceConfigurationStrategy {
		if v != nil {
			return *v
		}
		var ret ComponentInstanceConfigurationStrategy
		return ret
	}).(ComponentInstanceConfigurationStrategyOutput)
}

// Specifies the upgrade policy.
// The valid values are **Recreate** or **RollingUpdate**. The default value is **RollingUpdate**.
// The **Recreate** indicates in-place upgrade while the **RollingUpdate** indicates rolling upgrade.
func (o ComponentInstanceConfigurationStrategyPtrOutput) Upgrade() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentInstanceConfigurationStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Upgrade
	}).(pulumi.StringPtrOutput)
}

type ComponentInstanceExternalAccess struct {
	// Specifies the access address. For example: www.example.com.
	Address *string `pulumi:"address"`
	// Specifies the listening port of the application component process.
	Port *int `pulumi:"port"`
	// Specifies the protocol. The valid values are **HTTP** and **HTTPS**.
	Protocol *string `pulumi:"protocol"`
}

// ComponentInstanceExternalAccessInput is an input type that accepts ComponentInstanceExternalAccessArgs and ComponentInstanceExternalAccessOutput values.
// You can construct a concrete instance of `ComponentInstanceExternalAccessInput` via:
//
//	ComponentInstanceExternalAccessArgs{...}
type ComponentInstanceExternalAccessInput interface {
	pulumi.Input

	ToComponentInstanceExternalAccessOutput() ComponentInstanceExternalAccessOutput
	ToComponentInstanceExternalAccessOutputWithContext(context.Context) ComponentInstanceExternalAccessOutput
}

type ComponentInstanceExternalAccessArgs struct {
	// Specifies the access address. For example: www.example.com.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Specifies the listening port of the application component process.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Specifies the protocol. The valid values are **HTTP** and **HTTPS**.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ComponentInstanceExternalAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceExternalAccess)(nil)).Elem()
}

func (i ComponentInstanceExternalAccessArgs) ToComponentInstanceExternalAccessOutput() ComponentInstanceExternalAccessOutput {
	return i.ToComponentInstanceExternalAccessOutputWithContext(context.Background())
}

func (i ComponentInstanceExternalAccessArgs) ToComponentInstanceExternalAccessOutputWithContext(ctx context.Context) ComponentInstanceExternalAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceExternalAccessOutput)
}

// ComponentInstanceExternalAccessArrayInput is an input type that accepts ComponentInstanceExternalAccessArray and ComponentInstanceExternalAccessArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceExternalAccessArrayInput` via:
//
//	ComponentInstanceExternalAccessArray{ ComponentInstanceExternalAccessArgs{...} }
type ComponentInstanceExternalAccessArrayInput interface {
	pulumi.Input

	ToComponentInstanceExternalAccessArrayOutput() ComponentInstanceExternalAccessArrayOutput
	ToComponentInstanceExternalAccessArrayOutputWithContext(context.Context) ComponentInstanceExternalAccessArrayOutput
}

type ComponentInstanceExternalAccessArray []ComponentInstanceExternalAccessInput

func (ComponentInstanceExternalAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceExternalAccess)(nil)).Elem()
}

func (i ComponentInstanceExternalAccessArray) ToComponentInstanceExternalAccessArrayOutput() ComponentInstanceExternalAccessArrayOutput {
	return i.ToComponentInstanceExternalAccessArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceExternalAccessArray) ToComponentInstanceExternalAccessArrayOutputWithContext(ctx context.Context) ComponentInstanceExternalAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceExternalAccessArrayOutput)
}

type ComponentInstanceExternalAccessOutput struct{ *pulumi.OutputState }

func (ComponentInstanceExternalAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceExternalAccess)(nil)).Elem()
}

func (o ComponentInstanceExternalAccessOutput) ToComponentInstanceExternalAccessOutput() ComponentInstanceExternalAccessOutput {
	return o
}

func (o ComponentInstanceExternalAccessOutput) ToComponentInstanceExternalAccessOutputWithContext(ctx context.Context) ComponentInstanceExternalAccessOutput {
	return o
}

// Specifies the access address. For example: www.example.com.
func (o ComponentInstanceExternalAccessOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceExternalAccess) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Specifies the listening port of the application component process.
func (o ComponentInstanceExternalAccessOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentInstanceExternalAccess) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Specifies the protocol. The valid values are **HTTP** and **HTTPS**.
func (o ComponentInstanceExternalAccessOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceExternalAccess) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ComponentInstanceExternalAccessArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceExternalAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceExternalAccess)(nil)).Elem()
}

func (o ComponentInstanceExternalAccessArrayOutput) ToComponentInstanceExternalAccessArrayOutput() ComponentInstanceExternalAccessArrayOutput {
	return o
}

func (o ComponentInstanceExternalAccessArrayOutput) ToComponentInstanceExternalAccessArrayOutputWithContext(ctx context.Context) ComponentInstanceExternalAccessArrayOutput {
	return o
}

func (o ComponentInstanceExternalAccessArrayOutput) Index(i pulumi.IntInput) ComponentInstanceExternalAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceExternalAccess {
		return vs[0].([]ComponentInstanceExternalAccess)[vs[1].(int)]
	}).(ComponentInstanceExternalAccessOutput)
}

type ComponentInstanceReferResource struct {
	// Specifies the application alias, which is provided only in DCS scenario.
	// The valid values are: **distributed_session**, **distributed_cache** and **distributed_session, distributed_cache**.
	// Defaults to **distributed_session, distributed_cache**.
	Alias *string `pulumi:"alias"`
	// Specifies the resource ID.
	// If the `type` is set to **ecs**, the value of this parameter must be **Default**.
	Id string `pulumi:"id"`
	// Specifies the start post-processing or stop pre-processing parameters.
	// The object structure is documented below.
	Parameters map[string]string `pulumi:"parameters"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type string `pulumi:"type"`
}

// ComponentInstanceReferResourceInput is an input type that accepts ComponentInstanceReferResourceArgs and ComponentInstanceReferResourceOutput values.
// You can construct a concrete instance of `ComponentInstanceReferResourceInput` via:
//
//	ComponentInstanceReferResourceArgs{...}
type ComponentInstanceReferResourceInput interface {
	pulumi.Input

	ToComponentInstanceReferResourceOutput() ComponentInstanceReferResourceOutput
	ToComponentInstanceReferResourceOutputWithContext(context.Context) ComponentInstanceReferResourceOutput
}

type ComponentInstanceReferResourceArgs struct {
	// Specifies the application alias, which is provided only in DCS scenario.
	// The valid values are: **distributed_session**, **distributed_cache** and **distributed_session, distributed_cache**.
	// Defaults to **distributed_session, distributed_cache**.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// Specifies the resource ID.
	// If the `type` is set to **ecs**, the value of this parameter must be **Default**.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the start post-processing or stop pre-processing parameters.
	// The object structure is documented below.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// Specifies the probe type. The valid values are as follows:
	// + **command**: command execution check.
	// + **http**: HTTP request check.
	// + **tcp**: TCP port check.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ComponentInstanceReferResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceReferResource)(nil)).Elem()
}

func (i ComponentInstanceReferResourceArgs) ToComponentInstanceReferResourceOutput() ComponentInstanceReferResourceOutput {
	return i.ToComponentInstanceReferResourceOutputWithContext(context.Background())
}

func (i ComponentInstanceReferResourceArgs) ToComponentInstanceReferResourceOutputWithContext(ctx context.Context) ComponentInstanceReferResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceReferResourceOutput)
}

// ComponentInstanceReferResourceArrayInput is an input type that accepts ComponentInstanceReferResourceArray and ComponentInstanceReferResourceArrayOutput values.
// You can construct a concrete instance of `ComponentInstanceReferResourceArrayInput` via:
//
//	ComponentInstanceReferResourceArray{ ComponentInstanceReferResourceArgs{...} }
type ComponentInstanceReferResourceArrayInput interface {
	pulumi.Input

	ToComponentInstanceReferResourceArrayOutput() ComponentInstanceReferResourceArrayOutput
	ToComponentInstanceReferResourceArrayOutputWithContext(context.Context) ComponentInstanceReferResourceArrayOutput
}

type ComponentInstanceReferResourceArray []ComponentInstanceReferResourceInput

func (ComponentInstanceReferResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceReferResource)(nil)).Elem()
}

func (i ComponentInstanceReferResourceArray) ToComponentInstanceReferResourceArrayOutput() ComponentInstanceReferResourceArrayOutput {
	return i.ToComponentInstanceReferResourceArrayOutputWithContext(context.Background())
}

func (i ComponentInstanceReferResourceArray) ToComponentInstanceReferResourceArrayOutputWithContext(ctx context.Context) ComponentInstanceReferResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentInstanceReferResourceArrayOutput)
}

type ComponentInstanceReferResourceOutput struct{ *pulumi.OutputState }

func (ComponentInstanceReferResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentInstanceReferResource)(nil)).Elem()
}

func (o ComponentInstanceReferResourceOutput) ToComponentInstanceReferResourceOutput() ComponentInstanceReferResourceOutput {
	return o
}

func (o ComponentInstanceReferResourceOutput) ToComponentInstanceReferResourceOutputWithContext(ctx context.Context) ComponentInstanceReferResourceOutput {
	return o
}

// Specifies the application alias, which is provided only in DCS scenario.
// The valid values are: **distributed_session**, **distributed_cache** and **distributed_session, distributed_cache**.
// Defaults to **distributed_session, distributed_cache**.
func (o ComponentInstanceReferResourceOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentInstanceReferResource) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// Specifies the resource ID.
// If the `type` is set to **ecs**, the value of this parameter must be **Default**.
func (o ComponentInstanceReferResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceReferResource) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the start post-processing or stop pre-processing parameters.
// The object structure is documented below.
func (o ComponentInstanceReferResourceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ComponentInstanceReferResource) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// Specifies the probe type. The valid values are as follows:
// + **command**: command execution check.
// + **http**: HTTP request check.
// + **tcp**: TCP port check.
func (o ComponentInstanceReferResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentInstanceReferResource) string { return v.Type }).(pulumi.StringOutput)
}

type ComponentInstanceReferResourceArrayOutput struct{ *pulumi.OutputState }

func (ComponentInstanceReferResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentInstanceReferResource)(nil)).Elem()
}

func (o ComponentInstanceReferResourceArrayOutput) ToComponentInstanceReferResourceArrayOutput() ComponentInstanceReferResourceArrayOutput {
	return o
}

func (o ComponentInstanceReferResourceArrayOutput) ToComponentInstanceReferResourceArrayOutputWithContext(ctx context.Context) ComponentInstanceReferResourceArrayOutput {
	return o
}

func (o ComponentInstanceReferResourceArrayOutput) Index(i pulumi.IntInput) ComponentInstanceReferResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentInstanceReferResource {
		return vs[0].([]ComponentInstanceReferResource)[vs[1].(int)]
	}).(ComponentInstanceReferResourceOutput)
}

type ComponentSource struct {
	// Specifies the authorization name.
	// This parameter and `storageType` are alternative.
	Authorization *string `pulumi:"authorization"`
	// Specifies the namespace name.
	RepoNamespace *string `pulumi:"repoNamespace"`
	// Specifies the name of the branch of the code repository.
	// The default value is `master`.
	RepoRef *string `pulumi:"repoRef"`
	// Specifies the storage type, such as **obs**, **swr**.
	// This parameter is conflict with `repoRef` and `repoNamespace`.
	StorageType *string `pulumi:"storageType"`
	// Specifies the type of repository source or storage.
	// The valid values are **GitHub**, **GitLab**, **Gitee**, **Bitbucket** and **package**.
	Type string `pulumi:"type"`
	// Specifies the URL of the repository or package storage.
	Url string `pulumi:"url"`
}

// ComponentSourceInput is an input type that accepts ComponentSourceArgs and ComponentSourceOutput values.
// You can construct a concrete instance of `ComponentSourceInput` via:
//
//	ComponentSourceArgs{...}
type ComponentSourceInput interface {
	pulumi.Input

	ToComponentSourceOutput() ComponentSourceOutput
	ToComponentSourceOutputWithContext(context.Context) ComponentSourceOutput
}

type ComponentSourceArgs struct {
	// Specifies the authorization name.
	// This parameter and `storageType` are alternative.
	Authorization pulumi.StringPtrInput `pulumi:"authorization"`
	// Specifies the namespace name.
	RepoNamespace pulumi.StringPtrInput `pulumi:"repoNamespace"`
	// Specifies the name of the branch of the code repository.
	// The default value is `master`.
	RepoRef pulumi.StringPtrInput `pulumi:"repoRef"`
	// Specifies the storage type, such as **obs**, **swr**.
	// This parameter is conflict with `repoRef` and `repoNamespace`.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// Specifies the type of repository source or storage.
	// The valid values are **GitHub**, **GitLab**, **Gitee**, **Bitbucket** and **package**.
	Type pulumi.StringInput `pulumi:"type"`
	// Specifies the URL of the repository or package storage.
	Url pulumi.StringInput `pulumi:"url"`
}

func (ComponentSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentSource)(nil)).Elem()
}

func (i ComponentSourceArgs) ToComponentSourceOutput() ComponentSourceOutput {
	return i.ToComponentSourceOutputWithContext(context.Background())
}

func (i ComponentSourceArgs) ToComponentSourceOutputWithContext(ctx context.Context) ComponentSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSourceOutput)
}

func (i ComponentSourceArgs) ToComponentSourcePtrOutput() ComponentSourcePtrOutput {
	return i.ToComponentSourcePtrOutputWithContext(context.Background())
}

func (i ComponentSourceArgs) ToComponentSourcePtrOutputWithContext(ctx context.Context) ComponentSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSourceOutput).ToComponentSourcePtrOutputWithContext(ctx)
}

// ComponentSourcePtrInput is an input type that accepts ComponentSourceArgs, ComponentSourcePtr and ComponentSourcePtrOutput values.
// You can construct a concrete instance of `ComponentSourcePtrInput` via:
//
//	        ComponentSourceArgs{...}
//
//	or:
//
//	        nil
type ComponentSourcePtrInput interface {
	pulumi.Input

	ToComponentSourcePtrOutput() ComponentSourcePtrOutput
	ToComponentSourcePtrOutputWithContext(context.Context) ComponentSourcePtrOutput
}

type componentSourcePtrType ComponentSourceArgs

func ComponentSourcePtr(v *ComponentSourceArgs) ComponentSourcePtrInput {
	return (*componentSourcePtrType)(v)
}

func (*componentSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentSource)(nil)).Elem()
}

func (i *componentSourcePtrType) ToComponentSourcePtrOutput() ComponentSourcePtrOutput {
	return i.ToComponentSourcePtrOutputWithContext(context.Background())
}

func (i *componentSourcePtrType) ToComponentSourcePtrOutputWithContext(ctx context.Context) ComponentSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentSourcePtrOutput)
}

type ComponentSourceOutput struct{ *pulumi.OutputState }

func (ComponentSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentSource)(nil)).Elem()
}

func (o ComponentSourceOutput) ToComponentSourceOutput() ComponentSourceOutput {
	return o
}

func (o ComponentSourceOutput) ToComponentSourceOutputWithContext(ctx context.Context) ComponentSourceOutput {
	return o
}

func (o ComponentSourceOutput) ToComponentSourcePtrOutput() ComponentSourcePtrOutput {
	return o.ToComponentSourcePtrOutputWithContext(context.Background())
}

func (o ComponentSourceOutput) ToComponentSourcePtrOutputWithContext(ctx context.Context) ComponentSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentSource) *ComponentSource {
		return &v
	}).(ComponentSourcePtrOutput)
}

// Specifies the authorization name.
// This parameter and `storageType` are alternative.
func (o ComponentSourceOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentSource) *string { return v.Authorization }).(pulumi.StringPtrOutput)
}

// Specifies the namespace name.
func (o ComponentSourceOutput) RepoNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentSource) *string { return v.RepoNamespace }).(pulumi.StringPtrOutput)
}

// Specifies the name of the branch of the code repository.
// The default value is `master`.
func (o ComponentSourceOutput) RepoRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentSource) *string { return v.RepoRef }).(pulumi.StringPtrOutput)
}

// Specifies the storage type, such as **obs**, **swr**.
// This parameter is conflict with `repoRef` and `repoNamespace`.
func (o ComponentSourceOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentSource) *string { return v.StorageType }).(pulumi.StringPtrOutput)
}

// Specifies the type of repository source or storage.
// The valid values are **GitHub**, **GitLab**, **Gitee**, **Bitbucket** and **package**.
func (o ComponentSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentSource) string { return v.Type }).(pulumi.StringOutput)
}

// Specifies the URL of the repository or package storage.
func (o ComponentSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ComponentSource) string { return v.Url }).(pulumi.StringOutput)
}

type ComponentSourcePtrOutput struct{ *pulumi.OutputState }

func (ComponentSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentSource)(nil)).Elem()
}

func (o ComponentSourcePtrOutput) ToComponentSourcePtrOutput() ComponentSourcePtrOutput {
	return o
}

func (o ComponentSourcePtrOutput) ToComponentSourcePtrOutputWithContext(ctx context.Context) ComponentSourcePtrOutput {
	return o
}

func (o ComponentSourcePtrOutput) Elem() ComponentSourceOutput {
	return o.ApplyT(func(v *ComponentSource) ComponentSource {
		if v != nil {
			return *v
		}
		var ret ComponentSource
		return ret
	}).(ComponentSourceOutput)
}

// Specifies the authorization name.
// This parameter and `storageType` are alternative.
func (o ComponentSourcePtrOutput) Authorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentSource) *string {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(pulumi.StringPtrOutput)
}

// Specifies the namespace name.
func (o ComponentSourcePtrOutput) RepoNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentSource) *string {
		if v == nil {
			return nil
		}
		return v.RepoNamespace
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the branch of the code repository.
// The default value is `master`.
func (o ComponentSourcePtrOutput) RepoRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentSource) *string {
		if v == nil {
			return nil
		}
		return v.RepoRef
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage type, such as **obs**, **swr**.
// This parameter is conflict with `repoRef` and `repoNamespace`.
func (o ComponentSourcePtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentSource) *string {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of repository source or storage.
// The valid values are **GitHub**, **GitLab**, **Gitee**, **Bitbucket** and **package**.
func (o ComponentSourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentSource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Specifies the URL of the repository or package storage.
func (o ComponentSourcePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentSource) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type EnvironmentBasicResource struct {
	// Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
	// but for CCI namespace, this parameter needs to fill in **name**.
	Id string `pulumi:"id"`
	// Specifies the resource type.
	// + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
	// + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
	Type string `pulumi:"type"`
}

// EnvironmentBasicResourceInput is an input type that accepts EnvironmentBasicResourceArgs and EnvironmentBasicResourceOutput values.
// You can construct a concrete instance of `EnvironmentBasicResourceInput` via:
//
//	EnvironmentBasicResourceArgs{...}
type EnvironmentBasicResourceInput interface {
	pulumi.Input

	ToEnvironmentBasicResourceOutput() EnvironmentBasicResourceOutput
	ToEnvironmentBasicResourceOutputWithContext(context.Context) EnvironmentBasicResourceOutput
}

type EnvironmentBasicResourceArgs struct {
	// Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
	// but for CCI namespace, this parameter needs to fill in **name**.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the resource type.
	// + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
	// + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentBasicResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBasicResource)(nil)).Elem()
}

func (i EnvironmentBasicResourceArgs) ToEnvironmentBasicResourceOutput() EnvironmentBasicResourceOutput {
	return i.ToEnvironmentBasicResourceOutputWithContext(context.Background())
}

func (i EnvironmentBasicResourceArgs) ToEnvironmentBasicResourceOutputWithContext(ctx context.Context) EnvironmentBasicResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBasicResourceOutput)
}

// EnvironmentBasicResourceArrayInput is an input type that accepts EnvironmentBasicResourceArray and EnvironmentBasicResourceArrayOutput values.
// You can construct a concrete instance of `EnvironmentBasicResourceArrayInput` via:
//
//	EnvironmentBasicResourceArray{ EnvironmentBasicResourceArgs{...} }
type EnvironmentBasicResourceArrayInput interface {
	pulumi.Input

	ToEnvironmentBasicResourceArrayOutput() EnvironmentBasicResourceArrayOutput
	ToEnvironmentBasicResourceArrayOutputWithContext(context.Context) EnvironmentBasicResourceArrayOutput
}

type EnvironmentBasicResourceArray []EnvironmentBasicResourceInput

func (EnvironmentBasicResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentBasicResource)(nil)).Elem()
}

func (i EnvironmentBasicResourceArray) ToEnvironmentBasicResourceArrayOutput() EnvironmentBasicResourceArrayOutput {
	return i.ToEnvironmentBasicResourceArrayOutputWithContext(context.Background())
}

func (i EnvironmentBasicResourceArray) ToEnvironmentBasicResourceArrayOutputWithContext(ctx context.Context) EnvironmentBasicResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBasicResourceArrayOutput)
}

type EnvironmentBasicResourceOutput struct{ *pulumi.OutputState }

func (EnvironmentBasicResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentBasicResource)(nil)).Elem()
}

func (o EnvironmentBasicResourceOutput) ToEnvironmentBasicResourceOutput() EnvironmentBasicResourceOutput {
	return o
}

func (o EnvironmentBasicResourceOutput) ToEnvironmentBasicResourceOutputWithContext(ctx context.Context) EnvironmentBasicResourceOutput {
	return o
}

// Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
// but for CCI namespace, this parameter needs to fill in **name**.
func (o EnvironmentBasicResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentBasicResource) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the resource type.
// + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
// + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
func (o EnvironmentBasicResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentBasicResource) string { return v.Type }).(pulumi.StringOutput)
}

type EnvironmentBasicResourceArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentBasicResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentBasicResource)(nil)).Elem()
}

func (o EnvironmentBasicResourceArrayOutput) ToEnvironmentBasicResourceArrayOutput() EnvironmentBasicResourceArrayOutput {
	return o
}

func (o EnvironmentBasicResourceArrayOutput) ToEnvironmentBasicResourceArrayOutputWithContext(ctx context.Context) EnvironmentBasicResourceArrayOutput {
	return o
}

func (o EnvironmentBasicResourceArrayOutput) Index(i pulumi.IntInput) EnvironmentBasicResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentBasicResource {
		return vs[0].([]EnvironmentBasicResource)[vs[1].(int)]
	}).(EnvironmentBasicResourceOutput)
}

type EnvironmentOptionalResource struct {
	// Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
	// but for CCI namespace, this parameter needs to fill in **name**.
	Id string `pulumi:"id"`
	// Specifies the resource type.
	// + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
	// + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
	Type string `pulumi:"type"`
}

// EnvironmentOptionalResourceInput is an input type that accepts EnvironmentOptionalResourceArgs and EnvironmentOptionalResourceOutput values.
// You can construct a concrete instance of `EnvironmentOptionalResourceInput` via:
//
//	EnvironmentOptionalResourceArgs{...}
type EnvironmentOptionalResourceInput interface {
	pulumi.Input

	ToEnvironmentOptionalResourceOutput() EnvironmentOptionalResourceOutput
	ToEnvironmentOptionalResourceOutputWithContext(context.Context) EnvironmentOptionalResourceOutput
}

type EnvironmentOptionalResourceArgs struct {
	// Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
	// but for CCI namespace, this parameter needs to fill in **name**.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the resource type.
	// + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
	// + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EnvironmentOptionalResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentOptionalResource)(nil)).Elem()
}

func (i EnvironmentOptionalResourceArgs) ToEnvironmentOptionalResourceOutput() EnvironmentOptionalResourceOutput {
	return i.ToEnvironmentOptionalResourceOutputWithContext(context.Background())
}

func (i EnvironmentOptionalResourceArgs) ToEnvironmentOptionalResourceOutputWithContext(ctx context.Context) EnvironmentOptionalResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOptionalResourceOutput)
}

// EnvironmentOptionalResourceArrayInput is an input type that accepts EnvironmentOptionalResourceArray and EnvironmentOptionalResourceArrayOutput values.
// You can construct a concrete instance of `EnvironmentOptionalResourceArrayInput` via:
//
//	EnvironmentOptionalResourceArray{ EnvironmentOptionalResourceArgs{...} }
type EnvironmentOptionalResourceArrayInput interface {
	pulumi.Input

	ToEnvironmentOptionalResourceArrayOutput() EnvironmentOptionalResourceArrayOutput
	ToEnvironmentOptionalResourceArrayOutputWithContext(context.Context) EnvironmentOptionalResourceArrayOutput
}

type EnvironmentOptionalResourceArray []EnvironmentOptionalResourceInput

func (EnvironmentOptionalResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentOptionalResource)(nil)).Elem()
}

func (i EnvironmentOptionalResourceArray) ToEnvironmentOptionalResourceArrayOutput() EnvironmentOptionalResourceArrayOutput {
	return i.ToEnvironmentOptionalResourceArrayOutputWithContext(context.Background())
}

func (i EnvironmentOptionalResourceArray) ToEnvironmentOptionalResourceArrayOutputWithContext(ctx context.Context) EnvironmentOptionalResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOptionalResourceArrayOutput)
}

type EnvironmentOptionalResourceOutput struct{ *pulumi.OutputState }

func (EnvironmentOptionalResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentOptionalResource)(nil)).Elem()
}

func (o EnvironmentOptionalResourceOutput) ToEnvironmentOptionalResourceOutput() EnvironmentOptionalResourceOutput {
	return o
}

func (o EnvironmentOptionalResourceOutput) ToEnvironmentOptionalResourceOutputWithContext(ctx context.Context) EnvironmentOptionalResourceOutput {
	return o
}

// Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
// but for CCI namespace, this parameter needs to fill in **name**.
func (o EnvironmentOptionalResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentOptionalResource) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the resource type.
// + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
// + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
func (o EnvironmentOptionalResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentOptionalResource) string { return v.Type }).(pulumi.StringOutput)
}

type EnvironmentOptionalResourceArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentOptionalResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentOptionalResource)(nil)).Elem()
}

func (o EnvironmentOptionalResourceArrayOutput) ToEnvironmentOptionalResourceArrayOutput() EnvironmentOptionalResourceArrayOutput {
	return o
}

func (o EnvironmentOptionalResourceArrayOutput) ToEnvironmentOptionalResourceArrayOutputWithContext(ctx context.Context) EnvironmentOptionalResourceArrayOutput {
	return o
}

func (o EnvironmentOptionalResourceArrayOutput) Index(i pulumi.IntInput) EnvironmentOptionalResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentOptionalResource {
		return vs[0].([]EnvironmentOptionalResource)[vs[1].(int)]
	}).(EnvironmentOptionalResourceOutput)
}

type GetComponentRuntimesRuntime struct {
	// Specifies the default container port to use for filtering.
	DefaultPort int `pulumi:"defaultPort"`
	// The runtime description.
	Description string `pulumi:"description"`
	// Specifies the runtime name to use for filtering.
	// For the runtime names corresponding to each type of component, please refer to the [document](https://support.huaweicloud.com/intl/en-us/usermanual-servicestage/servicestage_user_0411.html).
	Name string `pulumi:"name"`
}

// GetComponentRuntimesRuntimeInput is an input type that accepts GetComponentRuntimesRuntimeArgs and GetComponentRuntimesRuntimeOutput values.
// You can construct a concrete instance of `GetComponentRuntimesRuntimeInput` via:
//
//	GetComponentRuntimesRuntimeArgs{...}
type GetComponentRuntimesRuntimeInput interface {
	pulumi.Input

	ToGetComponentRuntimesRuntimeOutput() GetComponentRuntimesRuntimeOutput
	ToGetComponentRuntimesRuntimeOutputWithContext(context.Context) GetComponentRuntimesRuntimeOutput
}

type GetComponentRuntimesRuntimeArgs struct {
	// Specifies the default container port to use for filtering.
	DefaultPort pulumi.IntInput `pulumi:"defaultPort"`
	// The runtime description.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the runtime name to use for filtering.
	// For the runtime names corresponding to each type of component, please refer to the [document](https://support.huaweicloud.com/intl/en-us/usermanual-servicestage/servicestage_user_0411.html).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetComponentRuntimesRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentRuntimesRuntime)(nil)).Elem()
}

func (i GetComponentRuntimesRuntimeArgs) ToGetComponentRuntimesRuntimeOutput() GetComponentRuntimesRuntimeOutput {
	return i.ToGetComponentRuntimesRuntimeOutputWithContext(context.Background())
}

func (i GetComponentRuntimesRuntimeArgs) ToGetComponentRuntimesRuntimeOutputWithContext(ctx context.Context) GetComponentRuntimesRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentRuntimesRuntimeOutput)
}

// GetComponentRuntimesRuntimeArrayInput is an input type that accepts GetComponentRuntimesRuntimeArray and GetComponentRuntimesRuntimeArrayOutput values.
// You can construct a concrete instance of `GetComponentRuntimesRuntimeArrayInput` via:
//
//	GetComponentRuntimesRuntimeArray{ GetComponentRuntimesRuntimeArgs{...} }
type GetComponentRuntimesRuntimeArrayInput interface {
	pulumi.Input

	ToGetComponentRuntimesRuntimeArrayOutput() GetComponentRuntimesRuntimeArrayOutput
	ToGetComponentRuntimesRuntimeArrayOutputWithContext(context.Context) GetComponentRuntimesRuntimeArrayOutput
}

type GetComponentRuntimesRuntimeArray []GetComponentRuntimesRuntimeInput

func (GetComponentRuntimesRuntimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentRuntimesRuntime)(nil)).Elem()
}

func (i GetComponentRuntimesRuntimeArray) ToGetComponentRuntimesRuntimeArrayOutput() GetComponentRuntimesRuntimeArrayOutput {
	return i.ToGetComponentRuntimesRuntimeArrayOutputWithContext(context.Background())
}

func (i GetComponentRuntimesRuntimeArray) ToGetComponentRuntimesRuntimeArrayOutputWithContext(ctx context.Context) GetComponentRuntimesRuntimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetComponentRuntimesRuntimeArrayOutput)
}

type GetComponentRuntimesRuntimeOutput struct{ *pulumi.OutputState }

func (GetComponentRuntimesRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComponentRuntimesRuntime)(nil)).Elem()
}

func (o GetComponentRuntimesRuntimeOutput) ToGetComponentRuntimesRuntimeOutput() GetComponentRuntimesRuntimeOutput {
	return o
}

func (o GetComponentRuntimesRuntimeOutput) ToGetComponentRuntimesRuntimeOutputWithContext(ctx context.Context) GetComponentRuntimesRuntimeOutput {
	return o
}

// Specifies the default container port to use for filtering.
func (o GetComponentRuntimesRuntimeOutput) DefaultPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetComponentRuntimesRuntime) int { return v.DefaultPort }).(pulumi.IntOutput)
}

// The runtime description.
func (o GetComponentRuntimesRuntimeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentRuntimesRuntime) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the runtime name to use for filtering.
// For the runtime names corresponding to each type of component, please refer to the [document](https://support.huaweicloud.com/intl/en-us/usermanual-servicestage/servicestage_user_0411.html).
func (o GetComponentRuntimesRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetComponentRuntimesRuntime) string { return v.Name }).(pulumi.StringOutput)
}

type GetComponentRuntimesRuntimeArrayOutput struct{ *pulumi.OutputState }

func (GetComponentRuntimesRuntimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetComponentRuntimesRuntime)(nil)).Elem()
}

func (o GetComponentRuntimesRuntimeArrayOutput) ToGetComponentRuntimesRuntimeArrayOutput() GetComponentRuntimesRuntimeArrayOutput {
	return o
}

func (o GetComponentRuntimesRuntimeArrayOutput) ToGetComponentRuntimesRuntimeArrayOutputWithContext(ctx context.Context) GetComponentRuntimesRuntimeArrayOutput {
	return o
}

func (o GetComponentRuntimesRuntimeArrayOutput) Index(i pulumi.IntInput) GetComponentRuntimesRuntimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetComponentRuntimesRuntime {
		return vs[0].([]GetComponentRuntimesRuntime)[vs[1].(int)]
	}).(GetComponentRuntimesRuntimeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentInput)(nil)).Elem(), ApplicationEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentArrayInput)(nil)).Elem(), ApplicationEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableInput)(nil)).Elem(), ApplicationEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationEnvironmentVariableArrayInput)(nil)).Elem(), ApplicationEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentBuilderInput)(nil)).Elem(), ComponentBuilderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentBuilderPtrInput)(nil)).Elem(), ComponentBuilderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceArtifactInput)(nil)).Elem(), ComponentInstanceArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceArtifactArrayInput)(nil)).Elem(), ComponentInstanceArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceArtifactPropertiesInput)(nil)).Elem(), ComponentInstanceArtifactPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceArtifactPropertiesPtrInput)(nil)).Elem(), ComponentInstanceArtifactPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationInput)(nil)).Elem(), ComponentInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationPtrInput)(nil)).Elem(), ComponentInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationEnvVariableInput)(nil)).Elem(), ComponentInstanceConfigurationEnvVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationEnvVariableArrayInput)(nil)).Elem(), ComponentInstanceConfigurationEnvVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecycleInput)(nil)).Elem(), ComponentInstanceConfigurationLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePtrInput)(nil)).Elem(), ComponentInstanceConfigurationLifecycleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecycleEntrypointInput)(nil)).Elem(), ComponentInstanceConfigurationLifecycleEntrypointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecycleEntrypointPtrInput)(nil)).Elem(), ComponentInstanceConfigurationLifecycleEntrypointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStartInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePostStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStartPtrInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePostStartArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStartParametersInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePostStartParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePostStartParametersPtrInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePostStartParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStopInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStopPtrInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStopParametersInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePreStopParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLifecyclePreStopParametersPtrInput)(nil)).Elem(), ComponentInstanceConfigurationLifecyclePreStopParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicyInput)(nil)).Elem(), ComponentInstanceConfigurationLogCollectionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicyArrayInput)(nil)).Elem(), ComponentInstanceConfigurationLogCollectionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicyContainerMountingInput)(nil)).Elem(), ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayInput)(nil)).Elem(), ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeInput)(nil)).Elem(), ComponentInstanceConfigurationProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbePtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessCommandParamInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessCommandParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessCommandParamPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessCommandParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessHttpParamInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessHttpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessHttpParamPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessHttpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessTcpParamInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessTcpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeLivenessTcpParamPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeLivenessTcpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessCommandParamInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessCommandParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessCommandParamPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessCommandParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessHttpParamInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessHttpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessHttpParamPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessHttpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessTcpParamInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessTcpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationProbeReadinessTcpParamPtrInput)(nil)).Elem(), ComponentInstanceConfigurationProbeReadinessTcpParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationSchedulerInput)(nil)).Elem(), ComponentInstanceConfigurationSchedulerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationSchedulerPtrInput)(nil)).Elem(), ComponentInstanceConfigurationSchedulerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAffinityInput)(nil)).Elem(), ComponentInstanceConfigurationSchedulerAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAffinityPtrInput)(nil)).Elem(), ComponentInstanceConfigurationSchedulerAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAntiAffinityInput)(nil)).Elem(), ComponentInstanceConfigurationSchedulerAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationSchedulerAntiAffinityPtrInput)(nil)).Elem(), ComponentInstanceConfigurationSchedulerAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStorageInput)(nil)).Elem(), ComponentInstanceConfigurationStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStorageArrayInput)(nil)).Elem(), ComponentInstanceConfigurationStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStorageMountInput)(nil)).Elem(), ComponentInstanceConfigurationStorageMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStorageMountArrayInput)(nil)).Elem(), ComponentInstanceConfigurationStorageMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStorageParameterInput)(nil)).Elem(), ComponentInstanceConfigurationStorageParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStrategyInput)(nil)).Elem(), ComponentInstanceConfigurationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceConfigurationStrategyPtrInput)(nil)).Elem(), ComponentInstanceConfigurationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceExternalAccessInput)(nil)).Elem(), ComponentInstanceExternalAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceExternalAccessArrayInput)(nil)).Elem(), ComponentInstanceExternalAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceReferResourceInput)(nil)).Elem(), ComponentInstanceReferResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentInstanceReferResourceArrayInput)(nil)).Elem(), ComponentInstanceReferResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentSourceInput)(nil)).Elem(), ComponentSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComponentSourcePtrInput)(nil)).Elem(), ComponentSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBasicResourceInput)(nil)).Elem(), EnvironmentBasicResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBasicResourceArrayInput)(nil)).Elem(), EnvironmentBasicResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentOptionalResourceInput)(nil)).Elem(), EnvironmentOptionalResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentOptionalResourceArrayInput)(nil)).Elem(), EnvironmentOptionalResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentRuntimesRuntimeInput)(nil)).Elem(), GetComponentRuntimesRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetComponentRuntimesRuntimeArrayInput)(nil)).Elem(), GetComponentRuntimesRuntimeArray{})
	pulumi.RegisterOutputType(ApplicationEnvironmentOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ApplicationEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ComponentBuilderOutput{})
	pulumi.RegisterOutputType(ComponentBuilderPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceArtifactOutput{})
	pulumi.RegisterOutputType(ComponentInstanceArtifactArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceArtifactPropertiesOutput{})
	pulumi.RegisterOutputType(ComponentInstanceArtifactPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationEnvVariableOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationEnvVariableArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecycleOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecycleEntrypointOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecycleEntrypointPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePostStartOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePostStartPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePostStartParametersOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePostStartParametersPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePreStopOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePreStopPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePreStopParametersOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLifecyclePreStopParametersPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLogCollectionPolicyOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLogCollectionPolicyArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLogCollectionPolicyContainerMountingOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationLogCollectionPolicyContainerMountingArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbePtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessCommandParamOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessCommandParamPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessHttpParamOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessHttpParamPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessTcpParamOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeLivenessTcpParamPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessCommandParamOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessCommandParamPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessHttpParamOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessHttpParamPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessTcpParamOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationProbeReadinessTcpParamPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationSchedulerOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationSchedulerPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationSchedulerAffinityOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationSchedulerAffinityPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationSchedulerAntiAffinityOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationSchedulerAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStorageOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStorageArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStorageMountOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStorageMountArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStorageParameterOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStrategyOutput{})
	pulumi.RegisterOutputType(ComponentInstanceConfigurationStrategyPtrOutput{})
	pulumi.RegisterOutputType(ComponentInstanceExternalAccessOutput{})
	pulumi.RegisterOutputType(ComponentInstanceExternalAccessArrayOutput{})
	pulumi.RegisterOutputType(ComponentInstanceReferResourceOutput{})
	pulumi.RegisterOutputType(ComponentInstanceReferResourceArrayOutput{})
	pulumi.RegisterOutputType(ComponentSourceOutput{})
	pulumi.RegisterOutputType(ComponentSourcePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentBasicResourceOutput{})
	pulumi.RegisterOutputType(EnvironmentBasicResourceArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentOptionalResourceOutput{})
	pulumi.RegisterOutputType(EnvironmentOptionalResourceArrayOutput{})
	pulumi.RegisterOutputType(GetComponentRuntimesRuntimeOutput{})
	pulumi.RegisterOutputType(GetComponentRuntimesRuntimeArrayOutput{})
}
