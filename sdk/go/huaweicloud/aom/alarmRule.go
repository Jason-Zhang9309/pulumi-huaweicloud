// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aom

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AOM alarm rule resource within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Aom"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Aom"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Aom.NewAlarmRule(ctx, "alarmRule", &Aom.AlarmRuleArgs{
//				AlarmLevel:  pulumi.Int(3),
//				Description: pulumi.String("test rule"),
//				Namespace:   pulumi.String("PAAS.NODE"),
//				MetricName:  pulumi.String("cupUsage"),
//				Dimensions: aom.AlarmRuleDimensionArray{
//					&aom.AlarmRuleDimensionArgs{
//						Name:  pulumi.String("hostID"),
//						Value: pulumi.Any(_var.Instance_id),
//					},
//				},
//				ComparisonOperator: pulumi.String(">="),
//				Period:             pulumi.Int(60000),
//				Statistic:          pulumi.String("average"),
//				Threshold:          pulumi.String("3"),
//				Unit:               pulumi.String("Percent"),
//				EvaluationPeriods:  pulumi.Int(2),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AOM alarm rules can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Aom/alarmRule:AlarmRule alarm_rule <id>
//
// ```
type AlarmRule struct {
	pulumi.CustomResourceState

	// Specifies whether to enable the action to be triggered by an alarm.
	// The default value is true. Changing this creates a new resource.
	AlarmActionEnabled pulumi.BoolPtrOutput `pulumi:"alarmActionEnabled"`
	// Specifies the action triggered by an alarm. This is a list of strings.
	// Changing this creates a new resource.
	AlarmActions pulumi.StringArrayOutput `pulumi:"alarmActions"`
	// Indicates whether the alarm rule is enabled.
	AlarmEnabled pulumi.BoolOutput `pulumi:"alarmEnabled"`
	// Specifies the alarm severity. The value can be `1`, `2`, `3` or `4`,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is `2`.
	AlarmLevel pulumi.IntPtrOutput `pulumi:"alarmLevel"`
	// Specifies the comparison condition of alarm thresholds.
	// The value can be **>**, **=**, **<**, **>=** or **<=**.
	ComparisonOperator pulumi.StringOutput `pulumi:"comparisonOperator"`
	// Specifies the description of the alarm rule.
	// The value can be a string of `0` to `1,000` characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the list of metric dimensions. The structure is described below.
	// Changing this creates a new resource.
	Dimensions AlarmRuleDimensionArrayOutput `pulumi:"dimensions"`
	// Specifies the alarm checking evaluation periods.
	// The value can be `1`, `2`, `3`, `4` and `5`.
	EvaluationPeriods pulumi.IntOutput `pulumi:"evaluationPeriods"`
	// Specifies the action triggered when the data is not enough.
	// This is a list of strings. Changing this creates a new resource.
	InsufficientDataActions pulumi.StringArrayOutput `pulumi:"insufficientDataActions"`
	// Specifies the alarm metric name. Changing this creates a new resource.
	MetricName pulumi.StringOutput `pulumi:"metricName"`
	// Specifies the dimension name. Changing this creates a new resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the alarm namespace. Changing this creates a new resource.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// Specifies the action triggered by the clearing of an alarm.
	// This is a list of strings. Changing this creates a new resource.
	OkActions pulumi.StringArrayOutput `pulumi:"okActions"`
	// Specifies the alarm checking period in milliseconds.
	// The value can be **60,000**, **300,000**, **900,000** and **3,600,000**.
	Period pulumi.IntOutput `pulumi:"period"`
	// The region in which to create the alarm rule resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Indicates the reason of alarm status.
	StateReason pulumi.StringOutput `pulumi:"stateReason"`
	// Indicates the alarm status.
	StateValue pulumi.StringOutput `pulumi:"stateValue"`
	// Specifies the data rollup methods. The value can be **maximum**,
	// **minimum**, **average**, **sum** and **sampleCount**. Changing this creates a new resource.
	Statistic pulumi.StringOutput `pulumi:"statistic"`
	// Specifies the alarm threshold.
	Threshold pulumi.StringOutput `pulumi:"threshold"`
	// Specifies the data unit.\
	// The valid value is range from `1` to `32`.
	// Changing this creates a new resource.
	Unit pulumi.StringOutput `pulumi:"unit"`
}

// NewAlarmRule registers a new resource with the given unique name, arguments, and options.
func NewAlarmRule(ctx *pulumi.Context,
	name string, args *AlarmRuleArgs, opts ...pulumi.ResourceOption) (*AlarmRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComparisonOperator == nil {
		return nil, errors.New("invalid value for required argument 'ComparisonOperator'")
	}
	if args.Dimensions == nil {
		return nil, errors.New("invalid value for required argument 'Dimensions'")
	}
	if args.EvaluationPeriods == nil {
		return nil, errors.New("invalid value for required argument 'EvaluationPeriods'")
	}
	if args.MetricName == nil {
		return nil, errors.New("invalid value for required argument 'MetricName'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.Period == nil {
		return nil, errors.New("invalid value for required argument 'Period'")
	}
	if args.Statistic == nil {
		return nil, errors.New("invalid value for required argument 'Statistic'")
	}
	if args.Threshold == nil {
		return nil, errors.New("invalid value for required argument 'Threshold'")
	}
	if args.Unit == nil {
		return nil, errors.New("invalid value for required argument 'Unit'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AlarmRule
	err := ctx.RegisterResource("huaweicloud:Aom/alarmRule:AlarmRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlarmRule gets an existing AlarmRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlarmRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlarmRuleState, opts ...pulumi.ResourceOption) (*AlarmRule, error) {
	var resource AlarmRule
	err := ctx.ReadResource("huaweicloud:Aom/alarmRule:AlarmRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlarmRule resources.
type alarmRuleState struct {
	// Specifies whether to enable the action to be triggered by an alarm.
	// The default value is true. Changing this creates a new resource.
	AlarmActionEnabled *bool `pulumi:"alarmActionEnabled"`
	// Specifies the action triggered by an alarm. This is a list of strings.
	// Changing this creates a new resource.
	AlarmActions []string `pulumi:"alarmActions"`
	// Indicates whether the alarm rule is enabled.
	AlarmEnabled *bool `pulumi:"alarmEnabled"`
	// Specifies the alarm severity. The value can be `1`, `2`, `3` or `4`,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is `2`.
	AlarmLevel *int `pulumi:"alarmLevel"`
	// Specifies the comparison condition of alarm thresholds.
	// The value can be **>**, **=**, **<**, **>=** or **<=**.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Specifies the description of the alarm rule.
	// The value can be a string of `0` to `1,000` characters.
	Description *string `pulumi:"description"`
	// Specifies the list of metric dimensions. The structure is described below.
	// Changing this creates a new resource.
	Dimensions []AlarmRuleDimension `pulumi:"dimensions"`
	// Specifies the alarm checking evaluation periods.
	// The value can be `1`, `2`, `3`, `4` and `5`.
	EvaluationPeriods *int `pulumi:"evaluationPeriods"`
	// Specifies the action triggered when the data is not enough.
	// This is a list of strings. Changing this creates a new resource.
	InsufficientDataActions []string `pulumi:"insufficientDataActions"`
	// Specifies the alarm metric name. Changing this creates a new resource.
	MetricName *string `pulumi:"metricName"`
	// Specifies the dimension name. Changing this creates a new resource.
	Name *string `pulumi:"name"`
	// Specifies the alarm namespace. Changing this creates a new resource.
	Namespace *string `pulumi:"namespace"`
	// Specifies the action triggered by the clearing of an alarm.
	// This is a list of strings. Changing this creates a new resource.
	OkActions []string `pulumi:"okActions"`
	// Specifies the alarm checking period in milliseconds.
	// The value can be **60,000**, **300,000**, **900,000** and **3,600,000**.
	Period *int `pulumi:"period"`
	// The region in which to create the alarm rule resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Indicates the reason of alarm status.
	StateReason *string `pulumi:"stateReason"`
	// Indicates the alarm status.
	StateValue *string `pulumi:"stateValue"`
	// Specifies the data rollup methods. The value can be **maximum**,
	// **minimum**, **average**, **sum** and **sampleCount**. Changing this creates a new resource.
	Statistic *string `pulumi:"statistic"`
	// Specifies the alarm threshold.
	Threshold *string `pulumi:"threshold"`
	// Specifies the data unit.\
	// The valid value is range from `1` to `32`.
	// Changing this creates a new resource.
	Unit *string `pulumi:"unit"`
}

type AlarmRuleState struct {
	// Specifies whether to enable the action to be triggered by an alarm.
	// The default value is true. Changing this creates a new resource.
	AlarmActionEnabled pulumi.BoolPtrInput
	// Specifies the action triggered by an alarm. This is a list of strings.
	// Changing this creates a new resource.
	AlarmActions pulumi.StringArrayInput
	// Indicates whether the alarm rule is enabled.
	AlarmEnabled pulumi.BoolPtrInput
	// Specifies the alarm severity. The value can be `1`, `2`, `3` or `4`,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is `2`.
	AlarmLevel pulumi.IntPtrInput
	// Specifies the comparison condition of alarm thresholds.
	// The value can be **>**, **=**, **<**, **>=** or **<=**.
	ComparisonOperator pulumi.StringPtrInput
	// Specifies the description of the alarm rule.
	// The value can be a string of `0` to `1,000` characters.
	Description pulumi.StringPtrInput
	// Specifies the list of metric dimensions. The structure is described below.
	// Changing this creates a new resource.
	Dimensions AlarmRuleDimensionArrayInput
	// Specifies the alarm checking evaluation periods.
	// The value can be `1`, `2`, `3`, `4` and `5`.
	EvaluationPeriods pulumi.IntPtrInput
	// Specifies the action triggered when the data is not enough.
	// This is a list of strings. Changing this creates a new resource.
	InsufficientDataActions pulumi.StringArrayInput
	// Specifies the alarm metric name. Changing this creates a new resource.
	MetricName pulumi.StringPtrInput
	// Specifies the dimension name. Changing this creates a new resource.
	Name pulumi.StringPtrInput
	// Specifies the alarm namespace. Changing this creates a new resource.
	Namespace pulumi.StringPtrInput
	// Specifies the action triggered by the clearing of an alarm.
	// This is a list of strings. Changing this creates a new resource.
	OkActions pulumi.StringArrayInput
	// Specifies the alarm checking period in milliseconds.
	// The value can be **60,000**, **300,000**, **900,000** and **3,600,000**.
	Period pulumi.IntPtrInput
	// The region in which to create the alarm rule resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Indicates the reason of alarm status.
	StateReason pulumi.StringPtrInput
	// Indicates the alarm status.
	StateValue pulumi.StringPtrInput
	// Specifies the data rollup methods. The value can be **maximum**,
	// **minimum**, **average**, **sum** and **sampleCount**. Changing this creates a new resource.
	Statistic pulumi.StringPtrInput
	// Specifies the alarm threshold.
	Threshold pulumi.StringPtrInput
	// Specifies the data unit.\
	// The valid value is range from `1` to `32`.
	// Changing this creates a new resource.
	Unit pulumi.StringPtrInput
}

func (AlarmRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmRuleState)(nil)).Elem()
}

type alarmRuleArgs struct {
	// Specifies whether to enable the action to be triggered by an alarm.
	// The default value is true. Changing this creates a new resource.
	AlarmActionEnabled *bool `pulumi:"alarmActionEnabled"`
	// Specifies the action triggered by an alarm. This is a list of strings.
	// Changing this creates a new resource.
	AlarmActions []string `pulumi:"alarmActions"`
	// Specifies the alarm severity. The value can be `1`, `2`, `3` or `4`,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is `2`.
	AlarmLevel *int `pulumi:"alarmLevel"`
	// Specifies the comparison condition of alarm thresholds.
	// The value can be **>**, **=**, **<**, **>=** or **<=**.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// Specifies the description of the alarm rule.
	// The value can be a string of `0` to `1,000` characters.
	Description *string `pulumi:"description"`
	// Specifies the list of metric dimensions. The structure is described below.
	// Changing this creates a new resource.
	Dimensions []AlarmRuleDimension `pulumi:"dimensions"`
	// Specifies the alarm checking evaluation periods.
	// The value can be `1`, `2`, `3`, `4` and `5`.
	EvaluationPeriods int `pulumi:"evaluationPeriods"`
	// Specifies the action triggered when the data is not enough.
	// This is a list of strings. Changing this creates a new resource.
	InsufficientDataActions []string `pulumi:"insufficientDataActions"`
	// Specifies the alarm metric name. Changing this creates a new resource.
	MetricName string `pulumi:"metricName"`
	// Specifies the dimension name. Changing this creates a new resource.
	Name *string `pulumi:"name"`
	// Specifies the alarm namespace. Changing this creates a new resource.
	Namespace string `pulumi:"namespace"`
	// Specifies the action triggered by the clearing of an alarm.
	// This is a list of strings. Changing this creates a new resource.
	OkActions []string `pulumi:"okActions"`
	// Specifies the alarm checking period in milliseconds.
	// The value can be **60,000**, **300,000**, **900,000** and **3,600,000**.
	Period int `pulumi:"period"`
	// The region in which to create the alarm rule resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `pulumi:"region"`
	// Specifies the data rollup methods. The value can be **maximum**,
	// **minimum**, **average**, **sum** and **sampleCount**. Changing this creates a new resource.
	Statistic string `pulumi:"statistic"`
	// Specifies the alarm threshold.
	Threshold string `pulumi:"threshold"`
	// Specifies the data unit.\
	// The valid value is range from `1` to `32`.
	// Changing this creates a new resource.
	Unit string `pulumi:"unit"`
}

// The set of arguments for constructing a AlarmRule resource.
type AlarmRuleArgs struct {
	// Specifies whether to enable the action to be triggered by an alarm.
	// The default value is true. Changing this creates a new resource.
	AlarmActionEnabled pulumi.BoolPtrInput
	// Specifies the action triggered by an alarm. This is a list of strings.
	// Changing this creates a new resource.
	AlarmActions pulumi.StringArrayInput
	// Specifies the alarm severity. The value can be `1`, `2`, `3` or `4`,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is `2`.
	AlarmLevel pulumi.IntPtrInput
	// Specifies the comparison condition of alarm thresholds.
	// The value can be **>**, **=**, **<**, **>=** or **<=**.
	ComparisonOperator pulumi.StringInput
	// Specifies the description of the alarm rule.
	// The value can be a string of `0` to `1,000` characters.
	Description pulumi.StringPtrInput
	// Specifies the list of metric dimensions. The structure is described below.
	// Changing this creates a new resource.
	Dimensions AlarmRuleDimensionArrayInput
	// Specifies the alarm checking evaluation periods.
	// The value can be `1`, `2`, `3`, `4` and `5`.
	EvaluationPeriods pulumi.IntInput
	// Specifies the action triggered when the data is not enough.
	// This is a list of strings. Changing this creates a new resource.
	InsufficientDataActions pulumi.StringArrayInput
	// Specifies the alarm metric name. Changing this creates a new resource.
	MetricName pulumi.StringInput
	// Specifies the dimension name. Changing this creates a new resource.
	Name pulumi.StringPtrInput
	// Specifies the alarm namespace. Changing this creates a new resource.
	Namespace pulumi.StringInput
	// Specifies the action triggered by the clearing of an alarm.
	// This is a list of strings. Changing this creates a new resource.
	OkActions pulumi.StringArrayInput
	// Specifies the alarm checking period in milliseconds.
	// The value can be **60,000**, **300,000**, **900,000** and **3,600,000**.
	Period pulumi.IntInput
	// The region in which to create the alarm rule resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region pulumi.StringPtrInput
	// Specifies the data rollup methods. The value can be **maximum**,
	// **minimum**, **average**, **sum** and **sampleCount**. Changing this creates a new resource.
	Statistic pulumi.StringInput
	// Specifies the alarm threshold.
	Threshold pulumi.StringInput
	// Specifies the data unit.\
	// The valid value is range from `1` to `32`.
	// Changing this creates a new resource.
	Unit pulumi.StringInput
}

func (AlarmRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alarmRuleArgs)(nil)).Elem()
}

type AlarmRuleInput interface {
	pulumi.Input

	ToAlarmRuleOutput() AlarmRuleOutput
	ToAlarmRuleOutputWithContext(ctx context.Context) AlarmRuleOutput
}

func (*AlarmRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmRule)(nil)).Elem()
}

func (i *AlarmRule) ToAlarmRuleOutput() AlarmRuleOutput {
	return i.ToAlarmRuleOutputWithContext(context.Background())
}

func (i *AlarmRule) ToAlarmRuleOutputWithContext(ctx context.Context) AlarmRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmRuleOutput)
}

// AlarmRuleArrayInput is an input type that accepts AlarmRuleArray and AlarmRuleArrayOutput values.
// You can construct a concrete instance of `AlarmRuleArrayInput` via:
//
//	AlarmRuleArray{ AlarmRuleArgs{...} }
type AlarmRuleArrayInput interface {
	pulumi.Input

	ToAlarmRuleArrayOutput() AlarmRuleArrayOutput
	ToAlarmRuleArrayOutputWithContext(context.Context) AlarmRuleArrayOutput
}

type AlarmRuleArray []AlarmRuleInput

func (AlarmRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlarmRule)(nil)).Elem()
}

func (i AlarmRuleArray) ToAlarmRuleArrayOutput() AlarmRuleArrayOutput {
	return i.ToAlarmRuleArrayOutputWithContext(context.Background())
}

func (i AlarmRuleArray) ToAlarmRuleArrayOutputWithContext(ctx context.Context) AlarmRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmRuleArrayOutput)
}

// AlarmRuleMapInput is an input type that accepts AlarmRuleMap and AlarmRuleMapOutput values.
// You can construct a concrete instance of `AlarmRuleMapInput` via:
//
//	AlarmRuleMap{ "key": AlarmRuleArgs{...} }
type AlarmRuleMapInput interface {
	pulumi.Input

	ToAlarmRuleMapOutput() AlarmRuleMapOutput
	ToAlarmRuleMapOutputWithContext(context.Context) AlarmRuleMapOutput
}

type AlarmRuleMap map[string]AlarmRuleInput

func (AlarmRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlarmRule)(nil)).Elem()
}

func (i AlarmRuleMap) ToAlarmRuleMapOutput() AlarmRuleMapOutput {
	return i.ToAlarmRuleMapOutputWithContext(context.Background())
}

func (i AlarmRuleMap) ToAlarmRuleMapOutputWithContext(ctx context.Context) AlarmRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmRuleMapOutput)
}

type AlarmRuleOutput struct{ *pulumi.OutputState }

func (AlarmRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmRule)(nil)).Elem()
}

func (o AlarmRuleOutput) ToAlarmRuleOutput() AlarmRuleOutput {
	return o
}

func (o AlarmRuleOutput) ToAlarmRuleOutputWithContext(ctx context.Context) AlarmRuleOutput {
	return o
}

// Specifies whether to enable the action to be triggered by an alarm.
// The default value is true. Changing this creates a new resource.
func (o AlarmRuleOutput) AlarmActionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.BoolPtrOutput { return v.AlarmActionEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the action triggered by an alarm. This is a list of strings.
// Changing this creates a new resource.
func (o AlarmRuleOutput) AlarmActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringArrayOutput { return v.AlarmActions }).(pulumi.StringArrayOutput)
}

// Indicates whether the alarm rule is enabled.
func (o AlarmRuleOutput) AlarmEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.BoolOutput { return v.AlarmEnabled }).(pulumi.BoolOutput)
}

// Specifies the alarm severity. The value can be `1`, `2`, `3` or `4`,
// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
// The default value is `2`.
func (o AlarmRuleOutput) AlarmLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.IntPtrOutput { return v.AlarmLevel }).(pulumi.IntPtrOutput)
}

// Specifies the comparison condition of alarm thresholds.
// The value can be **>**, **=**, **<**, **>=** or **<=**.
func (o AlarmRuleOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// Specifies the description of the alarm rule.
// The value can be a string of `0` to `1,000` characters.
func (o AlarmRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the list of metric dimensions. The structure is described below.
// Changing this creates a new resource.
func (o AlarmRuleOutput) Dimensions() AlarmRuleDimensionArrayOutput {
	return o.ApplyT(func(v *AlarmRule) AlarmRuleDimensionArrayOutput { return v.Dimensions }).(AlarmRuleDimensionArrayOutput)
}

// Specifies the alarm checking evaluation periods.
// The value can be `1`, `2`, `3`, `4` and `5`.
func (o AlarmRuleOutput) EvaluationPeriods() pulumi.IntOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.IntOutput { return v.EvaluationPeriods }).(pulumi.IntOutput)
}

// Specifies the action triggered when the data is not enough.
// This is a list of strings. Changing this creates a new resource.
func (o AlarmRuleOutput) InsufficientDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringArrayOutput { return v.InsufficientDataActions }).(pulumi.StringArrayOutput)
}

// Specifies the alarm metric name. Changing this creates a new resource.
func (o AlarmRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.MetricName }).(pulumi.StringOutput)
}

// Specifies the dimension name. Changing this creates a new resource.
func (o AlarmRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the alarm namespace. Changing this creates a new resource.
func (o AlarmRuleOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// Specifies the action triggered by the clearing of an alarm.
// This is a list of strings. Changing this creates a new resource.
func (o AlarmRuleOutput) OkActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringArrayOutput { return v.OkActions }).(pulumi.StringArrayOutput)
}

// Specifies the alarm checking period in milliseconds.
// The value can be **60,000**, **300,000**, **900,000** and **3,600,000**.
func (o AlarmRuleOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// The region in which to create the alarm rule resource. If omitted, the
// provider-level region will be used. Changing this creates a new resource.
func (o AlarmRuleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Indicates the reason of alarm status.
func (o AlarmRuleOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.StateReason }).(pulumi.StringOutput)
}

// Indicates the alarm status.
func (o AlarmRuleOutput) StateValue() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.StateValue }).(pulumi.StringOutput)
}

// Specifies the data rollup methods. The value can be **maximum**,
// **minimum**, **average**, **sum** and **sampleCount**. Changing this creates a new resource.
func (o AlarmRuleOutput) Statistic() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.Statistic }).(pulumi.StringOutput)
}

// Specifies the alarm threshold.
func (o AlarmRuleOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.Threshold }).(pulumi.StringOutput)
}

// Specifies the data unit.\
// The valid value is range from `1` to `32`.
// Changing this creates a new resource.
func (o AlarmRuleOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v *AlarmRule) pulumi.StringOutput { return v.Unit }).(pulumi.StringOutput)
}

type AlarmRuleArrayOutput struct{ *pulumi.OutputState }

func (AlarmRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlarmRule)(nil)).Elem()
}

func (o AlarmRuleArrayOutput) ToAlarmRuleArrayOutput() AlarmRuleArrayOutput {
	return o
}

func (o AlarmRuleArrayOutput) ToAlarmRuleArrayOutputWithContext(ctx context.Context) AlarmRuleArrayOutput {
	return o
}

func (o AlarmRuleArrayOutput) Index(i pulumi.IntInput) AlarmRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlarmRule {
		return vs[0].([]*AlarmRule)[vs[1].(int)]
	}).(AlarmRuleOutput)
}

type AlarmRuleMapOutput struct{ *pulumi.OutputState }

func (AlarmRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlarmRule)(nil)).Elem()
}

func (o AlarmRuleMapOutput) ToAlarmRuleMapOutput() AlarmRuleMapOutput {
	return o
}

func (o AlarmRuleMapOutput) ToAlarmRuleMapOutputWithContext(ctx context.Context) AlarmRuleMapOutput {
	return o
}

func (o AlarmRuleMapOutput) MapIndex(k pulumi.StringInput) AlarmRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlarmRule {
		return vs[0].(map[string]*AlarmRule)[vs[1].(string)]
	}).(AlarmRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmRuleInput)(nil)).Elem(), &AlarmRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmRuleArrayInput)(nil)).Elem(), AlarmRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmRuleMapInput)(nil)).Elem(), AlarmRuleMap{})
	pulumi.RegisterOutputType(AlarmRuleOutput{})
	pulumi.RegisterOutputType(AlarmRuleArrayOutput{})
	pulumi.RegisterOutputType(AlarmRuleMapOutput{})
}
