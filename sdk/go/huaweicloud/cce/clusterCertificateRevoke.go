// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to revoke the certificate of a CCE cluster within HuaweiCloud.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Cce"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			clusterId := cfg.RequireObject("clusterId")
//			userId := cfg.RequireObject("userId")
//			_, err := Cce.NewClusterCertificateRevoke(ctx, "test", &Cce.ClusterCertificateRevokeArgs{
//				ClusterId: pulumi.Any(clusterId),
//				UserId:    pulumi.Any(userId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// > Deleting certificate revoke resource is not supported, it will only be removed from the state.
type ClusterCertificateRevoke struct {
	pulumi.CustomResourceState

	// Specifies the agency ID.
	AgencyId pulumi.StringPtrOutput `pulumi:"agencyId"`
	// Specifies the cluster ID.
	ClusterId      pulumi.StringOutput    `pulumi:"clusterId"`
	EnableForceNew pulumi.StringPtrOutput `pulumi:"enableForceNew"`
	// Specifies the region in which to create the node sync resource.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the user ID.
	UserId pulumi.StringPtrOutput `pulumi:"userId"`
}

// NewClusterCertificateRevoke registers a new resource with the given unique name, arguments, and options.
func NewClusterCertificateRevoke(ctx *pulumi.Context,
	name string, args *ClusterCertificateRevokeArgs, opts ...pulumi.ResourceOption) (*ClusterCertificateRevoke, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ClusterCertificateRevoke
	err := ctx.RegisterResource("huaweicloud:Cce/clusterCertificateRevoke:ClusterCertificateRevoke", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterCertificateRevoke gets an existing ClusterCertificateRevoke resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterCertificateRevoke(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterCertificateRevokeState, opts ...pulumi.ResourceOption) (*ClusterCertificateRevoke, error) {
	var resource ClusterCertificateRevoke
	err := ctx.ReadResource("huaweicloud:Cce/clusterCertificateRevoke:ClusterCertificateRevoke", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterCertificateRevoke resources.
type clusterCertificateRevokeState struct {
	// Specifies the agency ID.
	AgencyId *string `pulumi:"agencyId"`
	// Specifies the cluster ID.
	ClusterId      *string `pulumi:"clusterId"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// Specifies the region in which to create the node sync resource.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the user ID.
	UserId *string `pulumi:"userId"`
}

type ClusterCertificateRevokeState struct {
	// Specifies the agency ID.
	AgencyId pulumi.StringPtrInput
	// Specifies the cluster ID.
	ClusterId      pulumi.StringPtrInput
	EnableForceNew pulumi.StringPtrInput
	// Specifies the region in which to create the node sync resource.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the user ID.
	UserId pulumi.StringPtrInput
}

func (ClusterCertificateRevokeState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterCertificateRevokeState)(nil)).Elem()
}

type clusterCertificateRevokeArgs struct {
	// Specifies the agency ID.
	AgencyId *string `pulumi:"agencyId"`
	// Specifies the cluster ID.
	ClusterId      string  `pulumi:"clusterId"`
	EnableForceNew *string `pulumi:"enableForceNew"`
	// Specifies the region in which to create the node sync resource.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `pulumi:"region"`
	// Specifies the user ID.
	UserId *string `pulumi:"userId"`
}

// The set of arguments for constructing a ClusterCertificateRevoke resource.
type ClusterCertificateRevokeArgs struct {
	// Specifies the agency ID.
	AgencyId pulumi.StringPtrInput
	// Specifies the cluster ID.
	ClusterId      pulumi.StringInput
	EnableForceNew pulumi.StringPtrInput
	// Specifies the region in which to create the node sync resource.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region pulumi.StringPtrInput
	// Specifies the user ID.
	UserId pulumi.StringPtrInput
}

func (ClusterCertificateRevokeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterCertificateRevokeArgs)(nil)).Elem()
}

type ClusterCertificateRevokeInput interface {
	pulumi.Input

	ToClusterCertificateRevokeOutput() ClusterCertificateRevokeOutput
	ToClusterCertificateRevokeOutputWithContext(ctx context.Context) ClusterCertificateRevokeOutput
}

func (*ClusterCertificateRevoke) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCertificateRevoke)(nil)).Elem()
}

func (i *ClusterCertificateRevoke) ToClusterCertificateRevokeOutput() ClusterCertificateRevokeOutput {
	return i.ToClusterCertificateRevokeOutputWithContext(context.Background())
}

func (i *ClusterCertificateRevoke) ToClusterCertificateRevokeOutputWithContext(ctx context.Context) ClusterCertificateRevokeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateRevokeOutput)
}

// ClusterCertificateRevokeArrayInput is an input type that accepts ClusterCertificateRevokeArray and ClusterCertificateRevokeArrayOutput values.
// You can construct a concrete instance of `ClusterCertificateRevokeArrayInput` via:
//
//	ClusterCertificateRevokeArray{ ClusterCertificateRevokeArgs{...} }
type ClusterCertificateRevokeArrayInput interface {
	pulumi.Input

	ToClusterCertificateRevokeArrayOutput() ClusterCertificateRevokeArrayOutput
	ToClusterCertificateRevokeArrayOutputWithContext(context.Context) ClusterCertificateRevokeArrayOutput
}

type ClusterCertificateRevokeArray []ClusterCertificateRevokeInput

func (ClusterCertificateRevokeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterCertificateRevoke)(nil)).Elem()
}

func (i ClusterCertificateRevokeArray) ToClusterCertificateRevokeArrayOutput() ClusterCertificateRevokeArrayOutput {
	return i.ToClusterCertificateRevokeArrayOutputWithContext(context.Background())
}

func (i ClusterCertificateRevokeArray) ToClusterCertificateRevokeArrayOutputWithContext(ctx context.Context) ClusterCertificateRevokeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateRevokeArrayOutput)
}

// ClusterCertificateRevokeMapInput is an input type that accepts ClusterCertificateRevokeMap and ClusterCertificateRevokeMapOutput values.
// You can construct a concrete instance of `ClusterCertificateRevokeMapInput` via:
//
//	ClusterCertificateRevokeMap{ "key": ClusterCertificateRevokeArgs{...} }
type ClusterCertificateRevokeMapInput interface {
	pulumi.Input

	ToClusterCertificateRevokeMapOutput() ClusterCertificateRevokeMapOutput
	ToClusterCertificateRevokeMapOutputWithContext(context.Context) ClusterCertificateRevokeMapOutput
}

type ClusterCertificateRevokeMap map[string]ClusterCertificateRevokeInput

func (ClusterCertificateRevokeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterCertificateRevoke)(nil)).Elem()
}

func (i ClusterCertificateRevokeMap) ToClusterCertificateRevokeMapOutput() ClusterCertificateRevokeMapOutput {
	return i.ToClusterCertificateRevokeMapOutputWithContext(context.Background())
}

func (i ClusterCertificateRevokeMap) ToClusterCertificateRevokeMapOutputWithContext(ctx context.Context) ClusterCertificateRevokeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateRevokeMapOutput)
}

type ClusterCertificateRevokeOutput struct{ *pulumi.OutputState }

func (ClusterCertificateRevokeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCertificateRevoke)(nil)).Elem()
}

func (o ClusterCertificateRevokeOutput) ToClusterCertificateRevokeOutput() ClusterCertificateRevokeOutput {
	return o
}

func (o ClusterCertificateRevokeOutput) ToClusterCertificateRevokeOutputWithContext(ctx context.Context) ClusterCertificateRevokeOutput {
	return o
}

// Specifies the agency ID.
func (o ClusterCertificateRevokeOutput) AgencyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCertificateRevoke) pulumi.StringPtrOutput { return v.AgencyId }).(pulumi.StringPtrOutput)
}

// Specifies the cluster ID.
func (o ClusterCertificateRevokeOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterCertificateRevoke) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

func (o ClusterCertificateRevokeOutput) EnableForceNew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCertificateRevoke) pulumi.StringPtrOutput { return v.EnableForceNew }).(pulumi.StringPtrOutput)
}

// Specifies the region in which to create the node sync resource.
// If omitted, the provider-level region will be used. Changing this will create a new resource.
func (o ClusterCertificateRevokeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterCertificateRevoke) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the user ID.
func (o ClusterCertificateRevokeOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCertificateRevoke) pulumi.StringPtrOutput { return v.UserId }).(pulumi.StringPtrOutput)
}

type ClusterCertificateRevokeArrayOutput struct{ *pulumi.OutputState }

func (ClusterCertificateRevokeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterCertificateRevoke)(nil)).Elem()
}

func (o ClusterCertificateRevokeArrayOutput) ToClusterCertificateRevokeArrayOutput() ClusterCertificateRevokeArrayOutput {
	return o
}

func (o ClusterCertificateRevokeArrayOutput) ToClusterCertificateRevokeArrayOutputWithContext(ctx context.Context) ClusterCertificateRevokeArrayOutput {
	return o
}

func (o ClusterCertificateRevokeArrayOutput) Index(i pulumi.IntInput) ClusterCertificateRevokeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterCertificateRevoke {
		return vs[0].([]*ClusterCertificateRevoke)[vs[1].(int)]
	}).(ClusterCertificateRevokeOutput)
}

type ClusterCertificateRevokeMapOutput struct{ *pulumi.OutputState }

func (ClusterCertificateRevokeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterCertificateRevoke)(nil)).Elem()
}

func (o ClusterCertificateRevokeMapOutput) ToClusterCertificateRevokeMapOutput() ClusterCertificateRevokeMapOutput {
	return o
}

func (o ClusterCertificateRevokeMapOutput) ToClusterCertificateRevokeMapOutputWithContext(ctx context.Context) ClusterCertificateRevokeMapOutput {
	return o
}

func (o ClusterCertificateRevokeMapOutput) MapIndex(k pulumi.StringInput) ClusterCertificateRevokeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterCertificateRevoke {
		return vs[0].(map[string]*ClusterCertificateRevoke)[vs[1].(string)]
	}).(ClusterCertificateRevokeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCertificateRevokeInput)(nil)).Elem(), &ClusterCertificateRevoke{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCertificateRevokeArrayInput)(nil)).Elem(), ClusterCertificateRevokeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterCertificateRevokeMapInput)(nil)).Elem(), ClusterCertificateRevokeMap{})
	pulumi.RegisterOutputType(ClusterCertificateRevokeOutput{})
	pulumi.RegisterOutputType(ClusterCertificateRevokeArrayOutput{})
	pulumi.RegisterOutputType(ClusterCertificateRevokeMapOutput{})
}
