// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of CCE charts within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Cce"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Cce"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cce.GetCharts(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCharts(ctx *pulumi.Context, args *GetChartsArgs, opts ...pulumi.InvokeOption) (*GetChartsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetChartsResult
	err := ctx.Invoke("huaweicloud:Cce/getCharts:getCharts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCharts.
type GetChartsArgs struct {
	// Specifies the region in which to obtain the CCE charts. If omitted, the
	// provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getCharts.
type GetChartsResult struct {
	// The list of charts.
	// The charts structure is documented below.
	Charts []GetChartsChart `pulumi:"charts"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
}

func GetChartsOutput(ctx *pulumi.Context, args GetChartsOutputArgs, opts ...pulumi.InvokeOption) GetChartsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetChartsResult, error) {
			args := v.(GetChartsArgs)
			r, err := GetCharts(ctx, &args, opts...)
			var s GetChartsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetChartsResultOutput)
}

// A collection of arguments for invoking getCharts.
type GetChartsOutputArgs struct {
	// Specifies the region in which to obtain the CCE charts. If omitted, the
	// provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetChartsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartsArgs)(nil)).Elem()
}

// A collection of values returned by getCharts.
type GetChartsResultOutput struct{ *pulumi.OutputState }

func (GetChartsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChartsResult)(nil)).Elem()
}

func (o GetChartsResultOutput) ToGetChartsResultOutput() GetChartsResultOutput {
	return o
}

func (o GetChartsResultOutput) ToGetChartsResultOutputWithContext(ctx context.Context) GetChartsResultOutput {
	return o
}

// The list of charts.
// The charts structure is documented below.
func (o GetChartsResultOutput) Charts() GetChartsChartArrayOutput {
	return o.ApplyT(func(v GetChartsResult) []GetChartsChart { return v.Charts }).(GetChartsChartArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetChartsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetChartsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetChartsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetChartsResultOutput{})
}
