// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cce

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the configurations of a CCE cluster within HuaweiCloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Cce"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Cce"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			clusterId := cfg.RequireObject("clusterId")
//			_, err := Cce.GetClusterConfigurations(ctx, &cce.GetClusterConfigurationsArgs{
//				ClusterId: clusterId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClusterConfigurations(ctx *pulumi.Context, args *GetClusterConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetClusterConfigurationsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetClusterConfigurationsResult
	err := ctx.Invoke("huaweicloud:Cce/getClusterConfigurations:getClusterConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterConfigurations.
type GetClusterConfigurationsArgs struct {
	// Specifies the cluster ID in which to query the configurations.
	ClusterId string `pulumi:"clusterId"`
	// Specifies the region in which to obtain the CCE cluster configurations. If omitted, the
	// provider-level region will be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getClusterConfigurations.
type GetClusterConfigurationsResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The map of configurations.
	Configurations map[string]string `pulumi:"configurations"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Region string `pulumi:"region"`
}

func GetClusterConfigurationsOutput(ctx *pulumi.Context, args GetClusterConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetClusterConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClusterConfigurationsResult, error) {
			args := v.(GetClusterConfigurationsArgs)
			r, err := GetClusterConfigurations(ctx, &args, opts...)
			var s GetClusterConfigurationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClusterConfigurationsResultOutput)
}

// A collection of arguments for invoking getClusterConfigurations.
type GetClusterConfigurationsOutputArgs struct {
	// Specifies the cluster ID in which to query the configurations.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Specifies the region in which to obtain the CCE cluster configurations. If omitted, the
	// provider-level region will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetClusterConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getClusterConfigurations.
type GetClusterConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetClusterConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterConfigurationsResult)(nil)).Elem()
}

func (o GetClusterConfigurationsResultOutput) ToGetClusterConfigurationsResultOutput() GetClusterConfigurationsResultOutput {
	return o
}

func (o GetClusterConfigurationsResultOutput) ToGetClusterConfigurationsResultOutputWithContext(ctx context.Context) GetClusterConfigurationsResultOutput {
	return o
}

func (o GetClusterConfigurationsResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConfigurationsResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The map of configurations.
func (o GetClusterConfigurationsResultOutput) Configurations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClusterConfigurationsResult) map[string]string { return v.Configurations }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterConfigurationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConfigurationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterConfigurationsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterConfigurationsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterConfigurationsResultOutput{})
}
