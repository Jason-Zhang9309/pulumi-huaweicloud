// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the available IAM [Permissions](https://support.huaweicloud.com/intl/en-us/productdesc-iam/iam_01_0023.html#section5),
// including roles and policies.
//
// > **NOTE:** You *must* have IAM read privileges to use this data source.
//
// ## Example Usage
// ### Full Permissions of ECS Service
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iam.GetPermissions(ctx, &iam.GetPermissionsArgs{
//				Name: pulumi.StringRef("ECS FullAccess"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### All System Defined Permissions of ELB Service
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iam.GetPermissions(ctx, &iam.GetPermissionsArgs{
//				Catalog: pulumi.StringRef("ELB"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### All Administrator Permissions
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iam.GetPermissions(ctx, &iam.GetPermissionsArgs{
//				Name: pulumi.StringRef("Administrator"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### All Custom Policies
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iam.GetPermissions(ctx, &iam.GetPermissionsArgs{
//				Type: pulumi.StringRef("custom"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPermissions(ctx *pulumi.Context, args *GetPermissionsArgs, opts ...pulumi.InvokeOption) (*GetPermissionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPermissionsResult
	err := ctx.Invoke("huaweicloud:Iam/getPermissions:getPermissions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissions.
type GetPermissionsArgs struct {
	// Specifies the service catalog of the permission.
	Catalog *string `pulumi:"catalog"`
	// Specifies the permission name or filter condition.
	// + Permission name: For example, if you set this parameter to **ECS FullAccess**, information about the permission will
	//   be returned.
	// + Filter condition: For example, if you set this parameter to **Administrator**, all administrator permissions that
	//   meet the conditions will be returned.
	Name *string `pulumi:"name"`
	// Specifies the type of the permission. The default value is **system**, and valid values are
	// as follows:
	// + **system**: The system-defined permissions (including system-defined policies and roles).
	//   We can get all **System-defined Permissions** from [HuaweiCloud](https://support.huaweicloud.com/intl/en-us/usermanual-permissions/iam_01_0001.html).
	// + **system-policy**: The system-defined policies.
	// + **system-role**: The system-defined roles.
	// + **custom**: The custom policies.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getPermissions.
type GetPermissionsResult struct {
	// The service catalog of the permission.
	Catalog *string `pulumi:"catalog"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The permission name.
	Name *string `pulumi:"name"`
	// An array of available permissions. The structure is documented below.
	Permissions []GetPermissionsPermission `pulumi:"permissions"`
	Type        *string                    `pulumi:"type"`
}

func GetPermissionsOutput(ctx *pulumi.Context, args GetPermissionsOutputArgs, opts ...pulumi.InvokeOption) GetPermissionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionsResult, error) {
			args := v.(GetPermissionsArgs)
			r, err := GetPermissions(ctx, &args, opts...)
			var s GetPermissionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPermissionsResultOutput)
}

// A collection of arguments for invoking getPermissions.
type GetPermissionsOutputArgs struct {
	// Specifies the service catalog of the permission.
	Catalog pulumi.StringPtrInput `pulumi:"catalog"`
	// Specifies the permission name or filter condition.
	// + Permission name: For example, if you set this parameter to **ECS FullAccess**, information about the permission will
	//   be returned.
	// + Filter condition: For example, if you set this parameter to **Administrator**, all administrator permissions that
	//   meet the conditions will be returned.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the type of the permission. The default value is **system**, and valid values are
	// as follows:
	// + **system**: The system-defined permissions (including system-defined policies and roles).
	//   We can get all **System-defined Permissions** from [HuaweiCloud](https://support.huaweicloud.com/intl/en-us/usermanual-permissions/iam_01_0001.html).
	// + **system-policy**: The system-defined policies.
	// + **system-role**: The system-defined roles.
	// + **custom**: The custom policies.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetPermissionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsArgs)(nil)).Elem()
}

// A collection of values returned by getPermissions.
type GetPermissionsResultOutput struct{ *pulumi.OutputState }

func (GetPermissionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsResult)(nil)).Elem()
}

func (o GetPermissionsResultOutput) ToGetPermissionsResultOutput() GetPermissionsResultOutput {
	return o
}

func (o GetPermissionsResultOutput) ToGetPermissionsResultOutputWithContext(ctx context.Context) GetPermissionsResultOutput {
	return o
}

// The service catalog of the permission.
func (o GetPermissionsResultOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionsResult) *string { return v.Catalog }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPermissionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The permission name.
func (o GetPermissionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of available permissions. The structure is documented below.
func (o GetPermissionsResultOutput) Permissions() GetPermissionsPermissionArrayOutput {
	return o.ApplyT(func(v GetPermissionsResult) []GetPermissionsPermission { return v.Permissions }).(GetPermissionsPermissionArrayOutput)
}

func (o GetPermissionsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionsResultOutput{})
}
