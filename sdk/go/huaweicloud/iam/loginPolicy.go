// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iam.NewLoginPolicy(ctx, "test", &Iam.LoginPolicyArgs{
//				AccountValidityPeriod:   pulumi.Int(20),
//				CustomInfoForLogin:      pulumi.String("hello Terraform"),
//				LockoutDuration:         pulumi.Int(30),
//				LoginFailedTimes:        pulumi.Int(10),
//				PeriodWithLoginFailures: pulumi.Int(30),
//				SessionTimeout:          pulumi.Int(120),
//				ShowRecentLoginInfo:     pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Identity login policy can be imported using the account ID or domain ID, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:Iam/loginPolicy:LoginPolicy example <your account ID>
//
// ```
type LoginPolicy struct {
	pulumi.CustomResourceState

	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from `0` to `240`.
	AccountValidityPeriod pulumi.IntOutput `pulumi:"accountValidityPeriod"`
	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin pulumi.StringPtrOutput `pulumi:"customInfoForLogin"`
	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from `15` to `1440`, defaults to `15`.
	LockoutDuration pulumi.IntPtrOutput `pulumi:"lockoutDuration"`
	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from `3` to `10`, defaults to `5`.
	LoginFailedTimes pulumi.IntPtrOutput `pulumi:"loginFailedTimes"`
	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from `15` to `60`, defaults to `15`.
	PeriodWithLoginFailures pulumi.IntPtrOutput `pulumi:"periodWithLoginFailures"`
	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from `15` to `1,440`, defaults to `60`.
	SessionTimeout pulumi.IntPtrOutput `pulumi:"sessionTimeout"`
	// Specifies whether to display last login information upon successful login.
	// The value can be **true** or **false**.
	ShowRecentLoginInfo pulumi.BoolPtrOutput `pulumi:"showRecentLoginInfo"`
}

// NewLoginPolicy registers a new resource with the given unique name, arguments, and options.
func NewLoginPolicy(ctx *pulumi.Context,
	name string, args *LoginPolicyArgs, opts ...pulumi.ResourceOption) (*LoginPolicy, error) {
	if args == nil {
		args = &LoginPolicyArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource LoginPolicy
	err := ctx.RegisterResource("huaweicloud:Iam/loginPolicy:LoginPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoginPolicy gets an existing LoginPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoginPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoginPolicyState, opts ...pulumi.ResourceOption) (*LoginPolicy, error) {
	var resource LoginPolicy
	err := ctx.ReadResource("huaweicloud:Iam/loginPolicy:LoginPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoginPolicy resources.
type loginPolicyState struct {
	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from `0` to `240`.
	AccountValidityPeriod *int `pulumi:"accountValidityPeriod"`
	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin *string `pulumi:"customInfoForLogin"`
	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from `15` to `1440`, defaults to `15`.
	LockoutDuration *int `pulumi:"lockoutDuration"`
	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from `3` to `10`, defaults to `5`.
	LoginFailedTimes *int `pulumi:"loginFailedTimes"`
	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from `15` to `60`, defaults to `15`.
	PeriodWithLoginFailures *int `pulumi:"periodWithLoginFailures"`
	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from `15` to `1,440`, defaults to `60`.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// Specifies whether to display last login information upon successful login.
	// The value can be **true** or **false**.
	ShowRecentLoginInfo *bool `pulumi:"showRecentLoginInfo"`
}

type LoginPolicyState struct {
	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from `0` to `240`.
	AccountValidityPeriod pulumi.IntPtrInput
	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin pulumi.StringPtrInput
	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from `15` to `1440`, defaults to `15`.
	LockoutDuration pulumi.IntPtrInput
	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from `3` to `10`, defaults to `5`.
	LoginFailedTimes pulumi.IntPtrInput
	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from `15` to `60`, defaults to `15`.
	PeriodWithLoginFailures pulumi.IntPtrInput
	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from `15` to `1,440`, defaults to `60`.
	SessionTimeout pulumi.IntPtrInput
	// Specifies whether to display last login information upon successful login.
	// The value can be **true** or **false**.
	ShowRecentLoginInfo pulumi.BoolPtrInput
}

func (LoginPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*loginPolicyState)(nil)).Elem()
}

type loginPolicyArgs struct {
	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from `0` to `240`.
	AccountValidityPeriod *int `pulumi:"accountValidityPeriod"`
	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin *string `pulumi:"customInfoForLogin"`
	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from `15` to `1440`, defaults to `15`.
	LockoutDuration *int `pulumi:"lockoutDuration"`
	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from `3` to `10`, defaults to `5`.
	LoginFailedTimes *int `pulumi:"loginFailedTimes"`
	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from `15` to `60`, defaults to `15`.
	PeriodWithLoginFailures *int `pulumi:"periodWithLoginFailures"`
	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from `15` to `1,440`, defaults to `60`.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// Specifies whether to display last login information upon successful login.
	// The value can be **true** or **false**.
	ShowRecentLoginInfo *bool `pulumi:"showRecentLoginInfo"`
}

// The set of arguments for constructing a LoginPolicy resource.
type LoginPolicyArgs struct {
	// Specifies the validity period (days) to disable users
	// if they have not logged in within the period. The valid value is range from `0` to `240`.
	AccountValidityPeriod pulumi.IntPtrInput
	// Specifies the custom information that will be displayed
	// upon successful login.
	CustomInfoForLogin pulumi.StringPtrInput
	// Specifies the duration (minutes) to lock users out.
	// The valid value is range from `15` to `1440`, defaults to `15`.
	LockoutDuration pulumi.IntPtrInput
	// Specifies the number of unsuccessful login attempts to lock users out.
	// The valid value is range from `3` to `10`, defaults to `5`.
	LoginFailedTimes pulumi.IntPtrInput
	// Specifies the period (minutes) to count the number of unsuccessful
	// login attempts. The valid value is range from `15` to `60`, defaults to `15`.
	PeriodWithLoginFailures pulumi.IntPtrInput
	// Specifies the session timeout (minutes) that will apply if you or users created
	// using your account do not perform any operations within a specific period.
	// The valid value is range from `15` to `1,440`, defaults to `60`.
	SessionTimeout pulumi.IntPtrInput
	// Specifies whether to display last login information upon successful login.
	// The value can be **true** or **false**.
	ShowRecentLoginInfo pulumi.BoolPtrInput
}

func (LoginPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loginPolicyArgs)(nil)).Elem()
}

type LoginPolicyInput interface {
	pulumi.Input

	ToLoginPolicyOutput() LoginPolicyOutput
	ToLoginPolicyOutputWithContext(ctx context.Context) LoginPolicyOutput
}

func (*LoginPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginPolicy)(nil)).Elem()
}

func (i *LoginPolicy) ToLoginPolicyOutput() LoginPolicyOutput {
	return i.ToLoginPolicyOutputWithContext(context.Background())
}

func (i *LoginPolicy) ToLoginPolicyOutputWithContext(ctx context.Context) LoginPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginPolicyOutput)
}

// LoginPolicyArrayInput is an input type that accepts LoginPolicyArray and LoginPolicyArrayOutput values.
// You can construct a concrete instance of `LoginPolicyArrayInput` via:
//
//	LoginPolicyArray{ LoginPolicyArgs{...} }
type LoginPolicyArrayInput interface {
	pulumi.Input

	ToLoginPolicyArrayOutput() LoginPolicyArrayOutput
	ToLoginPolicyArrayOutputWithContext(context.Context) LoginPolicyArrayOutput
}

type LoginPolicyArray []LoginPolicyInput

func (LoginPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoginPolicy)(nil)).Elem()
}

func (i LoginPolicyArray) ToLoginPolicyArrayOutput() LoginPolicyArrayOutput {
	return i.ToLoginPolicyArrayOutputWithContext(context.Background())
}

func (i LoginPolicyArray) ToLoginPolicyArrayOutputWithContext(ctx context.Context) LoginPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginPolicyArrayOutput)
}

// LoginPolicyMapInput is an input type that accepts LoginPolicyMap and LoginPolicyMapOutput values.
// You can construct a concrete instance of `LoginPolicyMapInput` via:
//
//	LoginPolicyMap{ "key": LoginPolicyArgs{...} }
type LoginPolicyMapInput interface {
	pulumi.Input

	ToLoginPolicyMapOutput() LoginPolicyMapOutput
	ToLoginPolicyMapOutputWithContext(context.Context) LoginPolicyMapOutput
}

type LoginPolicyMap map[string]LoginPolicyInput

func (LoginPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoginPolicy)(nil)).Elem()
}

func (i LoginPolicyMap) ToLoginPolicyMapOutput() LoginPolicyMapOutput {
	return i.ToLoginPolicyMapOutputWithContext(context.Background())
}

func (i LoginPolicyMap) ToLoginPolicyMapOutputWithContext(ctx context.Context) LoginPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginPolicyMapOutput)
}

type LoginPolicyOutput struct{ *pulumi.OutputState }

func (LoginPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginPolicy)(nil)).Elem()
}

func (o LoginPolicyOutput) ToLoginPolicyOutput() LoginPolicyOutput {
	return o
}

func (o LoginPolicyOutput) ToLoginPolicyOutputWithContext(ctx context.Context) LoginPolicyOutput {
	return o
}

// Specifies the validity period (days) to disable users
// if they have not logged in within the period. The valid value is range from `0` to `240`.
func (o LoginPolicyOutput) AccountValidityPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.IntOutput { return v.AccountValidityPeriod }).(pulumi.IntOutput)
}

// Specifies the custom information that will be displayed
// upon successful login.
func (o LoginPolicyOutput) CustomInfoForLogin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.StringPtrOutput { return v.CustomInfoForLogin }).(pulumi.StringPtrOutput)
}

// Specifies the duration (minutes) to lock users out.
// The valid value is range from `15` to `1440`, defaults to `15`.
func (o LoginPolicyOutput) LockoutDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.IntPtrOutput { return v.LockoutDuration }).(pulumi.IntPtrOutput)
}

// Specifies the number of unsuccessful login attempts to lock users out.
// The valid value is range from `3` to `10`, defaults to `5`.
func (o LoginPolicyOutput) LoginFailedTimes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.IntPtrOutput { return v.LoginFailedTimes }).(pulumi.IntPtrOutput)
}

// Specifies the period (minutes) to count the number of unsuccessful
// login attempts. The valid value is range from `15` to `60`, defaults to `15`.
func (o LoginPolicyOutput) PeriodWithLoginFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.IntPtrOutput { return v.PeriodWithLoginFailures }).(pulumi.IntPtrOutput)
}

// Specifies the session timeout (minutes) that will apply if you or users created
// using your account do not perform any operations within a specific period.
// The valid value is range from `15` to `1,440`, defaults to `60`.
func (o LoginPolicyOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.IntPtrOutput { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// Specifies whether to display last login information upon successful login.
// The value can be **true** or **false**.
func (o LoginPolicyOutput) ShowRecentLoginInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoginPolicy) pulumi.BoolPtrOutput { return v.ShowRecentLoginInfo }).(pulumi.BoolPtrOutput)
}

type LoginPolicyArrayOutput struct{ *pulumi.OutputState }

func (LoginPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoginPolicy)(nil)).Elem()
}

func (o LoginPolicyArrayOutput) ToLoginPolicyArrayOutput() LoginPolicyArrayOutput {
	return o
}

func (o LoginPolicyArrayOutput) ToLoginPolicyArrayOutputWithContext(ctx context.Context) LoginPolicyArrayOutput {
	return o
}

func (o LoginPolicyArrayOutput) Index(i pulumi.IntInput) LoginPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoginPolicy {
		return vs[0].([]*LoginPolicy)[vs[1].(int)]
	}).(LoginPolicyOutput)
}

type LoginPolicyMapOutput struct{ *pulumi.OutputState }

func (LoginPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoginPolicy)(nil)).Elem()
}

func (o LoginPolicyMapOutput) ToLoginPolicyMapOutput() LoginPolicyMapOutput {
	return o
}

func (o LoginPolicyMapOutput) ToLoginPolicyMapOutputWithContext(ctx context.Context) LoginPolicyMapOutput {
	return o
}

func (o LoginPolicyMapOutput) MapIndex(k pulumi.StringInput) LoginPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoginPolicy {
		return vs[0].(map[string]*LoginPolicy)[vs[1].(string)]
	}).(LoginPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoginPolicyInput)(nil)).Elem(), &LoginPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoginPolicyArrayInput)(nil)).Elem(), LoginPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoginPolicyMapInput)(nil)).Elem(), LoginPolicyMap{})
	pulumi.RegisterOutputType(LoginPolicyOutput{})
	pulumi.RegisterOutputType(LoginPolicyArrayOutput{})
	pulumi.RegisterOutputType(LoginPolicyMapOutput{})
}
