// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cse

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlarmruleAlarmAction struct {
	// specifies the list of objects to be notified if the alarm status changes, the
	// maximum length is 5.
	NotificationLists []string `pulumi:"notificationLists"`
	// Specifies the type of action triggered by an alarm. the value is notification.
	// notification: indicates that a notification will be sent to the user.
	Type string `pulumi:"type"`
}

// AlarmruleAlarmActionInput is an input type that accepts AlarmruleAlarmActionArgs and AlarmruleAlarmActionOutput values.
// You can construct a concrete instance of `AlarmruleAlarmActionInput` via:
//
//	AlarmruleAlarmActionArgs{...}
type AlarmruleAlarmActionInput interface {
	pulumi.Input

	ToAlarmruleAlarmActionOutput() AlarmruleAlarmActionOutput
	ToAlarmruleAlarmActionOutputWithContext(context.Context) AlarmruleAlarmActionOutput
}

type AlarmruleAlarmActionArgs struct {
	// specifies the list of objects to be notified if the alarm status changes, the
	// maximum length is 5.
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	// Specifies the type of action triggered by an alarm. the value is notification.
	// notification: indicates that a notification will be sent to the user.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AlarmruleAlarmActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleAlarmAction)(nil)).Elem()
}

func (i AlarmruleAlarmActionArgs) ToAlarmruleAlarmActionOutput() AlarmruleAlarmActionOutput {
	return i.ToAlarmruleAlarmActionOutputWithContext(context.Background())
}

func (i AlarmruleAlarmActionArgs) ToAlarmruleAlarmActionOutputWithContext(ctx context.Context) AlarmruleAlarmActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleAlarmActionOutput)
}

// AlarmruleAlarmActionArrayInput is an input type that accepts AlarmruleAlarmActionArray and AlarmruleAlarmActionArrayOutput values.
// You can construct a concrete instance of `AlarmruleAlarmActionArrayInput` via:
//
//	AlarmruleAlarmActionArray{ AlarmruleAlarmActionArgs{...} }
type AlarmruleAlarmActionArrayInput interface {
	pulumi.Input

	ToAlarmruleAlarmActionArrayOutput() AlarmruleAlarmActionArrayOutput
	ToAlarmruleAlarmActionArrayOutputWithContext(context.Context) AlarmruleAlarmActionArrayOutput
}

type AlarmruleAlarmActionArray []AlarmruleAlarmActionInput

func (AlarmruleAlarmActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleAlarmAction)(nil)).Elem()
}

func (i AlarmruleAlarmActionArray) ToAlarmruleAlarmActionArrayOutput() AlarmruleAlarmActionArrayOutput {
	return i.ToAlarmruleAlarmActionArrayOutputWithContext(context.Background())
}

func (i AlarmruleAlarmActionArray) ToAlarmruleAlarmActionArrayOutputWithContext(ctx context.Context) AlarmruleAlarmActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleAlarmActionArrayOutput)
}

type AlarmruleAlarmActionOutput struct{ *pulumi.OutputState }

func (AlarmruleAlarmActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleAlarmAction)(nil)).Elem()
}

func (o AlarmruleAlarmActionOutput) ToAlarmruleAlarmActionOutput() AlarmruleAlarmActionOutput {
	return o
}

func (o AlarmruleAlarmActionOutput) ToAlarmruleAlarmActionOutputWithContext(ctx context.Context) AlarmruleAlarmActionOutput {
	return o
}

// specifies the list of objects to be notified if the alarm status changes, the
// maximum length is 5.
func (o AlarmruleAlarmActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmruleAlarmAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

// Specifies the type of action triggered by an alarm. the value is notification.
// notification: indicates that a notification will be sent to the user.
func (o AlarmruleAlarmActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleAlarmAction) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmruleAlarmActionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleAlarmActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleAlarmAction)(nil)).Elem()
}

func (o AlarmruleAlarmActionArrayOutput) ToAlarmruleAlarmActionArrayOutput() AlarmruleAlarmActionArrayOutput {
	return o
}

func (o AlarmruleAlarmActionArrayOutput) ToAlarmruleAlarmActionArrayOutputWithContext(ctx context.Context) AlarmruleAlarmActionArrayOutput {
	return o
}

func (o AlarmruleAlarmActionArrayOutput) Index(i pulumi.IntInput) AlarmruleAlarmActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleAlarmAction {
		return vs[0].([]AlarmruleAlarmAction)[vs[1].(int)]
	}).(AlarmruleAlarmActionOutput)
}

type AlarmruleCondition struct {
	// Specifies the alarm severity of the condition. The value can be 1, 2, 3 or 4,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is 2.
	AlarmLevel *int `pulumi:"alarmLevel"`
	// Specifies the comparison condition of alarm thresholds. The value can be >,
	// =, <, >=, or <=.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// Specifies the number of consecutive occurrence times. The value ranges from 1 to 5.
	Count int `pulumi:"count"`
	// Specifies the data rollup methods. The value can be max, min, average, sum, and variance.
	Filter string `pulumi:"filter"`
	// Specifies the metric name of the condition. The value can be a string of
	// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	MetricName *string `pulumi:"metricName"`
	// Specifies the alarm checking period in seconds. The value can be 0, 1, 300, 1200, 3600, 14400,
	// and 86400.
	Period int `pulumi:"period"`
	// Specifies the interval for triggering an alarm if the alarm persists.
	// Possible values are as follows:
	// + **0**: Cloud Eye triggers the alarm only once;
	// + **300**: Cloud Eye triggers the alarm every 5 minutes;
	// + **600**: Cloud Eye triggers the alarm every 10 minutes;
	// + **900**: Cloud Eye triggers the alarm every 15 minutes;
	// + **1800**: Cloud Eye triggers the alarm every 30 minutes;
	// + **3600**: Cloud Eye triggers the alarm every hour;
	// + **10800**: Cloud Eye triggers the alarm every 3 hours;
	// + **21600**: Cloud Eye triggers the alarm every 6 hours;
	// + **43200**: Cloud Eye triggers the alarm every 12 hour;
	// + **86400**: Cloud Eye triggers the alarm every day.
	SuppressDuration *int `pulumi:"suppressDuration"`
	// Specifies the data unit.
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	Unit *string `pulumi:"unit"`
	// Specifies the alarm threshold. The value ranges from 0 to Number of
	// 1.7976931348623157e+108.
	Value float64 `pulumi:"value"`
}

// AlarmruleConditionInput is an input type that accepts AlarmruleConditionArgs and AlarmruleConditionOutput values.
// You can construct a concrete instance of `AlarmruleConditionInput` via:
//
//	AlarmruleConditionArgs{...}
type AlarmruleConditionInput interface {
	pulumi.Input

	ToAlarmruleConditionOutput() AlarmruleConditionOutput
	ToAlarmruleConditionOutputWithContext(context.Context) AlarmruleConditionOutput
}

type AlarmruleConditionArgs struct {
	// Specifies the alarm severity of the condition. The value can be 1, 2, 3 or 4,
	// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
	// The default value is 2.
	AlarmLevel pulumi.IntPtrInput `pulumi:"alarmLevel"`
	// Specifies the comparison condition of alarm thresholds. The value can be >,
	// =, <, >=, or <=.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// Specifies the number of consecutive occurrence times. The value ranges from 1 to 5.
	Count pulumi.IntInput `pulumi:"count"`
	// Specifies the data rollup methods. The value can be max, min, average, sum, and variance.
	Filter pulumi.StringInput `pulumi:"filter"`
	// Specifies the metric name of the condition. The value can be a string of
	// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Specifies the alarm checking period in seconds. The value can be 0, 1, 300, 1200, 3600, 14400,
	// and 86400.
	Period pulumi.IntInput `pulumi:"period"`
	// Specifies the interval for triggering an alarm if the alarm persists.
	// Possible values are as follows:
	// + **0**: Cloud Eye triggers the alarm only once;
	// + **300**: Cloud Eye triggers the alarm every 5 minutes;
	// + **600**: Cloud Eye triggers the alarm every 10 minutes;
	// + **900**: Cloud Eye triggers the alarm every 15 minutes;
	// + **1800**: Cloud Eye triggers the alarm every 30 minutes;
	// + **3600**: Cloud Eye triggers the alarm every hour;
	// + **10800**: Cloud Eye triggers the alarm every 3 hours;
	// + **21600**: Cloud Eye triggers the alarm every 6 hours;
	// + **43200**: Cloud Eye triggers the alarm every 12 hour;
	// + **86400**: Cloud Eye triggers the alarm every day.
	SuppressDuration pulumi.IntPtrInput `pulumi:"suppressDuration"`
	// Specifies the data unit.
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// Specifies the alarm threshold. The value ranges from 0 to Number of
	// 1.7976931348623157e+108.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (AlarmruleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleCondition)(nil)).Elem()
}

func (i AlarmruleConditionArgs) ToAlarmruleConditionOutput() AlarmruleConditionOutput {
	return i.ToAlarmruleConditionOutputWithContext(context.Background())
}

func (i AlarmruleConditionArgs) ToAlarmruleConditionOutputWithContext(ctx context.Context) AlarmruleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleConditionOutput)
}

// AlarmruleConditionArrayInput is an input type that accepts AlarmruleConditionArray and AlarmruleConditionArrayOutput values.
// You can construct a concrete instance of `AlarmruleConditionArrayInput` via:
//
//	AlarmruleConditionArray{ AlarmruleConditionArgs{...} }
type AlarmruleConditionArrayInput interface {
	pulumi.Input

	ToAlarmruleConditionArrayOutput() AlarmruleConditionArrayOutput
	ToAlarmruleConditionArrayOutputWithContext(context.Context) AlarmruleConditionArrayOutput
}

type AlarmruleConditionArray []AlarmruleConditionInput

func (AlarmruleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleCondition)(nil)).Elem()
}

func (i AlarmruleConditionArray) ToAlarmruleConditionArrayOutput() AlarmruleConditionArrayOutput {
	return i.ToAlarmruleConditionArrayOutputWithContext(context.Background())
}

func (i AlarmruleConditionArray) ToAlarmruleConditionArrayOutputWithContext(ctx context.Context) AlarmruleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleConditionArrayOutput)
}

type AlarmruleConditionOutput struct{ *pulumi.OutputState }

func (AlarmruleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleCondition)(nil)).Elem()
}

func (o AlarmruleConditionOutput) ToAlarmruleConditionOutput() AlarmruleConditionOutput {
	return o
}

func (o AlarmruleConditionOutput) ToAlarmruleConditionOutputWithContext(ctx context.Context) AlarmruleConditionOutput {
	return o
}

// Specifies the alarm severity of the condition. The value can be 1, 2, 3 or 4,
// which indicates *critical*, *major*, *minor*, and *informational*, respectively.
// The default value is 2.
func (o AlarmruleConditionOutput) AlarmLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmruleCondition) *int { return v.AlarmLevel }).(pulumi.IntPtrOutput)
}

// Specifies the comparison condition of alarm thresholds. The value can be >,
// =, <, >=, or <=.
func (o AlarmruleConditionOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleCondition) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// Specifies the number of consecutive occurrence times. The value ranges from 1 to 5.
func (o AlarmruleConditionOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmruleCondition) int { return v.Count }).(pulumi.IntOutput)
}

// Specifies the data rollup methods. The value can be max, min, average, sum, and variance.
func (o AlarmruleConditionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleCondition) string { return v.Filter }).(pulumi.StringOutput)
}

// Specifies the metric name of the condition. The value can be a string of
// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
func (o AlarmruleConditionOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmruleCondition) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Specifies the alarm checking period in seconds. The value can be 0, 1, 300, 1200, 3600, 14400,
// and 86400.
func (o AlarmruleConditionOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmruleCondition) int { return v.Period }).(pulumi.IntOutput)
}

// Specifies the interval for triggering an alarm if the alarm persists.
// Possible values are as follows:
// + **0**: Cloud Eye triggers the alarm only once;
// + **300**: Cloud Eye triggers the alarm every 5 minutes;
// + **600**: Cloud Eye triggers the alarm every 10 minutes;
// + **900**: Cloud Eye triggers the alarm every 15 minutes;
// + **1800**: Cloud Eye triggers the alarm every 30 minutes;
// + **3600**: Cloud Eye triggers the alarm every hour;
// + **10800**: Cloud Eye triggers the alarm every 3 hours;
// + **21600**: Cloud Eye triggers the alarm every 6 hours;
// + **43200**: Cloud Eye triggers the alarm every 12 hour;
// + **86400**: Cloud Eye triggers the alarm every day.
func (o AlarmruleConditionOutput) SuppressDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmruleCondition) *int { return v.SuppressDuration }).(pulumi.IntPtrOutput)
}

// Specifies the data unit.
// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
func (o AlarmruleConditionOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmruleCondition) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// Specifies the alarm threshold. The value ranges from 0 to Number of
// 1.7976931348623157e+108.
func (o AlarmruleConditionOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AlarmruleCondition) float64 { return v.Value }).(pulumi.Float64Output)
}

type AlarmruleConditionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleCondition)(nil)).Elem()
}

func (o AlarmruleConditionArrayOutput) ToAlarmruleConditionArrayOutput() AlarmruleConditionArrayOutput {
	return o
}

func (o AlarmruleConditionArrayOutput) ToAlarmruleConditionArrayOutputWithContext(ctx context.Context) AlarmruleConditionArrayOutput {
	return o
}

func (o AlarmruleConditionArrayOutput) Index(i pulumi.IntInput) AlarmruleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleCondition {
		return vs[0].([]AlarmruleCondition)[vs[1].(int)]
	}).(AlarmruleConditionOutput)
}

type AlarmruleInsufficientdataAction struct {
	// specifies the list of objects to be notified if the alarm status changes, the
	// maximum length is 5.
	NotificationLists []string `pulumi:"notificationLists"`
	// Specifies the type of action triggered by an alarm. the value is notification.
	// notification: indicates that a notification will be sent to the user.
	Type string `pulumi:"type"`
}

// AlarmruleInsufficientdataActionInput is an input type that accepts AlarmruleInsufficientdataActionArgs and AlarmruleInsufficientdataActionOutput values.
// You can construct a concrete instance of `AlarmruleInsufficientdataActionInput` via:
//
//	AlarmruleInsufficientdataActionArgs{...}
type AlarmruleInsufficientdataActionInput interface {
	pulumi.Input

	ToAlarmruleInsufficientdataActionOutput() AlarmruleInsufficientdataActionOutput
	ToAlarmruleInsufficientdataActionOutputWithContext(context.Context) AlarmruleInsufficientdataActionOutput
}

type AlarmruleInsufficientdataActionArgs struct {
	// specifies the list of objects to be notified if the alarm status changes, the
	// maximum length is 5.
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	// Specifies the type of action triggered by an alarm. the value is notification.
	// notification: indicates that a notification will be sent to the user.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AlarmruleInsufficientdataActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (i AlarmruleInsufficientdataActionArgs) ToAlarmruleInsufficientdataActionOutput() AlarmruleInsufficientdataActionOutput {
	return i.ToAlarmruleInsufficientdataActionOutputWithContext(context.Background())
}

func (i AlarmruleInsufficientdataActionArgs) ToAlarmruleInsufficientdataActionOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleInsufficientdataActionOutput)
}

// AlarmruleInsufficientdataActionArrayInput is an input type that accepts AlarmruleInsufficientdataActionArray and AlarmruleInsufficientdataActionArrayOutput values.
// You can construct a concrete instance of `AlarmruleInsufficientdataActionArrayInput` via:
//
//	AlarmruleInsufficientdataActionArray{ AlarmruleInsufficientdataActionArgs{...} }
type AlarmruleInsufficientdataActionArrayInput interface {
	pulumi.Input

	ToAlarmruleInsufficientdataActionArrayOutput() AlarmruleInsufficientdataActionArrayOutput
	ToAlarmruleInsufficientdataActionArrayOutputWithContext(context.Context) AlarmruleInsufficientdataActionArrayOutput
}

type AlarmruleInsufficientdataActionArray []AlarmruleInsufficientdataActionInput

func (AlarmruleInsufficientdataActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (i AlarmruleInsufficientdataActionArray) ToAlarmruleInsufficientdataActionArrayOutput() AlarmruleInsufficientdataActionArrayOutput {
	return i.ToAlarmruleInsufficientdataActionArrayOutputWithContext(context.Background())
}

func (i AlarmruleInsufficientdataActionArray) ToAlarmruleInsufficientdataActionArrayOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleInsufficientdataActionArrayOutput)
}

type AlarmruleInsufficientdataActionOutput struct{ *pulumi.OutputState }

func (AlarmruleInsufficientdataActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (o AlarmruleInsufficientdataActionOutput) ToAlarmruleInsufficientdataActionOutput() AlarmruleInsufficientdataActionOutput {
	return o
}

func (o AlarmruleInsufficientdataActionOutput) ToAlarmruleInsufficientdataActionOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionOutput {
	return o
}

// specifies the list of objects to be notified if the alarm status changes, the
// maximum length is 5.
func (o AlarmruleInsufficientdataActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmruleInsufficientdataAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

// Specifies the type of action triggered by an alarm. the value is notification.
// notification: indicates that a notification will be sent to the user.
func (o AlarmruleInsufficientdataActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleInsufficientdataAction) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmruleInsufficientdataActionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleInsufficientdataActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleInsufficientdataAction)(nil)).Elem()
}

func (o AlarmruleInsufficientdataActionArrayOutput) ToAlarmruleInsufficientdataActionArrayOutput() AlarmruleInsufficientdataActionArrayOutput {
	return o
}

func (o AlarmruleInsufficientdataActionArrayOutput) ToAlarmruleInsufficientdataActionArrayOutputWithContext(ctx context.Context) AlarmruleInsufficientdataActionArrayOutput {
	return o
}

func (o AlarmruleInsufficientdataActionArrayOutput) Index(i pulumi.IntInput) AlarmruleInsufficientdataActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleInsufficientdataAction {
		return vs[0].([]AlarmruleInsufficientdataAction)[vs[1].(int)]
	}).(AlarmruleInsufficientdataActionOutput)
}

type AlarmruleMetric struct {
	// Specifies the list of metric dimensions. The structure is described below.
	Dimensions []AlarmruleMetricDimension `pulumi:"dimensions"`
	// Specifies the metric name of the condition. The value can be a string of
	// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	MetricName *string `pulumi:"metricName"`
	// Specifies the namespace in **service.item** format. **service** and **item**
	// each must be a string that starts with a letter and contains only letters, digits, and underscores (_).
	// Changing this creates a new resource.
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	Namespace string `pulumi:"namespace"`
}

// AlarmruleMetricInput is an input type that accepts AlarmruleMetricArgs and AlarmruleMetricOutput values.
// You can construct a concrete instance of `AlarmruleMetricInput` via:
//
//	AlarmruleMetricArgs{...}
type AlarmruleMetricInput interface {
	pulumi.Input

	ToAlarmruleMetricOutput() AlarmruleMetricOutput
	ToAlarmruleMetricOutputWithContext(context.Context) AlarmruleMetricOutput
}

type AlarmruleMetricArgs struct {
	// Specifies the list of metric dimensions. The structure is described below.
	Dimensions AlarmruleMetricDimensionArrayInput `pulumi:"dimensions"`
	// Specifies the metric name of the condition. The value can be a string of
	// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Specifies the namespace in **service.item** format. **service** and **item**
	// each must be a string that starts with a letter and contains only letters, digits, and underscores (_).
	// Changing this creates a new resource.
	// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (AlarmruleMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetric)(nil)).Elem()
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricOutput() AlarmruleMetricOutput {
	return i.ToAlarmruleMetricOutputWithContext(context.Background())
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricOutputWithContext(ctx context.Context) AlarmruleMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricOutput)
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return i.ToAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (i AlarmruleMetricArgs) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricOutput).ToAlarmruleMetricPtrOutputWithContext(ctx)
}

// AlarmruleMetricPtrInput is an input type that accepts AlarmruleMetricArgs, AlarmruleMetricPtr and AlarmruleMetricPtrOutput values.
// You can construct a concrete instance of `AlarmruleMetricPtrInput` via:
//
//	        AlarmruleMetricArgs{...}
//
//	or:
//
//	        nil
type AlarmruleMetricPtrInput interface {
	pulumi.Input

	ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput
	ToAlarmruleMetricPtrOutputWithContext(context.Context) AlarmruleMetricPtrOutput
}

type alarmruleMetricPtrType AlarmruleMetricArgs

func AlarmruleMetricPtr(v *AlarmruleMetricArgs) AlarmruleMetricPtrInput {
	return (*alarmruleMetricPtrType)(v)
}

func (*alarmruleMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmruleMetric)(nil)).Elem()
}

func (i *alarmruleMetricPtrType) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return i.ToAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (i *alarmruleMetricPtrType) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricPtrOutput)
}

type AlarmruleMetricOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetric)(nil)).Elem()
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricOutput() AlarmruleMetricOutput {
	return o
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricOutputWithContext(ctx context.Context) AlarmruleMetricOutput {
	return o
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return o.ToAlarmruleMetricPtrOutputWithContext(context.Background())
}

func (o AlarmruleMetricOutput) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmruleMetric) *AlarmruleMetric {
		return &v
	}).(AlarmruleMetricPtrOutput)
}

// Specifies the list of metric dimensions. The structure is described below.
func (o AlarmruleMetricOutput) Dimensions() AlarmruleMetricDimensionArrayOutput {
	return o.ApplyT(func(v AlarmruleMetric) []AlarmruleMetricDimension { return v.Dimensions }).(AlarmruleMetricDimensionArrayOutput)
}

// Specifies the metric name of the condition. The value can be a string of
// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
func (o AlarmruleMetricOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmruleMetric) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Specifies the namespace in **service.item** format. **service** and **item**
// each must be a string that starts with a letter and contains only letters, digits, and underscores (_).
// Changing this creates a new resource.
// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
func (o AlarmruleMetricOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleMetric) string { return v.Namespace }).(pulumi.StringOutput)
}

type AlarmruleMetricPtrOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmruleMetric)(nil)).Elem()
}

func (o AlarmruleMetricPtrOutput) ToAlarmruleMetricPtrOutput() AlarmruleMetricPtrOutput {
	return o
}

func (o AlarmruleMetricPtrOutput) ToAlarmruleMetricPtrOutputWithContext(ctx context.Context) AlarmruleMetricPtrOutput {
	return o
}

func (o AlarmruleMetricPtrOutput) Elem() AlarmruleMetricOutput {
	return o.ApplyT(func(v *AlarmruleMetric) AlarmruleMetric {
		if v != nil {
			return *v
		}
		var ret AlarmruleMetric
		return ret
	}).(AlarmruleMetricOutput)
}

// Specifies the list of metric dimensions. The structure is described below.
func (o AlarmruleMetricPtrOutput) Dimensions() AlarmruleMetricDimensionArrayOutput {
	return o.ApplyT(func(v *AlarmruleMetric) []AlarmruleMetricDimension {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(AlarmruleMetricDimensionArrayOutput)
}

// Specifies the metric name of the condition. The value can be a string of
// 1 to 64 characters that must start with a letter and contain only letters, digits, and underscores (_).
// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
func (o AlarmruleMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleMetric) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

// Specifies the namespace in **service.item** format. **service** and **item**
// each must be a string that starts with a letter and contains only letters, digits, and underscores (_).
// Changing this creates a new resource.
// For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
func (o AlarmruleMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmruleMetric) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AlarmruleMetricDimension struct {
	// Specifies the dimension name. The value can be a string of 1 to 32 characters
	// that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
	Name string `pulumi:"name"`
	// Specifies the alarm threshold. The value ranges from 0 to Number of
	// 1.7976931348623157e+108.
	Value *string `pulumi:"value"`
}

// AlarmruleMetricDimensionInput is an input type that accepts AlarmruleMetricDimensionArgs and AlarmruleMetricDimensionOutput values.
// You can construct a concrete instance of `AlarmruleMetricDimensionInput` via:
//
//	AlarmruleMetricDimensionArgs{...}
type AlarmruleMetricDimensionInput interface {
	pulumi.Input

	ToAlarmruleMetricDimensionOutput() AlarmruleMetricDimensionOutput
	ToAlarmruleMetricDimensionOutputWithContext(context.Context) AlarmruleMetricDimensionOutput
}

type AlarmruleMetricDimensionArgs struct {
	// Specifies the dimension name. The value can be a string of 1 to 32 characters
	// that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the alarm threshold. The value ranges from 0 to Number of
	// 1.7976931348623157e+108.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlarmruleMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetricDimension)(nil)).Elem()
}

func (i AlarmruleMetricDimensionArgs) ToAlarmruleMetricDimensionOutput() AlarmruleMetricDimensionOutput {
	return i.ToAlarmruleMetricDimensionOutputWithContext(context.Background())
}

func (i AlarmruleMetricDimensionArgs) ToAlarmruleMetricDimensionOutputWithContext(ctx context.Context) AlarmruleMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricDimensionOutput)
}

// AlarmruleMetricDimensionArrayInput is an input type that accepts AlarmruleMetricDimensionArray and AlarmruleMetricDimensionArrayOutput values.
// You can construct a concrete instance of `AlarmruleMetricDimensionArrayInput` via:
//
//	AlarmruleMetricDimensionArray{ AlarmruleMetricDimensionArgs{...} }
type AlarmruleMetricDimensionArrayInput interface {
	pulumi.Input

	ToAlarmruleMetricDimensionArrayOutput() AlarmruleMetricDimensionArrayOutput
	ToAlarmruleMetricDimensionArrayOutputWithContext(context.Context) AlarmruleMetricDimensionArrayOutput
}

type AlarmruleMetricDimensionArray []AlarmruleMetricDimensionInput

func (AlarmruleMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleMetricDimension)(nil)).Elem()
}

func (i AlarmruleMetricDimensionArray) ToAlarmruleMetricDimensionArrayOutput() AlarmruleMetricDimensionArrayOutput {
	return i.ToAlarmruleMetricDimensionArrayOutputWithContext(context.Background())
}

func (i AlarmruleMetricDimensionArray) ToAlarmruleMetricDimensionArrayOutputWithContext(ctx context.Context) AlarmruleMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleMetricDimensionArrayOutput)
}

type AlarmruleMetricDimensionOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleMetricDimension)(nil)).Elem()
}

func (o AlarmruleMetricDimensionOutput) ToAlarmruleMetricDimensionOutput() AlarmruleMetricDimensionOutput {
	return o
}

func (o AlarmruleMetricDimensionOutput) ToAlarmruleMetricDimensionOutputWithContext(ctx context.Context) AlarmruleMetricDimensionOutput {
	return o
}

// Specifies the dimension name. The value can be a string of 1 to 32 characters
// that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
func (o AlarmruleMetricDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleMetricDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the alarm threshold. The value ranges from 0 to Number of
// 1.7976931348623157e+108.
func (o AlarmruleMetricDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmruleMetricDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlarmruleMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleMetricDimension)(nil)).Elem()
}

func (o AlarmruleMetricDimensionArrayOutput) ToAlarmruleMetricDimensionArrayOutput() AlarmruleMetricDimensionArrayOutput {
	return o
}

func (o AlarmruleMetricDimensionArrayOutput) ToAlarmruleMetricDimensionArrayOutputWithContext(ctx context.Context) AlarmruleMetricDimensionArrayOutput {
	return o
}

func (o AlarmruleMetricDimensionArrayOutput) Index(i pulumi.IntInput) AlarmruleMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleMetricDimension {
		return vs[0].([]AlarmruleMetricDimension)[vs[1].(int)]
	}).(AlarmruleMetricDimensionOutput)
}

type AlarmruleOkAction struct {
	// specifies the list of objects to be notified if the alarm status changes, the
	// maximum length is 5.
	NotificationLists []string `pulumi:"notificationLists"`
	// Specifies the type of action triggered by an alarm. the value is notification.
	// notification: indicates that a notification will be sent to the user.
	Type string `pulumi:"type"`
}

// AlarmruleOkActionInput is an input type that accepts AlarmruleOkActionArgs and AlarmruleOkActionOutput values.
// You can construct a concrete instance of `AlarmruleOkActionInput` via:
//
//	AlarmruleOkActionArgs{...}
type AlarmruleOkActionInput interface {
	pulumi.Input

	ToAlarmruleOkActionOutput() AlarmruleOkActionOutput
	ToAlarmruleOkActionOutputWithContext(context.Context) AlarmruleOkActionOutput
}

type AlarmruleOkActionArgs struct {
	// specifies the list of objects to be notified if the alarm status changes, the
	// maximum length is 5.
	NotificationLists pulumi.StringArrayInput `pulumi:"notificationLists"`
	// Specifies the type of action triggered by an alarm. the value is notification.
	// notification: indicates that a notification will be sent to the user.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AlarmruleOkActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleOkAction)(nil)).Elem()
}

func (i AlarmruleOkActionArgs) ToAlarmruleOkActionOutput() AlarmruleOkActionOutput {
	return i.ToAlarmruleOkActionOutputWithContext(context.Background())
}

func (i AlarmruleOkActionArgs) ToAlarmruleOkActionOutputWithContext(ctx context.Context) AlarmruleOkActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleOkActionOutput)
}

// AlarmruleOkActionArrayInput is an input type that accepts AlarmruleOkActionArray and AlarmruleOkActionArrayOutput values.
// You can construct a concrete instance of `AlarmruleOkActionArrayInput` via:
//
//	AlarmruleOkActionArray{ AlarmruleOkActionArgs{...} }
type AlarmruleOkActionArrayInput interface {
	pulumi.Input

	ToAlarmruleOkActionArrayOutput() AlarmruleOkActionArrayOutput
	ToAlarmruleOkActionArrayOutputWithContext(context.Context) AlarmruleOkActionArrayOutput
}

type AlarmruleOkActionArray []AlarmruleOkActionInput

func (AlarmruleOkActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleOkAction)(nil)).Elem()
}

func (i AlarmruleOkActionArray) ToAlarmruleOkActionArrayOutput() AlarmruleOkActionArrayOutput {
	return i.ToAlarmruleOkActionArrayOutputWithContext(context.Background())
}

func (i AlarmruleOkActionArray) ToAlarmruleOkActionArrayOutputWithContext(ctx context.Context) AlarmruleOkActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleOkActionArrayOutput)
}

type AlarmruleOkActionOutput struct{ *pulumi.OutputState }

func (AlarmruleOkActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleOkAction)(nil)).Elem()
}

func (o AlarmruleOkActionOutput) ToAlarmruleOkActionOutput() AlarmruleOkActionOutput {
	return o
}

func (o AlarmruleOkActionOutput) ToAlarmruleOkActionOutputWithContext(ctx context.Context) AlarmruleOkActionOutput {
	return o
}

// specifies the list of objects to be notified if the alarm status changes, the
// maximum length is 5.
func (o AlarmruleOkActionOutput) NotificationLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmruleOkAction) []string { return v.NotificationLists }).(pulumi.StringArrayOutput)
}

// Specifies the type of action triggered by an alarm. the value is notification.
// notification: indicates that a notification will be sent to the user.
func (o AlarmruleOkActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleOkAction) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmruleOkActionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleOkActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleOkAction)(nil)).Elem()
}

func (o AlarmruleOkActionArrayOutput) ToAlarmruleOkActionArrayOutput() AlarmruleOkActionArrayOutput {
	return o
}

func (o AlarmruleOkActionArrayOutput) ToAlarmruleOkActionArrayOutputWithContext(ctx context.Context) AlarmruleOkActionArrayOutput {
	return o
}

func (o AlarmruleOkActionArrayOutput) Index(i pulumi.IntInput) AlarmruleOkActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleOkAction {
		return vs[0].([]AlarmruleOkAction)[vs[1].(int)]
	}).(AlarmruleOkActionOutput)
}

type AlarmruleResource struct {
	// Specifies the list of metric dimensions. The structure is described below.
	Dimensions []AlarmruleResourceDimension `pulumi:"dimensions"`
}

// AlarmruleResourceInput is an input type that accepts AlarmruleResourceArgs and AlarmruleResourceOutput values.
// You can construct a concrete instance of `AlarmruleResourceInput` via:
//
//	AlarmruleResourceArgs{...}
type AlarmruleResourceInput interface {
	pulumi.Input

	ToAlarmruleResourceOutput() AlarmruleResourceOutput
	ToAlarmruleResourceOutputWithContext(context.Context) AlarmruleResourceOutput
}

type AlarmruleResourceArgs struct {
	// Specifies the list of metric dimensions. The structure is described below.
	Dimensions AlarmruleResourceDimensionArrayInput `pulumi:"dimensions"`
}

func (AlarmruleResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleResource)(nil)).Elem()
}

func (i AlarmruleResourceArgs) ToAlarmruleResourceOutput() AlarmruleResourceOutput {
	return i.ToAlarmruleResourceOutputWithContext(context.Background())
}

func (i AlarmruleResourceArgs) ToAlarmruleResourceOutputWithContext(ctx context.Context) AlarmruleResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleResourceOutput)
}

// AlarmruleResourceArrayInput is an input type that accepts AlarmruleResourceArray and AlarmruleResourceArrayOutput values.
// You can construct a concrete instance of `AlarmruleResourceArrayInput` via:
//
//	AlarmruleResourceArray{ AlarmruleResourceArgs{...} }
type AlarmruleResourceArrayInput interface {
	pulumi.Input

	ToAlarmruleResourceArrayOutput() AlarmruleResourceArrayOutput
	ToAlarmruleResourceArrayOutputWithContext(context.Context) AlarmruleResourceArrayOutput
}

type AlarmruleResourceArray []AlarmruleResourceInput

func (AlarmruleResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleResource)(nil)).Elem()
}

func (i AlarmruleResourceArray) ToAlarmruleResourceArrayOutput() AlarmruleResourceArrayOutput {
	return i.ToAlarmruleResourceArrayOutputWithContext(context.Background())
}

func (i AlarmruleResourceArray) ToAlarmruleResourceArrayOutputWithContext(ctx context.Context) AlarmruleResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleResourceArrayOutput)
}

type AlarmruleResourceOutput struct{ *pulumi.OutputState }

func (AlarmruleResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleResource)(nil)).Elem()
}

func (o AlarmruleResourceOutput) ToAlarmruleResourceOutput() AlarmruleResourceOutput {
	return o
}

func (o AlarmruleResourceOutput) ToAlarmruleResourceOutputWithContext(ctx context.Context) AlarmruleResourceOutput {
	return o
}

// Specifies the list of metric dimensions. The structure is described below.
func (o AlarmruleResourceOutput) Dimensions() AlarmruleResourceDimensionArrayOutput {
	return o.ApplyT(func(v AlarmruleResource) []AlarmruleResourceDimension { return v.Dimensions }).(AlarmruleResourceDimensionArrayOutput)
}

type AlarmruleResourceArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleResource)(nil)).Elem()
}

func (o AlarmruleResourceArrayOutput) ToAlarmruleResourceArrayOutput() AlarmruleResourceArrayOutput {
	return o
}

func (o AlarmruleResourceArrayOutput) ToAlarmruleResourceArrayOutputWithContext(ctx context.Context) AlarmruleResourceArrayOutput {
	return o
}

func (o AlarmruleResourceArrayOutput) Index(i pulumi.IntInput) AlarmruleResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleResource {
		return vs[0].([]AlarmruleResource)[vs[1].(int)]
	}).(AlarmruleResourceOutput)
}

type AlarmruleResourceDimension struct {
	// Specifies the dimension name. The value can be a string of 1 to 32 characters
	// that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
	Name string `pulumi:"name"`
	// Specifies the alarm threshold. The value ranges from 0 to Number of
	// 1.7976931348623157e+108.
	Value *string `pulumi:"value"`
}

// AlarmruleResourceDimensionInput is an input type that accepts AlarmruleResourceDimensionArgs and AlarmruleResourceDimensionOutput values.
// You can construct a concrete instance of `AlarmruleResourceDimensionInput` via:
//
//	AlarmruleResourceDimensionArgs{...}
type AlarmruleResourceDimensionInput interface {
	pulumi.Input

	ToAlarmruleResourceDimensionOutput() AlarmruleResourceDimensionOutput
	ToAlarmruleResourceDimensionOutputWithContext(context.Context) AlarmruleResourceDimensionOutput
}

type AlarmruleResourceDimensionArgs struct {
	// Specifies the dimension name. The value can be a string of 1 to 32 characters
	// that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the alarm threshold. The value ranges from 0 to Number of
	// 1.7976931348623157e+108.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlarmruleResourceDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleResourceDimension)(nil)).Elem()
}

func (i AlarmruleResourceDimensionArgs) ToAlarmruleResourceDimensionOutput() AlarmruleResourceDimensionOutput {
	return i.ToAlarmruleResourceDimensionOutputWithContext(context.Background())
}

func (i AlarmruleResourceDimensionArgs) ToAlarmruleResourceDimensionOutputWithContext(ctx context.Context) AlarmruleResourceDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleResourceDimensionOutput)
}

// AlarmruleResourceDimensionArrayInput is an input type that accepts AlarmruleResourceDimensionArray and AlarmruleResourceDimensionArrayOutput values.
// You can construct a concrete instance of `AlarmruleResourceDimensionArrayInput` via:
//
//	AlarmruleResourceDimensionArray{ AlarmruleResourceDimensionArgs{...} }
type AlarmruleResourceDimensionArrayInput interface {
	pulumi.Input

	ToAlarmruleResourceDimensionArrayOutput() AlarmruleResourceDimensionArrayOutput
	ToAlarmruleResourceDimensionArrayOutputWithContext(context.Context) AlarmruleResourceDimensionArrayOutput
}

type AlarmruleResourceDimensionArray []AlarmruleResourceDimensionInput

func (AlarmruleResourceDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleResourceDimension)(nil)).Elem()
}

func (i AlarmruleResourceDimensionArray) ToAlarmruleResourceDimensionArrayOutput() AlarmruleResourceDimensionArrayOutput {
	return i.ToAlarmruleResourceDimensionArrayOutputWithContext(context.Background())
}

func (i AlarmruleResourceDimensionArray) ToAlarmruleResourceDimensionArrayOutputWithContext(ctx context.Context) AlarmruleResourceDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmruleResourceDimensionArrayOutput)
}

type AlarmruleResourceDimensionOutput struct{ *pulumi.OutputState }

func (AlarmruleResourceDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmruleResourceDimension)(nil)).Elem()
}

func (o AlarmruleResourceDimensionOutput) ToAlarmruleResourceDimensionOutput() AlarmruleResourceDimensionOutput {
	return o
}

func (o AlarmruleResourceDimensionOutput) ToAlarmruleResourceDimensionOutputWithContext(ctx context.Context) AlarmruleResourceDimensionOutput {
	return o
}

// Specifies the dimension name. The value can be a string of 1 to 32 characters
// that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
func (o AlarmruleResourceDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmruleResourceDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the alarm threshold. The value ranges from 0 to Number of
// 1.7976931348623157e+108.
func (o AlarmruleResourceDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmruleResourceDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlarmruleResourceDimensionArrayOutput struct{ *pulumi.OutputState }

func (AlarmruleResourceDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmruleResourceDimension)(nil)).Elem()
}

func (o AlarmruleResourceDimensionArrayOutput) ToAlarmruleResourceDimensionArrayOutput() AlarmruleResourceDimensionArrayOutput {
	return o
}

func (o AlarmruleResourceDimensionArrayOutput) ToAlarmruleResourceDimensionArrayOutputWithContext(ctx context.Context) AlarmruleResourceDimensionArrayOutput {
	return o
}

func (o AlarmruleResourceDimensionArrayOutput) Index(i pulumi.IntInput) AlarmruleResourceDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmruleResourceDimension {
		return vs[0].([]AlarmruleResourceDimension)[vs[1].(int)]
	}).(AlarmruleResourceDimensionOutput)
}

type MicroserviceEngineConfigCenterAddress struct {
	// The internal access address.
	Private *string `pulumi:"private"`
	// The public access address. This address is only set when EIP is bound.
	Public *string `pulumi:"public"`
}

// MicroserviceEngineConfigCenterAddressInput is an input type that accepts MicroserviceEngineConfigCenterAddressArgs and MicroserviceEngineConfigCenterAddressOutput values.
// You can construct a concrete instance of `MicroserviceEngineConfigCenterAddressInput` via:
//
//	MicroserviceEngineConfigCenterAddressArgs{...}
type MicroserviceEngineConfigCenterAddressInput interface {
	pulumi.Input

	ToMicroserviceEngineConfigCenterAddressOutput() MicroserviceEngineConfigCenterAddressOutput
	ToMicroserviceEngineConfigCenterAddressOutputWithContext(context.Context) MicroserviceEngineConfigCenterAddressOutput
}

type MicroserviceEngineConfigCenterAddressArgs struct {
	// The internal access address.
	Private pulumi.StringPtrInput `pulumi:"private"`
	// The public access address. This address is only set when EIP is bound.
	Public pulumi.StringPtrInput `pulumi:"public"`
}

func (MicroserviceEngineConfigCenterAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceEngineConfigCenterAddress)(nil)).Elem()
}

func (i MicroserviceEngineConfigCenterAddressArgs) ToMicroserviceEngineConfigCenterAddressOutput() MicroserviceEngineConfigCenterAddressOutput {
	return i.ToMicroserviceEngineConfigCenterAddressOutputWithContext(context.Background())
}

func (i MicroserviceEngineConfigCenterAddressArgs) ToMicroserviceEngineConfigCenterAddressOutputWithContext(ctx context.Context) MicroserviceEngineConfigCenterAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceEngineConfigCenterAddressOutput)
}

// MicroserviceEngineConfigCenterAddressArrayInput is an input type that accepts MicroserviceEngineConfigCenterAddressArray and MicroserviceEngineConfigCenterAddressArrayOutput values.
// You can construct a concrete instance of `MicroserviceEngineConfigCenterAddressArrayInput` via:
//
//	MicroserviceEngineConfigCenterAddressArray{ MicroserviceEngineConfigCenterAddressArgs{...} }
type MicroserviceEngineConfigCenterAddressArrayInput interface {
	pulumi.Input

	ToMicroserviceEngineConfigCenterAddressArrayOutput() MicroserviceEngineConfigCenterAddressArrayOutput
	ToMicroserviceEngineConfigCenterAddressArrayOutputWithContext(context.Context) MicroserviceEngineConfigCenterAddressArrayOutput
}

type MicroserviceEngineConfigCenterAddressArray []MicroserviceEngineConfigCenterAddressInput

func (MicroserviceEngineConfigCenterAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MicroserviceEngineConfigCenterAddress)(nil)).Elem()
}

func (i MicroserviceEngineConfigCenterAddressArray) ToMicroserviceEngineConfigCenterAddressArrayOutput() MicroserviceEngineConfigCenterAddressArrayOutput {
	return i.ToMicroserviceEngineConfigCenterAddressArrayOutputWithContext(context.Background())
}

func (i MicroserviceEngineConfigCenterAddressArray) ToMicroserviceEngineConfigCenterAddressArrayOutputWithContext(ctx context.Context) MicroserviceEngineConfigCenterAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceEngineConfigCenterAddressArrayOutput)
}

type MicroserviceEngineConfigCenterAddressOutput struct{ *pulumi.OutputState }

func (MicroserviceEngineConfigCenterAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceEngineConfigCenterAddress)(nil)).Elem()
}

func (o MicroserviceEngineConfigCenterAddressOutput) ToMicroserviceEngineConfigCenterAddressOutput() MicroserviceEngineConfigCenterAddressOutput {
	return o
}

func (o MicroserviceEngineConfigCenterAddressOutput) ToMicroserviceEngineConfigCenterAddressOutputWithContext(ctx context.Context) MicroserviceEngineConfigCenterAddressOutput {
	return o
}

// The internal access address.
func (o MicroserviceEngineConfigCenterAddressOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MicroserviceEngineConfigCenterAddress) *string { return v.Private }).(pulumi.StringPtrOutput)
}

// The public access address. This address is only set when EIP is bound.
func (o MicroserviceEngineConfigCenterAddressOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MicroserviceEngineConfigCenterAddress) *string { return v.Public }).(pulumi.StringPtrOutput)
}

type MicroserviceEngineConfigCenterAddressArrayOutput struct{ *pulumi.OutputState }

func (MicroserviceEngineConfigCenterAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MicroserviceEngineConfigCenterAddress)(nil)).Elem()
}

func (o MicroserviceEngineConfigCenterAddressArrayOutput) ToMicroserviceEngineConfigCenterAddressArrayOutput() MicroserviceEngineConfigCenterAddressArrayOutput {
	return o
}

func (o MicroserviceEngineConfigCenterAddressArrayOutput) ToMicroserviceEngineConfigCenterAddressArrayOutputWithContext(ctx context.Context) MicroserviceEngineConfigCenterAddressArrayOutput {
	return o
}

func (o MicroserviceEngineConfigCenterAddressArrayOutput) Index(i pulumi.IntInput) MicroserviceEngineConfigCenterAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MicroserviceEngineConfigCenterAddress {
		return vs[0].([]MicroserviceEngineConfigCenterAddress)[vs[1].(int)]
	}).(MicroserviceEngineConfigCenterAddressOutput)
}

type MicroserviceEngineServiceRegistryAddress struct {
	// The internal access address.
	Private *string `pulumi:"private"`
	// The public access address. This address is only set when EIP is bound.
	Public *string `pulumi:"public"`
}

// MicroserviceEngineServiceRegistryAddressInput is an input type that accepts MicroserviceEngineServiceRegistryAddressArgs and MicroserviceEngineServiceRegistryAddressOutput values.
// You can construct a concrete instance of `MicroserviceEngineServiceRegistryAddressInput` via:
//
//	MicroserviceEngineServiceRegistryAddressArgs{...}
type MicroserviceEngineServiceRegistryAddressInput interface {
	pulumi.Input

	ToMicroserviceEngineServiceRegistryAddressOutput() MicroserviceEngineServiceRegistryAddressOutput
	ToMicroserviceEngineServiceRegistryAddressOutputWithContext(context.Context) MicroserviceEngineServiceRegistryAddressOutput
}

type MicroserviceEngineServiceRegistryAddressArgs struct {
	// The internal access address.
	Private pulumi.StringPtrInput `pulumi:"private"`
	// The public access address. This address is only set when EIP is bound.
	Public pulumi.StringPtrInput `pulumi:"public"`
}

func (MicroserviceEngineServiceRegistryAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceEngineServiceRegistryAddress)(nil)).Elem()
}

func (i MicroserviceEngineServiceRegistryAddressArgs) ToMicroserviceEngineServiceRegistryAddressOutput() MicroserviceEngineServiceRegistryAddressOutput {
	return i.ToMicroserviceEngineServiceRegistryAddressOutputWithContext(context.Background())
}

func (i MicroserviceEngineServiceRegistryAddressArgs) ToMicroserviceEngineServiceRegistryAddressOutputWithContext(ctx context.Context) MicroserviceEngineServiceRegistryAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceEngineServiceRegistryAddressOutput)
}

// MicroserviceEngineServiceRegistryAddressArrayInput is an input type that accepts MicroserviceEngineServiceRegistryAddressArray and MicroserviceEngineServiceRegistryAddressArrayOutput values.
// You can construct a concrete instance of `MicroserviceEngineServiceRegistryAddressArrayInput` via:
//
//	MicroserviceEngineServiceRegistryAddressArray{ MicroserviceEngineServiceRegistryAddressArgs{...} }
type MicroserviceEngineServiceRegistryAddressArrayInput interface {
	pulumi.Input

	ToMicroserviceEngineServiceRegistryAddressArrayOutput() MicroserviceEngineServiceRegistryAddressArrayOutput
	ToMicroserviceEngineServiceRegistryAddressArrayOutputWithContext(context.Context) MicroserviceEngineServiceRegistryAddressArrayOutput
}

type MicroserviceEngineServiceRegistryAddressArray []MicroserviceEngineServiceRegistryAddressInput

func (MicroserviceEngineServiceRegistryAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MicroserviceEngineServiceRegistryAddress)(nil)).Elem()
}

func (i MicroserviceEngineServiceRegistryAddressArray) ToMicroserviceEngineServiceRegistryAddressArrayOutput() MicroserviceEngineServiceRegistryAddressArrayOutput {
	return i.ToMicroserviceEngineServiceRegistryAddressArrayOutputWithContext(context.Background())
}

func (i MicroserviceEngineServiceRegistryAddressArray) ToMicroserviceEngineServiceRegistryAddressArrayOutputWithContext(ctx context.Context) MicroserviceEngineServiceRegistryAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceEngineServiceRegistryAddressArrayOutput)
}

type MicroserviceEngineServiceRegistryAddressOutput struct{ *pulumi.OutputState }

func (MicroserviceEngineServiceRegistryAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceEngineServiceRegistryAddress)(nil)).Elem()
}

func (o MicroserviceEngineServiceRegistryAddressOutput) ToMicroserviceEngineServiceRegistryAddressOutput() MicroserviceEngineServiceRegistryAddressOutput {
	return o
}

func (o MicroserviceEngineServiceRegistryAddressOutput) ToMicroserviceEngineServiceRegistryAddressOutputWithContext(ctx context.Context) MicroserviceEngineServiceRegistryAddressOutput {
	return o
}

// The internal access address.
func (o MicroserviceEngineServiceRegistryAddressOutput) Private() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MicroserviceEngineServiceRegistryAddress) *string { return v.Private }).(pulumi.StringPtrOutput)
}

// The public access address. This address is only set when EIP is bound.
func (o MicroserviceEngineServiceRegistryAddressOutput) Public() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MicroserviceEngineServiceRegistryAddress) *string { return v.Public }).(pulumi.StringPtrOutput)
}

type MicroserviceEngineServiceRegistryAddressArrayOutput struct{ *pulumi.OutputState }

func (MicroserviceEngineServiceRegistryAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MicroserviceEngineServiceRegistryAddress)(nil)).Elem()
}

func (o MicroserviceEngineServiceRegistryAddressArrayOutput) ToMicroserviceEngineServiceRegistryAddressArrayOutput() MicroserviceEngineServiceRegistryAddressArrayOutput {
	return o
}

func (o MicroserviceEngineServiceRegistryAddressArrayOutput) ToMicroserviceEngineServiceRegistryAddressArrayOutputWithContext(ctx context.Context) MicroserviceEngineServiceRegistryAddressArrayOutput {
	return o
}

func (o MicroserviceEngineServiceRegistryAddressArrayOutput) Index(i pulumi.IntInput) MicroserviceEngineServiceRegistryAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MicroserviceEngineServiceRegistryAddress {
		return vs[0].([]MicroserviceEngineServiceRegistryAddress)[vs[1].(int)]
	}).(MicroserviceEngineServiceRegistryAddressOutput)
}

type MicroserviceInstanceDataCenter struct {
	// Specifies the custom availability zone name of the data center.
	// Changing this will create a new microservice instance.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Specifies the data center name.
	// Changing this will create a new microservice instance.
	Name string `pulumi:"name"`
	// Specifies the custom region name of the data center.
	// Changing this will create a new microservice instance.
	Region string `pulumi:"region"`
}

// MicroserviceInstanceDataCenterInput is an input type that accepts MicroserviceInstanceDataCenterArgs and MicroserviceInstanceDataCenterOutput values.
// You can construct a concrete instance of `MicroserviceInstanceDataCenterInput` via:
//
//	MicroserviceInstanceDataCenterArgs{...}
type MicroserviceInstanceDataCenterInput interface {
	pulumi.Input

	ToMicroserviceInstanceDataCenterOutput() MicroserviceInstanceDataCenterOutput
	ToMicroserviceInstanceDataCenterOutputWithContext(context.Context) MicroserviceInstanceDataCenterOutput
}

type MicroserviceInstanceDataCenterArgs struct {
	// Specifies the custom availability zone name of the data center.
	// Changing this will create a new microservice instance.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Specifies the data center name.
	// Changing this will create a new microservice instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the custom region name of the data center.
	// Changing this will create a new microservice instance.
	Region pulumi.StringInput `pulumi:"region"`
}

func (MicroserviceInstanceDataCenterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceInstanceDataCenter)(nil)).Elem()
}

func (i MicroserviceInstanceDataCenterArgs) ToMicroserviceInstanceDataCenterOutput() MicroserviceInstanceDataCenterOutput {
	return i.ToMicroserviceInstanceDataCenterOutputWithContext(context.Background())
}

func (i MicroserviceInstanceDataCenterArgs) ToMicroserviceInstanceDataCenterOutputWithContext(ctx context.Context) MicroserviceInstanceDataCenterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceInstanceDataCenterOutput)
}

func (i MicroserviceInstanceDataCenterArgs) ToMicroserviceInstanceDataCenterPtrOutput() MicroserviceInstanceDataCenterPtrOutput {
	return i.ToMicroserviceInstanceDataCenterPtrOutputWithContext(context.Background())
}

func (i MicroserviceInstanceDataCenterArgs) ToMicroserviceInstanceDataCenterPtrOutputWithContext(ctx context.Context) MicroserviceInstanceDataCenterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceInstanceDataCenterOutput).ToMicroserviceInstanceDataCenterPtrOutputWithContext(ctx)
}

// MicroserviceInstanceDataCenterPtrInput is an input type that accepts MicroserviceInstanceDataCenterArgs, MicroserviceInstanceDataCenterPtr and MicroserviceInstanceDataCenterPtrOutput values.
// You can construct a concrete instance of `MicroserviceInstanceDataCenterPtrInput` via:
//
//	        MicroserviceInstanceDataCenterArgs{...}
//
//	or:
//
//	        nil
type MicroserviceInstanceDataCenterPtrInput interface {
	pulumi.Input

	ToMicroserviceInstanceDataCenterPtrOutput() MicroserviceInstanceDataCenterPtrOutput
	ToMicroserviceInstanceDataCenterPtrOutputWithContext(context.Context) MicroserviceInstanceDataCenterPtrOutput
}

type microserviceInstanceDataCenterPtrType MicroserviceInstanceDataCenterArgs

func MicroserviceInstanceDataCenterPtr(v *MicroserviceInstanceDataCenterArgs) MicroserviceInstanceDataCenterPtrInput {
	return (*microserviceInstanceDataCenterPtrType)(v)
}

func (*microserviceInstanceDataCenterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MicroserviceInstanceDataCenter)(nil)).Elem()
}

func (i *microserviceInstanceDataCenterPtrType) ToMicroserviceInstanceDataCenterPtrOutput() MicroserviceInstanceDataCenterPtrOutput {
	return i.ToMicroserviceInstanceDataCenterPtrOutputWithContext(context.Background())
}

func (i *microserviceInstanceDataCenterPtrType) ToMicroserviceInstanceDataCenterPtrOutputWithContext(ctx context.Context) MicroserviceInstanceDataCenterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceInstanceDataCenterPtrOutput)
}

type MicroserviceInstanceDataCenterOutput struct{ *pulumi.OutputState }

func (MicroserviceInstanceDataCenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceInstanceDataCenter)(nil)).Elem()
}

func (o MicroserviceInstanceDataCenterOutput) ToMicroserviceInstanceDataCenterOutput() MicroserviceInstanceDataCenterOutput {
	return o
}

func (o MicroserviceInstanceDataCenterOutput) ToMicroserviceInstanceDataCenterOutputWithContext(ctx context.Context) MicroserviceInstanceDataCenterOutput {
	return o
}

func (o MicroserviceInstanceDataCenterOutput) ToMicroserviceInstanceDataCenterPtrOutput() MicroserviceInstanceDataCenterPtrOutput {
	return o.ToMicroserviceInstanceDataCenterPtrOutputWithContext(context.Background())
}

func (o MicroserviceInstanceDataCenterOutput) ToMicroserviceInstanceDataCenterPtrOutputWithContext(ctx context.Context) MicroserviceInstanceDataCenterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MicroserviceInstanceDataCenter) *MicroserviceInstanceDataCenter {
		return &v
	}).(MicroserviceInstanceDataCenterPtrOutput)
}

// Specifies the custom availability zone name of the data center.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceDataCenterOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v MicroserviceInstanceDataCenter) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Specifies the data center name.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceDataCenterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MicroserviceInstanceDataCenter) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the custom region name of the data center.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceDataCenterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v MicroserviceInstanceDataCenter) string { return v.Region }).(pulumi.StringOutput)
}

type MicroserviceInstanceDataCenterPtrOutput struct{ *pulumi.OutputState }

func (MicroserviceInstanceDataCenterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MicroserviceInstanceDataCenter)(nil)).Elem()
}

func (o MicroserviceInstanceDataCenterPtrOutput) ToMicroserviceInstanceDataCenterPtrOutput() MicroserviceInstanceDataCenterPtrOutput {
	return o
}

func (o MicroserviceInstanceDataCenterPtrOutput) ToMicroserviceInstanceDataCenterPtrOutputWithContext(ctx context.Context) MicroserviceInstanceDataCenterPtrOutput {
	return o
}

func (o MicroserviceInstanceDataCenterPtrOutput) Elem() MicroserviceInstanceDataCenterOutput {
	return o.ApplyT(func(v *MicroserviceInstanceDataCenter) MicroserviceInstanceDataCenter {
		if v != nil {
			return *v
		}
		var ret MicroserviceInstanceDataCenter
		return ret
	}).(MicroserviceInstanceDataCenterOutput)
}

// Specifies the custom availability zone name of the data center.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceDataCenterPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceDataCenter) *string {
		if v == nil {
			return nil
		}
		return &v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// Specifies the data center name.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceDataCenterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceDataCenter) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the custom region name of the data center.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceDataCenterPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceDataCenter) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

type MicroserviceInstanceHealthCheck struct {
	// Specifies the heartbeat interval. The unit is **s** (second).
	// Changing this will create a new microservice instance.
	Interval int `pulumi:"interval"`
	// Specifies the maximum retries.
	// Changing this will create a new microservice instance.
	MaxRetries int `pulumi:"maxRetries"`
	// Specifies the heartbeat mode. The valid values are **push** and **pull**.
	// Changing this will create a new microservice instance.
	Mode string `pulumi:"mode"`
	// Specifies the port number.
	// Changing this will create a new microservice instance.
	Port *int `pulumi:"port"`
}

// MicroserviceInstanceHealthCheckInput is an input type that accepts MicroserviceInstanceHealthCheckArgs and MicroserviceInstanceHealthCheckOutput values.
// You can construct a concrete instance of `MicroserviceInstanceHealthCheckInput` via:
//
//	MicroserviceInstanceHealthCheckArgs{...}
type MicroserviceInstanceHealthCheckInput interface {
	pulumi.Input

	ToMicroserviceInstanceHealthCheckOutput() MicroserviceInstanceHealthCheckOutput
	ToMicroserviceInstanceHealthCheckOutputWithContext(context.Context) MicroserviceInstanceHealthCheckOutput
}

type MicroserviceInstanceHealthCheckArgs struct {
	// Specifies the heartbeat interval. The unit is **s** (second).
	// Changing this will create a new microservice instance.
	Interval pulumi.IntInput `pulumi:"interval"`
	// Specifies the maximum retries.
	// Changing this will create a new microservice instance.
	MaxRetries pulumi.IntInput `pulumi:"maxRetries"`
	// Specifies the heartbeat mode. The valid values are **push** and **pull**.
	// Changing this will create a new microservice instance.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Specifies the port number.
	// Changing this will create a new microservice instance.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (MicroserviceInstanceHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceInstanceHealthCheck)(nil)).Elem()
}

func (i MicroserviceInstanceHealthCheckArgs) ToMicroserviceInstanceHealthCheckOutput() MicroserviceInstanceHealthCheckOutput {
	return i.ToMicroserviceInstanceHealthCheckOutputWithContext(context.Background())
}

func (i MicroserviceInstanceHealthCheckArgs) ToMicroserviceInstanceHealthCheckOutputWithContext(ctx context.Context) MicroserviceInstanceHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceInstanceHealthCheckOutput)
}

func (i MicroserviceInstanceHealthCheckArgs) ToMicroserviceInstanceHealthCheckPtrOutput() MicroserviceInstanceHealthCheckPtrOutput {
	return i.ToMicroserviceInstanceHealthCheckPtrOutputWithContext(context.Background())
}

func (i MicroserviceInstanceHealthCheckArgs) ToMicroserviceInstanceHealthCheckPtrOutputWithContext(ctx context.Context) MicroserviceInstanceHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceInstanceHealthCheckOutput).ToMicroserviceInstanceHealthCheckPtrOutputWithContext(ctx)
}

// MicroserviceInstanceHealthCheckPtrInput is an input type that accepts MicroserviceInstanceHealthCheckArgs, MicroserviceInstanceHealthCheckPtr and MicroserviceInstanceHealthCheckPtrOutput values.
// You can construct a concrete instance of `MicroserviceInstanceHealthCheckPtrInput` via:
//
//	        MicroserviceInstanceHealthCheckArgs{...}
//
//	or:
//
//	        nil
type MicroserviceInstanceHealthCheckPtrInput interface {
	pulumi.Input

	ToMicroserviceInstanceHealthCheckPtrOutput() MicroserviceInstanceHealthCheckPtrOutput
	ToMicroserviceInstanceHealthCheckPtrOutputWithContext(context.Context) MicroserviceInstanceHealthCheckPtrOutput
}

type microserviceInstanceHealthCheckPtrType MicroserviceInstanceHealthCheckArgs

func MicroserviceInstanceHealthCheckPtr(v *MicroserviceInstanceHealthCheckArgs) MicroserviceInstanceHealthCheckPtrInput {
	return (*microserviceInstanceHealthCheckPtrType)(v)
}

func (*microserviceInstanceHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MicroserviceInstanceHealthCheck)(nil)).Elem()
}

func (i *microserviceInstanceHealthCheckPtrType) ToMicroserviceInstanceHealthCheckPtrOutput() MicroserviceInstanceHealthCheckPtrOutput {
	return i.ToMicroserviceInstanceHealthCheckPtrOutputWithContext(context.Background())
}

func (i *microserviceInstanceHealthCheckPtrType) ToMicroserviceInstanceHealthCheckPtrOutputWithContext(ctx context.Context) MicroserviceInstanceHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MicroserviceInstanceHealthCheckPtrOutput)
}

type MicroserviceInstanceHealthCheckOutput struct{ *pulumi.OutputState }

func (MicroserviceInstanceHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MicroserviceInstanceHealthCheck)(nil)).Elem()
}

func (o MicroserviceInstanceHealthCheckOutput) ToMicroserviceInstanceHealthCheckOutput() MicroserviceInstanceHealthCheckOutput {
	return o
}

func (o MicroserviceInstanceHealthCheckOutput) ToMicroserviceInstanceHealthCheckOutputWithContext(ctx context.Context) MicroserviceInstanceHealthCheckOutput {
	return o
}

func (o MicroserviceInstanceHealthCheckOutput) ToMicroserviceInstanceHealthCheckPtrOutput() MicroserviceInstanceHealthCheckPtrOutput {
	return o.ToMicroserviceInstanceHealthCheckPtrOutputWithContext(context.Background())
}

func (o MicroserviceInstanceHealthCheckOutput) ToMicroserviceInstanceHealthCheckPtrOutputWithContext(ctx context.Context) MicroserviceInstanceHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MicroserviceInstanceHealthCheck) *MicroserviceInstanceHealthCheck {
		return &v
	}).(MicroserviceInstanceHealthCheckPtrOutput)
}

// Specifies the heartbeat interval. The unit is **s** (second).
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v MicroserviceInstanceHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

// Specifies the maximum retries.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckOutput) MaxRetries() pulumi.IntOutput {
	return o.ApplyT(func(v MicroserviceInstanceHealthCheck) int { return v.MaxRetries }).(pulumi.IntOutput)
}

// Specifies the heartbeat mode. The valid values are **push** and **pull**.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v MicroserviceInstanceHealthCheck) string { return v.Mode }).(pulumi.StringOutput)
}

// Specifies the port number.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MicroserviceInstanceHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type MicroserviceInstanceHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (MicroserviceInstanceHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MicroserviceInstanceHealthCheck)(nil)).Elem()
}

func (o MicroserviceInstanceHealthCheckPtrOutput) ToMicroserviceInstanceHealthCheckPtrOutput() MicroserviceInstanceHealthCheckPtrOutput {
	return o
}

func (o MicroserviceInstanceHealthCheckPtrOutput) ToMicroserviceInstanceHealthCheckPtrOutputWithContext(ctx context.Context) MicroserviceInstanceHealthCheckPtrOutput {
	return o
}

func (o MicroserviceInstanceHealthCheckPtrOutput) Elem() MicroserviceInstanceHealthCheckOutput {
	return o.ApplyT(func(v *MicroserviceInstanceHealthCheck) MicroserviceInstanceHealthCheck {
		if v != nil {
			return *v
		}
		var ret MicroserviceInstanceHealthCheck
		return ret
	}).(MicroserviceInstanceHealthCheckOutput)
}

// Specifies the heartbeat interval. The unit is **s** (second).
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum retries.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return &v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

// Specifies the heartbeat mode. The valid values are **push** and **pull**.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceHealthCheck) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// Specifies the port number.
// Changing this will create a new microservice instance.
func (o MicroserviceInstanceHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MicroserviceInstanceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleAlarmActionInput)(nil)).Elem(), AlarmruleAlarmActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleAlarmActionArrayInput)(nil)).Elem(), AlarmruleAlarmActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleConditionInput)(nil)).Elem(), AlarmruleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleConditionArrayInput)(nil)).Elem(), AlarmruleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleInsufficientdataActionInput)(nil)).Elem(), AlarmruleInsufficientdataActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleInsufficientdataActionArrayInput)(nil)).Elem(), AlarmruleInsufficientdataActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricInput)(nil)).Elem(), AlarmruleMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricPtrInput)(nil)).Elem(), AlarmruleMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricDimensionInput)(nil)).Elem(), AlarmruleMetricDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleMetricDimensionArrayInput)(nil)).Elem(), AlarmruleMetricDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleOkActionInput)(nil)).Elem(), AlarmruleOkActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleOkActionArrayInput)(nil)).Elem(), AlarmruleOkActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleResourceInput)(nil)).Elem(), AlarmruleResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleResourceArrayInput)(nil)).Elem(), AlarmruleResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleResourceDimensionInput)(nil)).Elem(), AlarmruleResourceDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmruleResourceDimensionArrayInput)(nil)).Elem(), AlarmruleResourceDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceEngineConfigCenterAddressInput)(nil)).Elem(), MicroserviceEngineConfigCenterAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceEngineConfigCenterAddressArrayInput)(nil)).Elem(), MicroserviceEngineConfigCenterAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceEngineServiceRegistryAddressInput)(nil)).Elem(), MicroserviceEngineServiceRegistryAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceEngineServiceRegistryAddressArrayInput)(nil)).Elem(), MicroserviceEngineServiceRegistryAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceInstanceDataCenterInput)(nil)).Elem(), MicroserviceInstanceDataCenterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceInstanceDataCenterPtrInput)(nil)).Elem(), MicroserviceInstanceDataCenterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceInstanceHealthCheckInput)(nil)).Elem(), MicroserviceInstanceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MicroserviceInstanceHealthCheckPtrInput)(nil)).Elem(), MicroserviceInstanceHealthCheckArgs{})
	pulumi.RegisterOutputType(AlarmruleAlarmActionOutput{})
	pulumi.RegisterOutputType(AlarmruleAlarmActionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleConditionOutput{})
	pulumi.RegisterOutputType(AlarmruleConditionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleInsufficientdataActionOutput{})
	pulumi.RegisterOutputType(AlarmruleInsufficientdataActionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricPtrOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricDimensionOutput{})
	pulumi.RegisterOutputType(AlarmruleMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleOkActionOutput{})
	pulumi.RegisterOutputType(AlarmruleOkActionArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleResourceOutput{})
	pulumi.RegisterOutputType(AlarmruleResourceArrayOutput{})
	pulumi.RegisterOutputType(AlarmruleResourceDimensionOutput{})
	pulumi.RegisterOutputType(AlarmruleResourceDimensionArrayOutput{})
	pulumi.RegisterOutputType(MicroserviceEngineConfigCenterAddressOutput{})
	pulumi.RegisterOutputType(MicroserviceEngineConfigCenterAddressArrayOutput{})
	pulumi.RegisterOutputType(MicroserviceEngineServiceRegistryAddressOutput{})
	pulumi.RegisterOutputType(MicroserviceEngineServiceRegistryAddressArrayOutput{})
	pulumi.RegisterOutputType(MicroserviceInstanceDataCenterOutput{})
	pulumi.RegisterOutputType(MicroserviceInstanceDataCenterPtrOutput{})
	pulumi.RegisterOutputType(MicroserviceInstanceHealthCheckOutput{})
	pulumi.RegisterOutputType(MicroserviceInstanceHealthCheckPtrOutput{})
}
