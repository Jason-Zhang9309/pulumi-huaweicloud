// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a ECS VM instance resource within HuaweiCloud.
//
// ## Example Usage
// ### Basic Instance
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ims"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ims"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			secgroupId := cfg.RequireObject("secgroupId")
//			myaz, err := huaweicloud.GetAvailabilityZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			myflavor, err := Ecs.GetFlavors(ctx, &ecs.GetFlavorsArgs{
//				AvailabilityZone: pulumi.StringRef(myaz.Names[0]),
//				PerformanceType:  pulumi.StringRef("normal"),
//				CpuCoreCount:     pulumi.IntRef(2),
//				MemorySize:       pulumi.IntRef(4),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			mynet, err := Vpc.GetSubnet(ctx, &vpc.GetSubnetArgs{
//				Name: pulumi.StringRef("subnet-default"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			myimage, err := Ims.GetImage(ctx, &ims.GetImageArgs{
//				Name:       pulumi.StringRef("Ubuntu 18.04 server 64bit"),
//				MostRecent: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Ecs.NewInstance(ctx, "basic", &Ecs.InstanceArgs{
//				ImageId:  pulumi.String(myimage.Id),
//				FlavorId: pulumi.String(myflavor.Ids[0]),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.Any(secgroupId),
//				},
//				AvailabilityZone: pulumi.String(myaz.Names[0]),
//				Networks: ecs.InstanceNetworkArray{
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String(mynet.Id),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Instance With Associated Eip
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			secgroupId := cfg.RequireObject("secgroupId")
//			myinstance, err := Ecs.NewInstance(ctx, "myinstance", &Ecs.InstanceArgs{
//				ImageId:  pulumi.String("ad091b52-742f-469e-8f3c-fd81cadf0743"),
//				FlavorId: pulumi.String("s6.small.1"),
//				KeyPair:  pulumi.String("my_key_pair_name"),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.Any(secgroupId),
//				},
//				AvailabilityZone: pulumi.String("cn-north-4a"),
//				Networks: ecs.InstanceNetworkArray{
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String("55534eaa-533a-419d-9b40-ec427ea7195a"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			myeip, err := Vpc.NewEip(ctx, "myeip", &Vpc.EipArgs{
//				Publicip: &vpc.EipPublicipArgs{
//					Type: pulumi.String("5_bgp"),
//				},
//				Bandwidth: &vpc.EipBandwidthArgs{
//					Name:       pulumi.String("test"),
//					Size:       pulumi.Int(8),
//					ShareType:  pulumi.String("PER"),
//					ChargeMode: pulumi.String("traffic"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Ecs.NewEipAssociate(ctx, "associated", &Ecs.EipAssociateArgs{
//				PublicIp:   myeip.Address,
//				InstanceId: myinstance.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Instance With Attached Volume
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Evs"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			secgroupId := cfg.RequireObject("secgroupId")
//			myvolume, err := Evs.NewVolume(ctx, "myvolume", &Evs.VolumeArgs{
//				AvailabilityZone: pulumi.String("cn-north-4a"),
//				VolumeType:       pulumi.String("SAS"),
//				Size:             pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			myinstance, err := Ecs.NewInstance(ctx, "myinstance", &Ecs.InstanceArgs{
//				ImageId:  pulumi.String("ad091b52-742f-469e-8f3c-fd81cadf0743"),
//				FlavorId: pulumi.String("s6.small.1"),
//				KeyPair:  pulumi.String("my_key_pair_name"),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.Any(secgroupId),
//				},
//				AvailabilityZone: pulumi.String("cn-north-4a"),
//				Networks: ecs.InstanceNetworkArray{
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String("55534eaa-533a-419d-9b40-ec427ea7195a"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Ecs.NewVolumeAttach(ctx, "attached", &Ecs.VolumeAttachArgs{
//				InstanceId: myinstance.ID(),
//				VolumeId:   myvolume.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Instance With Multiple Data Disks
//
// It's possible to specify multiple `dataDisks` entries to create an instance with multiple data disks, but we can't
// ensure the volume attached order. So it's recommended to use `Instance With Attached Volume` above.
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			secgroupId := cfg.RequireObject("secgroupId")
//			_, err := Ecs.NewInstance(ctx, "multi-disk", &Ecs.InstanceArgs{
//				ImageId:  pulumi.String("ad091b52-742f-469e-8f3c-fd81cadf0743"),
//				FlavorId: pulumi.String("s6.small.1"),
//				KeyPair:  pulumi.String("my_key_pair_name"),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.Any(secgroupId),
//				},
//				AvailabilityZone: pulumi.String("cn-north-4a"),
//				SystemDiskType:   pulumi.String("SAS"),
//				SystemDiskSize:   pulumi.Int(40),
//				DataDisks: ecs.InstanceDataDiskArray{
//					&ecs.InstanceDataDiskArgs{
//						Type: pulumi.String("SAS"),
//						Size: pulumi.Int(10),
//					},
//					&ecs.InstanceDataDiskArgs{
//						Type: pulumi.String("SAS"),
//						Size: pulumi.Int(20),
//					},
//				},
//				DeleteDisksOnTermination: pulumi.Bool(true),
//				Networks: ecs.InstanceNetworkArray{
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String("55534eaa-533a-419d-9b40-ec427ea7195a"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Instance With Multiple Networks
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			secgroupId := cfg.RequireObject("secgroupId")
//			_, err := Ecs.NewInstance(ctx, "multi-net", &Ecs.InstanceArgs{
//				ImageId:  pulumi.String("ad091b52-742f-469e-8f3c-fd81cadf0743"),
//				FlavorId: pulumi.String("s6.small.1"),
//				KeyPair:  pulumi.String("my_key_pair_name"),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.Any(secgroupId),
//				},
//				AvailabilityZone: pulumi.String("cn-north-4a"),
//				Networks: ecs.InstanceNetworkArray{
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String("55534eaa-533a-419d-9b40-ec427ea7195a"),
//					},
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String("3c4a0d74-24b9-46cf-9d7f-8b7a4dc2f65c"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Instance with User Data (cloud-init)
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Ecs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			secgroupId := cfg.RequireObject("secgroupId")
//			_, err := Ecs.NewInstance(ctx, "myinstance", &Ecs.InstanceArgs{
//				ImageId:  pulumi.String("ad091b52-742f-469e-8f3c-fd81cadf0743"),
//				FlavorId: pulumi.String("s6.small.1"),
//				KeyPair:  pulumi.String("my_key_pair_name"),
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.Any(secgroupId),
//				},
//				AvailabilityZone: pulumi.String("az"),
//				UserData:         pulumi.String("#cloud-config\nhostname: instance_1.example.com\nfqdn: instance_1.example.com"),
//				Networks: ecs.InstanceNetworkArray{
//					&ecs.InstanceNetworkArgs{
//						Uuid: pulumi.String("55534eaa-533a-419d-9b40-ec427ea7195a"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Instances can be imported by their `id`. For example,
//
// ```sh
//
//	$ pulumi import huaweicloud:Ecs/instance:Instance my_instance b11b407c-e604-4e8d-8bc4-92398320b847
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`admin_pass`, `user_data`, `data_disks`, `scheduler_hints`, `stop_before_destroy`, `delete_disks_on_termination`, `delete_eip_on_termination`, `network/access_network`, `bandwidth`, `eip_type`, `power_action` and arguments for pre-paid. It is generally recommended running `terraform plan` after importing an instance. You can then decide if changes should be applied to the instance, or the resource definition should be updated to align with the instance. Also you can ignore changes as below. resource "huaweicloud_compute_instance" "myinstance" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	user_data, data_disks,
//
//	]
//
//	} }
type Instance struct {
	pulumi.CustomResourceState

	// The first detected Fixed IPv4 address or the Floating IP.
	// * `network/fixed_ip_v4` - The Fixed IPv4 address of the Instance on that network.
	// * `network/fixed_ip_v6` - The Fixed IPv6 address of the Instance on that network.
	// * `network/mac` - The MAC address of the NIC on that network.
	// * `network/port` - The port ID corresponding to the IP address on that network.
	// * `volume_attached/volume_id` - The volume id on that attachment.
	// * `volume_attached/pci_address` - The volume pci address on that attachment.
	// * `volume_attached/boot_index` - The volume boot index on that attachment.
	// * `volume_attached/size` - The volume size on that attachment.
	// * `volume_attached/type` - The volume type on that attachment.
	AccessIpV4 pulumi.StringOutput `pulumi:"accessIpV4"`
	AccessIpV6 pulumi.StringOutput `pulumi:"accessIpV6"`
	// Specifies the administrative password to assign to the instance.
	AdminPass pulumi.StringPtrOutput `pulumi:"adminPass"`
	// Specifies the IAM agency name which is created on IAM to provide
	// temporary credentials for ECS to access cloud services. Changing this creates a new instance.
	AgencyName pulumi.StringPtrOutput `pulumi:"agencyName"`
	// Specifies the agent list in comma-separated string.
	// Changing this creates a new instance. Available agents are:
	// + `ces`: enable cloud eye monitoring(free).
	// + `hss`: enable host security basic(free).
	// + `hss,hss-ent`: enable host security enterprise edition.
	AgentList pulumi.StringPtrOutput `pulumi:"agentList"`
	AutoPay   pulumi.StringPtrOutput `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled.
	// Valid values are *true* and *false*. Defaults to *false*.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the availability zone in which to create the instance.
	// Please following [reference](https://developer.huaweicloud.com/en-us/endpoint/?ECS)
	// for the values. Changing this creates a new instance.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Specifies the bandwidth of an EIP that will be automatically assigned to the instance.
	// The object structure is documented below. Changing this creates a new instance.
	Bandwidth InstanceBandwidthPtrOutput `pulumi:"bandwidth"`
	// Deprecated: use system_disk_type, system_disk_size, data_disks instead
	BlockDevices InstanceBlockDeviceArrayOutput `pulumi:"blockDevices"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new instance.
	ChargingMode pulumi.StringOutput `pulumi:"chargingMode"`
	// Specifies an array of one or more data disks to attach to the instance.
	// The dataDisks object structure is documented below. Changing this creates a new instance.
	DataDisks InstanceDataDiskArrayOutput `pulumi:"dataDisks"`
	// Specifies whether to delete the data disks when the instance is terminated.
	// Defaults to *false*. This parameter is valid if `chargingMode` is set to *postPaid*, and all data disks will be deleted
	// in *prePaid* charging mode.
	DeleteDisksOnTermination pulumi.BoolPtrOutput `pulumi:"deleteDisksOnTermination"`
	// Specifies whether the EIP is released when the instance is terminated.
	// Defaults to *true*.
	DeleteEipOnTermination pulumi.BoolPtrOutput `pulumi:"deleteEipOnTermination"`
	// Specifies the ID of an *existing* EIP assigned to the instance.
	// This parameter and `eipType`, `bandwidth` are alternative. Changing this creates a new instance.
	EipId pulumi.StringPtrOutput `pulumi:"eipId"`
	// Specifies the type of an EIP that will be automatically assigned to the instance.
	// Available values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP). Changing this creates a new instance.
	EipType pulumi.StringPtrOutput `pulumi:"eipType"`
	// Specifies a unique id in UUID format of enterprise project .
	// Changing this creates a new instance.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// Required if `flavorName` is empty. Specifies the flavor ID of the desired flavor for
	// the instance.
	FlavorId pulumi.StringOutput `pulumi:"flavorId"`
	// Required if `flavorId` is empty. Specifies the name of the desired flavor for the
	// instance.
	FlavorName pulumi.StringOutput `pulumi:"flavorName"`
	// Required if `imageName` is empty. Specifies the image ID of the desired
	// image for the instance. Changing this creates a new instance.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// Required if `imageId` is empty. Specifies the name of the desired image
	// for the instance. Changing this creates a new instance.
	ImageName pulumi.StringOutput `pulumi:"imageName"`
	// Specifies the SSH keypair name used for logging in to the instance.
	KeyPair pulumi.StringPtrOutput `pulumi:"keyPair"`
	// Deprecated: use tags instead
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// Specifies a unique name for the instance. The name consists of 1 to 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies an array of one or more networks to attach to the instance. The
	// network object structure is documented below. Changing this creates a new instance.
	Networks InstanceNetworkArrayOutput `pulumi:"networks"`
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
	// ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new instance.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Specifies the power action to be done for the instance.
	// The valid values are *ON*, *OFF*, *REBOOT*, *FORCE-OFF* and *FORCE-REBOOT*.
	PowerAction pulumi.StringOutput `pulumi:"powerAction"`
	// Specifies the the private key of the keypair in use. This parameter is mandatory
	// when replacing or unbinding a keypair and the instance is in **Running** state.
	PrivateKey pulumi.StringPtrOutput `pulumi:"privateKey"`
	// The EIP address that is associted to the instance.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this creates a new instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies the scheduler with hints on how the instance should be launched. The
	// available hints are described below.
	SchedulerHints InstanceSchedulerHintArrayOutput `pulumi:"schedulerHints"`
	// Specifies an array of one or more security group IDs to associate with the
	// instance.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// schema: Computed
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// The status of the instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies whether to try stop instance gracefully before destroying it, thus giving
	// chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.
	StopBeforeDestroy pulumi.BoolPtrOutput `pulumi:"stopBeforeDestroy"`
	// The system disk voume ID.
	SystemDiskId pulumi.StringOutput `pulumi:"systemDiskId"`
	// Specifies the system disk size in GB, The value range is 1 to 1024.
	// Shrinking the disk is not supported.
	SystemDiskSize pulumi.IntOutput `pulumi:"systemDiskSize"`
	// Specifies the system disk type of the instance. Defaults to `GPSSD`.
	// Changing this creates a new instance.
	SystemDiskType pulumi.StringOutput `pulumi:"systemDiskType"`
	// Specifies the key/value pairs to associate with the instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the user data to be injected during the instance creation. Text
	// and text files can be injected. Changing this creates a new instance.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// Specifies a user ID, required when using keyPair in prePaid charging mode.
	// Changing this creates a new instance.
	UserId          pulumi.StringPtrOutput            `pulumi:"userId"`
	VolumeAttacheds InstanceVolumeAttachedArrayOutput `pulumi:"volumeAttacheds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	var resource Instance
	err := ctx.RegisterResource("huaweicloud:Ecs/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("huaweicloud:Ecs/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// The first detected Fixed IPv4 address or the Floating IP.
	// * `network/fixed_ip_v4` - The Fixed IPv4 address of the Instance on that network.
	// * `network/fixed_ip_v6` - The Fixed IPv6 address of the Instance on that network.
	// * `network/mac` - The MAC address of the NIC on that network.
	// * `network/port` - The port ID corresponding to the IP address on that network.
	// * `volume_attached/volume_id` - The volume id on that attachment.
	// * `volume_attached/pci_address` - The volume pci address on that attachment.
	// * `volume_attached/boot_index` - The volume boot index on that attachment.
	// * `volume_attached/size` - The volume size on that attachment.
	// * `volume_attached/type` - The volume type on that attachment.
	AccessIpV4 *string `pulumi:"accessIpV4"`
	AccessIpV6 *string `pulumi:"accessIpV6"`
	// Specifies the administrative password to assign to the instance.
	AdminPass *string `pulumi:"adminPass"`
	// Specifies the IAM agency name which is created on IAM to provide
	// temporary credentials for ECS to access cloud services. Changing this creates a new instance.
	AgencyName *string `pulumi:"agencyName"`
	// Specifies the agent list in comma-separated string.
	// Changing this creates a new instance. Available agents are:
	// + `ces`: enable cloud eye monitoring(free).
	// + `hss`: enable host security basic(free).
	// + `hss,hss-ent`: enable host security enterprise edition.
	AgentList *string `pulumi:"agentList"`
	AutoPay   *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled.
	// Valid values are *true* and *false*. Defaults to *false*.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone in which to create the instance.
	// Please following [reference](https://developer.huaweicloud.com/en-us/endpoint/?ECS)
	// for the values. Changing this creates a new instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies the bandwidth of an EIP that will be automatically assigned to the instance.
	// The object structure is documented below. Changing this creates a new instance.
	Bandwidth *InstanceBandwidth `pulumi:"bandwidth"`
	// Deprecated: use system_disk_type, system_disk_size, data_disks instead
	BlockDevices []InstanceBlockDevice `pulumi:"blockDevices"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new instance.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies an array of one or more data disks to attach to the instance.
	// The dataDisks object structure is documented below. Changing this creates a new instance.
	DataDisks []InstanceDataDisk `pulumi:"dataDisks"`
	// Specifies whether to delete the data disks when the instance is terminated.
	// Defaults to *false*. This parameter is valid if `chargingMode` is set to *postPaid*, and all data disks will be deleted
	// in *prePaid* charging mode.
	DeleteDisksOnTermination *bool `pulumi:"deleteDisksOnTermination"`
	// Specifies whether the EIP is released when the instance is terminated.
	// Defaults to *true*.
	DeleteEipOnTermination *bool `pulumi:"deleteEipOnTermination"`
	// Specifies the ID of an *existing* EIP assigned to the instance.
	// This parameter and `eipType`, `bandwidth` are alternative. Changing this creates a new instance.
	EipId *string `pulumi:"eipId"`
	// Specifies the type of an EIP that will be automatically assigned to the instance.
	// Available values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP). Changing this creates a new instance.
	EipType *string `pulumi:"eipType"`
	// Specifies a unique id in UUID format of enterprise project .
	// Changing this creates a new instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Required if `flavorName` is empty. Specifies the flavor ID of the desired flavor for
	// the instance.
	FlavorId *string `pulumi:"flavorId"`
	// Required if `flavorId` is empty. Specifies the name of the desired flavor for the
	// instance.
	FlavorName *string `pulumi:"flavorName"`
	// Required if `imageName` is empty. Specifies the image ID of the desired
	// image for the instance. Changing this creates a new instance.
	ImageId *string `pulumi:"imageId"`
	// Required if `imageId` is empty. Specifies the name of the desired image
	// for the instance. Changing this creates a new instance.
	ImageName *string `pulumi:"imageName"`
	// Specifies the SSH keypair name used for logging in to the instance.
	KeyPair *string `pulumi:"keyPair"`
	// Deprecated: use tags instead
	Metadata map[string]string `pulumi:"metadata"`
	// Specifies a unique name for the instance. The name consists of 1 to 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `pulumi:"name"`
	// Specifies an array of one or more networks to attach to the instance. The
	// network object structure is documented below. Changing this creates a new instance.
	Networks []InstanceNetwork `pulumi:"networks"`
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
	// ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new instance.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the power action to be done for the instance.
	// The valid values are *ON*, *OFF*, *REBOOT*, *FORCE-OFF* and *FORCE-REBOOT*.
	PowerAction *string `pulumi:"powerAction"`
	// Specifies the the private key of the keypair in use. This parameter is mandatory
	// when replacing or unbinding a keypair and the instance is in **Running** state.
	PrivateKey *string `pulumi:"privateKey"`
	// The EIP address that is associted to the instance.
	PublicIp *string `pulumi:"publicIp"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this creates a new instance.
	Region *string `pulumi:"region"`
	// Specifies the scheduler with hints on how the instance should be launched. The
	// available hints are described below.
	SchedulerHints []InstanceSchedulerHint `pulumi:"schedulerHints"`
	// Specifies an array of one or more security group IDs to associate with the
	// instance.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// schema: Computed
	SecurityGroups []string `pulumi:"securityGroups"`
	// The status of the instance.
	Status *string `pulumi:"status"`
	// Specifies whether to try stop instance gracefully before destroying it, thus giving
	// chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.
	StopBeforeDestroy *bool `pulumi:"stopBeforeDestroy"`
	// The system disk voume ID.
	SystemDiskId *string `pulumi:"systemDiskId"`
	// Specifies the system disk size in GB, The value range is 1 to 1024.
	// Shrinking the disk is not supported.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// Specifies the system disk type of the instance. Defaults to `GPSSD`.
	// Changing this creates a new instance.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// Specifies the key/value pairs to associate with the instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the user data to be injected during the instance creation. Text
	// and text files can be injected. Changing this creates a new instance.
	UserData *string `pulumi:"userData"`
	// Specifies a user ID, required when using keyPair in prePaid charging mode.
	// Changing this creates a new instance.
	UserId          *string                  `pulumi:"userId"`
	VolumeAttacheds []InstanceVolumeAttached `pulumi:"volumeAttacheds"`
}

type InstanceState struct {
	// The first detected Fixed IPv4 address or the Floating IP.
	// * `network/fixed_ip_v4` - The Fixed IPv4 address of the Instance on that network.
	// * `network/fixed_ip_v6` - The Fixed IPv6 address of the Instance on that network.
	// * `network/mac` - The MAC address of the NIC on that network.
	// * `network/port` - The port ID corresponding to the IP address on that network.
	// * `volume_attached/volume_id` - The volume id on that attachment.
	// * `volume_attached/pci_address` - The volume pci address on that attachment.
	// * `volume_attached/boot_index` - The volume boot index on that attachment.
	// * `volume_attached/size` - The volume size on that attachment.
	// * `volume_attached/type` - The volume type on that attachment.
	AccessIpV4 pulumi.StringPtrInput
	AccessIpV6 pulumi.StringPtrInput
	// Specifies the administrative password to assign to the instance.
	AdminPass pulumi.StringPtrInput
	// Specifies the IAM agency name which is created on IAM to provide
	// temporary credentials for ECS to access cloud services. Changing this creates a new instance.
	AgencyName pulumi.StringPtrInput
	// Specifies the agent list in comma-separated string.
	// Changing this creates a new instance. Available agents are:
	// + `ces`: enable cloud eye monitoring(free).
	// + `hss`: enable host security basic(free).
	// + `hss,hss-ent`: enable host security enterprise edition.
	AgentList pulumi.StringPtrInput
	AutoPay   pulumi.StringPtrInput
	// Specifies whether auto renew is enabled.
	// Valid values are *true* and *false*. Defaults to *false*.
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone in which to create the instance.
	// Please following [reference](https://developer.huaweicloud.com/en-us/endpoint/?ECS)
	// for the values. Changing this creates a new instance.
	AvailabilityZone pulumi.StringPtrInput
	// Specifies the bandwidth of an EIP that will be automatically assigned to the instance.
	// The object structure is documented below. Changing this creates a new instance.
	Bandwidth InstanceBandwidthPtrInput
	// Deprecated: use system_disk_type, system_disk_size, data_disks instead
	BlockDevices InstanceBlockDeviceArrayInput
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new instance.
	ChargingMode pulumi.StringPtrInput
	// Specifies an array of one or more data disks to attach to the instance.
	// The dataDisks object structure is documented below. Changing this creates a new instance.
	DataDisks InstanceDataDiskArrayInput
	// Specifies whether to delete the data disks when the instance is terminated.
	// Defaults to *false*. This parameter is valid if `chargingMode` is set to *postPaid*, and all data disks will be deleted
	// in *prePaid* charging mode.
	DeleteDisksOnTermination pulumi.BoolPtrInput
	// Specifies whether the EIP is released when the instance is terminated.
	// Defaults to *true*.
	DeleteEipOnTermination pulumi.BoolPtrInput
	// Specifies the ID of an *existing* EIP assigned to the instance.
	// This parameter and `eipType`, `bandwidth` are alternative. Changing this creates a new instance.
	EipId pulumi.StringPtrInput
	// Specifies the type of an EIP that will be automatically assigned to the instance.
	// Available values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP). Changing this creates a new instance.
	EipType pulumi.StringPtrInput
	// Specifies a unique id in UUID format of enterprise project .
	// Changing this creates a new instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Required if `flavorName` is empty. Specifies the flavor ID of the desired flavor for
	// the instance.
	FlavorId pulumi.StringPtrInput
	// Required if `flavorId` is empty. Specifies the name of the desired flavor for the
	// instance.
	FlavorName pulumi.StringPtrInput
	// Required if `imageName` is empty. Specifies the image ID of the desired
	// image for the instance. Changing this creates a new instance.
	ImageId pulumi.StringPtrInput
	// Required if `imageId` is empty. Specifies the name of the desired image
	// for the instance. Changing this creates a new instance.
	ImageName pulumi.StringPtrInput
	// Specifies the SSH keypair name used for logging in to the instance.
	KeyPair pulumi.StringPtrInput
	// Deprecated: use tags instead
	Metadata pulumi.StringMapInput
	// Specifies a unique name for the instance. The name consists of 1 to 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringPtrInput
	// Specifies an array of one or more networks to attach to the instance. The
	// network object structure is documented below. Changing this creates a new instance.
	Networks InstanceNetworkArrayInput
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
	// ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new instance.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the power action to be done for the instance.
	// The valid values are *ON*, *OFF*, *REBOOT*, *FORCE-OFF* and *FORCE-REBOOT*.
	PowerAction pulumi.StringPtrInput
	// Specifies the the private key of the keypair in use. This parameter is mandatory
	// when replacing or unbinding a keypair and the instance is in **Running** state.
	PrivateKey pulumi.StringPtrInput
	// The EIP address that is associted to the instance.
	PublicIp pulumi.StringPtrInput
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this creates a new instance.
	Region pulumi.StringPtrInput
	// Specifies the scheduler with hints on how the instance should be launched. The
	// available hints are described below.
	SchedulerHints InstanceSchedulerHintArrayInput
	// Specifies an array of one or more security group IDs to associate with the
	// instance.
	SecurityGroupIds pulumi.StringArrayInput
	// schema: Computed
	SecurityGroups pulumi.StringArrayInput
	// The status of the instance.
	Status pulumi.StringPtrInput
	// Specifies whether to try stop instance gracefully before destroying it, thus giving
	// chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.
	StopBeforeDestroy pulumi.BoolPtrInput
	// The system disk voume ID.
	SystemDiskId pulumi.StringPtrInput
	// Specifies the system disk size in GB, The value range is 1 to 1024.
	// Shrinking the disk is not supported.
	SystemDiskSize pulumi.IntPtrInput
	// Specifies the system disk type of the instance. Defaults to `GPSSD`.
	// Changing this creates a new instance.
	SystemDiskType pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the instance.
	Tags pulumi.StringMapInput
	// Specifies the user data to be injected during the instance creation. Text
	// and text files can be injected. Changing this creates a new instance.
	UserData pulumi.StringPtrInput
	// Specifies a user ID, required when using keyPair in prePaid charging mode.
	// Changing this creates a new instance.
	UserId          pulumi.StringPtrInput
	VolumeAttacheds InstanceVolumeAttachedArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Specifies the administrative password to assign to the instance.
	AdminPass *string `pulumi:"adminPass"`
	// Specifies the IAM agency name which is created on IAM to provide
	// temporary credentials for ECS to access cloud services. Changing this creates a new instance.
	AgencyName *string `pulumi:"agencyName"`
	// Specifies the agent list in comma-separated string.
	// Changing this creates a new instance. Available agents are:
	// + `ces`: enable cloud eye monitoring(free).
	// + `hss`: enable host security basic(free).
	// + `hss,hss-ent`: enable host security enterprise edition.
	AgentList *string `pulumi:"agentList"`
	AutoPay   *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled.
	// Valid values are *true* and *false*. Defaults to *false*.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the availability zone in which to create the instance.
	// Please following [reference](https://developer.huaweicloud.com/en-us/endpoint/?ECS)
	// for the values. Changing this creates a new instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Specifies the bandwidth of an EIP that will be automatically assigned to the instance.
	// The object structure is documented below. Changing this creates a new instance.
	Bandwidth *InstanceBandwidth `pulumi:"bandwidth"`
	// Deprecated: use system_disk_type, system_disk_size, data_disks instead
	BlockDevices []InstanceBlockDevice `pulumi:"blockDevices"`
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new instance.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies an array of one or more data disks to attach to the instance.
	// The dataDisks object structure is documented below. Changing this creates a new instance.
	DataDisks []InstanceDataDisk `pulumi:"dataDisks"`
	// Specifies whether to delete the data disks when the instance is terminated.
	// Defaults to *false*. This parameter is valid if `chargingMode` is set to *postPaid*, and all data disks will be deleted
	// in *prePaid* charging mode.
	DeleteDisksOnTermination *bool `pulumi:"deleteDisksOnTermination"`
	// Specifies whether the EIP is released when the instance is terminated.
	// Defaults to *true*.
	DeleteEipOnTermination *bool `pulumi:"deleteEipOnTermination"`
	// Specifies the ID of an *existing* EIP assigned to the instance.
	// This parameter and `eipType`, `bandwidth` are alternative. Changing this creates a new instance.
	EipId *string `pulumi:"eipId"`
	// Specifies the type of an EIP that will be automatically assigned to the instance.
	// Available values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP). Changing this creates a new instance.
	EipType *string `pulumi:"eipType"`
	// Specifies a unique id in UUID format of enterprise project .
	// Changing this creates a new instance.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Required if `flavorName` is empty. Specifies the flavor ID of the desired flavor for
	// the instance.
	FlavorId *string `pulumi:"flavorId"`
	// Required if `flavorId` is empty. Specifies the name of the desired flavor for the
	// instance.
	FlavorName *string `pulumi:"flavorName"`
	// Required if `imageName` is empty. Specifies the image ID of the desired
	// image for the instance. Changing this creates a new instance.
	ImageId *string `pulumi:"imageId"`
	// Required if `imageId` is empty. Specifies the name of the desired image
	// for the instance. Changing this creates a new instance.
	ImageName *string `pulumi:"imageName"`
	// Specifies the SSH keypair name used for logging in to the instance.
	KeyPair *string `pulumi:"keyPair"`
	// Deprecated: use tags instead
	Metadata map[string]string `pulumi:"metadata"`
	// Specifies a unique name for the instance. The name consists of 1 to 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `pulumi:"name"`
	// Specifies an array of one or more networks to attach to the instance. The
	// network object structure is documented below. Changing this creates a new instance.
	Networks []InstanceNetwork `pulumi:"networks"`
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
	// ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new instance.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the power action to be done for the instance.
	// The valid values are *ON*, *OFF*, *REBOOT*, *FORCE-OFF* and *FORCE-REBOOT*.
	PowerAction *string `pulumi:"powerAction"`
	// Specifies the the private key of the keypair in use. This parameter is mandatory
	// when replacing or unbinding a keypair and the instance is in **Running** state.
	PrivateKey *string `pulumi:"privateKey"`
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this creates a new instance.
	Region *string `pulumi:"region"`
	// Specifies the scheduler with hints on how the instance should be launched. The
	// available hints are described below.
	SchedulerHints []InstanceSchedulerHint `pulumi:"schedulerHints"`
	// Specifies an array of one or more security group IDs to associate with the
	// instance.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// schema: Computed
	SecurityGroups []string `pulumi:"securityGroups"`
	// Specifies whether to try stop instance gracefully before destroying it, thus giving
	// chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.
	StopBeforeDestroy *bool `pulumi:"stopBeforeDestroy"`
	// Specifies the system disk size in GB, The value range is 1 to 1024.
	// Shrinking the disk is not supported.
	SystemDiskSize *int `pulumi:"systemDiskSize"`
	// Specifies the system disk type of the instance. Defaults to `GPSSD`.
	// Changing this creates a new instance.
	SystemDiskType *string `pulumi:"systemDiskType"`
	// Specifies the key/value pairs to associate with the instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the user data to be injected during the instance creation. Text
	// and text files can be injected. Changing this creates a new instance.
	UserData *string `pulumi:"userData"`
	// Specifies a user ID, required when using keyPair in prePaid charging mode.
	// Changing this creates a new instance.
	UserId *string `pulumi:"userId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Specifies the administrative password to assign to the instance.
	AdminPass pulumi.StringPtrInput
	// Specifies the IAM agency name which is created on IAM to provide
	// temporary credentials for ECS to access cloud services. Changing this creates a new instance.
	AgencyName pulumi.StringPtrInput
	// Specifies the agent list in comma-separated string.
	// Changing this creates a new instance. Available agents are:
	// + `ces`: enable cloud eye monitoring(free).
	// + `hss`: enable host security basic(free).
	// + `hss,hss-ent`: enable host security enterprise edition.
	AgentList pulumi.StringPtrInput
	AutoPay   pulumi.StringPtrInput
	// Specifies whether auto renew is enabled.
	// Valid values are *true* and *false*. Defaults to *false*.
	AutoRenew pulumi.StringPtrInput
	// Specifies the availability zone in which to create the instance.
	// Please following [reference](https://developer.huaweicloud.com/en-us/endpoint/?ECS)
	// for the values. Changing this creates a new instance.
	AvailabilityZone pulumi.StringPtrInput
	// Specifies the bandwidth of an EIP that will be automatically assigned to the instance.
	// The object structure is documented below. Changing this creates a new instance.
	Bandwidth InstanceBandwidthPtrInput
	// Deprecated: use system_disk_type, system_disk_size, data_disks instead
	BlockDevices InstanceBlockDeviceArrayInput
	// Specifies the charging mode of the instance. Valid values are *prePaid*
	// and *postPaid*, defaults to *postPaid*. Changing this creates a new instance.
	ChargingMode pulumi.StringPtrInput
	// Specifies an array of one or more data disks to attach to the instance.
	// The dataDisks object structure is documented below. Changing this creates a new instance.
	DataDisks InstanceDataDiskArrayInput
	// Specifies whether to delete the data disks when the instance is terminated.
	// Defaults to *false*. This parameter is valid if `chargingMode` is set to *postPaid*, and all data disks will be deleted
	// in *prePaid* charging mode.
	DeleteDisksOnTermination pulumi.BoolPtrInput
	// Specifies whether the EIP is released when the instance is terminated.
	// Defaults to *true*.
	DeleteEipOnTermination pulumi.BoolPtrInput
	// Specifies the ID of an *existing* EIP assigned to the instance.
	// This parameter and `eipType`, `bandwidth` are alternative. Changing this creates a new instance.
	EipId pulumi.StringPtrInput
	// Specifies the type of an EIP that will be automatically assigned to the instance.
	// Available values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP). Changing this creates a new instance.
	EipType pulumi.StringPtrInput
	// Specifies a unique id in UUID format of enterprise project .
	// Changing this creates a new instance.
	EnterpriseProjectId pulumi.StringPtrInput
	// Required if `flavorName` is empty. Specifies the flavor ID of the desired flavor for
	// the instance.
	FlavorId pulumi.StringPtrInput
	// Required if `flavorId` is empty. Specifies the name of the desired flavor for the
	// instance.
	FlavorName pulumi.StringPtrInput
	// Required if `imageName` is empty. Specifies the image ID of the desired
	// image for the instance. Changing this creates a new instance.
	ImageId pulumi.StringPtrInput
	// Required if `imageId` is empty. Specifies the name of the desired image
	// for the instance. Changing this creates a new instance.
	ImageName pulumi.StringPtrInput
	// Specifies the SSH keypair name used for logging in to the instance.
	KeyPair pulumi.StringPtrInput
	// Deprecated: use tags instead
	Metadata pulumi.StringMapInput
	// Specifies a unique name for the instance. The name consists of 1 to 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name pulumi.StringPtrInput
	// Specifies an array of one or more networks to attach to the instance. The
	// network object structure is documented below. Changing this creates a new instance.
	Networks InstanceNetworkArrayInput
	// Specifies the charging period of the instance.
	// If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
	// ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
	// new resource.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
	// Changing this creates a new instance.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the power action to be done for the instance.
	// The valid values are *ON*, *OFF*, *REBOOT*, *FORCE-OFF* and *FORCE-REBOOT*.
	PowerAction pulumi.StringPtrInput
	// Specifies the the private key of the keypair in use. This parameter is mandatory
	// when replacing or unbinding a keypair and the instance is in **Running** state.
	PrivateKey pulumi.StringPtrInput
	// Specifies the region in which to create the instance.
	// If omitted, the provider-level region will be used. Changing this creates a new instance.
	Region pulumi.StringPtrInput
	// Specifies the scheduler with hints on how the instance should be launched. The
	// available hints are described below.
	SchedulerHints InstanceSchedulerHintArrayInput
	// Specifies an array of one or more security group IDs to associate with the
	// instance.
	SecurityGroupIds pulumi.StringArrayInput
	// schema: Computed
	SecurityGroups pulumi.StringArrayInput
	// Specifies whether to try stop instance gracefully before destroying it, thus giving
	// chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.
	StopBeforeDestroy pulumi.BoolPtrInput
	// Specifies the system disk size in GB, The value range is 1 to 1024.
	// Shrinking the disk is not supported.
	SystemDiskSize pulumi.IntPtrInput
	// Specifies the system disk type of the instance. Defaults to `GPSSD`.
	// Changing this creates a new instance.
	SystemDiskType pulumi.StringPtrInput
	// Specifies the key/value pairs to associate with the instance.
	Tags pulumi.StringMapInput
	// Specifies the user data to be injected during the instance creation. Text
	// and text files can be injected. Changing this creates a new instance.
	UserData pulumi.StringPtrInput
	// Specifies a user ID, required when using keyPair in prePaid charging mode.
	// Changing this creates a new instance.
	UserId pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// The first detected Fixed IPv4 address or the Floating IP.
// * `network/fixed_ip_v4` - The Fixed IPv4 address of the Instance on that network.
// * `network/fixed_ip_v6` - The Fixed IPv6 address of the Instance on that network.
// * `network/mac` - The MAC address of the NIC on that network.
// * `network/port` - The port ID corresponding to the IP address on that network.
// * `volume_attached/volume_id` - The volume id on that attachment.
// * `volume_attached/pci_address` - The volume pci address on that attachment.
// * `volume_attached/boot_index` - The volume boot index on that attachment.
// * `volume_attached/size` - The volume size on that attachment.
// * `volume_attached/type` - The volume type on that attachment.
func (o InstanceOutput) AccessIpV4() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AccessIpV4 }).(pulumi.StringOutput)
}

func (o InstanceOutput) AccessIpV6() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AccessIpV6 }).(pulumi.StringOutput)
}

// Specifies the administrative password to assign to the instance.
func (o InstanceOutput) AdminPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AdminPass }).(pulumi.StringPtrOutput)
}

// Specifies the IAM agency name which is created on IAM to provide
// temporary credentials for ECS to access cloud services. Changing this creates a new instance.
func (o InstanceOutput) AgencyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AgencyName }).(pulumi.StringPtrOutput)
}

// Specifies the agent list in comma-separated string.
// Changing this creates a new instance. Available agents are:
// + `ces`: enable cloud eye monitoring(free).
// + `hss`: enable host security basic(free).
// + `hss,hss-ent`: enable host security enterprise edition.
func (o InstanceOutput) AgentList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AgentList }).(pulumi.StringPtrOutput)
}

func (o InstanceOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

// Specifies whether auto renew is enabled.
// Valid values are *true* and *false*. Defaults to *false*.
func (o InstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the availability zone in which to create the instance.
// Please following [reference](https://developer.huaweicloud.com/en-us/endpoint/?ECS)
// for the values. Changing this creates a new instance.
func (o InstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Specifies the bandwidth of an EIP that will be automatically assigned to the instance.
// The object structure is documented below. Changing this creates a new instance.
func (o InstanceOutput) Bandwidth() InstanceBandwidthPtrOutput {
	return o.ApplyT(func(v *Instance) InstanceBandwidthPtrOutput { return v.Bandwidth }).(InstanceBandwidthPtrOutput)
}

// Deprecated: use system_disk_type, system_disk_size, data_disks instead
func (o InstanceOutput) BlockDevices() InstanceBlockDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceBlockDeviceArrayOutput { return v.BlockDevices }).(InstanceBlockDeviceArrayOutput)
}

// Specifies the charging mode of the instance. Valid values are *prePaid*
// and *postPaid*, defaults to *postPaid*. Changing this creates a new instance.
func (o InstanceOutput) ChargingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ChargingMode }).(pulumi.StringOutput)
}

// Specifies an array of one or more data disks to attach to the instance.
// The dataDisks object structure is documented below. Changing this creates a new instance.
func (o InstanceOutput) DataDisks() InstanceDataDiskArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceDataDiskArrayOutput { return v.DataDisks }).(InstanceDataDiskArrayOutput)
}

// Specifies whether to delete the data disks when the instance is terminated.
// Defaults to *false*. This parameter is valid if `chargingMode` is set to *postPaid*, and all data disks will be deleted
// in *prePaid* charging mode.
func (o InstanceOutput) DeleteDisksOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.DeleteDisksOnTermination }).(pulumi.BoolPtrOutput)
}

// Specifies whether the EIP is released when the instance is terminated.
// Defaults to *true*.
func (o InstanceOutput) DeleteEipOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.DeleteEipOnTermination }).(pulumi.BoolPtrOutput)
}

// Specifies the ID of an *existing* EIP assigned to the instance.
// This parameter and `eipType`, `bandwidth` are alternative. Changing this creates a new instance.
func (o InstanceOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.EipId }).(pulumi.StringPtrOutput)
}

// Specifies the type of an EIP that will be automatically assigned to the instance.
// Available values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP). Changing this creates a new instance.
func (o InstanceOutput) EipType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.EipType }).(pulumi.StringPtrOutput)
}

// Specifies a unique id in UUID format of enterprise project .
// Changing this creates a new instance.
func (o InstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Required if `flavorName` is empty. Specifies the flavor ID of the desired flavor for
// the instance.
func (o InstanceOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.FlavorId }).(pulumi.StringOutput)
}

// Required if `flavorId` is empty. Specifies the name of the desired flavor for the
// instance.
func (o InstanceOutput) FlavorName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.FlavorName }).(pulumi.StringOutput)
}

// Required if `imageName` is empty. Specifies the image ID of the desired
// image for the instance. Changing this creates a new instance.
func (o InstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// Required if `imageId` is empty. Specifies the name of the desired image
// for the instance. Changing this creates a new instance.
func (o InstanceOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

// Specifies the SSH keypair name used for logging in to the instance.
func (o InstanceOutput) KeyPair() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.KeyPair }).(pulumi.StringPtrOutput)
}

// Deprecated: use tags instead
func (o InstanceOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// Specifies a unique name for the instance. The name consists of 1 to 64 characters,
// including letters, digits, underscores (_), hyphens (-), and periods (.).
func (o InstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies an array of one or more networks to attach to the instance. The
// network object structure is documented below. Changing this creates a new instance.
func (o InstanceOutput) Networks() InstanceNetworkArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNetworkArrayOutput { return v.Networks }).(InstanceNetworkArrayOutput)
}

// Specifies the charging period of the instance.
// If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
// ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this creates a
// new resource.
func (o InstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the instance.
// Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
// Changing this creates a new instance.
func (o InstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Specifies the power action to be done for the instance.
// The valid values are *ON*, *OFF*, *REBOOT*, *FORCE-OFF* and *FORCE-REBOOT*.
func (o InstanceOutput) PowerAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PowerAction }).(pulumi.StringOutput)
}

// Specifies the the private key of the keypair in use. This parameter is mandatory
// when replacing or unbinding a keypair and the instance is in **Running** state.
func (o InstanceOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// The EIP address that is associted to the instance.
func (o InstanceOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// Specifies the region in which to create the instance.
// If omitted, the provider-level region will be used. Changing this creates a new instance.
func (o InstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies the scheduler with hints on how the instance should be launched. The
// available hints are described below.
func (o InstanceOutput) SchedulerHints() InstanceSchedulerHintArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceSchedulerHintArrayOutput { return v.SchedulerHints }).(InstanceSchedulerHintArrayOutput)
}

// Specifies an array of one or more security group IDs to associate with the
// instance.
func (o InstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// schema: Computed
func (o InstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The status of the instance.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies whether to try stop instance gracefully before destroying it, thus giving
// chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.
func (o InstanceOutput) StopBeforeDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.StopBeforeDestroy }).(pulumi.BoolPtrOutput)
}

// The system disk voume ID.
func (o InstanceOutput) SystemDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SystemDiskId }).(pulumi.StringOutput)
}

// Specifies the system disk size in GB, The value range is 1 to 1024.
// Shrinking the disk is not supported.
func (o InstanceOutput) SystemDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.SystemDiskSize }).(pulumi.IntOutput)
}

// Specifies the system disk type of the instance. Defaults to `GPSSD`.
// Changing this creates a new instance.
func (o InstanceOutput) SystemDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SystemDiskType }).(pulumi.StringOutput)
}

// Specifies the key/value pairs to associate with the instance.
func (o InstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the user data to be injected during the instance creation. Text
// and text files can be injected. Changing this creates a new instance.
func (o InstanceOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

// Specifies a user ID, required when using keyPair in prePaid charging mode.
// Changing this creates a new instance.
func (o InstanceOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.UserId }).(pulumi.StringPtrOutput)
}

func (o InstanceOutput) VolumeAttacheds() InstanceVolumeAttachedArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceVolumeAttachedArrayOutput { return v.VolumeAttacheds }).(InstanceVolumeAttachedArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
