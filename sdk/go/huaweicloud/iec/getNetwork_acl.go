// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the details of a specific IEC network ACL.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iec"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Iec"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			aclName := cfg.RequireObject("aclName")
//			_, err := Iec.GetNetwork_acl(ctx, &iec.GetNetwork_aclArgs{
//				Name: pulumi.StringRef(aclName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetNetwork_acl(ctx *pulumi.Context, args *GetNetwork_aclArgs, opts ...pulumi.InvokeOption) (*GetNetwork_aclResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetNetwork_aclResult
	err := ctx.Invoke("huaweicloud:Iec/getNetwork_acl:getNetwork_acl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetwork_acl.
type GetNetwork_aclArgs struct {
	// Specifies the ID of the IEC network ACL to retrieve.
	Id *string `pulumi:"id"`
	// Specifies the name if the IEC network ACL with a maximum of 64 characters.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getNetwork_acl.
type GetNetwork_aclResult struct {
	// The description of the IEC network ACL.
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// A list of the IDs of ingress rules associated with the IEC network ACL.
	InboundRules []string                `pulumi:"inboundRules"`
	Name         string                  `pulumi:"name"`
	Networks     []GetNetwork_aclNetwork `pulumi:"networks"`
	// A list of the IDs of egress rules associated with the IEC network ACL.
	OutboundRules []string `pulumi:"outboundRules"`
	// The status of the IEC network ACL.
	Status string `pulumi:"status"`
}

func GetNetwork_aclOutput(ctx *pulumi.Context, args GetNetwork_aclOutputArgs, opts ...pulumi.InvokeOption) GetNetwork_aclResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNetwork_aclResult, error) {
			args := v.(GetNetwork_aclArgs)
			r, err := GetNetwork_acl(ctx, &args, opts...)
			var s GetNetwork_aclResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNetwork_aclResultOutput)
}

// A collection of arguments for invoking getNetwork_acl.
type GetNetwork_aclOutputArgs struct {
	// Specifies the ID of the IEC network ACL to retrieve.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the name if the IEC network ACL with a maximum of 64 characters.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetNetwork_aclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetwork_aclArgs)(nil)).Elem()
}

// A collection of values returned by getNetwork_acl.
type GetNetwork_aclResultOutput struct{ *pulumi.OutputState }

func (GetNetwork_aclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetwork_aclResult)(nil)).Elem()
}

func (o GetNetwork_aclResultOutput) ToGetNetwork_aclResultOutput() GetNetwork_aclResultOutput {
	return o
}

func (o GetNetwork_aclResultOutput) ToGetNetwork_aclResultOutputWithContext(ctx context.Context) GetNetwork_aclResultOutput {
	return o
}

// The description of the IEC network ACL.
func (o GetNetwork_aclResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetNetwork_aclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of the IDs of ingress rules associated with the IEC network ACL.
func (o GetNetwork_aclResultOutput) InboundRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) []string { return v.InboundRules }).(pulumi.StringArrayOutput)
}

func (o GetNetwork_aclResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetwork_aclResultOutput) Networks() GetNetwork_aclNetworkArrayOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) []GetNetwork_aclNetwork { return v.Networks }).(GetNetwork_aclNetworkArrayOutput)
}

// A list of the IDs of egress rules associated with the IEC network ACL.
func (o GetNetwork_aclResultOutput) OutboundRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) []string { return v.OutboundRules }).(pulumi.StringArrayOutput)
}

// The status of the IEC network ACL.
func (o GetNetwork_aclResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetwork_aclResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetwork_aclResultOutput{})
}
