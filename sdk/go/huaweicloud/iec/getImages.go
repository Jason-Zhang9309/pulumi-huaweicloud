// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the available of HuaweiCloud IEC images.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Iec"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Iec"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Iec.GetImages(ctx, &iec.GetImagesArgs{
//				OsType: pulumi.StringRef("Linux"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetImages(ctx *pulumi.Context, args *GetImagesArgs, opts ...pulumi.InvokeOption) (*GetImagesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetImagesResult
	err := ctx.Invoke("huaweicloud:Iec/getImages:getImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImages.
type GetImagesArgs struct {
	// Specifies the image Name, which can be queried with a regular expression.
	Name *string `pulumi:"name"`
	// Specifies the os type of the iec image.
	// "Linux", "Windows" and "Other" are supported.
	OsType *string `pulumi:"osType"`
	// The region in which to obtain the images. If omitted, the provider-level region will be
	// used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getImages.
type GetImagesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An array of one or more image. The images object structure is documented below.
	Images []GetImagesImage `pulumi:"images"`
	// The name of the iec images.
	Name *string `pulumi:"name"`
	// The osType of the iec images.
	OsType *string `pulumi:"osType"`
	Region string  `pulumi:"region"`
}

func GetImagesOutput(ctx *pulumi.Context, args GetImagesOutputArgs, opts ...pulumi.InvokeOption) GetImagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImagesResult, error) {
			args := v.(GetImagesArgs)
			r, err := GetImages(ctx, &args, opts...)
			var s GetImagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImagesResultOutput)
}

// A collection of arguments for invoking getImages.
type GetImagesOutputArgs struct {
	// Specifies the image Name, which can be queried with a regular expression.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the os type of the iec image.
	// "Linux", "Windows" and "Other" are supported.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The region in which to obtain the images. If omitted, the provider-level region will be
	// used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesArgs)(nil)).Elem()
}

// A collection of values returned by getImages.
type GetImagesResultOutput struct{ *pulumi.OutputState }

func (GetImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesResult)(nil)).Elem()
}

func (o GetImagesResultOutput) ToGetImagesResultOutput() GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToGetImagesResultOutputWithContext(ctx context.Context) GetImagesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// An array of one or more image. The images object structure is documented below.
func (o GetImagesResultOutput) Images() GetImagesImageArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesImage { return v.Images }).(GetImagesImageArrayOutput)
}

// The name of the iec images.
func (o GetImagesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The osType of the iec images.
func (o GetImagesResultOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagesResultOutput{})
}
