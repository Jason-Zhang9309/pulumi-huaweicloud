// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package modelarts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a list of ModelArts notebook images.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/ModelArts"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/ModelArts"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := ModelArts.GetNotebookImages(ctx, &modelarts.GetNotebookImagesArgs{
//				Type: pulumi.StringRef("BUILD_IN"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("imageId", test.Images[0].Id)
//			return nil
//		})
//	}
//
// ```
func GetNotebookImages(ctx *pulumi.Context, args *GetNotebookImagesArgs, opts ...pulumi.InvokeOption) (*GetNotebookImagesResult, error) {
	var rv GetNotebookImagesResult
	err := ctx.Invoke("huaweicloud:ModelArts/getNotebookImages:getNotebookImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNotebookImages.
type GetNotebookImagesArgs struct {
	// Specifies the CPU architecture of image. The value can be **x86_64** and **aarch64**.
	CpuArch *string `pulumi:"cpuArch"`
	// Specifies the name of image.
	Name *string `pulumi:"name"`
	// Specifies the name of the organization (namespace) which image belongs to.
	Organization *string `pulumi:"organization"`
	// Specifies the region in which to obtain images. If omitted, the provider-level region
	// will be used.
	Region *string `pulumi:"region"`
	// Specifies the type of image. The options are:
	// + `BUILD_IN`: The system built-in image.
	// + `DEDICATED`: User-saved images.
	Type *string `pulumi:"type"`
	// Specifies the workspace ID which image belongs to.
	WorkspaceId *string `pulumi:"workspaceId"`
}

// A collection of values returned by getNotebookImages.
type GetNotebookImagesResult struct {
	// The CPU architecture of the image. The value can be **x86_64** and **aarch64**.
	CpuArch *string `pulumi:"cpuArch"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates a list of all images found. Structure is documented below.
	Images []GetNotebookImagesImage `pulumi:"images"`
	// The name of the image.
	Name         *string `pulumi:"name"`
	Organization *string `pulumi:"organization"`
	Region       string  `pulumi:"region"`
	// The type of the image.
	Type        *string `pulumi:"type"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

func GetNotebookImagesOutput(ctx *pulumi.Context, args GetNotebookImagesOutputArgs, opts ...pulumi.InvokeOption) GetNotebookImagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNotebookImagesResult, error) {
			args := v.(GetNotebookImagesArgs)
			r, err := GetNotebookImages(ctx, &args, opts...)
			var s GetNotebookImagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNotebookImagesResultOutput)
}

// A collection of arguments for invoking getNotebookImages.
type GetNotebookImagesOutputArgs struct {
	// Specifies the CPU architecture of image. The value can be **x86_64** and **aarch64**.
	CpuArch pulumi.StringPtrInput `pulumi:"cpuArch"`
	// Specifies the name of image.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the name of the organization (namespace) which image belongs to.
	Organization pulumi.StringPtrInput `pulumi:"organization"`
	// Specifies the region in which to obtain images. If omitted, the provider-level region
	// will be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the type of image. The options are:
	// + `BUILD_IN`: The system built-in image.
	// + `DEDICATED`: User-saved images.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Specifies the workspace ID which image belongs to.
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
}

func (GetNotebookImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotebookImagesArgs)(nil)).Elem()
}

// A collection of values returned by getNotebookImages.
type GetNotebookImagesResultOutput struct{ *pulumi.OutputState }

func (GetNotebookImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotebookImagesResult)(nil)).Elem()
}

func (o GetNotebookImagesResultOutput) ToGetNotebookImagesResultOutput() GetNotebookImagesResultOutput {
	return o
}

func (o GetNotebookImagesResultOutput) ToGetNotebookImagesResultOutputWithContext(ctx context.Context) GetNotebookImagesResultOutput {
	return o
}

// The CPU architecture of the image. The value can be **x86_64** and **aarch64**.
func (o GetNotebookImagesResultOutput) CpuArch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) *string { return v.CpuArch }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNotebookImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates a list of all images found. Structure is documented below.
func (o GetNotebookImagesResultOutput) Images() GetNotebookImagesImageArrayOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) []GetNotebookImagesImage { return v.Images }).(GetNotebookImagesImageArrayOutput)
}

// The name of the image.
func (o GetNotebookImagesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetNotebookImagesResultOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

func (o GetNotebookImagesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) string { return v.Region }).(pulumi.StringOutput)
}

// The type of the image.
func (o GetNotebookImagesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetNotebookImagesResultOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotebookImagesResult) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNotebookImagesResultOutput{})
}
