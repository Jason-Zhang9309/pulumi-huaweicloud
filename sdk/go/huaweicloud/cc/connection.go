// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Cloud Connection resource within HuaweiCloud.
//
// Cloud Connect (CC) is a service that enables you to quickly build ultra-fast, high-quality, and stable networks
// between VPCs across regions and between VPCs and on-premises data centers.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Cc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cc.NewConnection(ctx, "test", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The cloud connection can be imported using the `id`, e.g.
//
// ```sh
//
//	$ pulumi import huaweicloud:Cc/connection:Connection test 0ce123456a00f2591fabc00385ff1234
//
// ```
type Connection struct {
	pulumi.CustomResourceState

	// The number of bandwidth packages associated with the cloud connection instance.
	BandwidthPackageNumber pulumi.IntOutput `pulumi:"bandwidthPackageNumber"`
	// The Description about the cloud connection.\
	// The description can contain a maximum of 255 characters.
	Description pulumi.StringOutput `pulumi:"description"`
	// The Domain ID.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// The enterprise project id of the cloud connection.\
	// Value 0 indicates the default enterprise project.
	EnterpriseProjectId pulumi.StringOutput `pulumi:"enterpriseProjectId"`
	// The number of inter-domain bandwidths associated with the cloud connection instance.
	InterRegionBandwidthNumber pulumi.IntOutput `pulumi:"interRegionBandwidthNumber"`
	// The cloud connection name.\
	// The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
	// underscores (_) and dots (.).
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of network instances associated with the cloud connection instance.
	NetworkInstanceNumber pulumi.IntOutput `pulumi:"networkInstanceNumber"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The status of the cloud connection.\
	// The options are as follows:
	// + **ACTIVE**: Device deleted.
	Status pulumi.StringOutput `pulumi:"status"`
	// The Scenario.\
	// The options are as follows:
	// + **vpc**: VPCs or virtual gateways can use this cloud connection.
	UsedScene pulumi.StringOutput `pulumi:"usedScene"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil {
		args = &ConnectionArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource Connection
	err := ctx.RegisterResource("huaweicloud:Cc/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("huaweicloud:Cc/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	// The number of bandwidth packages associated with the cloud connection instance.
	BandwidthPackageNumber *int `pulumi:"bandwidthPackageNumber"`
	// The Description about the cloud connection.\
	// The description can contain a maximum of 255 characters.
	Description *string `pulumi:"description"`
	// The Domain ID.
	DomainId *string `pulumi:"domainId"`
	// The enterprise project id of the cloud connection.\
	// Value 0 indicates the default enterprise project.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The number of inter-domain bandwidths associated with the cloud connection instance.
	InterRegionBandwidthNumber *int `pulumi:"interRegionBandwidthNumber"`
	// The cloud connection name.\
	// The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
	// underscores (_) and dots (.).
	Name *string `pulumi:"name"`
	// The number of network instances associated with the cloud connection instance.
	NetworkInstanceNumber *int `pulumi:"networkInstanceNumber"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
	// The status of the cloud connection.\
	// The options are as follows:
	// + **ACTIVE**: Device deleted.
	Status *string `pulumi:"status"`
	// The Scenario.\
	// The options are as follows:
	// + **vpc**: VPCs or virtual gateways can use this cloud connection.
	UsedScene *string `pulumi:"usedScene"`
}

type ConnectionState struct {
	// The number of bandwidth packages associated with the cloud connection instance.
	BandwidthPackageNumber pulumi.IntPtrInput
	// The Description about the cloud connection.\
	// The description can contain a maximum of 255 characters.
	Description pulumi.StringPtrInput
	// The Domain ID.
	DomainId pulumi.StringPtrInput
	// The enterprise project id of the cloud connection.\
	// Value 0 indicates the default enterprise project.
	EnterpriseProjectId pulumi.StringPtrInput
	// The number of inter-domain bandwidths associated with the cloud connection instance.
	InterRegionBandwidthNumber pulumi.IntPtrInput
	// The cloud connection name.\
	// The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
	// underscores (_) and dots (.).
	Name pulumi.StringPtrInput
	// The number of network instances associated with the cloud connection instance.
	NetworkInstanceNumber pulumi.IntPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
	// The status of the cloud connection.\
	// The options are as follows:
	// + **ACTIVE**: Device deleted.
	Status pulumi.StringPtrInput
	// The Scenario.\
	// The options are as follows:
	// + **vpc**: VPCs or virtual gateways can use this cloud connection.
	UsedScene pulumi.StringPtrInput
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	// The Description about the cloud connection.\
	// The description can contain a maximum of 255 characters.
	Description *string `pulumi:"description"`
	// The enterprise project id of the cloud connection.\
	// Value 0 indicates the default enterprise project.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// The cloud connection name.\
	// The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
	// underscores (_) and dots (.).
	Name *string `pulumi:"name"`
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// The Description about the cloud connection.\
	// The description can contain a maximum of 255 characters.
	Description pulumi.StringPtrInput
	// The enterprise project id of the cloud connection.\
	// Value 0 indicates the default enterprise project.
	EnterpriseProjectId pulumi.StringPtrInput
	// The cloud connection name.\
	// The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
	// underscores (_) and dots (.).
	Name pulumi.StringPtrInput
	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region pulumi.StringPtrInput
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}

type ConnectionInput interface {
	pulumi.Input

	ToConnectionOutput() ConnectionOutput
	ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput
}

func (*Connection) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (i *Connection) ToConnectionOutput() ConnectionOutput {
	return i.ToConnectionOutputWithContext(context.Background())
}

func (i *Connection) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOutput)
}

// ConnectionArrayInput is an input type that accepts ConnectionArray and ConnectionArrayOutput values.
// You can construct a concrete instance of `ConnectionArrayInput` via:
//
//	ConnectionArray{ ConnectionArgs{...} }
type ConnectionArrayInput interface {
	pulumi.Input

	ToConnectionArrayOutput() ConnectionArrayOutput
	ToConnectionArrayOutputWithContext(context.Context) ConnectionArrayOutput
}

type ConnectionArray []ConnectionInput

func (ConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Connection)(nil)).Elem()
}

func (i ConnectionArray) ToConnectionArrayOutput() ConnectionArrayOutput {
	return i.ToConnectionArrayOutputWithContext(context.Background())
}

func (i ConnectionArray) ToConnectionArrayOutputWithContext(ctx context.Context) ConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionArrayOutput)
}

// ConnectionMapInput is an input type that accepts ConnectionMap and ConnectionMapOutput values.
// You can construct a concrete instance of `ConnectionMapInput` via:
//
//	ConnectionMap{ "key": ConnectionArgs{...} }
type ConnectionMapInput interface {
	pulumi.Input

	ToConnectionMapOutput() ConnectionMapOutput
	ToConnectionMapOutputWithContext(context.Context) ConnectionMapOutput
}

type ConnectionMap map[string]ConnectionInput

func (ConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Connection)(nil)).Elem()
}

func (i ConnectionMap) ToConnectionMapOutput() ConnectionMapOutput {
	return i.ToConnectionMapOutputWithContext(context.Background())
}

func (i ConnectionMap) ToConnectionMapOutputWithContext(ctx context.Context) ConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMapOutput)
}

type ConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Connection)(nil)).Elem()
}

func (o ConnectionOutput) ToConnectionOutput() ConnectionOutput {
	return o
}

func (o ConnectionOutput) ToConnectionOutputWithContext(ctx context.Context) ConnectionOutput {
	return o
}

// The number of bandwidth packages associated with the cloud connection instance.
func (o ConnectionOutput) BandwidthPackageNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Connection) pulumi.IntOutput { return v.BandwidthPackageNumber }).(pulumi.IntOutput)
}

// The Description about the cloud connection.\
// The description can contain a maximum of 255 characters.
func (o ConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The Domain ID.
func (o ConnectionOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// The enterprise project id of the cloud connection.\
// Value 0 indicates the default enterprise project.
func (o ConnectionOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// The number of inter-domain bandwidths associated with the cloud connection instance.
func (o ConnectionOutput) InterRegionBandwidthNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Connection) pulumi.IntOutput { return v.InterRegionBandwidthNumber }).(pulumi.IntOutput)
}

// The cloud connection name.\
// The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
// underscores (_) and dots (.).
func (o ConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of network instances associated with the cloud connection instance.
func (o ConnectionOutput) NetworkInstanceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Connection) pulumi.IntOutput { return v.NetworkInstanceNumber }).(pulumi.IntOutput)
}

// Specifies the region in which to create the resource.
// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
func (o ConnectionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The status of the cloud connection.\
// The options are as follows:
// + **ACTIVE**: Device deleted.
func (o ConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The Scenario.\
// The options are as follows:
// + **vpc**: VPCs or virtual gateways can use this cloud connection.
func (o ConnectionOutput) UsedScene() pulumi.StringOutput {
	return o.ApplyT(func(v *Connection) pulumi.StringOutput { return v.UsedScene }).(pulumi.StringOutput)
}

type ConnectionArrayOutput struct{ *pulumi.OutputState }

func (ConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Connection)(nil)).Elem()
}

func (o ConnectionArrayOutput) ToConnectionArrayOutput() ConnectionArrayOutput {
	return o
}

func (o ConnectionArrayOutput) ToConnectionArrayOutputWithContext(ctx context.Context) ConnectionArrayOutput {
	return o
}

func (o ConnectionArrayOutput) Index(i pulumi.IntInput) ConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Connection {
		return vs[0].([]*Connection)[vs[1].(int)]
	}).(ConnectionOutput)
}

type ConnectionMapOutput struct{ *pulumi.OutputState }

func (ConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Connection)(nil)).Elem()
}

func (o ConnectionMapOutput) ToConnectionMapOutput() ConnectionMapOutput {
	return o
}

func (o ConnectionMapOutput) ToConnectionMapOutputWithContext(ctx context.Context) ConnectionMapOutput {
	return o
}

func (o ConnectionMapOutput) MapIndex(k pulumi.StringInput) ConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Connection {
		return vs[0].(map[string]*Connection)[vs[1].(string)]
	}).(ConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionInput)(nil)).Elem(), &Connection{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionArrayInput)(nil)).Elem(), ConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionMapInput)(nil)).Elem(), ConnectionMap{})
	pulumi.RegisterOutputType(ConnectionOutput{})
	pulumi.RegisterOutputType(ConnectionArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMapOutput{})
}
