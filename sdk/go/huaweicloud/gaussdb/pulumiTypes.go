// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MysqlInstanceBackupStrategy struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
	// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime string `pulumi:"startTime"`
}

// MysqlInstanceBackupStrategyInput is an input type that accepts MysqlInstanceBackupStrategyArgs and MysqlInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `MysqlInstanceBackupStrategyInput` via:
//
//	MysqlInstanceBackupStrategyArgs{...}
type MysqlInstanceBackupStrategyInput interface {
	pulumi.Input

	ToMysqlInstanceBackupStrategyOutput() MysqlInstanceBackupStrategyOutput
	ToMysqlInstanceBackupStrategyOutputWithContext(context.Context) MysqlInstanceBackupStrategyOutput
}

type MysqlInstanceBackupStrategyArgs struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
	// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (MysqlInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlInstanceBackupStrategy)(nil)).Elem()
}

func (i MysqlInstanceBackupStrategyArgs) ToMysqlInstanceBackupStrategyOutput() MysqlInstanceBackupStrategyOutput {
	return i.ToMysqlInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i MysqlInstanceBackupStrategyArgs) ToMysqlInstanceBackupStrategyOutputWithContext(ctx context.Context) MysqlInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceBackupStrategyOutput)
}

func (i MysqlInstanceBackupStrategyArgs) ToMysqlInstanceBackupStrategyPtrOutput() MysqlInstanceBackupStrategyPtrOutput {
	return i.ToMysqlInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i MysqlInstanceBackupStrategyArgs) ToMysqlInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MysqlInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceBackupStrategyOutput).ToMysqlInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// MysqlInstanceBackupStrategyPtrInput is an input type that accepts MysqlInstanceBackupStrategyArgs, MysqlInstanceBackupStrategyPtr and MysqlInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `MysqlInstanceBackupStrategyPtrInput` via:
//
//	        MysqlInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type MysqlInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToMysqlInstanceBackupStrategyPtrOutput() MysqlInstanceBackupStrategyPtrOutput
	ToMysqlInstanceBackupStrategyPtrOutputWithContext(context.Context) MysqlInstanceBackupStrategyPtrOutput
}

type mysqlInstanceBackupStrategyPtrType MysqlInstanceBackupStrategyArgs

func MysqlInstanceBackupStrategyPtr(v *MysqlInstanceBackupStrategyArgs) MysqlInstanceBackupStrategyPtrInput {
	return (*mysqlInstanceBackupStrategyPtrType)(v)
}

func (*mysqlInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlInstanceBackupStrategy)(nil)).Elem()
}

func (i *mysqlInstanceBackupStrategyPtrType) ToMysqlInstanceBackupStrategyPtrOutput() MysqlInstanceBackupStrategyPtrOutput {
	return i.ToMysqlInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *mysqlInstanceBackupStrategyPtrType) ToMysqlInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MysqlInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceBackupStrategyPtrOutput)
}

type MysqlInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (MysqlInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlInstanceBackupStrategy)(nil)).Elem()
}

func (o MysqlInstanceBackupStrategyOutput) ToMysqlInstanceBackupStrategyOutput() MysqlInstanceBackupStrategyOutput {
	return o
}

func (o MysqlInstanceBackupStrategyOutput) ToMysqlInstanceBackupStrategyOutputWithContext(ctx context.Context) MysqlInstanceBackupStrategyOutput {
	return o
}

func (o MysqlInstanceBackupStrategyOutput) ToMysqlInstanceBackupStrategyPtrOutput() MysqlInstanceBackupStrategyPtrOutput {
	return o.ToMysqlInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o MysqlInstanceBackupStrategyOutput) ToMysqlInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MysqlInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlInstanceBackupStrategy) *MysqlInstanceBackupStrategy {
		return &v
	}).(MysqlInstanceBackupStrategyPtrOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o MysqlInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MysqlInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o MysqlInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type MysqlInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (MysqlInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlInstanceBackupStrategy)(nil)).Elem()
}

func (o MysqlInstanceBackupStrategyPtrOutput) ToMysqlInstanceBackupStrategyPtrOutput() MysqlInstanceBackupStrategyPtrOutput {
	return o
}

func (o MysqlInstanceBackupStrategyPtrOutput) ToMysqlInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MysqlInstanceBackupStrategyPtrOutput {
	return o
}

func (o MysqlInstanceBackupStrategyPtrOutput) Elem() MysqlInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *MysqlInstanceBackupStrategy) MysqlInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret MysqlInstanceBackupStrategy
		return ret
	}).(MysqlInstanceBackupStrategyOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o MysqlInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o MysqlInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type MysqlInstanceDatastore struct {
	// Specifies the database engine. Only "gauss-mysql" is supported now.
	Engine string `pulumi:"engine"`
	// Specifies the database version. Only "8.0" is supported now.
	Version string `pulumi:"version"`
}

// MysqlInstanceDatastoreInput is an input type that accepts MysqlInstanceDatastoreArgs and MysqlInstanceDatastoreOutput values.
// You can construct a concrete instance of `MysqlInstanceDatastoreInput` via:
//
//	MysqlInstanceDatastoreArgs{...}
type MysqlInstanceDatastoreInput interface {
	pulumi.Input

	ToMysqlInstanceDatastoreOutput() MysqlInstanceDatastoreOutput
	ToMysqlInstanceDatastoreOutputWithContext(context.Context) MysqlInstanceDatastoreOutput
}

type MysqlInstanceDatastoreArgs struct {
	// Specifies the database engine. Only "gauss-mysql" is supported now.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the database version. Only "8.0" is supported now.
	Version pulumi.StringInput `pulumi:"version"`
}

func (MysqlInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlInstanceDatastore)(nil)).Elem()
}

func (i MysqlInstanceDatastoreArgs) ToMysqlInstanceDatastoreOutput() MysqlInstanceDatastoreOutput {
	return i.ToMysqlInstanceDatastoreOutputWithContext(context.Background())
}

func (i MysqlInstanceDatastoreArgs) ToMysqlInstanceDatastoreOutputWithContext(ctx context.Context) MysqlInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceDatastoreOutput)
}

func (i MysqlInstanceDatastoreArgs) ToMysqlInstanceDatastorePtrOutput() MysqlInstanceDatastorePtrOutput {
	return i.ToMysqlInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i MysqlInstanceDatastoreArgs) ToMysqlInstanceDatastorePtrOutputWithContext(ctx context.Context) MysqlInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceDatastoreOutput).ToMysqlInstanceDatastorePtrOutputWithContext(ctx)
}

// MysqlInstanceDatastorePtrInput is an input type that accepts MysqlInstanceDatastoreArgs, MysqlInstanceDatastorePtr and MysqlInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `MysqlInstanceDatastorePtrInput` via:
//
//	        MysqlInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type MysqlInstanceDatastorePtrInput interface {
	pulumi.Input

	ToMysqlInstanceDatastorePtrOutput() MysqlInstanceDatastorePtrOutput
	ToMysqlInstanceDatastorePtrOutputWithContext(context.Context) MysqlInstanceDatastorePtrOutput
}

type mysqlInstanceDatastorePtrType MysqlInstanceDatastoreArgs

func MysqlInstanceDatastorePtr(v *MysqlInstanceDatastoreArgs) MysqlInstanceDatastorePtrInput {
	return (*mysqlInstanceDatastorePtrType)(v)
}

func (*mysqlInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlInstanceDatastore)(nil)).Elem()
}

func (i *mysqlInstanceDatastorePtrType) ToMysqlInstanceDatastorePtrOutput() MysqlInstanceDatastorePtrOutput {
	return i.ToMysqlInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *mysqlInstanceDatastorePtrType) ToMysqlInstanceDatastorePtrOutputWithContext(ctx context.Context) MysqlInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceDatastorePtrOutput)
}

type MysqlInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (MysqlInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlInstanceDatastore)(nil)).Elem()
}

func (o MysqlInstanceDatastoreOutput) ToMysqlInstanceDatastoreOutput() MysqlInstanceDatastoreOutput {
	return o
}

func (o MysqlInstanceDatastoreOutput) ToMysqlInstanceDatastoreOutputWithContext(ctx context.Context) MysqlInstanceDatastoreOutput {
	return o
}

func (o MysqlInstanceDatastoreOutput) ToMysqlInstanceDatastorePtrOutput() MysqlInstanceDatastorePtrOutput {
	return o.ToMysqlInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o MysqlInstanceDatastoreOutput) ToMysqlInstanceDatastorePtrOutputWithContext(ctx context.Context) MysqlInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MysqlInstanceDatastore) *MysqlInstanceDatastore {
		return &v
	}).(MysqlInstanceDatastorePtrOutput)
}

// Specifies the database engine. Only "gauss-mysql" is supported now.
func (o MysqlInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the database version. Only "8.0" is supported now.
func (o MysqlInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MysqlInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type MysqlInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (MysqlInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlInstanceDatastore)(nil)).Elem()
}

func (o MysqlInstanceDatastorePtrOutput) ToMysqlInstanceDatastorePtrOutput() MysqlInstanceDatastorePtrOutput {
	return o
}

func (o MysqlInstanceDatastorePtrOutput) ToMysqlInstanceDatastorePtrOutputWithContext(ctx context.Context) MysqlInstanceDatastorePtrOutput {
	return o
}

func (o MysqlInstanceDatastorePtrOutput) Elem() MysqlInstanceDatastoreOutput {
	return o.ApplyT(func(v *MysqlInstanceDatastore) MysqlInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret MysqlInstanceDatastore
		return ret
	}).(MysqlInstanceDatastoreOutput)
}

// Specifies the database engine. Only "gauss-mysql" is supported now.
func (o MysqlInstanceDatastorePtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version. Only "8.0" is supported now.
func (o MysqlInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type MysqlInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The value
	// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
	// digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateReadIp *string `pulumi:"privateReadIp"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates the node type: master or slave.
	Type *string `pulumi:"type"`
}

// MysqlInstanceNodeInput is an input type that accepts MysqlInstanceNodeArgs and MysqlInstanceNodeOutput values.
// You can construct a concrete instance of `MysqlInstanceNodeInput` via:
//
//	MysqlInstanceNodeArgs{...}
type MysqlInstanceNodeInput interface {
	pulumi.Input

	ToMysqlInstanceNodeOutput() MysqlInstanceNodeOutput
	ToMysqlInstanceNodeOutputWithContext(context.Context) MysqlInstanceNodeOutput
}

type MysqlInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The value
	// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
	// digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateReadIp pulumi.StringPtrInput `pulumi:"privateReadIp"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates the node type: master or slave.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MysqlInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlInstanceNode)(nil)).Elem()
}

func (i MysqlInstanceNodeArgs) ToMysqlInstanceNodeOutput() MysqlInstanceNodeOutput {
	return i.ToMysqlInstanceNodeOutputWithContext(context.Background())
}

func (i MysqlInstanceNodeArgs) ToMysqlInstanceNodeOutputWithContext(ctx context.Context) MysqlInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceNodeOutput)
}

// MysqlInstanceNodeArrayInput is an input type that accepts MysqlInstanceNodeArray and MysqlInstanceNodeArrayOutput values.
// You can construct a concrete instance of `MysqlInstanceNodeArrayInput` via:
//
//	MysqlInstanceNodeArray{ MysqlInstanceNodeArgs{...} }
type MysqlInstanceNodeArrayInput interface {
	pulumi.Input

	ToMysqlInstanceNodeArrayOutput() MysqlInstanceNodeArrayOutput
	ToMysqlInstanceNodeArrayOutputWithContext(context.Context) MysqlInstanceNodeArrayOutput
}

type MysqlInstanceNodeArray []MysqlInstanceNodeInput

func (MysqlInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlInstanceNode)(nil)).Elem()
}

func (i MysqlInstanceNodeArray) ToMysqlInstanceNodeArrayOutput() MysqlInstanceNodeArrayOutput {
	return i.ToMysqlInstanceNodeArrayOutputWithContext(context.Background())
}

func (i MysqlInstanceNodeArray) ToMysqlInstanceNodeArrayOutputWithContext(ctx context.Context) MysqlInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceNodeArrayOutput)
}

type MysqlInstanceNodeOutput struct{ *pulumi.OutputState }

func (MysqlInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlInstanceNode)(nil)).Elem()
}

func (o MysqlInstanceNodeOutput) ToMysqlInstanceNodeOutput() MysqlInstanceNodeOutput {
	return o
}

func (o MysqlInstanceNodeOutput) ToMysqlInstanceNodeOutputWithContext(ctx context.Context) MysqlInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o MysqlInstanceNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlInstanceNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Indicates the node ID.
func (o MysqlInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the instance name, which can be the same as an existing instance name. The value
// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
// digits, hyphens (-), and underscores (_).
func (o MysqlInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o MysqlInstanceNodeOutput) PrivateReadIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlInstanceNode) *string { return v.PrivateReadIp }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o MysqlInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates the node type: master or slave.
func (o MysqlInstanceNodeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MysqlInstanceNode) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MysqlInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (MysqlInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlInstanceNode)(nil)).Elem()
}

func (o MysqlInstanceNodeArrayOutput) ToMysqlInstanceNodeArrayOutput() MysqlInstanceNodeArrayOutput {
	return o
}

func (o MysqlInstanceNodeArrayOutput) ToMysqlInstanceNodeArrayOutputWithContext(ctx context.Context) MysqlInstanceNodeArrayOutput {
	return o
}

func (o MysqlInstanceNodeArrayOutput) Index(i pulumi.IntInput) MysqlInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MysqlInstanceNode {
		return vs[0].([]MysqlInstanceNode)[vs[1].(int)]
	}).(MysqlInstanceNodeOutput)
}

type GetMysqlFlavorsFlavor struct {
	// Indicates the flavor status in each availability zone.
	AzStatus map[string]string `pulumi:"azStatus"`
	// Indicates the memory size in GB.
	Memory string `pulumi:"memory"`
	// Indicates the database mode.
	Mode string `pulumi:"mode"`
	// The name of the gaussdb mysql flavor.
	Name string `pulumi:"name"`
	// Indicates the arch type of the flavor.
	Type string `pulumi:"type"`
	// Indicates the CPU size.
	Vcpus string `pulumi:"vcpus"`
	// Specifies the database version. Only "8.0" is supported now.
	Version string `pulumi:"version"`
}

// GetMysqlFlavorsFlavorInput is an input type that accepts GetMysqlFlavorsFlavorArgs and GetMysqlFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetMysqlFlavorsFlavorInput` via:
//
//	GetMysqlFlavorsFlavorArgs{...}
type GetMysqlFlavorsFlavorInput interface {
	pulumi.Input

	ToGetMysqlFlavorsFlavorOutput() GetMysqlFlavorsFlavorOutput
	ToGetMysqlFlavorsFlavorOutputWithContext(context.Context) GetMysqlFlavorsFlavorOutput
}

type GetMysqlFlavorsFlavorArgs struct {
	// Indicates the flavor status in each availability zone.
	AzStatus pulumi.StringMapInput `pulumi:"azStatus"`
	// Indicates the memory size in GB.
	Memory pulumi.StringInput `pulumi:"memory"`
	// Indicates the database mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the gaussdb mysql flavor.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the arch type of the flavor.
	Type pulumi.StringInput `pulumi:"type"`
	// Indicates the CPU size.
	Vcpus pulumi.StringInput `pulumi:"vcpus"`
	// Specifies the database version. Only "8.0" is supported now.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMysqlFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlFlavorsFlavor)(nil)).Elem()
}

func (i GetMysqlFlavorsFlavorArgs) ToGetMysqlFlavorsFlavorOutput() GetMysqlFlavorsFlavorOutput {
	return i.ToGetMysqlFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetMysqlFlavorsFlavorArgs) ToGetMysqlFlavorsFlavorOutputWithContext(ctx context.Context) GetMysqlFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlFlavorsFlavorOutput)
}

// GetMysqlFlavorsFlavorArrayInput is an input type that accepts GetMysqlFlavorsFlavorArray and GetMysqlFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetMysqlFlavorsFlavorArrayInput` via:
//
//	GetMysqlFlavorsFlavorArray{ GetMysqlFlavorsFlavorArgs{...} }
type GetMysqlFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetMysqlFlavorsFlavorArrayOutput() GetMysqlFlavorsFlavorArrayOutput
	ToGetMysqlFlavorsFlavorArrayOutputWithContext(context.Context) GetMysqlFlavorsFlavorArrayOutput
}

type GetMysqlFlavorsFlavorArray []GetMysqlFlavorsFlavorInput

func (GetMysqlFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlFlavorsFlavor)(nil)).Elem()
}

func (i GetMysqlFlavorsFlavorArray) ToGetMysqlFlavorsFlavorArrayOutput() GetMysqlFlavorsFlavorArrayOutput {
	return i.ToGetMysqlFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetMysqlFlavorsFlavorArray) ToGetMysqlFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetMysqlFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlFlavorsFlavorArrayOutput)
}

type GetMysqlFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetMysqlFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlFlavorsFlavor)(nil)).Elem()
}

func (o GetMysqlFlavorsFlavorOutput) ToGetMysqlFlavorsFlavorOutput() GetMysqlFlavorsFlavorOutput {
	return o
}

func (o GetMysqlFlavorsFlavorOutput) ToGetMysqlFlavorsFlavorOutputWithContext(ctx context.Context) GetMysqlFlavorsFlavorOutput {
	return o
}

// Indicates the flavor status in each availability zone.
func (o GetMysqlFlavorsFlavorOutput) AzStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) map[string]string { return v.AzStatus }).(pulumi.StringMapOutput)
}

// Indicates the memory size in GB.
func (o GetMysqlFlavorsFlavorOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) string { return v.Memory }).(pulumi.StringOutput)
}

// Indicates the database mode.
func (o GetMysqlFlavorsFlavorOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the gaussdb mysql flavor.
func (o GetMysqlFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the arch type of the flavor.
func (o GetMysqlFlavorsFlavorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) string { return v.Type }).(pulumi.StringOutput)
}

// Indicates the CPU size.
func (o GetMysqlFlavorsFlavorOutput) Vcpus() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) string { return v.Vcpus }).(pulumi.StringOutput)
}

// Specifies the database version. Only "8.0" is supported now.
func (o GetMysqlFlavorsFlavorOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlFlavorsFlavor) string { return v.Version }).(pulumi.StringOutput)
}

type GetMysqlFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlFlavorsFlavor)(nil)).Elem()
}

func (o GetMysqlFlavorsFlavorArrayOutput) ToGetMysqlFlavorsFlavorArrayOutput() GetMysqlFlavorsFlavorArrayOutput {
	return o
}

func (o GetMysqlFlavorsFlavorArrayOutput) ToGetMysqlFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetMysqlFlavorsFlavorArrayOutput {
	return o
}

func (o GetMysqlFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetMysqlFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlFlavorsFlavor {
		return vs[0].([]GetMysqlFlavorsFlavor)[vs[1].(int)]
	}).(GetMysqlFlavorsFlavorOutput)
}

type GetMysqlInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetMysqlInstanceBackupStrategyInput is an input type that accepts GetMysqlInstanceBackupStrategyArgs and GetMysqlInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetMysqlInstanceBackupStrategyInput` via:
//
//	GetMysqlInstanceBackupStrategyArgs{...}
type GetMysqlInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetMysqlInstanceBackupStrategyOutput() GetMysqlInstanceBackupStrategyOutput
	ToGetMysqlInstanceBackupStrategyOutputWithContext(context.Context) GetMysqlInstanceBackupStrategyOutput
}

type GetMysqlInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetMysqlInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstanceBackupStrategy)(nil)).Elem()
}

func (i GetMysqlInstanceBackupStrategyArgs) ToGetMysqlInstanceBackupStrategyOutput() GetMysqlInstanceBackupStrategyOutput {
	return i.ToGetMysqlInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetMysqlInstanceBackupStrategyArgs) ToGetMysqlInstanceBackupStrategyOutputWithContext(ctx context.Context) GetMysqlInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstanceBackupStrategyOutput)
}

// GetMysqlInstanceBackupStrategyArrayInput is an input type that accepts GetMysqlInstanceBackupStrategyArray and GetMysqlInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstanceBackupStrategyArrayInput` via:
//
//	GetMysqlInstanceBackupStrategyArray{ GetMysqlInstanceBackupStrategyArgs{...} }
type GetMysqlInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetMysqlInstanceBackupStrategyArrayOutput() GetMysqlInstanceBackupStrategyArrayOutput
	ToGetMysqlInstanceBackupStrategyArrayOutputWithContext(context.Context) GetMysqlInstanceBackupStrategyArrayOutput
}

type GetMysqlInstanceBackupStrategyArray []GetMysqlInstanceBackupStrategyInput

func (GetMysqlInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstanceBackupStrategy)(nil)).Elem()
}

func (i GetMysqlInstanceBackupStrategyArray) ToGetMysqlInstanceBackupStrategyArrayOutput() GetMysqlInstanceBackupStrategyArrayOutput {
	return i.ToGetMysqlInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstanceBackupStrategyArray) ToGetMysqlInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetMysqlInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstanceBackupStrategyArrayOutput)
}

type GetMysqlInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetMysqlInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstanceBackupStrategy)(nil)).Elem()
}

func (o GetMysqlInstanceBackupStrategyOutput) ToGetMysqlInstanceBackupStrategyOutput() GetMysqlInstanceBackupStrategyOutput {
	return o
}

func (o GetMysqlInstanceBackupStrategyOutput) ToGetMysqlInstanceBackupStrategyOutputWithContext(ctx context.Context) GetMysqlInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetMysqlInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetMysqlInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetMysqlInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstanceBackupStrategy)(nil)).Elem()
}

func (o GetMysqlInstanceBackupStrategyArrayOutput) ToGetMysqlInstanceBackupStrategyArrayOutput() GetMysqlInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetMysqlInstanceBackupStrategyArrayOutput) ToGetMysqlInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetMysqlInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetMysqlInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetMysqlInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstanceBackupStrategy {
		return vs[0].([]GetMysqlInstanceBackupStrategy)[vs[1].(int)]
	}).(GetMysqlInstanceBackupStrategyOutput)
}

type GetMysqlInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetMysqlInstanceDatastoreInput is an input type that accepts GetMysqlInstanceDatastoreArgs and GetMysqlInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetMysqlInstanceDatastoreInput` via:
//
//	GetMysqlInstanceDatastoreArgs{...}
type GetMysqlInstanceDatastoreInput interface {
	pulumi.Input

	ToGetMysqlInstanceDatastoreOutput() GetMysqlInstanceDatastoreOutput
	ToGetMysqlInstanceDatastoreOutputWithContext(context.Context) GetMysqlInstanceDatastoreOutput
}

type GetMysqlInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMysqlInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstanceDatastore)(nil)).Elem()
}

func (i GetMysqlInstanceDatastoreArgs) ToGetMysqlInstanceDatastoreOutput() GetMysqlInstanceDatastoreOutput {
	return i.ToGetMysqlInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetMysqlInstanceDatastoreArgs) ToGetMysqlInstanceDatastoreOutputWithContext(ctx context.Context) GetMysqlInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstanceDatastoreOutput)
}

// GetMysqlInstanceDatastoreArrayInput is an input type that accepts GetMysqlInstanceDatastoreArray and GetMysqlInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstanceDatastoreArrayInput` via:
//
//	GetMysqlInstanceDatastoreArray{ GetMysqlInstanceDatastoreArgs{...} }
type GetMysqlInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetMysqlInstanceDatastoreArrayOutput() GetMysqlInstanceDatastoreArrayOutput
	ToGetMysqlInstanceDatastoreArrayOutputWithContext(context.Context) GetMysqlInstanceDatastoreArrayOutput
}

type GetMysqlInstanceDatastoreArray []GetMysqlInstanceDatastoreInput

func (GetMysqlInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstanceDatastore)(nil)).Elem()
}

func (i GetMysqlInstanceDatastoreArray) ToGetMysqlInstanceDatastoreArrayOutput() GetMysqlInstanceDatastoreArrayOutput {
	return i.ToGetMysqlInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstanceDatastoreArray) ToGetMysqlInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetMysqlInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstanceDatastoreArrayOutput)
}

type GetMysqlInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetMysqlInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstanceDatastore)(nil)).Elem()
}

func (o GetMysqlInstanceDatastoreOutput) ToGetMysqlInstanceDatastoreOutput() GetMysqlInstanceDatastoreOutput {
	return o
}

func (o GetMysqlInstanceDatastoreOutput) ToGetMysqlInstanceDatastoreOutputWithContext(ctx context.Context) GetMysqlInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetMysqlInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetMysqlInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetMysqlInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstanceDatastore)(nil)).Elem()
}

func (o GetMysqlInstanceDatastoreArrayOutput) ToGetMysqlInstanceDatastoreArrayOutput() GetMysqlInstanceDatastoreArrayOutput {
	return o
}

func (o GetMysqlInstanceDatastoreArrayOutput) ToGetMysqlInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetMysqlInstanceDatastoreArrayOutput {
	return o
}

func (o GetMysqlInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetMysqlInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstanceDatastore {
		return vs[0].([]GetMysqlInstanceDatastore)[vs[1].(int)]
	}).(GetMysqlInstanceDatastoreOutput)
}

type GetMysqlInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateReadIp string `pulumi:"privateReadIp"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Indicates the node type: master or slave.
	Type string `pulumi:"type"`
}

// GetMysqlInstanceNodeInput is an input type that accepts GetMysqlInstanceNodeArgs and GetMysqlInstanceNodeOutput values.
// You can construct a concrete instance of `GetMysqlInstanceNodeInput` via:
//
//	GetMysqlInstanceNodeArgs{...}
type GetMysqlInstanceNodeInput interface {
	pulumi.Input

	ToGetMysqlInstanceNodeOutput() GetMysqlInstanceNodeOutput
	ToGetMysqlInstanceNodeOutputWithContext(context.Context) GetMysqlInstanceNodeOutput
}

type GetMysqlInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateReadIp pulumi.StringInput `pulumi:"privateReadIp"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicates the node type: master or slave.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMysqlInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstanceNode)(nil)).Elem()
}

func (i GetMysqlInstanceNodeArgs) ToGetMysqlInstanceNodeOutput() GetMysqlInstanceNodeOutput {
	return i.ToGetMysqlInstanceNodeOutputWithContext(context.Background())
}

func (i GetMysqlInstanceNodeArgs) ToGetMysqlInstanceNodeOutputWithContext(ctx context.Context) GetMysqlInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstanceNodeOutput)
}

// GetMysqlInstanceNodeArrayInput is an input type that accepts GetMysqlInstanceNodeArray and GetMysqlInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstanceNodeArrayInput` via:
//
//	GetMysqlInstanceNodeArray{ GetMysqlInstanceNodeArgs{...} }
type GetMysqlInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetMysqlInstanceNodeArrayOutput() GetMysqlInstanceNodeArrayOutput
	ToGetMysqlInstanceNodeArrayOutputWithContext(context.Context) GetMysqlInstanceNodeArrayOutput
}

type GetMysqlInstanceNodeArray []GetMysqlInstanceNodeInput

func (GetMysqlInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstanceNode)(nil)).Elem()
}

func (i GetMysqlInstanceNodeArray) ToGetMysqlInstanceNodeArrayOutput() GetMysqlInstanceNodeArrayOutput {
	return i.ToGetMysqlInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstanceNodeArray) ToGetMysqlInstanceNodeArrayOutputWithContext(ctx context.Context) GetMysqlInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstanceNodeArrayOutput)
}

type GetMysqlInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetMysqlInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstanceNode)(nil)).Elem()
}

func (o GetMysqlInstanceNodeOutput) ToGetMysqlInstanceNodeOutput() GetMysqlInstanceNodeOutput {
	return o
}

func (o GetMysqlInstanceNodeOutput) ToGetMysqlInstanceNodeOutputWithContext(ctx context.Context) GetMysqlInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetMysqlInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetMysqlInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetMysqlInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the private IP address of a node.
func (o GetMysqlInstanceNodeOutput) PrivateReadIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceNode) string { return v.PrivateReadIp }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetMysqlInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

// Indicates the node type: master or slave.
func (o GetMysqlInstanceNodeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstanceNode) string { return v.Type }).(pulumi.StringOutput)
}

type GetMysqlInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstanceNode)(nil)).Elem()
}

func (o GetMysqlInstanceNodeArrayOutput) ToGetMysqlInstanceNodeArrayOutput() GetMysqlInstanceNodeArrayOutput {
	return o
}

func (o GetMysqlInstanceNodeArrayOutput) ToGetMysqlInstanceNodeArrayOutputWithContext(ctx context.Context) GetMysqlInstanceNodeArrayOutput {
	return o
}

func (o GetMysqlInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetMysqlInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstanceNode {
		return vs[0].([]GetMysqlInstanceNode)[vs[1].(int)]
	}).(GetMysqlInstanceNodeOutput)
}

type GetMysqlInstancesInstance struct {
	// Indicates the availability zone mode: "single" or "multi".
	AvailabilityZoneMode string `pulumi:"availabilityZoneMode"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies []GetMysqlInstancesInstanceBackupStrategy `pulumi:"backupStrategies"`
	// Indicates the configuration ID.
	ConfigurationId string `pulumi:"configurationId"`
	// Indicates the database information. Structure is documented below.
	Datastores []GetMysqlInstancesInstanceDatastore `pulumi:"datastores"`
	// Indicates the default username.
	DbUserName string `pulumi:"dbUserName"`
	// Indicates the enterprise project id.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// Indicates the instance specifications.
	Flavor string `pulumi:"flavor"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Indicates the availability zone where the master node resides.
	MasterAvailabilityZone string `pulumi:"masterAvailabilityZone"`
	// Indicates the instance mode.
	Mode string `pulumi:"mode"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []GetMysqlInstancesInstanceNode `pulumi:"nodes"`
	// Indicates the database port.
	Port int `pulumi:"port"`
	// Indicates the private IP address of the DB instance.
	PrivateWriteIp string `pulumi:"privateWriteIp"`
	// Indicates the count of read replicas.
	ReadReplicas int `pulumi:"readReplicas"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region string `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId string `pulumi:"subnetId"`
	// Indicates the time zone.
	TimeZone string `pulumi:"timeZone"`
	// Specifies the VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// GetMysqlInstancesInstanceInput is an input type that accepts GetMysqlInstancesInstanceArgs and GetMysqlInstancesInstanceOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceInput` via:
//
//	GetMysqlInstancesInstanceArgs{...}
type GetMysqlInstancesInstanceInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceOutput() GetMysqlInstancesInstanceOutput
	ToGetMysqlInstancesInstanceOutputWithContext(context.Context) GetMysqlInstancesInstanceOutput
}

type GetMysqlInstancesInstanceArgs struct {
	// Indicates the availability zone mode: "single" or "multi".
	AvailabilityZoneMode pulumi.StringInput `pulumi:"availabilityZoneMode"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies GetMysqlInstancesInstanceBackupStrategyArrayInput `pulumi:"backupStrategies"`
	// Indicates the configuration ID.
	ConfigurationId pulumi.StringInput `pulumi:"configurationId"`
	// Indicates the database information. Structure is documented below.
	Datastores GetMysqlInstancesInstanceDatastoreArrayInput `pulumi:"datastores"`
	// Indicates the default username.
	DbUserName pulumi.StringInput `pulumi:"dbUserName"`
	// Indicates the enterprise project id.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// Indicates the instance specifications.
	Flavor pulumi.StringInput `pulumi:"flavor"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates the availability zone where the master node resides.
	MasterAvailabilityZone pulumi.StringInput `pulumi:"masterAvailabilityZone"`
	// Indicates the instance mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes GetMysqlInstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Indicates the database port.
	Port pulumi.IntInput `pulumi:"port"`
	// Indicates the private IP address of the DB instance.
	PrivateWriteIp pulumi.StringInput `pulumi:"privateWriteIp"`
	// Indicates the count of read replicas.
	ReadReplicas pulumi.IntInput `pulumi:"readReplicas"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringInput `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Indicates the time zone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// Specifies the VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetMysqlInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstance)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceArgs) ToGetMysqlInstancesInstanceOutput() GetMysqlInstancesInstanceOutput {
	return i.ToGetMysqlInstancesInstanceOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceArgs) ToGetMysqlInstancesInstanceOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceOutput)
}

// GetMysqlInstancesInstanceArrayInput is an input type that accepts GetMysqlInstancesInstanceArray and GetMysqlInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceArrayInput` via:
//
//	GetMysqlInstancesInstanceArray{ GetMysqlInstancesInstanceArgs{...} }
type GetMysqlInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceArrayOutput() GetMysqlInstancesInstanceArrayOutput
	ToGetMysqlInstancesInstanceArrayOutputWithContext(context.Context) GetMysqlInstancesInstanceArrayOutput
}

type GetMysqlInstancesInstanceArray []GetMysqlInstancesInstanceInput

func (GetMysqlInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstance)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceArray) ToGetMysqlInstancesInstanceArrayOutput() GetMysqlInstancesInstanceArrayOutput {
	return i.ToGetMysqlInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceArray) ToGetMysqlInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceArrayOutput)
}

type GetMysqlInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstance)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceOutput) ToGetMysqlInstancesInstanceOutput() GetMysqlInstancesInstanceOutput {
	return o
}

func (o GetMysqlInstancesInstanceOutput) ToGetMysqlInstancesInstanceOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceOutput {
	return o
}

// Indicates the availability zone mode: "single" or "multi".
func (o GetMysqlInstancesInstanceOutput) AvailabilityZoneMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.AvailabilityZoneMode }).(pulumi.StringOutput)
}

// Indicates the advanced backup policy. Structure is documented below.
func (o GetMysqlInstancesInstanceOutput) BackupStrategies() GetMysqlInstancesInstanceBackupStrategyArrayOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) []GetMysqlInstancesInstanceBackupStrategy { return v.BackupStrategies }).(GetMysqlInstancesInstanceBackupStrategyArrayOutput)
}

// Indicates the configuration ID.
func (o GetMysqlInstancesInstanceOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Indicates the database information. Structure is documented below.
func (o GetMysqlInstancesInstanceOutput) Datastores() GetMysqlInstancesInstanceDatastoreArrayOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) []GetMysqlInstancesInstanceDatastore { return v.Datastores }).(GetMysqlInstancesInstanceDatastoreArrayOutput)
}

// Indicates the default username.
func (o GetMysqlInstancesInstanceOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.DbUserName }).(pulumi.StringOutput)
}

// Indicates the enterprise project id.
func (o GetMysqlInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates the instance specifications.
func (o GetMysqlInstancesInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.Flavor }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetMysqlInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates the availability zone where the master node resides.
func (o GetMysqlInstancesInstanceOutput) MasterAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.MasterAvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the instance mode.
func (o GetMysqlInstancesInstanceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.Mode }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetMysqlInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o GetMysqlInstancesInstanceOutput) Nodes() GetMysqlInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) []GetMysqlInstancesInstanceNode { return v.Nodes }).(GetMysqlInstancesInstanceNodeArrayOutput)
}

// Indicates the database port.
func (o GetMysqlInstancesInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) int { return v.Port }).(pulumi.IntOutput)
}

// Indicates the private IP address of the DB instance.
func (o GetMysqlInstancesInstanceOutput) PrivateWriteIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.PrivateWriteIp }).(pulumi.StringOutput)
}

// Indicates the count of read replicas.
func (o GetMysqlInstancesInstanceOutput) ReadReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) int { return v.ReadReplicas }).(pulumi.IntOutput)
}

// The region in which to obtain the instances. If omitted, the provider-level region will
// be used.
func (o GetMysqlInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the security group ID.
func (o GetMysqlInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetMysqlInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of a subnet.
func (o GetMysqlInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the time zone.
func (o GetMysqlInstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

// Specifies the VPC ID.
func (o GetMysqlInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetMysqlInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstance)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceArrayOutput) ToGetMysqlInstancesInstanceArrayOutput() GetMysqlInstancesInstanceArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceArrayOutput) ToGetMysqlInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetMysqlInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstancesInstance {
		return vs[0].([]GetMysqlInstancesInstance)[vs[1].(int)]
	}).(GetMysqlInstancesInstanceOutput)
}

type GetMysqlInstancesInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetMysqlInstancesInstanceBackupStrategyInput is an input type that accepts GetMysqlInstancesInstanceBackupStrategyArgs and GetMysqlInstancesInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceBackupStrategyInput` via:
//
//	GetMysqlInstancesInstanceBackupStrategyArgs{...}
type GetMysqlInstancesInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceBackupStrategyOutput() GetMysqlInstancesInstanceBackupStrategyOutput
	ToGetMysqlInstancesInstanceBackupStrategyOutputWithContext(context.Context) GetMysqlInstancesInstanceBackupStrategyOutput
}

type GetMysqlInstancesInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetMysqlInstancesInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceBackupStrategyArgs) ToGetMysqlInstancesInstanceBackupStrategyOutput() GetMysqlInstancesInstanceBackupStrategyOutput {
	return i.ToGetMysqlInstancesInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceBackupStrategyArgs) ToGetMysqlInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceBackupStrategyOutput)
}

// GetMysqlInstancesInstanceBackupStrategyArrayInput is an input type that accepts GetMysqlInstancesInstanceBackupStrategyArray and GetMysqlInstancesInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceBackupStrategyArrayInput` via:
//
//	GetMysqlInstancesInstanceBackupStrategyArray{ GetMysqlInstancesInstanceBackupStrategyArgs{...} }
type GetMysqlInstancesInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceBackupStrategyArrayOutput() GetMysqlInstancesInstanceBackupStrategyArrayOutput
	ToGetMysqlInstancesInstanceBackupStrategyArrayOutputWithContext(context.Context) GetMysqlInstancesInstanceBackupStrategyArrayOutput
}

type GetMysqlInstancesInstanceBackupStrategyArray []GetMysqlInstancesInstanceBackupStrategyInput

func (GetMysqlInstancesInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceBackupStrategyArray) ToGetMysqlInstancesInstanceBackupStrategyArrayOutput() GetMysqlInstancesInstanceBackupStrategyArrayOutput {
	return i.ToGetMysqlInstancesInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceBackupStrategyArray) ToGetMysqlInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceBackupStrategyArrayOutput)
}

type GetMysqlInstancesInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceBackupStrategyOutput) ToGetMysqlInstancesInstanceBackupStrategyOutput() GetMysqlInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetMysqlInstancesInstanceBackupStrategyOutput) ToGetMysqlInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetMysqlInstancesInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetMysqlInstancesInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetMysqlInstancesInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceBackupStrategyArrayOutput) ToGetMysqlInstancesInstanceBackupStrategyArrayOutput() GetMysqlInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceBackupStrategyArrayOutput) ToGetMysqlInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetMysqlInstancesInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstancesInstanceBackupStrategy {
		return vs[0].([]GetMysqlInstancesInstanceBackupStrategy)[vs[1].(int)]
	}).(GetMysqlInstancesInstanceBackupStrategyOutput)
}

type GetMysqlInstancesInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetMysqlInstancesInstanceDatastoreInput is an input type that accepts GetMysqlInstancesInstanceDatastoreArgs and GetMysqlInstancesInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceDatastoreInput` via:
//
//	GetMysqlInstancesInstanceDatastoreArgs{...}
type GetMysqlInstancesInstanceDatastoreInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceDatastoreOutput() GetMysqlInstancesInstanceDatastoreOutput
	ToGetMysqlInstancesInstanceDatastoreOutputWithContext(context.Context) GetMysqlInstancesInstanceDatastoreOutput
}

type GetMysqlInstancesInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetMysqlInstancesInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstanceDatastore)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceDatastoreArgs) ToGetMysqlInstancesInstanceDatastoreOutput() GetMysqlInstancesInstanceDatastoreOutput {
	return i.ToGetMysqlInstancesInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceDatastoreArgs) ToGetMysqlInstancesInstanceDatastoreOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceDatastoreOutput)
}

// GetMysqlInstancesInstanceDatastoreArrayInput is an input type that accepts GetMysqlInstancesInstanceDatastoreArray and GetMysqlInstancesInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceDatastoreArrayInput` via:
//
//	GetMysqlInstancesInstanceDatastoreArray{ GetMysqlInstancesInstanceDatastoreArgs{...} }
type GetMysqlInstancesInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceDatastoreArrayOutput() GetMysqlInstancesInstanceDatastoreArrayOutput
	ToGetMysqlInstancesInstanceDatastoreArrayOutputWithContext(context.Context) GetMysqlInstancesInstanceDatastoreArrayOutput
}

type GetMysqlInstancesInstanceDatastoreArray []GetMysqlInstancesInstanceDatastoreInput

func (GetMysqlInstancesInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstanceDatastore)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceDatastoreArray) ToGetMysqlInstancesInstanceDatastoreArrayOutput() GetMysqlInstancesInstanceDatastoreArrayOutput {
	return i.ToGetMysqlInstancesInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceDatastoreArray) ToGetMysqlInstancesInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceDatastoreArrayOutput)
}

type GetMysqlInstancesInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstanceDatastore)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceDatastoreOutput) ToGetMysqlInstancesInstanceDatastoreOutput() GetMysqlInstancesInstanceDatastoreOutput {
	return o
}

func (o GetMysqlInstancesInstanceDatastoreOutput) ToGetMysqlInstancesInstanceDatastoreOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetMysqlInstancesInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetMysqlInstancesInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetMysqlInstancesInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstanceDatastore)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceDatastoreArrayOutput) ToGetMysqlInstancesInstanceDatastoreArrayOutput() GetMysqlInstancesInstanceDatastoreArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceDatastoreArrayOutput) ToGetMysqlInstancesInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceDatastoreArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetMysqlInstancesInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstancesInstanceDatastore {
		return vs[0].([]GetMysqlInstancesInstanceDatastore)[vs[1].(int)]
	}).(GetMysqlInstancesInstanceDatastoreOutput)
}

type GetMysqlInstancesInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateReadIp string `pulumi:"privateReadIp"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Indicates the node type: master or slave.
	Type string `pulumi:"type"`
}

// GetMysqlInstancesInstanceNodeInput is an input type that accepts GetMysqlInstancesInstanceNodeArgs and GetMysqlInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceNodeInput` via:
//
//	GetMysqlInstancesInstanceNodeArgs{...}
type GetMysqlInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceNodeOutput() GetMysqlInstancesInstanceNodeOutput
	ToGetMysqlInstancesInstanceNodeOutputWithContext(context.Context) GetMysqlInstancesInstanceNodeOutput
}

type GetMysqlInstancesInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateReadIp pulumi.StringInput `pulumi:"privateReadIp"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicates the node type: master or slave.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMysqlInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstanceNode)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceNodeArgs) ToGetMysqlInstancesInstanceNodeOutput() GetMysqlInstancesInstanceNodeOutput {
	return i.ToGetMysqlInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceNodeArgs) ToGetMysqlInstancesInstanceNodeOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceNodeOutput)
}

// GetMysqlInstancesInstanceNodeArrayInput is an input type that accepts GetMysqlInstancesInstanceNodeArray and GetMysqlInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetMysqlInstancesInstanceNodeArrayInput` via:
//
//	GetMysqlInstancesInstanceNodeArray{ GetMysqlInstancesInstanceNodeArgs{...} }
type GetMysqlInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetMysqlInstancesInstanceNodeArrayOutput() GetMysqlInstancesInstanceNodeArrayOutput
	ToGetMysqlInstancesInstanceNodeArrayOutputWithContext(context.Context) GetMysqlInstancesInstanceNodeArrayOutput
}

type GetMysqlInstancesInstanceNodeArray []GetMysqlInstancesInstanceNodeInput

func (GetMysqlInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstanceNode)(nil)).Elem()
}

func (i GetMysqlInstancesInstanceNodeArray) ToGetMysqlInstancesInstanceNodeArrayOutput() GetMysqlInstancesInstanceNodeArrayOutput {
	return i.ToGetMysqlInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetMysqlInstancesInstanceNodeArray) ToGetMysqlInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMysqlInstancesInstanceNodeArrayOutput)
}

type GetMysqlInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesInstanceNode)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceNodeOutput) ToGetMysqlInstancesInstanceNodeOutput() GetMysqlInstancesInstanceNodeOutput {
	return o
}

func (o GetMysqlInstancesInstanceNodeOutput) ToGetMysqlInstancesInstanceNodeOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetMysqlInstancesInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetMysqlInstancesInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetMysqlInstancesInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the private IP address of a node.
func (o GetMysqlInstancesInstanceNodeOutput) PrivateReadIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceNode) string { return v.PrivateReadIp }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetMysqlInstancesInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

// Indicates the node type: master or slave.
func (o GetMysqlInstancesInstanceNodeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesInstanceNode) string { return v.Type }).(pulumi.StringOutput)
}

type GetMysqlInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMysqlInstancesInstanceNode)(nil)).Elem()
}

func (o GetMysqlInstancesInstanceNodeArrayOutput) ToGetMysqlInstancesInstanceNodeArrayOutput() GetMysqlInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceNodeArrayOutput) ToGetMysqlInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetMysqlInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetMysqlInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetMysqlInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMysqlInstancesInstanceNode {
		return vs[0].([]GetMysqlInstancesInstanceNode)[vs[1].(int)]
	}).(GetMysqlInstancesInstanceNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceBackupStrategyInput)(nil)).Elem(), MysqlInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceBackupStrategyPtrInput)(nil)).Elem(), MysqlInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceDatastoreInput)(nil)).Elem(), MysqlInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceDatastorePtrInput)(nil)).Elem(), MysqlInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceNodeInput)(nil)).Elem(), MysqlInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceNodeArrayInput)(nil)).Elem(), MysqlInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlFlavorsFlavorInput)(nil)).Elem(), GetMysqlFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlFlavorsFlavorArrayInput)(nil)).Elem(), GetMysqlFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstanceBackupStrategyInput)(nil)).Elem(), GetMysqlInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstanceBackupStrategyArrayInput)(nil)).Elem(), GetMysqlInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstanceDatastoreInput)(nil)).Elem(), GetMysqlInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstanceDatastoreArrayInput)(nil)).Elem(), GetMysqlInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstanceNodeInput)(nil)).Elem(), GetMysqlInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstanceNodeArrayInput)(nil)).Elem(), GetMysqlInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceInput)(nil)).Elem(), GetMysqlInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceArrayInput)(nil)).Elem(), GetMysqlInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceBackupStrategyInput)(nil)).Elem(), GetMysqlInstancesInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceBackupStrategyArrayInput)(nil)).Elem(), GetMysqlInstancesInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceDatastoreInput)(nil)).Elem(), GetMysqlInstancesInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceDatastoreArrayInput)(nil)).Elem(), GetMysqlInstancesInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceNodeInput)(nil)).Elem(), GetMysqlInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMysqlInstancesInstanceNodeArrayInput)(nil)).Elem(), GetMysqlInstancesInstanceNodeArray{})
	pulumi.RegisterOutputType(MysqlInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(MysqlInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(MysqlInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(MysqlInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(MysqlInstanceNodeOutput{})
	pulumi.RegisterOutputType(MysqlInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetMysqlFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetMysqlInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetMysqlInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetMysqlInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetMysqlInstancesInstanceNodeArrayOutput{})
}
