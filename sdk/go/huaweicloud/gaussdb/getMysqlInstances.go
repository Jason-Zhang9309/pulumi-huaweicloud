// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list all available HuaweiCloud gaussdb mysql instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDB"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDB"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GaussDB.GetMysqlInstances(ctx, &gaussdb.GetMysqlInstancesArgs{
//				Name: pulumi.StringRef("gaussdb-instance"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMysqlInstances(ctx *pulumi.Context, args *GetMysqlInstancesArgs, opts ...pulumi.InvokeOption) (*GetMysqlInstancesResult, error) {
	var rv GetMysqlInstancesResult
	err := ctx.Invoke("huaweicloud:GaussDB/getMysqlInstances:getMysqlInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMysqlInstances.
type GetMysqlInstancesArgs struct {
	// Specifies the name of the instance.
	Name *string `pulumi:"name"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region *string `pulumi:"region"`
	// Specifies the network ID of a subnet.
	SubnetId *string `pulumi:"subnetId"`
	// Specifies the VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getMysqlInstances.
type GetMysqlInstancesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// An array of available instances.
	Instances []GetMysqlInstancesInstance `pulumi:"instances"`
	// Indicates the node name.
	Name *string `pulumi:"name"`
	// The region of the instance.
	Region string `pulumi:"region"`
	// Indicates the network ID of a subnet.
	SubnetId *string `pulumi:"subnetId"`
	// Indicates the VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

func GetMysqlInstancesOutput(ctx *pulumi.Context, args GetMysqlInstancesOutputArgs, opts ...pulumi.InvokeOption) GetMysqlInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMysqlInstancesResult, error) {
			args := v.(GetMysqlInstancesArgs)
			r, err := GetMysqlInstances(ctx, &args, opts...)
			var s GetMysqlInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMysqlInstancesResultOutput)
}

// A collection of arguments for invoking getMysqlInstances.
type GetMysqlInstancesOutputArgs struct {
	// Specifies the name of the instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The region in which to obtain the instances. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the network ID of a subnet.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Specifies the VPC ID.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetMysqlInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getMysqlInstances.
type GetMysqlInstancesResultOutput struct{ *pulumi.OutputState }

func (GetMysqlInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMysqlInstancesResult)(nil)).Elem()
}

func (o GetMysqlInstancesResultOutput) ToGetMysqlInstancesResultOutput() GetMysqlInstancesResultOutput {
	return o
}

func (o GetMysqlInstancesResultOutput) ToGetMysqlInstancesResultOutputWithContext(ctx context.Context) GetMysqlInstancesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetMysqlInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// An array of available instances.
func (o GetMysqlInstancesResultOutput) Instances() GetMysqlInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetMysqlInstancesResult) []GetMysqlInstancesInstance { return v.Instances }).(GetMysqlInstancesInstanceArrayOutput)
}

// Indicates the node name.
func (o GetMysqlInstancesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlInstancesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The region of the instance.
func (o GetMysqlInstancesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetMysqlInstancesResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the network ID of a subnet.
func (o GetMysqlInstancesResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlInstancesResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Indicates the VPC ID.
func (o GetMysqlInstancesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMysqlInstancesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMysqlInstancesResultOutput{})
}
