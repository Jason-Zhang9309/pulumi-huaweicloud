// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GaussDB mysql instance management within HuaweiCould.
//
// ## Example Usage
// ### create a basic instance
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDB"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GaussDB.NewMysqlInstance(ctx, "instance1", &GaussDB.MysqlInstanceArgs{
//				Password:        pulumi.Any(_var.Password),
//				Flavor:          pulumi.String("gaussdb.mysql.4xlarge.x86.4"),
//				VpcId:           pulumi.Any(_var.Vpc_id),
//				SubnetId:        pulumi.Any(_var.Subnet_id),
//				SecurityGroupId: pulumi.Any(_var.Secgroup_id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### create a gaussdb mysql instance with backup strategy
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDB"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDB"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GaussDB.NewMysqlInstance(ctx, "instance1", &GaussDB.MysqlInstanceArgs{
//				Password:        pulumi.Any(_var.Password),
//				Flavor:          pulumi.String("gaussdb.mysql.4xlarge.x86.4"),
//				VpcId:           pulumi.Any(_var.Vpc_id),
//				SubnetId:        pulumi.Any(_var.Subnet_id),
//				SecurityGroupId: pulumi.Any(_var.Secgroup_id),
//				BackupStrategy: &gaussdb.MysqlInstanceBackupStrategyArgs{
//					StartTime: pulumi.String("03:00-04:00"),
//					KeepDays:  pulumi.Int(7),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// GaussDB instance can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import huaweicloud:GaussDB/mysqlInstance:MysqlInstance test <id>
//
// ```
//
//	Note that the imported state may not be identical to your resource definition, due to the attribute missing from the API response. The missing attribute is`table_name_case_sensitivity`, `enterprise_project_id`, `password`, `ssl_option`, `encryption_type`, `kms_key_id` and `parameters`. It is generally recommended running `terraform plan` after importing a GaussDB MySQL instance. You can then decide if changes should be applied to the GaussDB MySQL instance, or the resource definition should be updated to align with the GaussDB MySQL instance. Also you can ignore changes as below. hcl resource "huaweicloud_gaussdb_mysql_instance" "test" {
//
//	...
//
//	lifecycle {
//
//	ignore_changes = [
//
//	new_node_weight, proxy_mode, readonly_nodes_weight, parameters, ssl_option, encryption_type, kms_key_id
//
//	]
//
//	} }
type MysqlInstance struct {
	pulumi.CustomResourceState

	// Specifies whether audit log is enabled. The default value is `false`.
	AuditLogEnabled pulumi.BoolOutput      `pulumi:"auditLogEnabled"`
	AutoPay         pulumi.StringPtrOutput `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**.
	AutoRenew pulumi.StringPtrOutput `pulumi:"autoRenew"`
	// Specifies the auto-scaling policies.
	// The autoScaling structure is documented below.
	AutoScaling MysqlInstanceAutoScalingOutput `pulumi:"autoScaling"`
	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode pulumi.StringPtrOutput `pulumi:"availabilityZoneMode"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy MysqlInstanceBackupStrategyOutput `pulumi:"backupStrategy"`
	// Specifies the charging mode of the instance. Valid values are **prePaid**
	// and **postPaid**, defaults to **postPaid**. Changing this will do nothing.
	ChargingMode pulumi.StringPtrOutput `pulumi:"chargingMode"`
	// Specifies the configuration ID.
	ConfigurationId pulumi.StringOutput `pulumi:"configurationId"`
	// Deprecated: Deprecated
	ConfigurationName pulumi.StringOutput `pulumi:"configurationName"`
	// Indicates the creation time in the **yyyy-mm-ddThh:mm:ssZ** format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Indicates the current database kernel version.
	CurrentKernelVersion pulumi.StringOutput `pulumi:"currentKernelVersion"`
	// Indicates the current database version.
	CurrentVersion pulumi.StringOutput `pulumi:"currentVersion"`
	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore MysqlInstanceDatastoreOutput `pulumi:"datastore"`
	// Indicates the default username.
	DbUserName pulumi.StringOutput `pulumi:"dbUserName"`
	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceId pulumi.StringOutput `pulumi:"dedicatedResourceId"`
	// Specifies the dedicated resource name. Changing this parameter
	// will create a new resource.
	DedicatedResourceName pulumi.StringOutput `pulumi:"dedicatedResourceName"`
	// Specifies the description of the instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to enable or disable encrypted backup. Value options:
	// + **ON**: enabled
	// + **OFF**: disabled
	EncryptionStatus pulumi.StringOutput `pulumi:"encryptionStatus"`
	// Specifies the encryption type. Currently, only **kms (case-insensitive)** is
	// supported. It is mandatory when `encryptionStatus` is set to **ON**.
	EncryptionType pulumi.StringPtrOutput `pulumi:"encryptionType"`
	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectId pulumi.StringPtrOutput `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications. Please use
	// `gaussdbMysqlFlavors` data source to fetch the available flavors.
	Flavor pulumi.StringOutput `pulumi:"flavor"`
	// If specified, try to import the instance instead of creating if the name already
	// existed.
	ForceImport pulumi.BoolPtrOutput `pulumi:"forceImport"`
	// Specifies the KMS ID. It is mandatory when `encryptionStatus` is set to **ON**.
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// Specifies the start time for a maintenance window, for example, **22:00**.
	MaintainBegin pulumi.StringOutput `pulumi:"maintainBegin"`
	// Specifies the end time for a maintenance window, for example, **01:00**.
	MaintainEnd pulumi.StringOutput `pulumi:"maintainEnd"`
	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone pulumi.StringOutput `pulumi:"masterAvailabilityZone"`
	// Indicates the instance mode.
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Specifies the name of the parameter.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates the instance nodes information.
	// The nodes structure is documented below.
	Nodes MysqlInstanceNodeArrayOutput `pulumi:"nodes"`
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters MysqlInstanceParameterArrayOutput `pulumi:"parameters"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
	// enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringOutput `pulumi:"password"`
	// Specifies the charging period of the instance.\
	// If `periodUnit` is set to **month** , the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	PeriodUnit pulumi.StringPtrOutput `pulumi:"periodUnit"`
	// Specifies the database port.
	Port pulumi.IntOutput `pulumi:"port"`
	// Indicates the private domain name.
	PrivateDnsName pulumi.StringOutput `pulumi:"privateDnsName"`
	// Specifies the prefix of the private domain name. The value contains
	// `8` to `63` characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix pulumi.StringOutput `pulumi:"privateDnsNamePrefix"`
	// Specifies the private IP address of the DB instance.
	PrivateWriteIp pulumi.StringOutput `pulumi:"privateWriteIp"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyAddress pulumi.StringOutput `pulumi:"proxyAddress"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyFlavor pulumi.StringOutput `pulumi:"proxyFlavor"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyNodeNum pulumi.IntOutput `pulumi:"proxyNodeNum"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyPort pulumi.IntOutput `pulumi:"proxyPort"`
	// Specifies the count of read replicas. Defaults to `1`.
	ReadReplicas pulumi.IntPtrOutput `pulumi:"readReplicas"`
	// The region in which to create the GaussDB mysql instance resource. If omitted,
	// the provider-level region will be used. Changing this creates a new instance resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled pulumi.BoolOutput `pulumi:"secondsLevelMonitoringEnabled"`
	// Specifies the seconds level collection period.
	// + This parameter is valid only when `secondsLevelMonitoringEnabled` is set to **true**.
	// + This parameter can not be specified when `secondsLevelMonitoringEnabled` is set to **false**.
	// + Value options:
	// - **1**: The collection period is 1s.
	// - **5** (default value): The collection period is 5s.
	SecondsLevelMonitoringPeriod pulumi.IntPtrOutput `pulumi:"secondsLevelMonitoringPeriod"`
	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// Specifies the slow log show original switch of the instance.
	SlowLogShowOriginalSwitch pulumi.BoolOutput `pulumi:"slowLogShowOriginalSwitch"`
	// Specifies whether sql filter is enabled. The default value is `false`.
	SqlFilterEnabled pulumi.BoolOutput `pulumi:"sqlFilterEnabled"`
	// Specifies whether to enable SSL. Value options:
	// + **true**: SSL is enabled.
	// + **false**: SSL is disabled.
	SslOption pulumi.StringPtrOutput `pulumi:"sslOption"`
	// Specifies whether auto-scaling is enabled. Value options:
	// + **ON**: enabled.
	// + **OFF**: disabled.
	Status pulumi.StringOutput `pulumi:"status"`
	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Whether the kernel table name is case sensitive. The value can
	// be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
	// creation.
	TableNameCaseSensitivity pulumi.BoolPtrOutput `pulumi:"tableNameCaseSensitivity"`
	// Specifies the key/value pairs to associate with the GaussDB Mysql instance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// Indicates the Update time in the **yyyy-mm-ddThh:mm:ssZ** format.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Indicates whether the version can be upgraded.
	UpgradeFlag pulumi.BoolOutput `pulumi:"upgradeFlag"`
	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of `10` GB. Only valid when in prePaid mode.
	VolumeSize pulumi.IntOutput `pulumi:"volumeSize"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewMysqlInstance registers a new resource with the given unique name, arguments, and options.
func NewMysqlInstance(ctx *pulumi.Context,
	name string, args *MysqlInstanceArgs, opts ...pulumi.ResourceOption) (*MysqlInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Flavor == nil {
		return nil, errors.New("invalid value for required argument 'Flavor'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource MysqlInstance
	err := ctx.RegisterResource("huaweicloud:GaussDB/mysqlInstance:MysqlInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMysqlInstance gets an existing MysqlInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMysqlInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MysqlInstanceState, opts ...pulumi.ResourceOption) (*MysqlInstance, error) {
	var resource MysqlInstance
	err := ctx.ReadResource("huaweicloud:GaussDB/mysqlInstance:MysqlInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MysqlInstance resources.
type mysqlInstanceState struct {
	// Specifies whether audit log is enabled. The default value is `false`.
	AuditLogEnabled *bool   `pulumi:"auditLogEnabled"`
	AutoPay         *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the auto-scaling policies.
	// The autoScaling structure is documented below.
	AutoScaling *MysqlInstanceAutoScaling `pulumi:"autoScaling"`
	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode *string `pulumi:"availabilityZoneMode"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *MysqlInstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of the instance. Valid values are **prePaid**
	// and **postPaid**, defaults to **postPaid**. Changing this will do nothing.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the configuration ID.
	ConfigurationId *string `pulumi:"configurationId"`
	// Deprecated: Deprecated
	ConfigurationName *string `pulumi:"configurationName"`
	// Indicates the creation time in the **yyyy-mm-ddThh:mm:ssZ** format.
	CreatedAt *string `pulumi:"createdAt"`
	// Indicates the current database kernel version.
	CurrentKernelVersion *string `pulumi:"currentKernelVersion"`
	// Indicates the current database version.
	CurrentVersion *string `pulumi:"currentVersion"`
	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore *MysqlInstanceDatastore `pulumi:"datastore"`
	// Indicates the default username.
	DbUserName *string `pulumi:"dbUserName"`
	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceId *string `pulumi:"dedicatedResourceId"`
	// Specifies the dedicated resource name. Changing this parameter
	// will create a new resource.
	DedicatedResourceName *string `pulumi:"dedicatedResourceName"`
	// Specifies the description of the instance.
	Description *string `pulumi:"description"`
	// Specifies whether to enable or disable encrypted backup. Value options:
	// + **ON**: enabled
	// + **OFF**: disabled
	EncryptionStatus *string `pulumi:"encryptionStatus"`
	// Specifies the encryption type. Currently, only **kms (case-insensitive)** is
	// supported. It is mandatory when `encryptionStatus` is set to **ON**.
	EncryptionType *string `pulumi:"encryptionType"`
	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications. Please use
	// `gaussdbMysqlFlavors` data source to fetch the available flavors.
	Flavor *string `pulumi:"flavor"`
	// If specified, try to import the instance instead of creating if the name already
	// existed.
	ForceImport *bool `pulumi:"forceImport"`
	// Specifies the KMS ID. It is mandatory when `encryptionStatus` is set to **ON**.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the start time for a maintenance window, for example, **22:00**.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Specifies the end time for a maintenance window, for example, **01:00**.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone *string `pulumi:"masterAvailabilityZone"`
	// Indicates the instance mode.
	Mode *string `pulumi:"mode"`
	// Specifies the name of the parameter.
	Name *string `pulumi:"name"`
	// Indicates the instance nodes information.
	// The nodes structure is documented below.
	Nodes []MysqlInstanceNode `pulumi:"nodes"`
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters []MysqlInstanceParameter `pulumi:"parameters"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
	// enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password *string `pulumi:"password"`
	// Specifies the charging period of the instance.\
	// If `periodUnit` is set to **month** , the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the database port.
	Port *int `pulumi:"port"`
	// Indicates the private domain name.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// Specifies the prefix of the private domain name. The value contains
	// `8` to `63` characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix *string `pulumi:"privateDnsNamePrefix"`
	// Specifies the private IP address of the DB instance.
	PrivateWriteIp *string `pulumi:"privateWriteIp"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyAddress *string `pulumi:"proxyAddress"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyFlavor *string `pulumi:"proxyFlavor"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyNodeNum *int `pulumi:"proxyNodeNum"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyPort *int `pulumi:"proxyPort"`
	// Specifies the count of read replicas. Defaults to `1`.
	ReadReplicas *int `pulumi:"readReplicas"`
	// The region in which to create the GaussDB mysql instance resource. If omitted,
	// the provider-level region will be used. Changing this creates a new instance resource.
	Region *string `pulumi:"region"`
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled *bool `pulumi:"secondsLevelMonitoringEnabled"`
	// Specifies the seconds level collection period.
	// + This parameter is valid only when `secondsLevelMonitoringEnabled` is set to **true**.
	// + This parameter can not be specified when `secondsLevelMonitoringEnabled` is set to **false**.
	// + Value options:
	// - **1**: The collection period is 1s.
	// - **5** (default value): The collection period is 5s.
	SecondsLevelMonitoringPeriod *int `pulumi:"secondsLevelMonitoringPeriod"`
	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the slow log show original switch of the instance.
	SlowLogShowOriginalSwitch *bool `pulumi:"slowLogShowOriginalSwitch"`
	// Specifies whether sql filter is enabled. The default value is `false`.
	SqlFilterEnabled *bool `pulumi:"sqlFilterEnabled"`
	// Specifies whether to enable SSL. Value options:
	// + **true**: SSL is enabled.
	// + **false**: SSL is disabled.
	SslOption *string `pulumi:"sslOption"`
	// Specifies whether auto-scaling is enabled. Value options:
	// + **ON**: enabled.
	// + **OFF**: disabled.
	Status *string `pulumi:"status"`
	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId *string `pulumi:"subnetId"`
	// Whether the kernel table name is case sensitive. The value can
	// be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
	// creation.
	TableNameCaseSensitivity *bool `pulumi:"tableNameCaseSensitivity"`
	// Specifies the key/value pairs to associate with the GaussDB Mysql instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone *string `pulumi:"timeZone"`
	// Indicates the Update time in the **yyyy-mm-ddThh:mm:ssZ** format.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Indicates whether the version can be upgraded.
	UpgradeFlag *bool `pulumi:"upgradeFlag"`
	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of `10` GB. Only valid when in prePaid mode.
	VolumeSize *int `pulumi:"volumeSize"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId *string `pulumi:"vpcId"`
}

type MysqlInstanceState struct {
	// Specifies whether audit log is enabled. The default value is `false`.
	AuditLogEnabled pulumi.BoolPtrInput
	AutoPay         pulumi.StringPtrInput
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**.
	AutoRenew pulumi.StringPtrInput
	// Specifies the auto-scaling policies.
	// The autoScaling structure is documented below.
	AutoScaling MysqlInstanceAutoScalingPtrInput
	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode pulumi.StringPtrInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy MysqlInstanceBackupStrategyPtrInput
	// Specifies the charging mode of the instance. Valid values are **prePaid**
	// and **postPaid**, defaults to **postPaid**. Changing this will do nothing.
	ChargingMode pulumi.StringPtrInput
	// Specifies the configuration ID.
	ConfigurationId pulumi.StringPtrInput
	// Deprecated: Deprecated
	ConfigurationName pulumi.StringPtrInput
	// Indicates the creation time in the **yyyy-mm-ddThh:mm:ssZ** format.
	CreatedAt pulumi.StringPtrInput
	// Indicates the current database kernel version.
	CurrentKernelVersion pulumi.StringPtrInput
	// Indicates the current database version.
	CurrentVersion pulumi.StringPtrInput
	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore MysqlInstanceDatastorePtrInput
	// Indicates the default username.
	DbUserName pulumi.StringPtrInput
	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceId pulumi.StringPtrInput
	// Specifies the dedicated resource name. Changing this parameter
	// will create a new resource.
	DedicatedResourceName pulumi.StringPtrInput
	// Specifies the description of the instance.
	Description pulumi.StringPtrInput
	// Specifies whether to enable or disable encrypted backup. Value options:
	// + **ON**: enabled
	// + **OFF**: disabled
	EncryptionStatus pulumi.StringPtrInput
	// Specifies the encryption type. Currently, only **kms (case-insensitive)** is
	// supported. It is mandatory when `encryptionStatus` is set to **ON**.
	EncryptionType pulumi.StringPtrInput
	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the instance specifications. Please use
	// `gaussdbMysqlFlavors` data source to fetch the available flavors.
	Flavor pulumi.StringPtrInput
	// If specified, try to import the instance instead of creating if the name already
	// existed.
	ForceImport pulumi.BoolPtrInput
	// Specifies the KMS ID. It is mandatory when `encryptionStatus` is set to **ON**.
	KmsKeyId pulumi.StringPtrInput
	// Specifies the start time for a maintenance window, for example, **22:00**.
	MaintainBegin pulumi.StringPtrInput
	// Specifies the end time for a maintenance window, for example, **01:00**.
	MaintainEnd pulumi.StringPtrInput
	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone pulumi.StringPtrInput
	// Indicates the instance mode.
	Mode pulumi.StringPtrInput
	// Specifies the name of the parameter.
	Name pulumi.StringPtrInput
	// Indicates the instance nodes information.
	// The nodes structure is documented below.
	Nodes MysqlInstanceNodeArrayInput
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters MysqlInstanceParameterArrayInput
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
	// enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringPtrInput
	// Specifies the charging period of the instance.\
	// If `periodUnit` is set to **month** , the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the database port.
	Port pulumi.IntPtrInput
	// Indicates the private domain name.
	PrivateDnsName pulumi.StringPtrInput
	// Specifies the prefix of the private domain name. The value contains
	// `8` to `63` characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix pulumi.StringPtrInput
	// Specifies the private IP address of the DB instance.
	PrivateWriteIp pulumi.StringPtrInput
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyAddress pulumi.StringPtrInput
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyFlavor pulumi.StringPtrInput
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyNodeNum pulumi.IntPtrInput
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyPort pulumi.IntPtrInput
	// Specifies the count of read replicas. Defaults to `1`.
	ReadReplicas pulumi.IntPtrInput
	// The region in which to create the GaussDB mysql instance resource. If omitted,
	// the provider-level region will be used. Changing this creates a new instance resource.
	Region pulumi.StringPtrInput
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled pulumi.BoolPtrInput
	// Specifies the seconds level collection period.
	// + This parameter is valid only when `secondsLevelMonitoringEnabled` is set to **true**.
	// + This parameter can not be specified when `secondsLevelMonitoringEnabled` is set to **false**.
	// + Value options:
	// - **1**: The collection period is 1s.
	// - **5** (default value): The collection period is 5s.
	SecondsLevelMonitoringPeriod pulumi.IntPtrInput
	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the slow log show original switch of the instance.
	SlowLogShowOriginalSwitch pulumi.BoolPtrInput
	// Specifies whether sql filter is enabled. The default value is `false`.
	SqlFilterEnabled pulumi.BoolPtrInput
	// Specifies whether to enable SSL. Value options:
	// + **true**: SSL is enabled.
	// + **false**: SSL is disabled.
	SslOption pulumi.StringPtrInput
	// Specifies whether auto-scaling is enabled. Value options:
	// + **ON**: enabled.
	// + **OFF**: disabled.
	Status pulumi.StringPtrInput
	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringPtrInput
	// Whether the kernel table name is case sensitive. The value can
	// be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
	// creation.
	TableNameCaseSensitivity pulumi.BoolPtrInput
	// Specifies the key/value pairs to associate with the GaussDB Mysql instance.
	Tags pulumi.StringMapInput
	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone pulumi.StringPtrInput
	// Indicates the Update time in the **yyyy-mm-ddThh:mm:ssZ** format.
	UpdatedAt pulumi.StringPtrInput
	// Indicates whether the version can be upgraded.
	UpgradeFlag pulumi.BoolPtrInput
	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of `10` GB. Only valid when in prePaid mode.
	VolumeSize pulumi.IntPtrInput
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringPtrInput
}

func (MysqlInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlInstanceState)(nil)).Elem()
}

type mysqlInstanceArgs struct {
	// Specifies whether audit log is enabled. The default value is `false`.
	AuditLogEnabled *bool   `pulumi:"auditLogEnabled"`
	AutoPay         *string `pulumi:"autoPay"`
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**.
	AutoRenew *string `pulumi:"autoRenew"`
	// Specifies the auto-scaling policies.
	// The autoScaling structure is documented below.
	AutoScaling *MysqlInstanceAutoScaling `pulumi:"autoScaling"`
	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode *string `pulumi:"availabilityZoneMode"`
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy *MysqlInstanceBackupStrategy `pulumi:"backupStrategy"`
	// Specifies the charging mode of the instance. Valid values are **prePaid**
	// and **postPaid**, defaults to **postPaid**. Changing this will do nothing.
	ChargingMode *string `pulumi:"chargingMode"`
	// Specifies the configuration ID.
	ConfigurationId *string `pulumi:"configurationId"`
	// Deprecated: Deprecated
	ConfigurationName *string `pulumi:"configurationName"`
	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore *MysqlInstanceDatastore `pulumi:"datastore"`
	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceId *string `pulumi:"dedicatedResourceId"`
	// Specifies the dedicated resource name. Changing this parameter
	// will create a new resource.
	DedicatedResourceName *string `pulumi:"dedicatedResourceName"`
	// Specifies the description of the instance.
	Description *string `pulumi:"description"`
	// Specifies whether to enable or disable encrypted backup. Value options:
	// + **ON**: enabled
	// + **OFF**: disabled
	EncryptionStatus *string `pulumi:"encryptionStatus"`
	// Specifies the encryption type. Currently, only **kms (case-insensitive)** is
	// supported. It is mandatory when `encryptionStatus` is set to **ON**.
	EncryptionType *string `pulumi:"encryptionType"`
	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectId *string `pulumi:"enterpriseProjectId"`
	// Specifies the instance specifications. Please use
	// `gaussdbMysqlFlavors` data source to fetch the available flavors.
	Flavor string `pulumi:"flavor"`
	// If specified, try to import the instance instead of creating if the name already
	// existed.
	ForceImport *bool `pulumi:"forceImport"`
	// Specifies the KMS ID. It is mandatory when `encryptionStatus` is set to **ON**.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Specifies the start time for a maintenance window, for example, **22:00**.
	MaintainBegin *string `pulumi:"maintainBegin"`
	// Specifies the end time for a maintenance window, for example, **01:00**.
	MaintainEnd *string `pulumi:"maintainEnd"`
	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone *string `pulumi:"masterAvailabilityZone"`
	// Specifies the name of the parameter.
	Name *string `pulumi:"name"`
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters []MysqlInstanceParameter `pulumi:"parameters"`
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
	// enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password string `pulumi:"password"`
	// Specifies the charging period of the instance.\
	// If `periodUnit` is set to **month** , the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	Period *int `pulumi:"period"`
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	PeriodUnit *string `pulumi:"periodUnit"`
	// Specifies the database port.
	Port *int `pulumi:"port"`
	// Specifies the prefix of the private domain name. The value contains
	// `8` to `63` characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix *string `pulumi:"privateDnsNamePrefix"`
	// Specifies the private IP address of the DB instance.
	PrivateWriteIp *string `pulumi:"privateWriteIp"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyFlavor *string `pulumi:"proxyFlavor"`
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyNodeNum *int `pulumi:"proxyNodeNum"`
	// Specifies the count of read replicas. Defaults to `1`.
	ReadReplicas *int `pulumi:"readReplicas"`
	// The region in which to create the GaussDB mysql instance resource. If omitted,
	// the provider-level region will be used. Changing this creates a new instance resource.
	Region *string `pulumi:"region"`
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled *bool `pulumi:"secondsLevelMonitoringEnabled"`
	// Specifies the seconds level collection period.
	// + This parameter is valid only when `secondsLevelMonitoringEnabled` is set to **true**.
	// + This parameter can not be specified when `secondsLevelMonitoringEnabled` is set to **false**.
	// + Value options:
	// - **1**: The collection period is 1s.
	// - **5** (default value): The collection period is 5s.
	SecondsLevelMonitoringPeriod *int `pulumi:"secondsLevelMonitoringPeriod"`
	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// Specifies the slow log show original switch of the instance.
	SlowLogShowOriginalSwitch *bool `pulumi:"slowLogShowOriginalSwitch"`
	// Specifies whether sql filter is enabled. The default value is `false`.
	SqlFilterEnabled *bool `pulumi:"sqlFilterEnabled"`
	// Specifies whether to enable SSL. Value options:
	// + **true**: SSL is enabled.
	// + **false**: SSL is disabled.
	SslOption *string `pulumi:"sslOption"`
	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId string `pulumi:"subnetId"`
	// Whether the kernel table name is case sensitive. The value can
	// be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
	// creation.
	TableNameCaseSensitivity *bool `pulumi:"tableNameCaseSensitivity"`
	// Specifies the key/value pairs to associate with the GaussDB Mysql instance.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone *string `pulumi:"timeZone"`
	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of `10` GB. Only valid when in prePaid mode.
	VolumeSize *int `pulumi:"volumeSize"`
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a MysqlInstance resource.
type MysqlInstanceArgs struct {
	// Specifies whether audit log is enabled. The default value is `false`.
	AuditLogEnabled pulumi.BoolPtrInput
	AutoPay         pulumi.StringPtrInput
	// Specifies whether auto renew is enabled.
	// Valid values are **true** and **false**.
	AutoRenew pulumi.StringPtrInput
	// Specifies the auto-scaling policies.
	// The autoScaling structure is documented below.
	AutoScaling MysqlInstanceAutoScalingPtrInput
	// Specifies the availability zone mode: "single" or "multi".
	// Defaults to "single". Changing this parameter will create a new resource.
	AvailabilityZoneMode pulumi.StringPtrInput
	// Specifies the advanced backup policy. Structure is documented below.
	BackupStrategy MysqlInstanceBackupStrategyPtrInput
	// Specifies the charging mode of the instance. Valid values are **prePaid**
	// and **postPaid**, defaults to **postPaid**. Changing this will do nothing.
	ChargingMode pulumi.StringPtrInput
	// Specifies the configuration ID.
	ConfigurationId pulumi.StringPtrInput
	// Deprecated: Deprecated
	ConfigurationName pulumi.StringPtrInput
	// Specifies the database information. Structure is documented below. Changing
	// this parameter will create a new resource.
	Datastore MysqlInstanceDatastorePtrInput
	// Specifies the dedicated resource ID. Changing this parameter
	// will create a new resource.
	DedicatedResourceId pulumi.StringPtrInput
	// Specifies the dedicated resource name. Changing this parameter
	// will create a new resource.
	DedicatedResourceName pulumi.StringPtrInput
	// Specifies the description of the instance.
	Description pulumi.StringPtrInput
	// Specifies whether to enable or disable encrypted backup. Value options:
	// + **ON**: enabled
	// + **OFF**: disabled
	EncryptionStatus pulumi.StringPtrInput
	// Specifies the encryption type. Currently, only **kms (case-insensitive)** is
	// supported. It is mandatory when `encryptionStatus` is set to **ON**.
	EncryptionType pulumi.StringPtrInput
	// Specifies the enterprise project id. Required if EPS enabled.
	EnterpriseProjectId pulumi.StringPtrInput
	// Specifies the instance specifications. Please use
	// `gaussdbMysqlFlavors` data source to fetch the available flavors.
	Flavor pulumi.StringInput
	// If specified, try to import the instance instead of creating if the name already
	// existed.
	ForceImport pulumi.BoolPtrInput
	// Specifies the KMS ID. It is mandatory when `encryptionStatus` is set to **ON**.
	KmsKeyId pulumi.StringPtrInput
	// Specifies the start time for a maintenance window, for example, **22:00**.
	MaintainBegin pulumi.StringPtrInput
	// Specifies the end time for a maintenance window, for example, **01:00**.
	MaintainEnd pulumi.StringPtrInput
	// Specifies the availability zone where the master node
	// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
	// resource.
	MasterAvailabilityZone pulumi.StringPtrInput
	// Specifies the name of the parameter.
	Name pulumi.StringPtrInput
	// Specifies an array of one or more parameters to be set to the instance after launched.
	// The parameters structure is documented below.
	Parameters MysqlInstanceParameterArrayInput
	// Specifies the database password. The value must be `8` to `32` characters in length,
	// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
	// enter a strong password to improve security, preventing security risks such as brute force cracking.
	Password pulumi.StringInput
	// Specifies the charging period of the instance.\
	// If `periodUnit` is set to **month** , the value ranges from `1` to `9`.
	// If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
	// This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	Period pulumi.IntPtrInput
	// Specifies the charging period unit of the instance.
	// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
	// Changing this will do nothing.
	PeriodUnit pulumi.StringPtrInput
	// Specifies the database port.
	Port pulumi.IntPtrInput
	// Specifies the prefix of the private domain name. The value contains
	// `8` to `63` characters. Only uppercase letters, lowercase letters, and digits are allowed.
	PrivateDnsNamePrefix pulumi.StringPtrInput
	// Specifies the private IP address of the DB instance.
	PrivateWriteIp pulumi.StringPtrInput
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyFlavor pulumi.StringPtrInput
	// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
	ProxyNodeNum pulumi.IntPtrInput
	// Specifies the count of read replicas. Defaults to `1`.
	ReadReplicas pulumi.IntPtrInput
	// The region in which to create the GaussDB mysql instance resource. If omitted,
	// the provider-level region will be used. Changing this creates a new instance resource.
	Region pulumi.StringPtrInput
	// Specifies whether to enable seconds level monitoring.
	SecondsLevelMonitoringEnabled pulumi.BoolPtrInput
	// Specifies the seconds level collection period.
	// + This parameter is valid only when `secondsLevelMonitoringEnabled` is set to **true**.
	// + This parameter can not be specified when `secondsLevelMonitoringEnabled` is set to **false**.
	// + Value options:
	// - **1**: The collection period is 1s.
	// - **5** (default value): The collection period is 5s.
	SecondsLevelMonitoringPeriod pulumi.IntPtrInput
	// Specifies the security group ID. Required if the selected subnet doesn't
	// enable network ACL.
	SecurityGroupId pulumi.StringPtrInput
	// Specifies the slow log show original switch of the instance.
	SlowLogShowOriginalSwitch pulumi.BoolPtrInput
	// Specifies whether sql filter is enabled. The default value is `false`.
	SqlFilterEnabled pulumi.BoolPtrInput
	// Specifies whether to enable SSL. Value options:
	// + **true**: SSL is enabled.
	// + **false**: SSL is disabled.
	SslOption pulumi.StringPtrInput
	// Specifies the network ID of a subnet. Changing this parameter will create a
	// new resource.
	SubnetId pulumi.StringInput
	// Whether the kernel table name is case sensitive. The value can
	// be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
	// creation.
	TableNameCaseSensitivity pulumi.BoolPtrInput
	// Specifies the key/value pairs to associate with the GaussDB Mysql instance.
	Tags pulumi.StringMapInput
	// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
	// will create a new resource.
	TimeZone pulumi.StringPtrInput
	// Specifies the volume size of the instance. The new storage space must be greater than
	// the current storage and must be a multiple of `10` GB. Only valid when in prePaid mode.
	VolumeSize pulumi.IntPtrInput
	// Specifies the VPC ID. Changing this parameter will create a new resource.
	VpcId pulumi.StringInput
}

func (MysqlInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mysqlInstanceArgs)(nil)).Elem()
}

type MysqlInstanceInput interface {
	pulumi.Input

	ToMysqlInstanceOutput() MysqlInstanceOutput
	ToMysqlInstanceOutputWithContext(ctx context.Context) MysqlInstanceOutput
}

func (*MysqlInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlInstance)(nil)).Elem()
}

func (i *MysqlInstance) ToMysqlInstanceOutput() MysqlInstanceOutput {
	return i.ToMysqlInstanceOutputWithContext(context.Background())
}

func (i *MysqlInstance) ToMysqlInstanceOutputWithContext(ctx context.Context) MysqlInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceOutput)
}

// MysqlInstanceArrayInput is an input type that accepts MysqlInstanceArray and MysqlInstanceArrayOutput values.
// You can construct a concrete instance of `MysqlInstanceArrayInput` via:
//
//	MysqlInstanceArray{ MysqlInstanceArgs{...} }
type MysqlInstanceArrayInput interface {
	pulumi.Input

	ToMysqlInstanceArrayOutput() MysqlInstanceArrayOutput
	ToMysqlInstanceArrayOutputWithContext(context.Context) MysqlInstanceArrayOutput
}

type MysqlInstanceArray []MysqlInstanceInput

func (MysqlInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlInstance)(nil)).Elem()
}

func (i MysqlInstanceArray) ToMysqlInstanceArrayOutput() MysqlInstanceArrayOutput {
	return i.ToMysqlInstanceArrayOutputWithContext(context.Background())
}

func (i MysqlInstanceArray) ToMysqlInstanceArrayOutputWithContext(ctx context.Context) MysqlInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceArrayOutput)
}

// MysqlInstanceMapInput is an input type that accepts MysqlInstanceMap and MysqlInstanceMapOutput values.
// You can construct a concrete instance of `MysqlInstanceMapInput` via:
//
//	MysqlInstanceMap{ "key": MysqlInstanceArgs{...} }
type MysqlInstanceMapInput interface {
	pulumi.Input

	ToMysqlInstanceMapOutput() MysqlInstanceMapOutput
	ToMysqlInstanceMapOutputWithContext(context.Context) MysqlInstanceMapOutput
}

type MysqlInstanceMap map[string]MysqlInstanceInput

func (MysqlInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlInstance)(nil)).Elem()
}

func (i MysqlInstanceMap) ToMysqlInstanceMapOutput() MysqlInstanceMapOutput {
	return i.ToMysqlInstanceMapOutputWithContext(context.Background())
}

func (i MysqlInstanceMap) ToMysqlInstanceMapOutputWithContext(ctx context.Context) MysqlInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlInstanceMapOutput)
}

type MysqlInstanceOutput struct{ *pulumi.OutputState }

func (MysqlInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MysqlInstance)(nil)).Elem()
}

func (o MysqlInstanceOutput) ToMysqlInstanceOutput() MysqlInstanceOutput {
	return o
}

func (o MysqlInstanceOutput) ToMysqlInstanceOutputWithContext(ctx context.Context) MysqlInstanceOutput {
	return o
}

// Specifies whether audit log is enabled. The default value is `false`.
func (o MysqlInstanceOutput) AuditLogEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolOutput { return v.AuditLogEnabled }).(pulumi.BoolOutput)
}

func (o MysqlInstanceOutput) AutoPay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.AutoPay }).(pulumi.StringPtrOutput)
}

// Specifies whether auto renew is enabled.
// Valid values are **true** and **false**.
func (o MysqlInstanceOutput) AutoRenew() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.AutoRenew }).(pulumi.StringPtrOutput)
}

// Specifies the auto-scaling policies.
// The autoScaling structure is documented below.
func (o MysqlInstanceOutput) AutoScaling() MysqlInstanceAutoScalingOutput {
	return o.ApplyT(func(v *MysqlInstance) MysqlInstanceAutoScalingOutput { return v.AutoScaling }).(MysqlInstanceAutoScalingOutput)
}

// Specifies the availability zone mode: "single" or "multi".
// Defaults to "single". Changing this parameter will create a new resource.
func (o MysqlInstanceOutput) AvailabilityZoneMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.AvailabilityZoneMode }).(pulumi.StringPtrOutput)
}

// Specifies the advanced backup policy. Structure is documented below.
func (o MysqlInstanceOutput) BackupStrategy() MysqlInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *MysqlInstance) MysqlInstanceBackupStrategyOutput { return v.BackupStrategy }).(MysqlInstanceBackupStrategyOutput)
}

// Specifies the charging mode of the instance. Valid values are **prePaid**
// and **postPaid**, defaults to **postPaid**. Changing this will do nothing.
func (o MysqlInstanceOutput) ChargingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.ChargingMode }).(pulumi.StringPtrOutput)
}

// Specifies the configuration ID.
func (o MysqlInstanceOutput) ConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.ConfigurationId }).(pulumi.StringOutput)
}

// Deprecated: Deprecated
func (o MysqlInstanceOutput) ConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.ConfigurationName }).(pulumi.StringOutput)
}

// Indicates the creation time in the **yyyy-mm-ddThh:mm:ssZ** format.
func (o MysqlInstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates the current database kernel version.
func (o MysqlInstanceOutput) CurrentKernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.CurrentKernelVersion }).(pulumi.StringOutput)
}

// Indicates the current database version.
func (o MysqlInstanceOutput) CurrentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.CurrentVersion }).(pulumi.StringOutput)
}

// Specifies the database information. Structure is documented below. Changing
// this parameter will create a new resource.
func (o MysqlInstanceOutput) Datastore() MysqlInstanceDatastoreOutput {
	return o.ApplyT(func(v *MysqlInstance) MysqlInstanceDatastoreOutput { return v.Datastore }).(MysqlInstanceDatastoreOutput)
}

// Indicates the default username.
func (o MysqlInstanceOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.DbUserName }).(pulumi.StringOutput)
}

// Specifies the dedicated resource ID. Changing this parameter
// will create a new resource.
func (o MysqlInstanceOutput) DedicatedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.DedicatedResourceId }).(pulumi.StringOutput)
}

// Specifies the dedicated resource name. Changing this parameter
// will create a new resource.
func (o MysqlInstanceOutput) DedicatedResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.DedicatedResourceName }).(pulumi.StringOutput)
}

// Specifies the description of the instance.
func (o MysqlInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable or disable encrypted backup. Value options:
// + **ON**: enabled
// + **OFF**: disabled
func (o MysqlInstanceOutput) EncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.EncryptionStatus }).(pulumi.StringOutput)
}

// Specifies the encryption type. Currently, only **kms (case-insensitive)** is
// supported. It is mandatory when `encryptionStatus` is set to **ON**.
func (o MysqlInstanceOutput) EncryptionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.EncryptionType }).(pulumi.StringPtrOutput)
}

// Specifies the enterprise project id. Required if EPS enabled.
func (o MysqlInstanceOutput) EnterpriseProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.EnterpriseProjectId }).(pulumi.StringPtrOutput)
}

// Specifies the instance specifications. Please use
// `gaussdbMysqlFlavors` data source to fetch the available flavors.
func (o MysqlInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.Flavor }).(pulumi.StringOutput)
}

// If specified, try to import the instance instead of creating if the name already
// existed.
func (o MysqlInstanceOutput) ForceImport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolPtrOutput { return v.ForceImport }).(pulumi.BoolPtrOutput)
}

// Specifies the KMS ID. It is mandatory when `encryptionStatus` is set to **ON**.
func (o MysqlInstanceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the start time for a maintenance window, for example, **22:00**.
func (o MysqlInstanceOutput) MaintainBegin() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.MaintainBegin }).(pulumi.StringOutput)
}

// Specifies the end time for a maintenance window, for example, **01:00**.
func (o MysqlInstanceOutput) MaintainEnd() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.MaintainEnd }).(pulumi.StringOutput)
}

// Specifies the availability zone where the master node
// resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
// resource.
func (o MysqlInstanceOutput) MasterAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.MasterAvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the instance mode.
func (o MysqlInstanceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Specifies the name of the parameter.
func (o MysqlInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates the instance nodes information.
// The nodes structure is documented below.
func (o MysqlInstanceOutput) Nodes() MysqlInstanceNodeArrayOutput {
	return o.ApplyT(func(v *MysqlInstance) MysqlInstanceNodeArrayOutput { return v.Nodes }).(MysqlInstanceNodeArrayOutput)
}

// Specifies an array of one or more parameters to be set to the instance after launched.
// The parameters structure is documented below.
func (o MysqlInstanceOutput) Parameters() MysqlInstanceParameterArrayOutput {
	return o.ApplyT(func(v *MysqlInstance) MysqlInstanceParameterArrayOutput { return v.Parameters }).(MysqlInstanceParameterArrayOutput)
}

// Specifies the database password. The value must be `8` to `32` characters in length,
// including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
// enter a strong password to improve security, preventing security risks such as brute force cracking.
func (o MysqlInstanceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Specifies the charging period of the instance.\
// If `periodUnit` is set to **month** , the value ranges from `1` to `9`.
// If `periodUnit` is set to **year**, the value ranges from `1` to `3`.
// This parameter is mandatory if `chargingMode` is set to **prePaid**.
// Changing this will do nothing.
func (o MysqlInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Specifies the charging period unit of the instance.
// Valid values are **month** and **year**. This parameter is mandatory if `chargingMode` is set to **prePaid**.
// Changing this will do nothing.
func (o MysqlInstanceOutput) PeriodUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.PeriodUnit }).(pulumi.StringPtrOutput)
}

// Specifies the database port.
func (o MysqlInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Indicates the private domain name.
func (o MysqlInstanceOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// Specifies the prefix of the private domain name. The value contains
// `8` to `63` characters. Only uppercase letters, lowercase letters, and digits are allowed.
func (o MysqlInstanceOutput) PrivateDnsNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.PrivateDnsNamePrefix }).(pulumi.StringOutput)
}

// Specifies the private IP address of the DB instance.
func (o MysqlInstanceOutput) PrivateWriteIp() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.PrivateWriteIp }).(pulumi.StringOutput)
}

// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
func (o MysqlInstanceOutput) ProxyAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.ProxyAddress }).(pulumi.StringOutput)
}

// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
func (o MysqlInstanceOutput) ProxyFlavor() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.ProxyFlavor }).(pulumi.StringOutput)
}

// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
func (o MysqlInstanceOutput) ProxyNodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntOutput { return v.ProxyNodeNum }).(pulumi.IntOutput)
}

// Deprecated: use huaweicloud_gaussdb_mysql_proxy instead
func (o MysqlInstanceOutput) ProxyPort() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntOutput { return v.ProxyPort }).(pulumi.IntOutput)
}

// Specifies the count of read replicas. Defaults to `1`.
func (o MysqlInstanceOutput) ReadReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntPtrOutput { return v.ReadReplicas }).(pulumi.IntPtrOutput)
}

// The region in which to create the GaussDB mysql instance resource. If omitted,
// the provider-level region will be used. Changing this creates a new instance resource.
func (o MysqlInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Specifies whether to enable seconds level monitoring.
func (o MysqlInstanceOutput) SecondsLevelMonitoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolOutput { return v.SecondsLevelMonitoringEnabled }).(pulumi.BoolOutput)
}

// Specifies the seconds level collection period.
// + This parameter is valid only when `secondsLevelMonitoringEnabled` is set to **true**.
// + This parameter can not be specified when `secondsLevelMonitoringEnabled` is set to **false**.
// + Value options:
// - **1**: The collection period is 1s.
// - **5** (default value): The collection period is 5s.
func (o MysqlInstanceOutput) SecondsLevelMonitoringPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntPtrOutput { return v.SecondsLevelMonitoringPeriod }).(pulumi.IntPtrOutput)
}

// Specifies the security group ID. Required if the selected subnet doesn't
// enable network ACL.
func (o MysqlInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Specifies the slow log show original switch of the instance.
func (o MysqlInstanceOutput) SlowLogShowOriginalSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolOutput { return v.SlowLogShowOriginalSwitch }).(pulumi.BoolOutput)
}

// Specifies whether sql filter is enabled. The default value is `false`.
func (o MysqlInstanceOutput) SqlFilterEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolOutput { return v.SqlFilterEnabled }).(pulumi.BoolOutput)
}

// Specifies whether to enable SSL. Value options:
// + **true**: SSL is enabled.
// + **false**: SSL is disabled.
func (o MysqlInstanceOutput) SslOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.SslOption }).(pulumi.StringPtrOutput)
}

// Specifies whether auto-scaling is enabled. Value options:
// + **ON**: enabled.
// + **OFF**: disabled.
func (o MysqlInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of a subnet. Changing this parameter will create a
// new resource.
func (o MysqlInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Whether the kernel table name is case sensitive. The value can
// be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
// creation.
func (o MysqlInstanceOutput) TableNameCaseSensitivity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolPtrOutput { return v.TableNameCaseSensitivity }).(pulumi.BoolPtrOutput)
}

// Specifies the key/value pairs to associate with the GaussDB Mysql instance.
func (o MysqlInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
// will create a new resource.
func (o MysqlInstanceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Indicates the Update time in the **yyyy-mm-ddThh:mm:ssZ** format.
func (o MysqlInstanceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Indicates whether the version can be upgraded.
func (o MysqlInstanceOutput) UpgradeFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.BoolOutput { return v.UpgradeFlag }).(pulumi.BoolOutput)
}

// Specifies the volume size of the instance. The new storage space must be greater than
// the current storage and must be a multiple of `10` GB. Only valid when in prePaid mode.
func (o MysqlInstanceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.IntOutput { return v.VolumeSize }).(pulumi.IntOutput)
}

// Specifies the VPC ID. Changing this parameter will create a new resource.
func (o MysqlInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *MysqlInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type MysqlInstanceArrayOutput struct{ *pulumi.OutputState }

func (MysqlInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MysqlInstance)(nil)).Elem()
}

func (o MysqlInstanceArrayOutput) ToMysqlInstanceArrayOutput() MysqlInstanceArrayOutput {
	return o
}

func (o MysqlInstanceArrayOutput) ToMysqlInstanceArrayOutputWithContext(ctx context.Context) MysqlInstanceArrayOutput {
	return o
}

func (o MysqlInstanceArrayOutput) Index(i pulumi.IntInput) MysqlInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MysqlInstance {
		return vs[0].([]*MysqlInstance)[vs[1].(int)]
	}).(MysqlInstanceOutput)
}

type MysqlInstanceMapOutput struct{ *pulumi.OutputState }

func (MysqlInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MysqlInstance)(nil)).Elem()
}

func (o MysqlInstanceMapOutput) ToMysqlInstanceMapOutput() MysqlInstanceMapOutput {
	return o
}

func (o MysqlInstanceMapOutput) ToMysqlInstanceMapOutputWithContext(ctx context.Context) MysqlInstanceMapOutput {
	return o
}

func (o MysqlInstanceMapOutput) MapIndex(k pulumi.StringInput) MysqlInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MysqlInstance {
		return vs[0].(map[string]*MysqlInstance)[vs[1].(string)]
	}).(MysqlInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceInput)(nil)).Elem(), &MysqlInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceArrayInput)(nil)).Elem(), MysqlInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MysqlInstanceMapInput)(nil)).Elem(), MysqlInstanceMap{})
	pulumi.RegisterOutputType(MysqlInstanceOutput{})
	pulumi.RegisterOutputType(MysqlInstanceArrayOutput{})
	pulumi.RegisterOutputType(MysqlInstanceMapOutput{})
}
