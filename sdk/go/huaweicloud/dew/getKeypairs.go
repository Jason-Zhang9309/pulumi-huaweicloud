// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dew

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a list of keypairs.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/Dew"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/Dew"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			keypairName := cfg.RequireObject("keypairName")
//			_, err := Dew.GetKeypairs(ctx, &dew.GetKeypairsArgs{
//				Name: pulumi.StringRef(keypairName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKeypairs(ctx *pulumi.Context, args *GetKeypairsArgs, opts ...pulumi.InvokeOption) (*GetKeypairsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetKeypairsResult
	err := ctx.Invoke("huaweicloud:Dew/getKeypairs:getKeypairs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeypairs.
type GetKeypairsArgs struct {
	// Specifies the fingerprint of the keypair.
	Fingerprint *string `pulumi:"fingerprint"`
	// Specifies whether the private key is managed by HuaweiCloud.
	IsManaged *bool `pulumi:"isManaged"`
	// Specifies the name of the keypair.
	Name *string `pulumi:"name"`
	// Specifies the imported OpenSSH-formatted public key.
	PublicKey *string `pulumi:"publicKey"`
	// The region in which to obtain the keypairs. If omitted, the provider-level region will
	// be used.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getKeypairs.
type GetKeypairsResult struct {
	// Indicates the fingerprint information about an key pair.
	Fingerprint *string `pulumi:"fingerprint"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates whether the private key is managed by HuaweiCloud.
	IsManaged *bool `pulumi:"isManaged"`
	// Indicates a list of all keypairs found. Structure is documented below.
	Keypairs []GetKeypairsKeypair `pulumi:"keypairs"`
	// Indicates the name of the keypair.
	Name *string `pulumi:"name"`
	// Indicates the imported OpenSSH-formatted public key.
	PublicKey *string `pulumi:"publicKey"`
	Region    *string `pulumi:"region"`
}

func GetKeypairsOutput(ctx *pulumi.Context, args GetKeypairsOutputArgs, opts ...pulumi.InvokeOption) GetKeypairsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeypairsResult, error) {
			args := v.(GetKeypairsArgs)
			r, err := GetKeypairs(ctx, &args, opts...)
			var s GetKeypairsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeypairsResultOutput)
}

// A collection of arguments for invoking getKeypairs.
type GetKeypairsOutputArgs struct {
	// Specifies the fingerprint of the keypair.
	Fingerprint pulumi.StringPtrInput `pulumi:"fingerprint"`
	// Specifies whether the private key is managed by HuaweiCloud.
	IsManaged pulumi.BoolPtrInput `pulumi:"isManaged"`
	// Specifies the name of the keypair.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the imported OpenSSH-formatted public key.
	PublicKey pulumi.StringPtrInput `pulumi:"publicKey"`
	// The region in which to obtain the keypairs. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetKeypairsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsArgs)(nil)).Elem()
}

// A collection of values returned by getKeypairs.
type GetKeypairsResultOutput struct{ *pulumi.OutputState }

func (GetKeypairsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeypairsResult)(nil)).Elem()
}

func (o GetKeypairsResultOutput) ToGetKeypairsResultOutput() GetKeypairsResultOutput {
	return o
}

func (o GetKeypairsResultOutput) ToGetKeypairsResultOutputWithContext(ctx context.Context) GetKeypairsResultOutput {
	return o
}

// Indicates the fingerprint information about an key pair.
func (o GetKeypairsResultOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeypairsResult) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeypairsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeypairsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the private key is managed by HuaweiCloud.
func (o GetKeypairsResultOutput) IsManaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetKeypairsResult) *bool { return v.IsManaged }).(pulumi.BoolPtrOutput)
}

// Indicates a list of all keypairs found. Structure is documented below.
func (o GetKeypairsResultOutput) Keypairs() GetKeypairsKeypairArrayOutput {
	return o.ApplyT(func(v GetKeypairsResult) []GetKeypairsKeypair { return v.Keypairs }).(GetKeypairsKeypairArrayOutput)
}

// Indicates the name of the keypair.
func (o GetKeypairsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeypairsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the imported OpenSSH-formatted public key.
func (o GetKeypairsResultOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeypairsResult) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o GetKeypairsResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeypairsResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeypairsResultOutput{})
}
