// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdbfornosql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CassandraInstanceBackupStrategy struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
	// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime string `pulumi:"startTime"`
}

// CassandraInstanceBackupStrategyInput is an input type that accepts CassandraInstanceBackupStrategyArgs and CassandraInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `CassandraInstanceBackupStrategyInput` via:
//
//	CassandraInstanceBackupStrategyArgs{...}
type CassandraInstanceBackupStrategyInput interface {
	pulumi.Input

	ToCassandraInstanceBackupStrategyOutput() CassandraInstanceBackupStrategyOutput
	ToCassandraInstanceBackupStrategyOutputWithContext(context.Context) CassandraInstanceBackupStrategyOutput
}

type CassandraInstanceBackupStrategyArgs struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
	// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (CassandraInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraInstanceBackupStrategy)(nil)).Elem()
}

func (i CassandraInstanceBackupStrategyArgs) ToCassandraInstanceBackupStrategyOutput() CassandraInstanceBackupStrategyOutput {
	return i.ToCassandraInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i CassandraInstanceBackupStrategyArgs) ToCassandraInstanceBackupStrategyOutputWithContext(ctx context.Context) CassandraInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceBackupStrategyOutput)
}

func (i CassandraInstanceBackupStrategyArgs) ToCassandraInstanceBackupStrategyPtrOutput() CassandraInstanceBackupStrategyPtrOutput {
	return i.ToCassandraInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i CassandraInstanceBackupStrategyArgs) ToCassandraInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) CassandraInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceBackupStrategyOutput).ToCassandraInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// CassandraInstanceBackupStrategyPtrInput is an input type that accepts CassandraInstanceBackupStrategyArgs, CassandraInstanceBackupStrategyPtr and CassandraInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `CassandraInstanceBackupStrategyPtrInput` via:
//
//	        CassandraInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type CassandraInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToCassandraInstanceBackupStrategyPtrOutput() CassandraInstanceBackupStrategyPtrOutput
	ToCassandraInstanceBackupStrategyPtrOutputWithContext(context.Context) CassandraInstanceBackupStrategyPtrOutput
}

type cassandraInstanceBackupStrategyPtrType CassandraInstanceBackupStrategyArgs

func CassandraInstanceBackupStrategyPtr(v *CassandraInstanceBackupStrategyArgs) CassandraInstanceBackupStrategyPtrInput {
	return (*cassandraInstanceBackupStrategyPtrType)(v)
}

func (*cassandraInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraInstanceBackupStrategy)(nil)).Elem()
}

func (i *cassandraInstanceBackupStrategyPtrType) ToCassandraInstanceBackupStrategyPtrOutput() CassandraInstanceBackupStrategyPtrOutput {
	return i.ToCassandraInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *cassandraInstanceBackupStrategyPtrType) ToCassandraInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) CassandraInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceBackupStrategyPtrOutput)
}

type CassandraInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (CassandraInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraInstanceBackupStrategy)(nil)).Elem()
}

func (o CassandraInstanceBackupStrategyOutput) ToCassandraInstanceBackupStrategyOutput() CassandraInstanceBackupStrategyOutput {
	return o
}

func (o CassandraInstanceBackupStrategyOutput) ToCassandraInstanceBackupStrategyOutputWithContext(ctx context.Context) CassandraInstanceBackupStrategyOutput {
	return o
}

func (o CassandraInstanceBackupStrategyOutput) ToCassandraInstanceBackupStrategyPtrOutput() CassandraInstanceBackupStrategyPtrOutput {
	return o.ToCassandraInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o CassandraInstanceBackupStrategyOutput) ToCassandraInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) CassandraInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraInstanceBackupStrategy) *CassandraInstanceBackupStrategy {
		return &v
	}).(CassandraInstanceBackupStrategyPtrOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o CassandraInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o CassandraInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type CassandraInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (CassandraInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraInstanceBackupStrategy)(nil)).Elem()
}

func (o CassandraInstanceBackupStrategyPtrOutput) ToCassandraInstanceBackupStrategyPtrOutput() CassandraInstanceBackupStrategyPtrOutput {
	return o
}

func (o CassandraInstanceBackupStrategyPtrOutput) ToCassandraInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) CassandraInstanceBackupStrategyPtrOutput {
	return o
}

func (o CassandraInstanceBackupStrategyPtrOutput) Elem() CassandraInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *CassandraInstanceBackupStrategy) CassandraInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret CassandraInstanceBackupStrategy
		return ret
	}).(CassandraInstanceBackupStrategyOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o CassandraInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o CassandraInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type CassandraInstanceDatastore struct {
	// Specifies the database engine. Only "GeminiDB-Cassandra" is supported now.
	Engine string `pulumi:"engine"`
	// Specifies the storage engine. Only "rocksDB" is supported now.
	StorageEngine string `pulumi:"storageEngine"`
	// Specifies the database version.
	Version string `pulumi:"version"`
}

// CassandraInstanceDatastoreInput is an input type that accepts CassandraInstanceDatastoreArgs and CassandraInstanceDatastoreOutput values.
// You can construct a concrete instance of `CassandraInstanceDatastoreInput` via:
//
//	CassandraInstanceDatastoreArgs{...}
type CassandraInstanceDatastoreInput interface {
	pulumi.Input

	ToCassandraInstanceDatastoreOutput() CassandraInstanceDatastoreOutput
	ToCassandraInstanceDatastoreOutputWithContext(context.Context) CassandraInstanceDatastoreOutput
}

type CassandraInstanceDatastoreArgs struct {
	// Specifies the database engine. Only "GeminiDB-Cassandra" is supported now.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the storage engine. Only "rocksDB" is supported now.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Specifies the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (CassandraInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraInstanceDatastore)(nil)).Elem()
}

func (i CassandraInstanceDatastoreArgs) ToCassandraInstanceDatastoreOutput() CassandraInstanceDatastoreOutput {
	return i.ToCassandraInstanceDatastoreOutputWithContext(context.Background())
}

func (i CassandraInstanceDatastoreArgs) ToCassandraInstanceDatastoreOutputWithContext(ctx context.Context) CassandraInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceDatastoreOutput)
}

func (i CassandraInstanceDatastoreArgs) ToCassandraInstanceDatastorePtrOutput() CassandraInstanceDatastorePtrOutput {
	return i.ToCassandraInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i CassandraInstanceDatastoreArgs) ToCassandraInstanceDatastorePtrOutputWithContext(ctx context.Context) CassandraInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceDatastoreOutput).ToCassandraInstanceDatastorePtrOutputWithContext(ctx)
}

// CassandraInstanceDatastorePtrInput is an input type that accepts CassandraInstanceDatastoreArgs, CassandraInstanceDatastorePtr and CassandraInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `CassandraInstanceDatastorePtrInput` via:
//
//	        CassandraInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type CassandraInstanceDatastorePtrInput interface {
	pulumi.Input

	ToCassandraInstanceDatastorePtrOutput() CassandraInstanceDatastorePtrOutput
	ToCassandraInstanceDatastorePtrOutputWithContext(context.Context) CassandraInstanceDatastorePtrOutput
}

type cassandraInstanceDatastorePtrType CassandraInstanceDatastoreArgs

func CassandraInstanceDatastorePtr(v *CassandraInstanceDatastoreArgs) CassandraInstanceDatastorePtrInput {
	return (*cassandraInstanceDatastorePtrType)(v)
}

func (*cassandraInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraInstanceDatastore)(nil)).Elem()
}

func (i *cassandraInstanceDatastorePtrType) ToCassandraInstanceDatastorePtrOutput() CassandraInstanceDatastorePtrOutput {
	return i.ToCassandraInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *cassandraInstanceDatastorePtrType) ToCassandraInstanceDatastorePtrOutputWithContext(ctx context.Context) CassandraInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceDatastorePtrOutput)
}

type CassandraInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (CassandraInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraInstanceDatastore)(nil)).Elem()
}

func (o CassandraInstanceDatastoreOutput) ToCassandraInstanceDatastoreOutput() CassandraInstanceDatastoreOutput {
	return o
}

func (o CassandraInstanceDatastoreOutput) ToCassandraInstanceDatastoreOutputWithContext(ctx context.Context) CassandraInstanceDatastoreOutput {
	return o
}

func (o CassandraInstanceDatastoreOutput) ToCassandraInstanceDatastorePtrOutput() CassandraInstanceDatastorePtrOutput {
	return o.ToCassandraInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o CassandraInstanceDatastoreOutput) ToCassandraInstanceDatastorePtrOutputWithContext(ctx context.Context) CassandraInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraInstanceDatastore) *CassandraInstanceDatastore {
		return &v
	}).(CassandraInstanceDatastorePtrOutput)
}

// Specifies the database engine. Only "GeminiDB-Cassandra" is supported now.
func (o CassandraInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the storage engine. Only "rocksDB" is supported now.
func (o CassandraInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Specifies the database version.
func (o CassandraInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type CassandraInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (CassandraInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraInstanceDatastore)(nil)).Elem()
}

func (o CassandraInstanceDatastorePtrOutput) ToCassandraInstanceDatastorePtrOutput() CassandraInstanceDatastorePtrOutput {
	return o
}

func (o CassandraInstanceDatastorePtrOutput) ToCassandraInstanceDatastorePtrOutputWithContext(ctx context.Context) CassandraInstanceDatastorePtrOutput {
	return o
}

func (o CassandraInstanceDatastorePtrOutput) Elem() CassandraInstanceDatastoreOutput {
	return o.ApplyT(func(v *CassandraInstanceDatastore) CassandraInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret CassandraInstanceDatastore
		return ret
	}).(CassandraInstanceDatastoreOutput)
}

// Specifies the database engine. Only "GeminiDB-Cassandra" is supported now.
func (o CassandraInstanceDatastorePtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage engine. Only "rocksDB" is supported now.
func (o CassandraInstanceDatastorePtrOutput) StorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.StorageEngine
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version.
func (o CassandraInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type CassandraInstanceNode struct {
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The value
	// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
	// digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp *string `pulumi:"privateIp"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce *bool `pulumi:"supportReduce"`
}

// CassandraInstanceNodeInput is an input type that accepts CassandraInstanceNodeArgs and CassandraInstanceNodeOutput values.
// You can construct a concrete instance of `CassandraInstanceNodeInput` via:
//
//	CassandraInstanceNodeArgs{...}
type CassandraInstanceNodeInput interface {
	pulumi.Input

	ToCassandraInstanceNodeOutput() CassandraInstanceNodeOutput
	ToCassandraInstanceNodeOutputWithContext(context.Context) CassandraInstanceNodeOutput
}

type CassandraInstanceNodeArgs struct {
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The value
	// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
	// digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce pulumi.BoolPtrInput `pulumi:"supportReduce"`
}

func (CassandraInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraInstanceNode)(nil)).Elem()
}

func (i CassandraInstanceNodeArgs) ToCassandraInstanceNodeOutput() CassandraInstanceNodeOutput {
	return i.ToCassandraInstanceNodeOutputWithContext(context.Background())
}

func (i CassandraInstanceNodeArgs) ToCassandraInstanceNodeOutputWithContext(ctx context.Context) CassandraInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceNodeOutput)
}

// CassandraInstanceNodeArrayInput is an input type that accepts CassandraInstanceNodeArray and CassandraInstanceNodeArrayOutput values.
// You can construct a concrete instance of `CassandraInstanceNodeArrayInput` via:
//
//	CassandraInstanceNodeArray{ CassandraInstanceNodeArgs{...} }
type CassandraInstanceNodeArrayInput interface {
	pulumi.Input

	ToCassandraInstanceNodeArrayOutput() CassandraInstanceNodeArrayOutput
	ToCassandraInstanceNodeArrayOutputWithContext(context.Context) CassandraInstanceNodeArrayOutput
}

type CassandraInstanceNodeArray []CassandraInstanceNodeInput

func (CassandraInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraInstanceNode)(nil)).Elem()
}

func (i CassandraInstanceNodeArray) ToCassandraInstanceNodeArrayOutput() CassandraInstanceNodeArrayOutput {
	return i.ToCassandraInstanceNodeArrayOutputWithContext(context.Background())
}

func (i CassandraInstanceNodeArray) ToCassandraInstanceNodeArrayOutputWithContext(ctx context.Context) CassandraInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraInstanceNodeArrayOutput)
}

type CassandraInstanceNodeOutput struct{ *pulumi.OutputState }

func (CassandraInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraInstanceNode)(nil)).Elem()
}

func (o CassandraInstanceNodeOutput) ToCassandraInstanceNodeOutput() CassandraInstanceNodeOutput {
	return o
}

func (o CassandraInstanceNodeOutput) ToCassandraInstanceNodeOutputWithContext(ctx context.Context) CassandraInstanceNodeOutput {
	return o
}

// Indicates the node ID.
func (o CassandraInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the instance name, which can be the same as an existing instance name. The value
// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
// digits, hyphens (-), and underscores (_).
func (o CassandraInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o CassandraInstanceNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraInstanceNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o CassandraInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates whether the node support reduce or not.
func (o CassandraInstanceNodeOutput) SupportReduce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CassandraInstanceNode) *bool { return v.SupportReduce }).(pulumi.BoolPtrOutput)
}

type CassandraInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (CassandraInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraInstanceNode)(nil)).Elem()
}

func (o CassandraInstanceNodeArrayOutput) ToCassandraInstanceNodeArrayOutput() CassandraInstanceNodeArrayOutput {
	return o
}

func (o CassandraInstanceNodeArrayOutput) ToCassandraInstanceNodeArrayOutputWithContext(ctx context.Context) CassandraInstanceNodeArrayOutput {
	return o
}

func (o CassandraInstanceNodeArrayOutput) Index(i pulumi.IntInput) CassandraInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraInstanceNode {
		return vs[0].([]CassandraInstanceNode)[vs[1].(int)]
	}).(CassandraInstanceNodeOutput)
}

type InfluxInstanceBackupStrategy struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
	// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime string `pulumi:"startTime"`
}

// InfluxInstanceBackupStrategyInput is an input type that accepts InfluxInstanceBackupStrategyArgs and InfluxInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `InfluxInstanceBackupStrategyInput` via:
//
//	InfluxInstanceBackupStrategyArgs{...}
type InfluxInstanceBackupStrategyInput interface {
	pulumi.Input

	ToInfluxInstanceBackupStrategyOutput() InfluxInstanceBackupStrategyOutput
	ToInfluxInstanceBackupStrategyOutputWithContext(context.Context) InfluxInstanceBackupStrategyOutput
}

type InfluxInstanceBackupStrategyArgs struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
	// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (InfluxInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxInstanceBackupStrategy)(nil)).Elem()
}

func (i InfluxInstanceBackupStrategyArgs) ToInfluxInstanceBackupStrategyOutput() InfluxInstanceBackupStrategyOutput {
	return i.ToInfluxInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i InfluxInstanceBackupStrategyArgs) ToInfluxInstanceBackupStrategyOutputWithContext(ctx context.Context) InfluxInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceBackupStrategyOutput)
}

func (i InfluxInstanceBackupStrategyArgs) ToInfluxInstanceBackupStrategyPtrOutput() InfluxInstanceBackupStrategyPtrOutput {
	return i.ToInfluxInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i InfluxInstanceBackupStrategyArgs) ToInfluxInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InfluxInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceBackupStrategyOutput).ToInfluxInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// InfluxInstanceBackupStrategyPtrInput is an input type that accepts InfluxInstanceBackupStrategyArgs, InfluxInstanceBackupStrategyPtr and InfluxInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `InfluxInstanceBackupStrategyPtrInput` via:
//
//	        InfluxInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type InfluxInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToInfluxInstanceBackupStrategyPtrOutput() InfluxInstanceBackupStrategyPtrOutput
	ToInfluxInstanceBackupStrategyPtrOutputWithContext(context.Context) InfluxInstanceBackupStrategyPtrOutput
}

type influxInstanceBackupStrategyPtrType InfluxInstanceBackupStrategyArgs

func InfluxInstanceBackupStrategyPtr(v *InfluxInstanceBackupStrategyArgs) InfluxInstanceBackupStrategyPtrInput {
	return (*influxInstanceBackupStrategyPtrType)(v)
}

func (*influxInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxInstanceBackupStrategy)(nil)).Elem()
}

func (i *influxInstanceBackupStrategyPtrType) ToInfluxInstanceBackupStrategyPtrOutput() InfluxInstanceBackupStrategyPtrOutput {
	return i.ToInfluxInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *influxInstanceBackupStrategyPtrType) ToInfluxInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InfluxInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceBackupStrategyPtrOutput)
}

type InfluxInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (InfluxInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxInstanceBackupStrategy)(nil)).Elem()
}

func (o InfluxInstanceBackupStrategyOutput) ToInfluxInstanceBackupStrategyOutput() InfluxInstanceBackupStrategyOutput {
	return o
}

func (o InfluxInstanceBackupStrategyOutput) ToInfluxInstanceBackupStrategyOutputWithContext(ctx context.Context) InfluxInstanceBackupStrategyOutput {
	return o
}

func (o InfluxInstanceBackupStrategyOutput) ToInfluxInstanceBackupStrategyPtrOutput() InfluxInstanceBackupStrategyPtrOutput {
	return o.ToInfluxInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o InfluxInstanceBackupStrategyOutput) ToInfluxInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InfluxInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfluxInstanceBackupStrategy) *InfluxInstanceBackupStrategy {
		return &v
	}).(InfluxInstanceBackupStrategyPtrOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o InfluxInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InfluxInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o InfluxInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InfluxInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type InfluxInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (InfluxInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxInstanceBackupStrategy)(nil)).Elem()
}

func (o InfluxInstanceBackupStrategyPtrOutput) ToInfluxInstanceBackupStrategyPtrOutput() InfluxInstanceBackupStrategyPtrOutput {
	return o
}

func (o InfluxInstanceBackupStrategyPtrOutput) ToInfluxInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) InfluxInstanceBackupStrategyPtrOutput {
	return o
}

func (o InfluxInstanceBackupStrategyPtrOutput) Elem() InfluxInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *InfluxInstanceBackupStrategy) InfluxInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret InfluxInstanceBackupStrategy
		return ret
	}).(InfluxInstanceBackupStrategyOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o InfluxInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfluxInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o InfluxInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type InfluxInstanceDatastore struct {
	// Specifies the database engine. Only **influxdb** is supported now.
	Engine string `pulumi:"engine"`
	// Specifies the storage engine. Only **rocksDB** is supported now.
	StorageEngine string `pulumi:"storageEngine"`
	// Specifies the database version.
	Version string `pulumi:"version"`
}

// InfluxInstanceDatastoreInput is an input type that accepts InfluxInstanceDatastoreArgs and InfluxInstanceDatastoreOutput values.
// You can construct a concrete instance of `InfluxInstanceDatastoreInput` via:
//
//	InfluxInstanceDatastoreArgs{...}
type InfluxInstanceDatastoreInput interface {
	pulumi.Input

	ToInfluxInstanceDatastoreOutput() InfluxInstanceDatastoreOutput
	ToInfluxInstanceDatastoreOutputWithContext(context.Context) InfluxInstanceDatastoreOutput
}

type InfluxInstanceDatastoreArgs struct {
	// Specifies the database engine. Only **influxdb** is supported now.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the storage engine. Only **rocksDB** is supported now.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Specifies the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (InfluxInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxInstanceDatastore)(nil)).Elem()
}

func (i InfluxInstanceDatastoreArgs) ToInfluxInstanceDatastoreOutput() InfluxInstanceDatastoreOutput {
	return i.ToInfluxInstanceDatastoreOutputWithContext(context.Background())
}

func (i InfluxInstanceDatastoreArgs) ToInfluxInstanceDatastoreOutputWithContext(ctx context.Context) InfluxInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceDatastoreOutput)
}

func (i InfluxInstanceDatastoreArgs) ToInfluxInstanceDatastorePtrOutput() InfluxInstanceDatastorePtrOutput {
	return i.ToInfluxInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i InfluxInstanceDatastoreArgs) ToInfluxInstanceDatastorePtrOutputWithContext(ctx context.Context) InfluxInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceDatastoreOutput).ToInfluxInstanceDatastorePtrOutputWithContext(ctx)
}

// InfluxInstanceDatastorePtrInput is an input type that accepts InfluxInstanceDatastoreArgs, InfluxInstanceDatastorePtr and InfluxInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `InfluxInstanceDatastorePtrInput` via:
//
//	        InfluxInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type InfluxInstanceDatastorePtrInput interface {
	pulumi.Input

	ToInfluxInstanceDatastorePtrOutput() InfluxInstanceDatastorePtrOutput
	ToInfluxInstanceDatastorePtrOutputWithContext(context.Context) InfluxInstanceDatastorePtrOutput
}

type influxInstanceDatastorePtrType InfluxInstanceDatastoreArgs

func InfluxInstanceDatastorePtr(v *InfluxInstanceDatastoreArgs) InfluxInstanceDatastorePtrInput {
	return (*influxInstanceDatastorePtrType)(v)
}

func (*influxInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxInstanceDatastore)(nil)).Elem()
}

func (i *influxInstanceDatastorePtrType) ToInfluxInstanceDatastorePtrOutput() InfluxInstanceDatastorePtrOutput {
	return i.ToInfluxInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *influxInstanceDatastorePtrType) ToInfluxInstanceDatastorePtrOutputWithContext(ctx context.Context) InfluxInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceDatastorePtrOutput)
}

type InfluxInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (InfluxInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxInstanceDatastore)(nil)).Elem()
}

func (o InfluxInstanceDatastoreOutput) ToInfluxInstanceDatastoreOutput() InfluxInstanceDatastoreOutput {
	return o
}

func (o InfluxInstanceDatastoreOutput) ToInfluxInstanceDatastoreOutputWithContext(ctx context.Context) InfluxInstanceDatastoreOutput {
	return o
}

func (o InfluxInstanceDatastoreOutput) ToInfluxInstanceDatastorePtrOutput() InfluxInstanceDatastorePtrOutput {
	return o.ToInfluxInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o InfluxInstanceDatastoreOutput) ToInfluxInstanceDatastorePtrOutputWithContext(ctx context.Context) InfluxInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfluxInstanceDatastore) *InfluxInstanceDatastore {
		return &v
	}).(InfluxInstanceDatastorePtrOutput)
}

// Specifies the database engine. Only **influxdb** is supported now.
func (o InfluxInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v InfluxInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the storage engine. Only **rocksDB** is supported now.
func (o InfluxInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v InfluxInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Specifies the database version.
func (o InfluxInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v InfluxInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type InfluxInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (InfluxInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfluxInstanceDatastore)(nil)).Elem()
}

func (o InfluxInstanceDatastorePtrOutput) ToInfluxInstanceDatastorePtrOutput() InfluxInstanceDatastorePtrOutput {
	return o
}

func (o InfluxInstanceDatastorePtrOutput) ToInfluxInstanceDatastorePtrOutputWithContext(ctx context.Context) InfluxInstanceDatastorePtrOutput {
	return o
}

func (o InfluxInstanceDatastorePtrOutput) Elem() InfluxInstanceDatastoreOutput {
	return o.ApplyT(func(v *InfluxInstanceDatastore) InfluxInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret InfluxInstanceDatastore
		return ret
	}).(InfluxInstanceDatastoreOutput)
}

// Specifies the database engine. Only **influxdb** is supported now.
func (o InfluxInstanceDatastorePtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage engine. Only **rocksDB** is supported now.
func (o InfluxInstanceDatastorePtrOutput) StorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.StorageEngine
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version.
func (o InfluxInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfluxInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type InfluxInstanceNode struct {
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The
	// value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp *string `pulumi:"privateIp"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce *bool `pulumi:"supportReduce"`
}

// InfluxInstanceNodeInput is an input type that accepts InfluxInstanceNodeArgs and InfluxInstanceNodeOutput values.
// You can construct a concrete instance of `InfluxInstanceNodeInput` via:
//
//	InfluxInstanceNodeArgs{...}
type InfluxInstanceNodeInput interface {
	pulumi.Input

	ToInfluxInstanceNodeOutput() InfluxInstanceNodeOutput
	ToInfluxInstanceNodeOutputWithContext(context.Context) InfluxInstanceNodeOutput
}

type InfluxInstanceNodeArgs struct {
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The
	// value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce pulumi.BoolPtrInput `pulumi:"supportReduce"`
}

func (InfluxInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxInstanceNode)(nil)).Elem()
}

func (i InfluxInstanceNodeArgs) ToInfluxInstanceNodeOutput() InfluxInstanceNodeOutput {
	return i.ToInfluxInstanceNodeOutputWithContext(context.Background())
}

func (i InfluxInstanceNodeArgs) ToInfluxInstanceNodeOutputWithContext(ctx context.Context) InfluxInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceNodeOutput)
}

// InfluxInstanceNodeArrayInput is an input type that accepts InfluxInstanceNodeArray and InfluxInstanceNodeArrayOutput values.
// You can construct a concrete instance of `InfluxInstanceNodeArrayInput` via:
//
//	InfluxInstanceNodeArray{ InfluxInstanceNodeArgs{...} }
type InfluxInstanceNodeArrayInput interface {
	pulumi.Input

	ToInfluxInstanceNodeArrayOutput() InfluxInstanceNodeArrayOutput
	ToInfluxInstanceNodeArrayOutputWithContext(context.Context) InfluxInstanceNodeArrayOutput
}

type InfluxInstanceNodeArray []InfluxInstanceNodeInput

func (InfluxInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfluxInstanceNode)(nil)).Elem()
}

func (i InfluxInstanceNodeArray) ToInfluxInstanceNodeArrayOutput() InfluxInstanceNodeArrayOutput {
	return i.ToInfluxInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InfluxInstanceNodeArray) ToInfluxInstanceNodeArrayOutputWithContext(ctx context.Context) InfluxInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfluxInstanceNodeArrayOutput)
}

type InfluxInstanceNodeOutput struct{ *pulumi.OutputState }

func (InfluxInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfluxInstanceNode)(nil)).Elem()
}

func (o InfluxInstanceNodeOutput) ToInfluxInstanceNodeOutput() InfluxInstanceNodeOutput {
	return o
}

func (o InfluxInstanceNodeOutput) ToInfluxInstanceNodeOutputWithContext(ctx context.Context) InfluxInstanceNodeOutput {
	return o
}

// Indicates the node ID.
func (o InfluxInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the instance name, which can be the same as an existing instance name. The
// value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
// letters, digits, hyphens (-), and underscores (_).
func (o InfluxInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o InfluxInstanceNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxInstanceNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o InfluxInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfluxInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates whether the node support reduce or not.
func (o InfluxInstanceNodeOutput) SupportReduce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InfluxInstanceNode) *bool { return v.SupportReduce }).(pulumi.BoolPtrOutput)
}

type InfluxInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InfluxInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InfluxInstanceNode)(nil)).Elem()
}

func (o InfluxInstanceNodeArrayOutput) ToInfluxInstanceNodeArrayOutput() InfluxInstanceNodeArrayOutput {
	return o
}

func (o InfluxInstanceNodeArrayOutput) ToInfluxInstanceNodeArrayOutputWithContext(ctx context.Context) InfluxInstanceNodeArrayOutput {
	return o
}

func (o InfluxInstanceNodeArrayOutput) Index(i pulumi.IntInput) InfluxInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InfluxInstanceNode {
		return vs[0].([]InfluxInstanceNode)[vs[1].(int)]
	}).(InfluxInstanceNodeOutput)
}

type MongoInstanceBackupStrategy struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
	// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime string `pulumi:"startTime"`
}

// MongoInstanceBackupStrategyInput is an input type that accepts MongoInstanceBackupStrategyArgs and MongoInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `MongoInstanceBackupStrategyInput` via:
//
//	MongoInstanceBackupStrategyArgs{...}
type MongoInstanceBackupStrategyInput interface {
	pulumi.Input

	ToMongoInstanceBackupStrategyOutput() MongoInstanceBackupStrategyOutput
	ToMongoInstanceBackupStrategyOutputWithContext(context.Context) MongoInstanceBackupStrategyOutput
}

type MongoInstanceBackupStrategyArgs struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
	// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (MongoInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoInstanceBackupStrategy)(nil)).Elem()
}

func (i MongoInstanceBackupStrategyArgs) ToMongoInstanceBackupStrategyOutput() MongoInstanceBackupStrategyOutput {
	return i.ToMongoInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i MongoInstanceBackupStrategyArgs) ToMongoInstanceBackupStrategyOutputWithContext(ctx context.Context) MongoInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceBackupStrategyOutput)
}

func (i MongoInstanceBackupStrategyArgs) ToMongoInstanceBackupStrategyPtrOutput() MongoInstanceBackupStrategyPtrOutput {
	return i.ToMongoInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i MongoInstanceBackupStrategyArgs) ToMongoInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MongoInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceBackupStrategyOutput).ToMongoInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// MongoInstanceBackupStrategyPtrInput is an input type that accepts MongoInstanceBackupStrategyArgs, MongoInstanceBackupStrategyPtr and MongoInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `MongoInstanceBackupStrategyPtrInput` via:
//
//	        MongoInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type MongoInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToMongoInstanceBackupStrategyPtrOutput() MongoInstanceBackupStrategyPtrOutput
	ToMongoInstanceBackupStrategyPtrOutputWithContext(context.Context) MongoInstanceBackupStrategyPtrOutput
}

type mongoInstanceBackupStrategyPtrType MongoInstanceBackupStrategyArgs

func MongoInstanceBackupStrategyPtr(v *MongoInstanceBackupStrategyArgs) MongoInstanceBackupStrategyPtrInput {
	return (*mongoInstanceBackupStrategyPtrType)(v)
}

func (*mongoInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoInstanceBackupStrategy)(nil)).Elem()
}

func (i *mongoInstanceBackupStrategyPtrType) ToMongoInstanceBackupStrategyPtrOutput() MongoInstanceBackupStrategyPtrOutput {
	return i.ToMongoInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *mongoInstanceBackupStrategyPtrType) ToMongoInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MongoInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceBackupStrategyPtrOutput)
}

type MongoInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (MongoInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoInstanceBackupStrategy)(nil)).Elem()
}

func (o MongoInstanceBackupStrategyOutput) ToMongoInstanceBackupStrategyOutput() MongoInstanceBackupStrategyOutput {
	return o
}

func (o MongoInstanceBackupStrategyOutput) ToMongoInstanceBackupStrategyOutputWithContext(ctx context.Context) MongoInstanceBackupStrategyOutput {
	return o
}

func (o MongoInstanceBackupStrategyOutput) ToMongoInstanceBackupStrategyPtrOutput() MongoInstanceBackupStrategyPtrOutput {
	return o.ToMongoInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o MongoInstanceBackupStrategyOutput) ToMongoInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MongoInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoInstanceBackupStrategy) *MongoInstanceBackupStrategy {
		return &v
	}).(MongoInstanceBackupStrategyPtrOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o MongoInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o MongoInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v MongoInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type MongoInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (MongoInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoInstanceBackupStrategy)(nil)).Elem()
}

func (o MongoInstanceBackupStrategyPtrOutput) ToMongoInstanceBackupStrategyPtrOutput() MongoInstanceBackupStrategyPtrOutput {
	return o
}

func (o MongoInstanceBackupStrategyPtrOutput) ToMongoInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) MongoInstanceBackupStrategyPtrOutput {
	return o
}

func (o MongoInstanceBackupStrategyPtrOutput) Elem() MongoInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *MongoInstanceBackupStrategy) MongoInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret MongoInstanceBackupStrategy
		return ret
	}).(MongoInstanceBackupStrategyOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
// transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o MongoInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o MongoInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type MongoInstanceDatastore struct {
	// Specifies the database engine. Only **mongodb** is supported now.
	Engine string `pulumi:"engine"`
	// Specifies the storage engine. Only **rocksDB** is supported now.
	StorageEngine string `pulumi:"storageEngine"`
	// Specifies the database version.
	Version string `pulumi:"version"`
}

// MongoInstanceDatastoreInput is an input type that accepts MongoInstanceDatastoreArgs and MongoInstanceDatastoreOutput values.
// You can construct a concrete instance of `MongoInstanceDatastoreInput` via:
//
//	MongoInstanceDatastoreArgs{...}
type MongoInstanceDatastoreInput interface {
	pulumi.Input

	ToMongoInstanceDatastoreOutput() MongoInstanceDatastoreOutput
	ToMongoInstanceDatastoreOutputWithContext(context.Context) MongoInstanceDatastoreOutput
}

type MongoInstanceDatastoreArgs struct {
	// Specifies the database engine. Only **mongodb** is supported now.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the storage engine. Only **rocksDB** is supported now.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Specifies the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (MongoInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoInstanceDatastore)(nil)).Elem()
}

func (i MongoInstanceDatastoreArgs) ToMongoInstanceDatastoreOutput() MongoInstanceDatastoreOutput {
	return i.ToMongoInstanceDatastoreOutputWithContext(context.Background())
}

func (i MongoInstanceDatastoreArgs) ToMongoInstanceDatastoreOutputWithContext(ctx context.Context) MongoInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceDatastoreOutput)
}

func (i MongoInstanceDatastoreArgs) ToMongoInstanceDatastorePtrOutput() MongoInstanceDatastorePtrOutput {
	return i.ToMongoInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i MongoInstanceDatastoreArgs) ToMongoInstanceDatastorePtrOutputWithContext(ctx context.Context) MongoInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceDatastoreOutput).ToMongoInstanceDatastorePtrOutputWithContext(ctx)
}

// MongoInstanceDatastorePtrInput is an input type that accepts MongoInstanceDatastoreArgs, MongoInstanceDatastorePtr and MongoInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `MongoInstanceDatastorePtrInput` via:
//
//	        MongoInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type MongoInstanceDatastorePtrInput interface {
	pulumi.Input

	ToMongoInstanceDatastorePtrOutput() MongoInstanceDatastorePtrOutput
	ToMongoInstanceDatastorePtrOutputWithContext(context.Context) MongoInstanceDatastorePtrOutput
}

type mongoInstanceDatastorePtrType MongoInstanceDatastoreArgs

func MongoInstanceDatastorePtr(v *MongoInstanceDatastoreArgs) MongoInstanceDatastorePtrInput {
	return (*mongoInstanceDatastorePtrType)(v)
}

func (*mongoInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoInstanceDatastore)(nil)).Elem()
}

func (i *mongoInstanceDatastorePtrType) ToMongoInstanceDatastorePtrOutput() MongoInstanceDatastorePtrOutput {
	return i.ToMongoInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *mongoInstanceDatastorePtrType) ToMongoInstanceDatastorePtrOutputWithContext(ctx context.Context) MongoInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceDatastorePtrOutput)
}

type MongoInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (MongoInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoInstanceDatastore)(nil)).Elem()
}

func (o MongoInstanceDatastoreOutput) ToMongoInstanceDatastoreOutput() MongoInstanceDatastoreOutput {
	return o
}

func (o MongoInstanceDatastoreOutput) ToMongoInstanceDatastoreOutputWithContext(ctx context.Context) MongoInstanceDatastoreOutput {
	return o
}

func (o MongoInstanceDatastoreOutput) ToMongoInstanceDatastorePtrOutput() MongoInstanceDatastorePtrOutput {
	return o.ToMongoInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o MongoInstanceDatastoreOutput) ToMongoInstanceDatastorePtrOutputWithContext(ctx context.Context) MongoInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoInstanceDatastore) *MongoInstanceDatastore {
		return &v
	}).(MongoInstanceDatastorePtrOutput)
}

// Specifies the database engine. Only **mongodb** is supported now.
func (o MongoInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v MongoInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the storage engine. Only **rocksDB** is supported now.
func (o MongoInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v MongoInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Specifies the database version.
func (o MongoInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v MongoInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type MongoInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (MongoInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoInstanceDatastore)(nil)).Elem()
}

func (o MongoInstanceDatastorePtrOutput) ToMongoInstanceDatastorePtrOutput() MongoInstanceDatastorePtrOutput {
	return o
}

func (o MongoInstanceDatastorePtrOutput) ToMongoInstanceDatastorePtrOutputWithContext(ctx context.Context) MongoInstanceDatastorePtrOutput {
	return o
}

func (o MongoInstanceDatastorePtrOutput) Elem() MongoInstanceDatastoreOutput {
	return o.ApplyT(func(v *MongoInstanceDatastore) MongoInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret MongoInstanceDatastore
		return ret
	}).(MongoInstanceDatastoreOutput)
}

// Specifies the database engine. Only **mongodb** is supported now.
func (o MongoInstanceDatastorePtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage engine. Only **rocksDB** is supported now.
func (o MongoInstanceDatastorePtrOutput) StorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.StorageEngine
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version.
func (o MongoInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type MongoInstanceNode struct {
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The
	// value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp *string `pulumi:"privateIp"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce *bool `pulumi:"supportReduce"`
}

// MongoInstanceNodeInput is an input type that accepts MongoInstanceNodeArgs and MongoInstanceNodeOutput values.
// You can construct a concrete instance of `MongoInstanceNodeInput` via:
//
//	MongoInstanceNodeArgs{...}
type MongoInstanceNodeInput interface {
	pulumi.Input

	ToMongoInstanceNodeOutput() MongoInstanceNodeOutput
	ToMongoInstanceNodeOutputWithContext(context.Context) MongoInstanceNodeOutput
}

type MongoInstanceNodeArgs struct {
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The
	// value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
	// letters, digits, hyphens (-), and underscores (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce pulumi.BoolPtrInput `pulumi:"supportReduce"`
}

func (MongoInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoInstanceNode)(nil)).Elem()
}

func (i MongoInstanceNodeArgs) ToMongoInstanceNodeOutput() MongoInstanceNodeOutput {
	return i.ToMongoInstanceNodeOutputWithContext(context.Background())
}

func (i MongoInstanceNodeArgs) ToMongoInstanceNodeOutputWithContext(ctx context.Context) MongoInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceNodeOutput)
}

// MongoInstanceNodeArrayInput is an input type that accepts MongoInstanceNodeArray and MongoInstanceNodeArrayOutput values.
// You can construct a concrete instance of `MongoInstanceNodeArrayInput` via:
//
//	MongoInstanceNodeArray{ MongoInstanceNodeArgs{...} }
type MongoInstanceNodeArrayInput interface {
	pulumi.Input

	ToMongoInstanceNodeArrayOutput() MongoInstanceNodeArrayOutput
	ToMongoInstanceNodeArrayOutputWithContext(context.Context) MongoInstanceNodeArrayOutput
}

type MongoInstanceNodeArray []MongoInstanceNodeInput

func (MongoInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoInstanceNode)(nil)).Elem()
}

func (i MongoInstanceNodeArray) ToMongoInstanceNodeArrayOutput() MongoInstanceNodeArrayOutput {
	return i.ToMongoInstanceNodeArrayOutputWithContext(context.Background())
}

func (i MongoInstanceNodeArray) ToMongoInstanceNodeArrayOutputWithContext(ctx context.Context) MongoInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoInstanceNodeArrayOutput)
}

type MongoInstanceNodeOutput struct{ *pulumi.OutputState }

func (MongoInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoInstanceNode)(nil)).Elem()
}

func (o MongoInstanceNodeOutput) ToMongoInstanceNodeOutput() MongoInstanceNodeOutput {
	return o
}

func (o MongoInstanceNodeOutput) ToMongoInstanceNodeOutputWithContext(ctx context.Context) MongoInstanceNodeOutput {
	return o
}

// Indicates the node ID.
func (o MongoInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the instance name, which can be the same as an existing instance name. The
// value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
// letters, digits, hyphens (-), and underscores (_).
func (o MongoInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o MongoInstanceNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoInstanceNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o MongoInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates whether the node support reduce or not.
func (o MongoInstanceNodeOutput) SupportReduce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoInstanceNode) *bool { return v.SupportReduce }).(pulumi.BoolPtrOutput)
}

type MongoInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (MongoInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoInstanceNode)(nil)).Elem()
}

func (o MongoInstanceNodeArrayOutput) ToMongoInstanceNodeArrayOutput() MongoInstanceNodeArrayOutput {
	return o
}

func (o MongoInstanceNodeArrayOutput) ToMongoInstanceNodeArrayOutputWithContext(ctx context.Context) MongoInstanceNodeArrayOutput {
	return o
}

func (o MongoInstanceNodeArrayOutput) Index(i pulumi.IntInput) MongoInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoInstanceNode {
		return vs[0].([]MongoInstanceNode)[vs[1].(int)]
	}).(MongoInstanceNodeOutput)
}

type RedisInstanceBackupStrategy struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
	// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays *int `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime string `pulumi:"startTime"`
}

// RedisInstanceBackupStrategyInput is an input type that accepts RedisInstanceBackupStrategyArgs and RedisInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `RedisInstanceBackupStrategyInput` via:
//
//	RedisInstanceBackupStrategyArgs{...}
type RedisInstanceBackupStrategyInput interface {
	pulumi.Input

	ToRedisInstanceBackupStrategyOutput() RedisInstanceBackupStrategyOutput
	ToRedisInstanceBackupStrategyOutputWithContext(context.Context) RedisInstanceBackupStrategyOutput
}

type RedisInstanceBackupStrategyArgs struct {
	// Specifies the number of days to retain the generated backup files. The value ranges from
	// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
	// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
	KeepDays pulumi.IntPtrInput `pulumi:"keepDays"`
	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
	// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
	// value: 08:00-09:00, 03:00-04:00.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (RedisInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisInstanceBackupStrategy)(nil)).Elem()
}

func (i RedisInstanceBackupStrategyArgs) ToRedisInstanceBackupStrategyOutput() RedisInstanceBackupStrategyOutput {
	return i.ToRedisInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i RedisInstanceBackupStrategyArgs) ToRedisInstanceBackupStrategyOutputWithContext(ctx context.Context) RedisInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceBackupStrategyOutput)
}

func (i RedisInstanceBackupStrategyArgs) ToRedisInstanceBackupStrategyPtrOutput() RedisInstanceBackupStrategyPtrOutput {
	return i.ToRedisInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i RedisInstanceBackupStrategyArgs) ToRedisInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RedisInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceBackupStrategyOutput).ToRedisInstanceBackupStrategyPtrOutputWithContext(ctx)
}

// RedisInstanceBackupStrategyPtrInput is an input type that accepts RedisInstanceBackupStrategyArgs, RedisInstanceBackupStrategyPtr and RedisInstanceBackupStrategyPtrOutput values.
// You can construct a concrete instance of `RedisInstanceBackupStrategyPtrInput` via:
//
//	        RedisInstanceBackupStrategyArgs{...}
//
//	or:
//
//	        nil
type RedisInstanceBackupStrategyPtrInput interface {
	pulumi.Input

	ToRedisInstanceBackupStrategyPtrOutput() RedisInstanceBackupStrategyPtrOutput
	ToRedisInstanceBackupStrategyPtrOutputWithContext(context.Context) RedisInstanceBackupStrategyPtrOutput
}

type redisInstanceBackupStrategyPtrType RedisInstanceBackupStrategyArgs

func RedisInstanceBackupStrategyPtr(v *RedisInstanceBackupStrategyArgs) RedisInstanceBackupStrategyPtrInput {
	return (*redisInstanceBackupStrategyPtrType)(v)
}

func (*redisInstanceBackupStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisInstanceBackupStrategy)(nil)).Elem()
}

func (i *redisInstanceBackupStrategyPtrType) ToRedisInstanceBackupStrategyPtrOutput() RedisInstanceBackupStrategyPtrOutput {
	return i.ToRedisInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (i *redisInstanceBackupStrategyPtrType) ToRedisInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RedisInstanceBackupStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceBackupStrategyPtrOutput)
}

type RedisInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (RedisInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisInstanceBackupStrategy)(nil)).Elem()
}

func (o RedisInstanceBackupStrategyOutput) ToRedisInstanceBackupStrategyOutput() RedisInstanceBackupStrategyOutput {
	return o
}

func (o RedisInstanceBackupStrategyOutput) ToRedisInstanceBackupStrategyOutputWithContext(ctx context.Context) RedisInstanceBackupStrategyOutput {
	return o
}

func (o RedisInstanceBackupStrategyOutput) ToRedisInstanceBackupStrategyPtrOutput() RedisInstanceBackupStrategyPtrOutput {
	return o.ToRedisInstanceBackupStrategyPtrOutputWithContext(context.Background())
}

func (o RedisInstanceBackupStrategyOutput) ToRedisInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RedisInstanceBackupStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisInstanceBackupStrategy) *RedisInstanceBackupStrategy {
		return &v
	}).(RedisInstanceBackupStrategyPtrOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o RedisInstanceBackupStrategyOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RedisInstanceBackupStrategy) *int { return v.KeepDays }).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o RedisInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v RedisInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type RedisInstanceBackupStrategyPtrOutput struct{ *pulumi.OutputState }

func (RedisInstanceBackupStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisInstanceBackupStrategy)(nil)).Elem()
}

func (o RedisInstanceBackupStrategyPtrOutput) ToRedisInstanceBackupStrategyPtrOutput() RedisInstanceBackupStrategyPtrOutput {
	return o
}

func (o RedisInstanceBackupStrategyPtrOutput) ToRedisInstanceBackupStrategyPtrOutputWithContext(ctx context.Context) RedisInstanceBackupStrategyPtrOutput {
	return o
}

func (o RedisInstanceBackupStrategyPtrOutput) Elem() RedisInstanceBackupStrategyOutput {
	return o.ApplyT(func(v *RedisInstanceBackupStrategy) RedisInstanceBackupStrategy {
		if v != nil {
			return *v
		}
		var ret RedisInstanceBackupStrategy
		return ret
	}).(RedisInstanceBackupStrategyOutput)
}

// Specifies the number of days to retain the generated backup files. The value ranges from
// 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
// the automated backup policy is enabled by default. Backup files are stored for seven days by default.
func (o RedisInstanceBackupStrategyPtrOutput) KeepDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RedisInstanceBackupStrategy) *int {
		if v == nil {
			return nil
		}
		return v.KeepDays
	}).(pulumi.IntPtrOutput)
}

// Specifies the backup time window. Automated backups will be triggered during the
// backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
// HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
// value: 08:00-09:00, 03:00-04:00.
func (o RedisInstanceBackupStrategyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstanceBackupStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

type RedisInstanceDatastore struct {
	// Specifies the database engine. Only "redis" is supported now.
	Engine string `pulumi:"engine"`
	// Specifies the storage engine. Only "rocksDB" is supported now.
	StorageEngine string `pulumi:"storageEngine"`
	// Specifies the database version. Only "5.0" is supported now.
	Version string `pulumi:"version"`
}

// RedisInstanceDatastoreInput is an input type that accepts RedisInstanceDatastoreArgs and RedisInstanceDatastoreOutput values.
// You can construct a concrete instance of `RedisInstanceDatastoreInput` via:
//
//	RedisInstanceDatastoreArgs{...}
type RedisInstanceDatastoreInput interface {
	pulumi.Input

	ToRedisInstanceDatastoreOutput() RedisInstanceDatastoreOutput
	ToRedisInstanceDatastoreOutputWithContext(context.Context) RedisInstanceDatastoreOutput
}

type RedisInstanceDatastoreArgs struct {
	// Specifies the database engine. Only "redis" is supported now.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the storage engine. Only "rocksDB" is supported now.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Specifies the database version. Only "5.0" is supported now.
	Version pulumi.StringInput `pulumi:"version"`
}

func (RedisInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisInstanceDatastore)(nil)).Elem()
}

func (i RedisInstanceDatastoreArgs) ToRedisInstanceDatastoreOutput() RedisInstanceDatastoreOutput {
	return i.ToRedisInstanceDatastoreOutputWithContext(context.Background())
}

func (i RedisInstanceDatastoreArgs) ToRedisInstanceDatastoreOutputWithContext(ctx context.Context) RedisInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceDatastoreOutput)
}

func (i RedisInstanceDatastoreArgs) ToRedisInstanceDatastorePtrOutput() RedisInstanceDatastorePtrOutput {
	return i.ToRedisInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i RedisInstanceDatastoreArgs) ToRedisInstanceDatastorePtrOutputWithContext(ctx context.Context) RedisInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceDatastoreOutput).ToRedisInstanceDatastorePtrOutputWithContext(ctx)
}

// RedisInstanceDatastorePtrInput is an input type that accepts RedisInstanceDatastoreArgs, RedisInstanceDatastorePtr and RedisInstanceDatastorePtrOutput values.
// You can construct a concrete instance of `RedisInstanceDatastorePtrInput` via:
//
//	        RedisInstanceDatastoreArgs{...}
//
//	or:
//
//	        nil
type RedisInstanceDatastorePtrInput interface {
	pulumi.Input

	ToRedisInstanceDatastorePtrOutput() RedisInstanceDatastorePtrOutput
	ToRedisInstanceDatastorePtrOutputWithContext(context.Context) RedisInstanceDatastorePtrOutput
}

type redisInstanceDatastorePtrType RedisInstanceDatastoreArgs

func RedisInstanceDatastorePtr(v *RedisInstanceDatastoreArgs) RedisInstanceDatastorePtrInput {
	return (*redisInstanceDatastorePtrType)(v)
}

func (*redisInstanceDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisInstanceDatastore)(nil)).Elem()
}

func (i *redisInstanceDatastorePtrType) ToRedisInstanceDatastorePtrOutput() RedisInstanceDatastorePtrOutput {
	return i.ToRedisInstanceDatastorePtrOutputWithContext(context.Background())
}

func (i *redisInstanceDatastorePtrType) ToRedisInstanceDatastorePtrOutputWithContext(ctx context.Context) RedisInstanceDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceDatastorePtrOutput)
}

type RedisInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (RedisInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisInstanceDatastore)(nil)).Elem()
}

func (o RedisInstanceDatastoreOutput) ToRedisInstanceDatastoreOutput() RedisInstanceDatastoreOutput {
	return o
}

func (o RedisInstanceDatastoreOutput) ToRedisInstanceDatastoreOutputWithContext(ctx context.Context) RedisInstanceDatastoreOutput {
	return o
}

func (o RedisInstanceDatastoreOutput) ToRedisInstanceDatastorePtrOutput() RedisInstanceDatastorePtrOutput {
	return o.ToRedisInstanceDatastorePtrOutputWithContext(context.Background())
}

func (o RedisInstanceDatastoreOutput) ToRedisInstanceDatastorePtrOutputWithContext(ctx context.Context) RedisInstanceDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RedisInstanceDatastore) *RedisInstanceDatastore {
		return &v
	}).(RedisInstanceDatastorePtrOutput)
}

// Specifies the database engine. Only "redis" is supported now.
func (o RedisInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v RedisInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the storage engine. Only "rocksDB" is supported now.
func (o RedisInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v RedisInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Specifies the database version. Only "5.0" is supported now.
func (o RedisInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v RedisInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type RedisInstanceDatastorePtrOutput struct{ *pulumi.OutputState }

func (RedisInstanceDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisInstanceDatastore)(nil)).Elem()
}

func (o RedisInstanceDatastorePtrOutput) ToRedisInstanceDatastorePtrOutput() RedisInstanceDatastorePtrOutput {
	return o
}

func (o RedisInstanceDatastorePtrOutput) ToRedisInstanceDatastorePtrOutputWithContext(ctx context.Context) RedisInstanceDatastorePtrOutput {
	return o
}

func (o RedisInstanceDatastorePtrOutput) Elem() RedisInstanceDatastoreOutput {
	return o.ApplyT(func(v *RedisInstanceDatastore) RedisInstanceDatastore {
		if v != nil {
			return *v
		}
		var ret RedisInstanceDatastore
		return ret
	}).(RedisInstanceDatastoreOutput)
}

// Specifies the database engine. Only "redis" is supported now.
func (o RedisInstanceDatastorePtrOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Engine
	}).(pulumi.StringPtrOutput)
}

// Specifies the storage engine. Only "rocksDB" is supported now.
func (o RedisInstanceDatastorePtrOutput) StorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.StorageEngine
	}).(pulumi.StringPtrOutput)
}

// Specifies the database version. Only "5.0" is supported now.
func (o RedisInstanceDatastorePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstanceDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type RedisInstanceNode struct {
	// Indicates the node ID.
	Id *string `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The value
	// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
	// digits, hyphens (-), and underscores (_). Chinese characters must be in UTF-8 or Unicode format.
	Name *string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp *string `pulumi:"privateIp"`
	// Indicates the node status.
	Status *string `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce *bool `pulumi:"supportReduce"`
}

// RedisInstanceNodeInput is an input type that accepts RedisInstanceNodeArgs and RedisInstanceNodeOutput values.
// You can construct a concrete instance of `RedisInstanceNodeInput` via:
//
//	RedisInstanceNodeArgs{...}
type RedisInstanceNodeInput interface {
	pulumi.Input

	ToRedisInstanceNodeOutput() RedisInstanceNodeOutput
	ToRedisInstanceNodeOutputWithContext(context.Context) RedisInstanceNodeOutput
}

type RedisInstanceNodeArgs struct {
	// Indicates the node ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the instance name, which can be the same as an existing instance name. The value
	// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
	// digits, hyphens (-), and underscores (_). Chinese characters must be in UTF-8 or Unicode format.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringPtrInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Indicates whether the node support reduce or not.
	SupportReduce pulumi.BoolPtrInput `pulumi:"supportReduce"`
}

func (RedisInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisInstanceNode)(nil)).Elem()
}

func (i RedisInstanceNodeArgs) ToRedisInstanceNodeOutput() RedisInstanceNodeOutput {
	return i.ToRedisInstanceNodeOutputWithContext(context.Background())
}

func (i RedisInstanceNodeArgs) ToRedisInstanceNodeOutputWithContext(ctx context.Context) RedisInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceNodeOutput)
}

// RedisInstanceNodeArrayInput is an input type that accepts RedisInstanceNodeArray and RedisInstanceNodeArrayOutput values.
// You can construct a concrete instance of `RedisInstanceNodeArrayInput` via:
//
//	RedisInstanceNodeArray{ RedisInstanceNodeArgs{...} }
type RedisInstanceNodeArrayInput interface {
	pulumi.Input

	ToRedisInstanceNodeArrayOutput() RedisInstanceNodeArrayOutput
	ToRedisInstanceNodeArrayOutputWithContext(context.Context) RedisInstanceNodeArrayOutput
}

type RedisInstanceNodeArray []RedisInstanceNodeInput

func (RedisInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisInstanceNode)(nil)).Elem()
}

func (i RedisInstanceNodeArray) ToRedisInstanceNodeArrayOutput() RedisInstanceNodeArrayOutput {
	return i.ToRedisInstanceNodeArrayOutputWithContext(context.Background())
}

func (i RedisInstanceNodeArray) ToRedisInstanceNodeArrayOutputWithContext(ctx context.Context) RedisInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceNodeArrayOutput)
}

type RedisInstanceNodeOutput struct{ *pulumi.OutputState }

func (RedisInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedisInstanceNode)(nil)).Elem()
}

func (o RedisInstanceNodeOutput) ToRedisInstanceNodeOutput() RedisInstanceNodeOutput {
	return o
}

func (o RedisInstanceNodeOutput) ToRedisInstanceNodeOutputWithContext(ctx context.Context) RedisInstanceNodeOutput {
	return o
}

// Indicates the node ID.
func (o RedisInstanceNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisInstanceNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the instance name, which can be the same as an existing instance name. The value
// must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
// digits, hyphens (-), and underscores (_). Chinese characters must be in UTF-8 or Unicode format.
func (o RedisInstanceNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisInstanceNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Indicates the private IP address of a node.
func (o RedisInstanceNodeOutput) PrivateIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisInstanceNode) *string { return v.PrivateIp }).(pulumi.StringPtrOutput)
}

// Indicates the node status.
func (o RedisInstanceNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedisInstanceNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Indicates whether the node support reduce or not.
func (o RedisInstanceNodeOutput) SupportReduce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RedisInstanceNode) *bool { return v.SupportReduce }).(pulumi.BoolPtrOutput)
}

type RedisInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (RedisInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RedisInstanceNode)(nil)).Elem()
}

func (o RedisInstanceNodeArrayOutput) ToRedisInstanceNodeArrayOutput() RedisInstanceNodeArrayOutput {
	return o
}

func (o RedisInstanceNodeArrayOutput) ToRedisInstanceNodeArrayOutputWithContext(ctx context.Context) RedisInstanceNodeArrayOutput {
	return o
}

func (o RedisInstanceNodeArrayOutput) Index(i pulumi.IntInput) RedisInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RedisInstanceNode {
		return vs[0].([]RedisInstanceNode)[vs[1].(int)]
	}).(RedisInstanceNodeOutput)
}

type GetCassandraFlavorsFlavor struct {
	// Indicates the flavor status in each availability zone.
	AzStatus map[string]string `pulumi:"azStatus"`
	// Specifies the memory size of the flavors.
	Memory string `pulumi:"memory"`
	// Indicates the spec code of the flavor.
	Name string `pulumi:"name"`
	// Specifies the count of vcpus of the flavors.
	Vcpus string `pulumi:"vcpus"`
	// Specifies the engine version of the flavors.
	Version string `pulumi:"version"`
}

// GetCassandraFlavorsFlavorInput is an input type that accepts GetCassandraFlavorsFlavorArgs and GetCassandraFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetCassandraFlavorsFlavorInput` via:
//
//	GetCassandraFlavorsFlavorArgs{...}
type GetCassandraFlavorsFlavorInput interface {
	pulumi.Input

	ToGetCassandraFlavorsFlavorOutput() GetCassandraFlavorsFlavorOutput
	ToGetCassandraFlavorsFlavorOutputWithContext(context.Context) GetCassandraFlavorsFlavorOutput
}

type GetCassandraFlavorsFlavorArgs struct {
	// Indicates the flavor status in each availability zone.
	AzStatus pulumi.StringMapInput `pulumi:"azStatus"`
	// Specifies the memory size of the flavors.
	Memory pulumi.StringInput `pulumi:"memory"`
	// Indicates the spec code of the flavor.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the count of vcpus of the flavors.
	Vcpus pulumi.StringInput `pulumi:"vcpus"`
	// Specifies the engine version of the flavors.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetCassandraFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraFlavorsFlavor)(nil)).Elem()
}

func (i GetCassandraFlavorsFlavorArgs) ToGetCassandraFlavorsFlavorOutput() GetCassandraFlavorsFlavorOutput {
	return i.ToGetCassandraFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetCassandraFlavorsFlavorArgs) ToGetCassandraFlavorsFlavorOutputWithContext(ctx context.Context) GetCassandraFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraFlavorsFlavorOutput)
}

// GetCassandraFlavorsFlavorArrayInput is an input type that accepts GetCassandraFlavorsFlavorArray and GetCassandraFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetCassandraFlavorsFlavorArrayInput` via:
//
//	GetCassandraFlavorsFlavorArray{ GetCassandraFlavorsFlavorArgs{...} }
type GetCassandraFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetCassandraFlavorsFlavorArrayOutput() GetCassandraFlavorsFlavorArrayOutput
	ToGetCassandraFlavorsFlavorArrayOutputWithContext(context.Context) GetCassandraFlavorsFlavorArrayOutput
}

type GetCassandraFlavorsFlavorArray []GetCassandraFlavorsFlavorInput

func (GetCassandraFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraFlavorsFlavor)(nil)).Elem()
}

func (i GetCassandraFlavorsFlavorArray) ToGetCassandraFlavorsFlavorArrayOutput() GetCassandraFlavorsFlavorArrayOutput {
	return i.ToGetCassandraFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetCassandraFlavorsFlavorArray) ToGetCassandraFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCassandraFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraFlavorsFlavorArrayOutput)
}

type GetCassandraFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetCassandraFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraFlavorsFlavor)(nil)).Elem()
}

func (o GetCassandraFlavorsFlavorOutput) ToGetCassandraFlavorsFlavorOutput() GetCassandraFlavorsFlavorOutput {
	return o
}

func (o GetCassandraFlavorsFlavorOutput) ToGetCassandraFlavorsFlavorOutputWithContext(ctx context.Context) GetCassandraFlavorsFlavorOutput {
	return o
}

// Indicates the flavor status in each availability zone.
func (o GetCassandraFlavorsFlavorOutput) AzStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCassandraFlavorsFlavor) map[string]string { return v.AzStatus }).(pulumi.StringMapOutput)
}

// Specifies the memory size of the flavors.
func (o GetCassandraFlavorsFlavorOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraFlavorsFlavor) string { return v.Memory }).(pulumi.StringOutput)
}

// Indicates the spec code of the flavor.
func (o GetCassandraFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the count of vcpus of the flavors.
func (o GetCassandraFlavorsFlavorOutput) Vcpus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraFlavorsFlavor) string { return v.Vcpus }).(pulumi.StringOutput)
}

// Specifies the engine version of the flavors.
func (o GetCassandraFlavorsFlavorOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraFlavorsFlavor) string { return v.Version }).(pulumi.StringOutput)
}

type GetCassandraFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraFlavorsFlavor)(nil)).Elem()
}

func (o GetCassandraFlavorsFlavorArrayOutput) ToGetCassandraFlavorsFlavorArrayOutput() GetCassandraFlavorsFlavorArrayOutput {
	return o
}

func (o GetCassandraFlavorsFlavorArrayOutput) ToGetCassandraFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetCassandraFlavorsFlavorArrayOutput {
	return o
}

func (o GetCassandraFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetCassandraFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraFlavorsFlavor {
		return vs[0].([]GetCassandraFlavorsFlavor)[vs[1].(int)]
	}).(GetCassandraFlavorsFlavorOutput)
}

type GetCassandraInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetCassandraInstanceBackupStrategyInput is an input type that accepts GetCassandraInstanceBackupStrategyArgs and GetCassandraInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetCassandraInstanceBackupStrategyInput` via:
//
//	GetCassandraInstanceBackupStrategyArgs{...}
type GetCassandraInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetCassandraInstanceBackupStrategyOutput() GetCassandraInstanceBackupStrategyOutput
	ToGetCassandraInstanceBackupStrategyOutputWithContext(context.Context) GetCassandraInstanceBackupStrategyOutput
}

type GetCassandraInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetCassandraInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstanceBackupStrategy)(nil)).Elem()
}

func (i GetCassandraInstanceBackupStrategyArgs) ToGetCassandraInstanceBackupStrategyOutput() GetCassandraInstanceBackupStrategyOutput {
	return i.ToGetCassandraInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetCassandraInstanceBackupStrategyArgs) ToGetCassandraInstanceBackupStrategyOutputWithContext(ctx context.Context) GetCassandraInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstanceBackupStrategyOutput)
}

// GetCassandraInstanceBackupStrategyArrayInput is an input type that accepts GetCassandraInstanceBackupStrategyArray and GetCassandraInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstanceBackupStrategyArrayInput` via:
//
//	GetCassandraInstanceBackupStrategyArray{ GetCassandraInstanceBackupStrategyArgs{...} }
type GetCassandraInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetCassandraInstanceBackupStrategyArrayOutput() GetCassandraInstanceBackupStrategyArrayOutput
	ToGetCassandraInstanceBackupStrategyArrayOutputWithContext(context.Context) GetCassandraInstanceBackupStrategyArrayOutput
}

type GetCassandraInstanceBackupStrategyArray []GetCassandraInstanceBackupStrategyInput

func (GetCassandraInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstanceBackupStrategy)(nil)).Elem()
}

func (i GetCassandraInstanceBackupStrategyArray) ToGetCassandraInstanceBackupStrategyArrayOutput() GetCassandraInstanceBackupStrategyArrayOutput {
	return i.ToGetCassandraInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstanceBackupStrategyArray) ToGetCassandraInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetCassandraInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstanceBackupStrategyArrayOutput)
}

type GetCassandraInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetCassandraInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstanceBackupStrategy)(nil)).Elem()
}

func (o GetCassandraInstanceBackupStrategyOutput) ToGetCassandraInstanceBackupStrategyOutput() GetCassandraInstanceBackupStrategyOutput {
	return o
}

func (o GetCassandraInstanceBackupStrategyOutput) ToGetCassandraInstanceBackupStrategyOutputWithContext(ctx context.Context) GetCassandraInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetCassandraInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandraInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetCassandraInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetCassandraInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstanceBackupStrategy)(nil)).Elem()
}

func (o GetCassandraInstanceBackupStrategyArrayOutput) ToGetCassandraInstanceBackupStrategyArrayOutput() GetCassandraInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetCassandraInstanceBackupStrategyArrayOutput) ToGetCassandraInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetCassandraInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetCassandraInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetCassandraInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstanceBackupStrategy {
		return vs[0].([]GetCassandraInstanceBackupStrategy)[vs[1].(int)]
	}).(GetCassandraInstanceBackupStrategyOutput)
}

type GetCassandraInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database storage engine.
	StorageEngine string `pulumi:"storageEngine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetCassandraInstanceDatastoreInput is an input type that accepts GetCassandraInstanceDatastoreArgs and GetCassandraInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetCassandraInstanceDatastoreInput` via:
//
//	GetCassandraInstanceDatastoreArgs{...}
type GetCassandraInstanceDatastoreInput interface {
	pulumi.Input

	ToGetCassandraInstanceDatastoreOutput() GetCassandraInstanceDatastoreOutput
	ToGetCassandraInstanceDatastoreOutputWithContext(context.Context) GetCassandraInstanceDatastoreOutput
}

type GetCassandraInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database storage engine.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetCassandraInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstanceDatastore)(nil)).Elem()
}

func (i GetCassandraInstanceDatastoreArgs) ToGetCassandraInstanceDatastoreOutput() GetCassandraInstanceDatastoreOutput {
	return i.ToGetCassandraInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetCassandraInstanceDatastoreArgs) ToGetCassandraInstanceDatastoreOutputWithContext(ctx context.Context) GetCassandraInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstanceDatastoreOutput)
}

// GetCassandraInstanceDatastoreArrayInput is an input type that accepts GetCassandraInstanceDatastoreArray and GetCassandraInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstanceDatastoreArrayInput` via:
//
//	GetCassandraInstanceDatastoreArray{ GetCassandraInstanceDatastoreArgs{...} }
type GetCassandraInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetCassandraInstanceDatastoreArrayOutput() GetCassandraInstanceDatastoreArrayOutput
	ToGetCassandraInstanceDatastoreArrayOutputWithContext(context.Context) GetCassandraInstanceDatastoreArrayOutput
}

type GetCassandraInstanceDatastoreArray []GetCassandraInstanceDatastoreInput

func (GetCassandraInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstanceDatastore)(nil)).Elem()
}

func (i GetCassandraInstanceDatastoreArray) ToGetCassandraInstanceDatastoreArrayOutput() GetCassandraInstanceDatastoreArrayOutput {
	return i.ToGetCassandraInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstanceDatastoreArray) ToGetCassandraInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetCassandraInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstanceDatastoreArrayOutput)
}

type GetCassandraInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetCassandraInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstanceDatastore)(nil)).Elem()
}

func (o GetCassandraInstanceDatastoreOutput) ToGetCassandraInstanceDatastoreOutput() GetCassandraInstanceDatastoreOutput {
	return o
}

func (o GetCassandraInstanceDatastoreOutput) ToGetCassandraInstanceDatastoreOutputWithContext(ctx context.Context) GetCassandraInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetCassandraInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database storage engine.
func (o GetCassandraInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetCassandraInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetCassandraInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstanceDatastore)(nil)).Elem()
}

func (o GetCassandraInstanceDatastoreArrayOutput) ToGetCassandraInstanceDatastoreArrayOutput() GetCassandraInstanceDatastoreArrayOutput {
	return o
}

func (o GetCassandraInstanceDatastoreArrayOutput) ToGetCassandraInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetCassandraInstanceDatastoreArrayOutput {
	return o
}

func (o GetCassandraInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetCassandraInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstanceDatastore {
		return vs[0].([]GetCassandraInstanceDatastore)[vs[1].(int)]
	}).(GetCassandraInstanceDatastoreOutput)
}

type GetCassandraInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp string `pulumi:"privateIp"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Indicates whether the node support reduce.
	SupportReduce bool `pulumi:"supportReduce"`
}

// GetCassandraInstanceNodeInput is an input type that accepts GetCassandraInstanceNodeArgs and GetCassandraInstanceNodeOutput values.
// You can construct a concrete instance of `GetCassandraInstanceNodeInput` via:
//
//	GetCassandraInstanceNodeArgs{...}
type GetCassandraInstanceNodeInput interface {
	pulumi.Input

	ToGetCassandraInstanceNodeOutput() GetCassandraInstanceNodeOutput
	ToGetCassandraInstanceNodeOutputWithContext(context.Context) GetCassandraInstanceNodeOutput
}

type GetCassandraInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicates whether the node support reduce.
	SupportReduce pulumi.BoolInput `pulumi:"supportReduce"`
}

func (GetCassandraInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstanceNode)(nil)).Elem()
}

func (i GetCassandraInstanceNodeArgs) ToGetCassandraInstanceNodeOutput() GetCassandraInstanceNodeOutput {
	return i.ToGetCassandraInstanceNodeOutputWithContext(context.Background())
}

func (i GetCassandraInstanceNodeArgs) ToGetCassandraInstanceNodeOutputWithContext(ctx context.Context) GetCassandraInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstanceNodeOutput)
}

// GetCassandraInstanceNodeArrayInput is an input type that accepts GetCassandraInstanceNodeArray and GetCassandraInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstanceNodeArrayInput` via:
//
//	GetCassandraInstanceNodeArray{ GetCassandraInstanceNodeArgs{...} }
type GetCassandraInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetCassandraInstanceNodeArrayOutput() GetCassandraInstanceNodeArrayOutput
	ToGetCassandraInstanceNodeArrayOutputWithContext(context.Context) GetCassandraInstanceNodeArrayOutput
}

type GetCassandraInstanceNodeArray []GetCassandraInstanceNodeInput

func (GetCassandraInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstanceNode)(nil)).Elem()
}

func (i GetCassandraInstanceNodeArray) ToGetCassandraInstanceNodeArrayOutput() GetCassandraInstanceNodeArrayOutput {
	return i.ToGetCassandraInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstanceNodeArray) ToGetCassandraInstanceNodeArrayOutputWithContext(ctx context.Context) GetCassandraInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstanceNodeArrayOutput)
}

type GetCassandraInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetCassandraInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstanceNode)(nil)).Elem()
}

func (o GetCassandraInstanceNodeOutput) ToGetCassandraInstanceNodeOutput() GetCassandraInstanceNodeOutput {
	return o
}

func (o GetCassandraInstanceNodeOutput) ToGetCassandraInstanceNodeOutputWithContext(ctx context.Context) GetCassandraInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetCassandraInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetCassandraInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetCassandraInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the private IP address of a node.
func (o GetCassandraInstanceNodeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceNode) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetCassandraInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

// Indicates whether the node support reduce.
func (o GetCassandraInstanceNodeOutput) SupportReduce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCassandraInstanceNode) bool { return v.SupportReduce }).(pulumi.BoolOutput)
}

type GetCassandraInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstanceNode)(nil)).Elem()
}

func (o GetCassandraInstanceNodeArrayOutput) ToGetCassandraInstanceNodeArrayOutput() GetCassandraInstanceNodeArrayOutput {
	return o
}

func (o GetCassandraInstanceNodeArrayOutput) ToGetCassandraInstanceNodeArrayOutputWithContext(ctx context.Context) GetCassandraInstanceNodeArrayOutput {
	return o
}

func (o GetCassandraInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetCassandraInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstanceNode {
		return vs[0].([]GetCassandraInstanceNode)[vs[1].(int)]
	}).(GetCassandraInstanceNodeOutput)
}

type GetCassandraInstancesInstance struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies []GetCassandraInstancesInstanceBackupStrategy `pulumi:"backupStrategies"`
	// Indicates the database information. Structure is documented below.
	Datastores []GetCassandraInstancesInstanceDatastore `pulumi:"datastores"`
	// Indicates the default username.
	DbUserName string `pulumi:"dbUserName"`
	// Indicates the enterprise project id.
	EnterpriseProjectId string `pulumi:"enterpriseProjectId"`
	// Indicates the instance specifications.
	Flavor string `pulumi:"flavor"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Indicates the instance mode.
	Mode string `pulumi:"mode"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the count of the nodes.
	NodeNum int `pulumi:"nodeNum"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes []GetCassandraInstancesInstanceNode `pulumi:"nodes"`
	// Indicates the database port.
	Port int `pulumi:"port"`
	// Indicates the list of private IP address of the nodes.
	PrivateIps []string `pulumi:"privateIps"`
	// The region in which to obtain the instance. If omitted, the provider-level region will
	// be used.
	Region string `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId string `pulumi:"subnetId"`
	// Indicates the key/value tags of the instance.
	Tags map[string]string `pulumi:"tags"`
	// Indicates the size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// Specifies the VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// GetCassandraInstancesInstanceInput is an input type that accepts GetCassandraInstancesInstanceArgs and GetCassandraInstancesInstanceOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceInput` via:
//
//	GetCassandraInstancesInstanceArgs{...}
type GetCassandraInstancesInstanceInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceOutput() GetCassandraInstancesInstanceOutput
	ToGetCassandraInstancesInstanceOutputWithContext(context.Context) GetCassandraInstancesInstanceOutput
}

type GetCassandraInstancesInstanceArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the advanced backup policy. Structure is documented below.
	BackupStrategies GetCassandraInstancesInstanceBackupStrategyArrayInput `pulumi:"backupStrategies"`
	// Indicates the database information. Structure is documented below.
	Datastores GetCassandraInstancesInstanceDatastoreArrayInput `pulumi:"datastores"`
	// Indicates the default username.
	DbUserName pulumi.StringInput `pulumi:"dbUserName"`
	// Indicates the enterprise project id.
	EnterpriseProjectId pulumi.StringInput `pulumi:"enterpriseProjectId"`
	// Indicates the instance specifications.
	Flavor pulumi.StringInput `pulumi:"flavor"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates the instance mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the count of the nodes.
	NodeNum pulumi.IntInput `pulumi:"nodeNum"`
	// Indicates the instance nodes information. Structure is documented below.
	Nodes GetCassandraInstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Indicates the database port.
	Port pulumi.IntInput `pulumi:"port"`
	// Indicates the list of private IP address of the nodes.
	PrivateIps pulumi.StringArrayInput `pulumi:"privateIps"`
	// The region in which to obtain the instance. If omitted, the provider-level region will
	// be used.
	Region pulumi.StringInput `pulumi:"region"`
	// Indicates the security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Specifies the network ID of a subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Indicates the key/value tags of the instance.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Indicates the size of the volume.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Specifies the VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetCassandraInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstance)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceArgs) ToGetCassandraInstancesInstanceOutput() GetCassandraInstancesInstanceOutput {
	return i.ToGetCassandraInstancesInstanceOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceArgs) ToGetCassandraInstancesInstanceOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceOutput)
}

// GetCassandraInstancesInstanceArrayInput is an input type that accepts GetCassandraInstancesInstanceArray and GetCassandraInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceArrayInput` via:
//
//	GetCassandraInstancesInstanceArray{ GetCassandraInstancesInstanceArgs{...} }
type GetCassandraInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceArrayOutput() GetCassandraInstancesInstanceArrayOutput
	ToGetCassandraInstancesInstanceArrayOutputWithContext(context.Context) GetCassandraInstancesInstanceArrayOutput
}

type GetCassandraInstancesInstanceArray []GetCassandraInstancesInstanceInput

func (GetCassandraInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstance)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceArray) ToGetCassandraInstancesInstanceArrayOutput() GetCassandraInstancesInstanceArrayOutput {
	return i.ToGetCassandraInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceArray) ToGetCassandraInstancesInstanceArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceArrayOutput)
}

type GetCassandraInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstance)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceOutput) ToGetCassandraInstancesInstanceOutput() GetCassandraInstancesInstanceOutput {
	return o
}

func (o GetCassandraInstancesInstanceOutput) ToGetCassandraInstancesInstanceOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetCassandraInstancesInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the advanced backup policy. Structure is documented below.
func (o GetCassandraInstancesInstanceOutput) BackupStrategies() GetCassandraInstancesInstanceBackupStrategyArrayOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) []GetCassandraInstancesInstanceBackupStrategy {
		return v.BackupStrategies
	}).(GetCassandraInstancesInstanceBackupStrategyArrayOutput)
}

// Indicates the database information. Structure is documented below.
func (o GetCassandraInstancesInstanceOutput) Datastores() GetCassandraInstancesInstanceDatastoreArrayOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) []GetCassandraInstancesInstanceDatastore { return v.Datastores }).(GetCassandraInstancesInstanceDatastoreArrayOutput)
}

// Indicates the default username.
func (o GetCassandraInstancesInstanceOutput) DbUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.DbUserName }).(pulumi.StringOutput)
}

// Indicates the enterprise project id.
func (o GetCassandraInstancesInstanceOutput) EnterpriseProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.EnterpriseProjectId }).(pulumi.StringOutput)
}

// Indicates the instance specifications.
func (o GetCassandraInstancesInstanceOutput) Flavor() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.Flavor }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetCassandraInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates the instance mode.
func (o GetCassandraInstancesInstanceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.Mode }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetCassandraInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the count of the nodes.
func (o GetCassandraInstancesInstanceOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) int { return v.NodeNum }).(pulumi.IntOutput)
}

// Indicates the instance nodes information. Structure is documented below.
func (o GetCassandraInstancesInstanceOutput) Nodes() GetCassandraInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) []GetCassandraInstancesInstanceNode { return v.Nodes }).(GetCassandraInstancesInstanceNodeArrayOutput)
}

// Indicates the database port.
func (o GetCassandraInstancesInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) int { return v.Port }).(pulumi.IntOutput)
}

// Indicates the list of private IP address of the nodes.
func (o GetCassandraInstancesInstanceOutput) PrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) []string { return v.PrivateIps }).(pulumi.StringArrayOutput)
}

// The region in which to obtain the instance. If omitted, the provider-level region will
// be used.
func (o GetCassandraInstancesInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the security group ID.
func (o GetCassandraInstancesInstanceOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetCassandraInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// Specifies the network ID of a subnet.
func (o GetCassandraInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Indicates the key/value tags of the instance.
func (o GetCassandraInstancesInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Indicates the size of the volume.
func (o GetCassandraInstancesInstanceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Specifies the VPC ID.
func (o GetCassandraInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetCassandraInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstance)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceArrayOutput) ToGetCassandraInstancesInstanceArrayOutput() GetCassandraInstancesInstanceArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceArrayOutput) ToGetCassandraInstancesInstanceArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetCassandraInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstancesInstance {
		return vs[0].([]GetCassandraInstancesInstance)[vs[1].(int)]
	}).(GetCassandraInstancesInstanceOutput)
}

type GetCassandraInstancesInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetCassandraInstancesInstanceBackupStrategyInput is an input type that accepts GetCassandraInstancesInstanceBackupStrategyArgs and GetCassandraInstancesInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceBackupStrategyInput` via:
//
//	GetCassandraInstancesInstanceBackupStrategyArgs{...}
type GetCassandraInstancesInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceBackupStrategyOutput() GetCassandraInstancesInstanceBackupStrategyOutput
	ToGetCassandraInstancesInstanceBackupStrategyOutputWithContext(context.Context) GetCassandraInstancesInstanceBackupStrategyOutput
}

type GetCassandraInstancesInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetCassandraInstancesInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceBackupStrategyArgs) ToGetCassandraInstancesInstanceBackupStrategyOutput() GetCassandraInstancesInstanceBackupStrategyOutput {
	return i.ToGetCassandraInstancesInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceBackupStrategyArgs) ToGetCassandraInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceBackupStrategyOutput)
}

// GetCassandraInstancesInstanceBackupStrategyArrayInput is an input type that accepts GetCassandraInstancesInstanceBackupStrategyArray and GetCassandraInstancesInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceBackupStrategyArrayInput` via:
//
//	GetCassandraInstancesInstanceBackupStrategyArray{ GetCassandraInstancesInstanceBackupStrategyArgs{...} }
type GetCassandraInstancesInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceBackupStrategyArrayOutput() GetCassandraInstancesInstanceBackupStrategyArrayOutput
	ToGetCassandraInstancesInstanceBackupStrategyArrayOutputWithContext(context.Context) GetCassandraInstancesInstanceBackupStrategyArrayOutput
}

type GetCassandraInstancesInstanceBackupStrategyArray []GetCassandraInstancesInstanceBackupStrategyInput

func (GetCassandraInstancesInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceBackupStrategyArray) ToGetCassandraInstancesInstanceBackupStrategyArrayOutput() GetCassandraInstancesInstanceBackupStrategyArrayOutput {
	return i.ToGetCassandraInstancesInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceBackupStrategyArray) ToGetCassandraInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceBackupStrategyArrayOutput)
}

type GetCassandraInstancesInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceBackupStrategyOutput) ToGetCassandraInstancesInstanceBackupStrategyOutput() GetCassandraInstancesInstanceBackupStrategyOutput {
	return o
}

func (o GetCassandraInstancesInstanceBackupStrategyOutput) ToGetCassandraInstancesInstanceBackupStrategyOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetCassandraInstancesInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetCassandraInstancesInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetCassandraInstancesInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstanceBackupStrategy)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceBackupStrategyArrayOutput) ToGetCassandraInstancesInstanceBackupStrategyArrayOutput() GetCassandraInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceBackupStrategyArrayOutput) ToGetCassandraInstancesInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetCassandraInstancesInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstancesInstanceBackupStrategy {
		return vs[0].([]GetCassandraInstancesInstanceBackupStrategy)[vs[1].(int)]
	}).(GetCassandraInstancesInstanceBackupStrategyOutput)
}

type GetCassandraInstancesInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database storage engine.
	StorageEngine string `pulumi:"storageEngine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetCassandraInstancesInstanceDatastoreInput is an input type that accepts GetCassandraInstancesInstanceDatastoreArgs and GetCassandraInstancesInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceDatastoreInput` via:
//
//	GetCassandraInstancesInstanceDatastoreArgs{...}
type GetCassandraInstancesInstanceDatastoreInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceDatastoreOutput() GetCassandraInstancesInstanceDatastoreOutput
	ToGetCassandraInstancesInstanceDatastoreOutputWithContext(context.Context) GetCassandraInstancesInstanceDatastoreOutput
}

type GetCassandraInstancesInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database storage engine.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetCassandraInstancesInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstanceDatastore)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceDatastoreArgs) ToGetCassandraInstancesInstanceDatastoreOutput() GetCassandraInstancesInstanceDatastoreOutput {
	return i.ToGetCassandraInstancesInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceDatastoreArgs) ToGetCassandraInstancesInstanceDatastoreOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceDatastoreOutput)
}

// GetCassandraInstancesInstanceDatastoreArrayInput is an input type that accepts GetCassandraInstancesInstanceDatastoreArray and GetCassandraInstancesInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceDatastoreArrayInput` via:
//
//	GetCassandraInstancesInstanceDatastoreArray{ GetCassandraInstancesInstanceDatastoreArgs{...} }
type GetCassandraInstancesInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceDatastoreArrayOutput() GetCassandraInstancesInstanceDatastoreArrayOutput
	ToGetCassandraInstancesInstanceDatastoreArrayOutputWithContext(context.Context) GetCassandraInstancesInstanceDatastoreArrayOutput
}

type GetCassandraInstancesInstanceDatastoreArray []GetCassandraInstancesInstanceDatastoreInput

func (GetCassandraInstancesInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstanceDatastore)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceDatastoreArray) ToGetCassandraInstancesInstanceDatastoreArrayOutput() GetCassandraInstancesInstanceDatastoreArrayOutput {
	return i.ToGetCassandraInstancesInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceDatastoreArray) ToGetCassandraInstancesInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceDatastoreArrayOutput)
}

type GetCassandraInstancesInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstanceDatastore)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceDatastoreOutput) ToGetCassandraInstancesInstanceDatastoreOutput() GetCassandraInstancesInstanceDatastoreOutput {
	return o
}

func (o GetCassandraInstancesInstanceDatastoreOutput) ToGetCassandraInstancesInstanceDatastoreOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetCassandraInstancesInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database storage engine.
func (o GetCassandraInstancesInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetCassandraInstancesInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetCassandraInstancesInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstanceDatastore)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceDatastoreArrayOutput) ToGetCassandraInstancesInstanceDatastoreArrayOutput() GetCassandraInstancesInstanceDatastoreArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceDatastoreArrayOutput) ToGetCassandraInstancesInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceDatastoreArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetCassandraInstancesInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstancesInstanceDatastore {
		return vs[0].([]GetCassandraInstancesInstanceDatastore)[vs[1].(int)]
	}).(GetCassandraInstancesInstanceDatastoreOutput)
}

type GetCassandraInstancesInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp string `pulumi:"privateIp"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Indicates whether the node support reduce.
	SupportReduce bool `pulumi:"supportReduce"`
}

// GetCassandraInstancesInstanceNodeInput is an input type that accepts GetCassandraInstancesInstanceNodeArgs and GetCassandraInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceNodeInput` via:
//
//	GetCassandraInstancesInstanceNodeArgs{...}
type GetCassandraInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceNodeOutput() GetCassandraInstancesInstanceNodeOutput
	ToGetCassandraInstancesInstanceNodeOutputWithContext(context.Context) GetCassandraInstancesInstanceNodeOutput
}

type GetCassandraInstancesInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicates whether the node support reduce.
	SupportReduce pulumi.BoolInput `pulumi:"supportReduce"`
}

func (GetCassandraInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstanceNode)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceNodeArgs) ToGetCassandraInstancesInstanceNodeOutput() GetCassandraInstancesInstanceNodeOutput {
	return i.ToGetCassandraInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceNodeArgs) ToGetCassandraInstancesInstanceNodeOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceNodeOutput)
}

// GetCassandraInstancesInstanceNodeArrayInput is an input type that accepts GetCassandraInstancesInstanceNodeArray and GetCassandraInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetCassandraInstancesInstanceNodeArrayInput` via:
//
//	GetCassandraInstancesInstanceNodeArray{ GetCassandraInstancesInstanceNodeArgs{...} }
type GetCassandraInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetCassandraInstancesInstanceNodeArrayOutput() GetCassandraInstancesInstanceNodeArrayOutput
	ToGetCassandraInstancesInstanceNodeArrayOutputWithContext(context.Context) GetCassandraInstancesInstanceNodeArrayOutput
}

type GetCassandraInstancesInstanceNodeArray []GetCassandraInstancesInstanceNodeInput

func (GetCassandraInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstanceNode)(nil)).Elem()
}

func (i GetCassandraInstancesInstanceNodeArray) ToGetCassandraInstancesInstanceNodeArrayOutput() GetCassandraInstancesInstanceNodeArrayOutput {
	return i.ToGetCassandraInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetCassandraInstancesInstanceNodeArray) ToGetCassandraInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCassandraInstancesInstanceNodeArrayOutput)
}

type GetCassandraInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraInstancesInstanceNode)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceNodeOutput) ToGetCassandraInstancesInstanceNodeOutput() GetCassandraInstancesInstanceNodeOutput {
	return o
}

func (o GetCassandraInstancesInstanceNodeOutput) ToGetCassandraInstancesInstanceNodeOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetCassandraInstancesInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetCassandraInstancesInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetCassandraInstancesInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the private IP address of a node.
func (o GetCassandraInstancesInstanceNodeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceNode) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetCassandraInstancesInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

// Indicates whether the node support reduce.
func (o GetCassandraInstancesInstanceNodeOutput) SupportReduce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCassandraInstancesInstanceNode) bool { return v.SupportReduce }).(pulumi.BoolOutput)
}

type GetCassandraInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetCassandraInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCassandraInstancesInstanceNode)(nil)).Elem()
}

func (o GetCassandraInstancesInstanceNodeArrayOutput) ToGetCassandraInstancesInstanceNodeArrayOutput() GetCassandraInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceNodeArrayOutput) ToGetCassandraInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetCassandraInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetCassandraInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetCassandraInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCassandraInstancesInstanceNode {
		return vs[0].([]GetCassandraInstancesInstanceNode)[vs[1].(int)]
	}).(GetCassandraInstancesInstanceNodeOutput)
}

type GetNosqlFlavorsFlavor struct {
	// All available zones (on sale) for current flavor.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Specifies the type of the database engine. The valid values are as follows:
	// + **cassandra**: The default value and means to query GaussDB (for Cassandra) instance specifications.
	// + **redis**: Means to query GaussDB (for Redis) instance specifications.
	// + **mongodb**: Means to query GaussDB (for Mongo) instance specifications.
	// + **influxdb**: Means to query GaussDB (for Influx) instance specifications.
	Engine string `pulumi:"engine"`
	// Specifies the version of the database engine.
	EngineVersion string `pulumi:"engineVersion"`
	// Specifies the memory size in gigabytes (GB).
	Memory string `pulumi:"memory"`
	// The spec code of the flavor.
	Name string `pulumi:"name"`
	// Specifies the number of vCPUs.
	Vcpus string `pulumi:"vcpus"`
}

// GetNosqlFlavorsFlavorInput is an input type that accepts GetNosqlFlavorsFlavorArgs and GetNosqlFlavorsFlavorOutput values.
// You can construct a concrete instance of `GetNosqlFlavorsFlavorInput` via:
//
//	GetNosqlFlavorsFlavorArgs{...}
type GetNosqlFlavorsFlavorInput interface {
	pulumi.Input

	ToGetNosqlFlavorsFlavorOutput() GetNosqlFlavorsFlavorOutput
	ToGetNosqlFlavorsFlavorOutputWithContext(context.Context) GetNosqlFlavorsFlavorOutput
}

type GetNosqlFlavorsFlavorArgs struct {
	// All available zones (on sale) for current flavor.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Specifies the type of the database engine. The valid values are as follows:
	// + **cassandra**: The default value and means to query GaussDB (for Cassandra) instance specifications.
	// + **redis**: Means to query GaussDB (for Redis) instance specifications.
	// + **mongodb**: Means to query GaussDB (for Mongo) instance specifications.
	// + **influxdb**: Means to query GaussDB (for Influx) instance specifications.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Specifies the version of the database engine.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Specifies the memory size in gigabytes (GB).
	Memory pulumi.StringInput `pulumi:"memory"`
	// The spec code of the flavor.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the number of vCPUs.
	Vcpus pulumi.StringInput `pulumi:"vcpus"`
}

func (GetNosqlFlavorsFlavorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNosqlFlavorsFlavor)(nil)).Elem()
}

func (i GetNosqlFlavorsFlavorArgs) ToGetNosqlFlavorsFlavorOutput() GetNosqlFlavorsFlavorOutput {
	return i.ToGetNosqlFlavorsFlavorOutputWithContext(context.Background())
}

func (i GetNosqlFlavorsFlavorArgs) ToGetNosqlFlavorsFlavorOutputWithContext(ctx context.Context) GetNosqlFlavorsFlavorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNosqlFlavorsFlavorOutput)
}

// GetNosqlFlavorsFlavorArrayInput is an input type that accepts GetNosqlFlavorsFlavorArray and GetNosqlFlavorsFlavorArrayOutput values.
// You can construct a concrete instance of `GetNosqlFlavorsFlavorArrayInput` via:
//
//	GetNosqlFlavorsFlavorArray{ GetNosqlFlavorsFlavorArgs{...} }
type GetNosqlFlavorsFlavorArrayInput interface {
	pulumi.Input

	ToGetNosqlFlavorsFlavorArrayOutput() GetNosqlFlavorsFlavorArrayOutput
	ToGetNosqlFlavorsFlavorArrayOutputWithContext(context.Context) GetNosqlFlavorsFlavorArrayOutput
}

type GetNosqlFlavorsFlavorArray []GetNosqlFlavorsFlavorInput

func (GetNosqlFlavorsFlavorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNosqlFlavorsFlavor)(nil)).Elem()
}

func (i GetNosqlFlavorsFlavorArray) ToGetNosqlFlavorsFlavorArrayOutput() GetNosqlFlavorsFlavorArrayOutput {
	return i.ToGetNosqlFlavorsFlavorArrayOutputWithContext(context.Background())
}

func (i GetNosqlFlavorsFlavorArray) ToGetNosqlFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetNosqlFlavorsFlavorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNosqlFlavorsFlavorArrayOutput)
}

type GetNosqlFlavorsFlavorOutput struct{ *pulumi.OutputState }

func (GetNosqlFlavorsFlavorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNosqlFlavorsFlavor)(nil)).Elem()
}

func (o GetNosqlFlavorsFlavorOutput) ToGetNosqlFlavorsFlavorOutput() GetNosqlFlavorsFlavorOutput {
	return o
}

func (o GetNosqlFlavorsFlavorOutput) ToGetNosqlFlavorsFlavorOutputWithContext(ctx context.Context) GetNosqlFlavorsFlavorOutput {
	return o
}

// All available zones (on sale) for current flavor.
func (o GetNosqlFlavorsFlavorOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNosqlFlavorsFlavor) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Specifies the type of the database engine. The valid values are as follows:
// + **cassandra**: The default value and means to query GaussDB (for Cassandra) instance specifications.
// + **redis**: Means to query GaussDB (for Redis) instance specifications.
// + **mongodb**: Means to query GaussDB (for Mongo) instance specifications.
// + **influxdb**: Means to query GaussDB (for Influx) instance specifications.
func (o GetNosqlFlavorsFlavorOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetNosqlFlavorsFlavor) string { return v.Engine }).(pulumi.StringOutput)
}

// Specifies the version of the database engine.
func (o GetNosqlFlavorsFlavorOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetNosqlFlavorsFlavor) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Specifies the memory size in gigabytes (GB).
func (o GetNosqlFlavorsFlavorOutput) Memory() pulumi.StringOutput {
	return o.ApplyT(func(v GetNosqlFlavorsFlavor) string { return v.Memory }).(pulumi.StringOutput)
}

// The spec code of the flavor.
func (o GetNosqlFlavorsFlavorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNosqlFlavorsFlavor) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the number of vCPUs.
func (o GetNosqlFlavorsFlavorOutput) Vcpus() pulumi.StringOutput {
	return o.ApplyT(func(v GetNosqlFlavorsFlavor) string { return v.Vcpus }).(pulumi.StringOutput)
}

type GetNosqlFlavorsFlavorArrayOutput struct{ *pulumi.OutputState }

func (GetNosqlFlavorsFlavorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNosqlFlavorsFlavor)(nil)).Elem()
}

func (o GetNosqlFlavorsFlavorArrayOutput) ToGetNosqlFlavorsFlavorArrayOutput() GetNosqlFlavorsFlavorArrayOutput {
	return o
}

func (o GetNosqlFlavorsFlavorArrayOutput) ToGetNosqlFlavorsFlavorArrayOutputWithContext(ctx context.Context) GetNosqlFlavorsFlavorArrayOutput {
	return o
}

func (o GetNosqlFlavorsFlavorArrayOutput) Index(i pulumi.IntInput) GetNosqlFlavorsFlavorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNosqlFlavorsFlavor {
		return vs[0].([]GetNosqlFlavorsFlavor)[vs[1].(int)]
	}).(GetNosqlFlavorsFlavorOutput)
}

type GetRedisInstanceBackupStrategy struct {
	// Indicates the number of days to retain the generated
	KeepDays int `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime string `pulumi:"startTime"`
}

// GetRedisInstanceBackupStrategyInput is an input type that accepts GetRedisInstanceBackupStrategyArgs and GetRedisInstanceBackupStrategyOutput values.
// You can construct a concrete instance of `GetRedisInstanceBackupStrategyInput` via:
//
//	GetRedisInstanceBackupStrategyArgs{...}
type GetRedisInstanceBackupStrategyInput interface {
	pulumi.Input

	ToGetRedisInstanceBackupStrategyOutput() GetRedisInstanceBackupStrategyOutput
	ToGetRedisInstanceBackupStrategyOutputWithContext(context.Context) GetRedisInstanceBackupStrategyOutput
}

type GetRedisInstanceBackupStrategyArgs struct {
	// Indicates the number of days to retain the generated
	KeepDays pulumi.IntInput `pulumi:"keepDays"`
	// Indicates the backup time window.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetRedisInstanceBackupStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisInstanceBackupStrategy)(nil)).Elem()
}

func (i GetRedisInstanceBackupStrategyArgs) ToGetRedisInstanceBackupStrategyOutput() GetRedisInstanceBackupStrategyOutput {
	return i.ToGetRedisInstanceBackupStrategyOutputWithContext(context.Background())
}

func (i GetRedisInstanceBackupStrategyArgs) ToGetRedisInstanceBackupStrategyOutputWithContext(ctx context.Context) GetRedisInstanceBackupStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisInstanceBackupStrategyOutput)
}

// GetRedisInstanceBackupStrategyArrayInput is an input type that accepts GetRedisInstanceBackupStrategyArray and GetRedisInstanceBackupStrategyArrayOutput values.
// You can construct a concrete instance of `GetRedisInstanceBackupStrategyArrayInput` via:
//
//	GetRedisInstanceBackupStrategyArray{ GetRedisInstanceBackupStrategyArgs{...} }
type GetRedisInstanceBackupStrategyArrayInput interface {
	pulumi.Input

	ToGetRedisInstanceBackupStrategyArrayOutput() GetRedisInstanceBackupStrategyArrayOutput
	ToGetRedisInstanceBackupStrategyArrayOutputWithContext(context.Context) GetRedisInstanceBackupStrategyArrayOutput
}

type GetRedisInstanceBackupStrategyArray []GetRedisInstanceBackupStrategyInput

func (GetRedisInstanceBackupStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisInstanceBackupStrategy)(nil)).Elem()
}

func (i GetRedisInstanceBackupStrategyArray) ToGetRedisInstanceBackupStrategyArrayOutput() GetRedisInstanceBackupStrategyArrayOutput {
	return i.ToGetRedisInstanceBackupStrategyArrayOutputWithContext(context.Background())
}

func (i GetRedisInstanceBackupStrategyArray) ToGetRedisInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetRedisInstanceBackupStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisInstanceBackupStrategyArrayOutput)
}

type GetRedisInstanceBackupStrategyOutput struct{ *pulumi.OutputState }

func (GetRedisInstanceBackupStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisInstanceBackupStrategy)(nil)).Elem()
}

func (o GetRedisInstanceBackupStrategyOutput) ToGetRedisInstanceBackupStrategyOutput() GetRedisInstanceBackupStrategyOutput {
	return o
}

func (o GetRedisInstanceBackupStrategyOutput) ToGetRedisInstanceBackupStrategyOutputWithContext(ctx context.Context) GetRedisInstanceBackupStrategyOutput {
	return o
}

// Indicates the number of days to retain the generated
func (o GetRedisInstanceBackupStrategyOutput) KeepDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetRedisInstanceBackupStrategy) int { return v.KeepDays }).(pulumi.IntOutput)
}

// Indicates the backup time window.
func (o GetRedisInstanceBackupStrategyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceBackupStrategy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetRedisInstanceBackupStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetRedisInstanceBackupStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisInstanceBackupStrategy)(nil)).Elem()
}

func (o GetRedisInstanceBackupStrategyArrayOutput) ToGetRedisInstanceBackupStrategyArrayOutput() GetRedisInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetRedisInstanceBackupStrategyArrayOutput) ToGetRedisInstanceBackupStrategyArrayOutputWithContext(ctx context.Context) GetRedisInstanceBackupStrategyArrayOutput {
	return o
}

func (o GetRedisInstanceBackupStrategyArrayOutput) Index(i pulumi.IntInput) GetRedisInstanceBackupStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisInstanceBackupStrategy {
		return vs[0].([]GetRedisInstanceBackupStrategy)[vs[1].(int)]
	}).(GetRedisInstanceBackupStrategyOutput)
}

type GetRedisInstanceDatastore struct {
	// Indicates the database engine.
	Engine string `pulumi:"engine"`
	// Indicates the database storage engine.
	StorageEngine string `pulumi:"storageEngine"`
	// Indicates the database version.
	Version string `pulumi:"version"`
}

// GetRedisInstanceDatastoreInput is an input type that accepts GetRedisInstanceDatastoreArgs and GetRedisInstanceDatastoreOutput values.
// You can construct a concrete instance of `GetRedisInstanceDatastoreInput` via:
//
//	GetRedisInstanceDatastoreArgs{...}
type GetRedisInstanceDatastoreInput interface {
	pulumi.Input

	ToGetRedisInstanceDatastoreOutput() GetRedisInstanceDatastoreOutput
	ToGetRedisInstanceDatastoreOutputWithContext(context.Context) GetRedisInstanceDatastoreOutput
}

type GetRedisInstanceDatastoreArgs struct {
	// Indicates the database engine.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Indicates the database storage engine.
	StorageEngine pulumi.StringInput `pulumi:"storageEngine"`
	// Indicates the database version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetRedisInstanceDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisInstanceDatastore)(nil)).Elem()
}

func (i GetRedisInstanceDatastoreArgs) ToGetRedisInstanceDatastoreOutput() GetRedisInstanceDatastoreOutput {
	return i.ToGetRedisInstanceDatastoreOutputWithContext(context.Background())
}

func (i GetRedisInstanceDatastoreArgs) ToGetRedisInstanceDatastoreOutputWithContext(ctx context.Context) GetRedisInstanceDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisInstanceDatastoreOutput)
}

// GetRedisInstanceDatastoreArrayInput is an input type that accepts GetRedisInstanceDatastoreArray and GetRedisInstanceDatastoreArrayOutput values.
// You can construct a concrete instance of `GetRedisInstanceDatastoreArrayInput` via:
//
//	GetRedisInstanceDatastoreArray{ GetRedisInstanceDatastoreArgs{...} }
type GetRedisInstanceDatastoreArrayInput interface {
	pulumi.Input

	ToGetRedisInstanceDatastoreArrayOutput() GetRedisInstanceDatastoreArrayOutput
	ToGetRedisInstanceDatastoreArrayOutputWithContext(context.Context) GetRedisInstanceDatastoreArrayOutput
}

type GetRedisInstanceDatastoreArray []GetRedisInstanceDatastoreInput

func (GetRedisInstanceDatastoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisInstanceDatastore)(nil)).Elem()
}

func (i GetRedisInstanceDatastoreArray) ToGetRedisInstanceDatastoreArrayOutput() GetRedisInstanceDatastoreArrayOutput {
	return i.ToGetRedisInstanceDatastoreArrayOutputWithContext(context.Background())
}

func (i GetRedisInstanceDatastoreArray) ToGetRedisInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetRedisInstanceDatastoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisInstanceDatastoreArrayOutput)
}

type GetRedisInstanceDatastoreOutput struct{ *pulumi.OutputState }

func (GetRedisInstanceDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisInstanceDatastore)(nil)).Elem()
}

func (o GetRedisInstanceDatastoreOutput) ToGetRedisInstanceDatastoreOutput() GetRedisInstanceDatastoreOutput {
	return o
}

func (o GetRedisInstanceDatastoreOutput) ToGetRedisInstanceDatastoreOutputWithContext(ctx context.Context) GetRedisInstanceDatastoreOutput {
	return o
}

// Indicates the database engine.
func (o GetRedisInstanceDatastoreOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceDatastore) string { return v.Engine }).(pulumi.StringOutput)
}

// Indicates the database storage engine.
func (o GetRedisInstanceDatastoreOutput) StorageEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceDatastore) string { return v.StorageEngine }).(pulumi.StringOutput)
}

// Indicates the database version.
func (o GetRedisInstanceDatastoreOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceDatastore) string { return v.Version }).(pulumi.StringOutput)
}

type GetRedisInstanceDatastoreArrayOutput struct{ *pulumi.OutputState }

func (GetRedisInstanceDatastoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisInstanceDatastore)(nil)).Elem()
}

func (o GetRedisInstanceDatastoreArrayOutput) ToGetRedisInstanceDatastoreArrayOutput() GetRedisInstanceDatastoreArrayOutput {
	return o
}

func (o GetRedisInstanceDatastoreArrayOutput) ToGetRedisInstanceDatastoreArrayOutputWithContext(ctx context.Context) GetRedisInstanceDatastoreArrayOutput {
	return o
}

func (o GetRedisInstanceDatastoreArrayOutput) Index(i pulumi.IntInput) GetRedisInstanceDatastoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisInstanceDatastore {
		return vs[0].([]GetRedisInstanceDatastore)[vs[1].(int)]
	}).(GetRedisInstanceDatastoreOutput)
}

type GetRedisInstanceNode struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id string `pulumi:"id"`
	// Specifies the name of the instance.
	Name string `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp string `pulumi:"privateIp"`
	// Indicates the node status.
	Status string `pulumi:"status"`
	// Indicates whether the node support reduce.
	SupportReduce bool `pulumi:"supportReduce"`
}

// GetRedisInstanceNodeInput is an input type that accepts GetRedisInstanceNodeArgs and GetRedisInstanceNodeOutput values.
// You can construct a concrete instance of `GetRedisInstanceNodeInput` via:
//
//	GetRedisInstanceNodeArgs{...}
type GetRedisInstanceNodeInput interface {
	pulumi.Input

	ToGetRedisInstanceNodeOutput() GetRedisInstanceNodeOutput
	ToGetRedisInstanceNodeOutputWithContext(context.Context) GetRedisInstanceNodeOutput
}

type GetRedisInstanceNodeArgs struct {
	// Indicates the availability zone where the node resides.
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Indicates the node ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates the private IP address of a node.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// Indicates the node status.
	Status pulumi.StringInput `pulumi:"status"`
	// Indicates whether the node support reduce.
	SupportReduce pulumi.BoolInput `pulumi:"supportReduce"`
}

func (GetRedisInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisInstanceNode)(nil)).Elem()
}

func (i GetRedisInstanceNodeArgs) ToGetRedisInstanceNodeOutput() GetRedisInstanceNodeOutput {
	return i.ToGetRedisInstanceNodeOutputWithContext(context.Background())
}

func (i GetRedisInstanceNodeArgs) ToGetRedisInstanceNodeOutputWithContext(ctx context.Context) GetRedisInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisInstanceNodeOutput)
}

// GetRedisInstanceNodeArrayInput is an input type that accepts GetRedisInstanceNodeArray and GetRedisInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetRedisInstanceNodeArrayInput` via:
//
//	GetRedisInstanceNodeArray{ GetRedisInstanceNodeArgs{...} }
type GetRedisInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetRedisInstanceNodeArrayOutput() GetRedisInstanceNodeArrayOutput
	ToGetRedisInstanceNodeArrayOutputWithContext(context.Context) GetRedisInstanceNodeArrayOutput
}

type GetRedisInstanceNodeArray []GetRedisInstanceNodeInput

func (GetRedisInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisInstanceNode)(nil)).Elem()
}

func (i GetRedisInstanceNodeArray) ToGetRedisInstanceNodeArrayOutput() GetRedisInstanceNodeArrayOutput {
	return i.ToGetRedisInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetRedisInstanceNodeArray) ToGetRedisInstanceNodeArrayOutputWithContext(ctx context.Context) GetRedisInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRedisInstanceNodeArrayOutput)
}

type GetRedisInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetRedisInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisInstanceNode)(nil)).Elem()
}

func (o GetRedisInstanceNodeOutput) ToGetRedisInstanceNodeOutput() GetRedisInstanceNodeOutput {
	return o
}

func (o GetRedisInstanceNodeOutput) ToGetRedisInstanceNodeOutputWithContext(ctx context.Context) GetRedisInstanceNodeOutput {
	return o
}

// Indicates the availability zone where the node resides.
func (o GetRedisInstanceNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Indicates the node ID.
func (o GetRedisInstanceNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceNode) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the name of the instance.
func (o GetRedisInstanceNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceNode) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates the private IP address of a node.
func (o GetRedisInstanceNodeOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceNode) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// Indicates the node status.
func (o GetRedisInstanceNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisInstanceNode) string { return v.Status }).(pulumi.StringOutput)
}

// Indicates whether the node support reduce.
func (o GetRedisInstanceNodeOutput) SupportReduce() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRedisInstanceNode) bool { return v.SupportReduce }).(pulumi.BoolOutput)
}

type GetRedisInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetRedisInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRedisInstanceNode)(nil)).Elem()
}

func (o GetRedisInstanceNodeArrayOutput) ToGetRedisInstanceNodeArrayOutput() GetRedisInstanceNodeArrayOutput {
	return o
}

func (o GetRedisInstanceNodeArrayOutput) ToGetRedisInstanceNodeArrayOutputWithContext(ctx context.Context) GetRedisInstanceNodeArrayOutput {
	return o
}

func (o GetRedisInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetRedisInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRedisInstanceNode {
		return vs[0].([]GetRedisInstanceNode)[vs[1].(int)]
	}).(GetRedisInstanceNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraInstanceBackupStrategyInput)(nil)).Elem(), CassandraInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraInstanceBackupStrategyPtrInput)(nil)).Elem(), CassandraInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraInstanceDatastoreInput)(nil)).Elem(), CassandraInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraInstanceDatastorePtrInput)(nil)).Elem(), CassandraInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraInstanceNodeInput)(nil)).Elem(), CassandraInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraInstanceNodeArrayInput)(nil)).Elem(), CassandraInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxInstanceBackupStrategyInput)(nil)).Elem(), InfluxInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxInstanceBackupStrategyPtrInput)(nil)).Elem(), InfluxInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxInstanceDatastoreInput)(nil)).Elem(), InfluxInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxInstanceDatastorePtrInput)(nil)).Elem(), InfluxInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxInstanceNodeInput)(nil)).Elem(), InfluxInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfluxInstanceNodeArrayInput)(nil)).Elem(), InfluxInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoInstanceBackupStrategyInput)(nil)).Elem(), MongoInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoInstanceBackupStrategyPtrInput)(nil)).Elem(), MongoInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoInstanceDatastoreInput)(nil)).Elem(), MongoInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoInstanceDatastorePtrInput)(nil)).Elem(), MongoInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoInstanceNodeInput)(nil)).Elem(), MongoInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoInstanceNodeArrayInput)(nil)).Elem(), MongoInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceBackupStrategyInput)(nil)).Elem(), RedisInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceBackupStrategyPtrInput)(nil)).Elem(), RedisInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceDatastoreInput)(nil)).Elem(), RedisInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceDatastorePtrInput)(nil)).Elem(), RedisInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceNodeInput)(nil)).Elem(), RedisInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceNodeArrayInput)(nil)).Elem(), RedisInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraFlavorsFlavorInput)(nil)).Elem(), GetCassandraFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraFlavorsFlavorArrayInput)(nil)).Elem(), GetCassandraFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstanceBackupStrategyInput)(nil)).Elem(), GetCassandraInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstanceBackupStrategyArrayInput)(nil)).Elem(), GetCassandraInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstanceDatastoreInput)(nil)).Elem(), GetCassandraInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstanceDatastoreArrayInput)(nil)).Elem(), GetCassandraInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstanceNodeInput)(nil)).Elem(), GetCassandraInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstanceNodeArrayInput)(nil)).Elem(), GetCassandraInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceInput)(nil)).Elem(), GetCassandraInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceArrayInput)(nil)).Elem(), GetCassandraInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceBackupStrategyInput)(nil)).Elem(), GetCassandraInstancesInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceBackupStrategyArrayInput)(nil)).Elem(), GetCassandraInstancesInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceDatastoreInput)(nil)).Elem(), GetCassandraInstancesInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceDatastoreArrayInput)(nil)).Elem(), GetCassandraInstancesInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceNodeInput)(nil)).Elem(), GetCassandraInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCassandraInstancesInstanceNodeArrayInput)(nil)).Elem(), GetCassandraInstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNosqlFlavorsFlavorInput)(nil)).Elem(), GetNosqlFlavorsFlavorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNosqlFlavorsFlavorArrayInput)(nil)).Elem(), GetNosqlFlavorsFlavorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisInstanceBackupStrategyInput)(nil)).Elem(), GetRedisInstanceBackupStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisInstanceBackupStrategyArrayInput)(nil)).Elem(), GetRedisInstanceBackupStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisInstanceDatastoreInput)(nil)).Elem(), GetRedisInstanceDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisInstanceDatastoreArrayInput)(nil)).Elem(), GetRedisInstanceDatastoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisInstanceNodeInput)(nil)).Elem(), GetRedisInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRedisInstanceNodeArrayInput)(nil)).Elem(), GetRedisInstanceNodeArray{})
	pulumi.RegisterOutputType(CassandraInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(CassandraInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(CassandraInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(CassandraInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(CassandraInstanceNodeOutput{})
	pulumi.RegisterOutputType(CassandraInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InfluxInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(InfluxInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(InfluxInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(InfluxInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(InfluxInstanceNodeOutput{})
	pulumi.RegisterOutputType(InfluxInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(MongoInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(MongoInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(MongoInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(MongoInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(MongoInstanceNodeOutput{})
	pulumi.RegisterOutputType(MongoInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(RedisInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(RedisInstanceBackupStrategyPtrOutput{})
	pulumi.RegisterOutputType(RedisInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(RedisInstanceDatastorePtrOutput{})
	pulumi.RegisterOutputType(RedisInstanceNodeOutput{})
	pulumi.RegisterOutputType(RedisInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetCassandraFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetCassandraInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetCassandraInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetCassandraInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetCassandraInstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetNosqlFlavorsFlavorOutput{})
	pulumi.RegisterOutputType(GetNosqlFlavorsFlavorArrayOutput{})
	pulumi.RegisterOutputType(GetRedisInstanceBackupStrategyOutput{})
	pulumi.RegisterOutputType(GetRedisInstanceBackupStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetRedisInstanceDatastoreOutput{})
	pulumi.RegisterOutputType(GetRedisInstanceDatastoreArrayOutput{})
	pulumi.RegisterOutputType(GetRedisInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetRedisInstanceNodeArrayOutput{})
}
