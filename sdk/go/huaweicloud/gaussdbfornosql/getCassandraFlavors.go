// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaussdbfornosql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get available HuaweiCloud gaussdb cassandra flavors.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/huaweicloud/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDBforNoSQL"
//	"github.com/pulumi/pulumi-huaweicloud/sdk/go/huaweicloud/GaussDBforNoSQL"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := GaussDBforNoSQL.GetCassandraFlavors(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCassandraFlavors(ctx *pulumi.Context, args *GetCassandraFlavorsArgs, opts ...pulumi.InvokeOption) (*GetCassandraFlavorsResult, error) {
	var rv GetCassandraFlavorsResult
	err := ctx.Invoke("huaweicloud:GaussDBforNoSQL/getCassandraFlavors:getCassandraFlavors", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCassandraFlavors.
type GetCassandraFlavorsArgs struct {
	// Specifies the memory size of the flavors.
	Memory *string `pulumi:"memory"`
	// The region in which to obtain the flavors. If omitted, the provider-level region will be
	// used.
	Region *string `pulumi:"region"`
	// Specifies the count of vcpus of the flavors.
	Vcpus *string `pulumi:"vcpus"`
	// Specifies the engine version of the flavors.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getCassandraFlavors.
type GetCassandraFlavorsResult struct {
	// Indicates the flavors information. Structure is documented below.
	Flavors []GetCassandraFlavorsFlavor `pulumi:"flavors"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicates the memory size in GB.
	Memory *string `pulumi:"memory"`
	Region string  `pulumi:"region"`
	// Indicates the CPU size.
	Vcpus *string `pulumi:"vcpus"`
	// Indicates the database version.
	Version *string `pulumi:"version"`
}

func GetCassandraFlavorsOutput(ctx *pulumi.Context, args GetCassandraFlavorsOutputArgs, opts ...pulumi.InvokeOption) GetCassandraFlavorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCassandraFlavorsResult, error) {
			args := v.(GetCassandraFlavorsArgs)
			r, err := GetCassandraFlavors(ctx, &args, opts...)
			var s GetCassandraFlavorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCassandraFlavorsResultOutput)
}

// A collection of arguments for invoking getCassandraFlavors.
type GetCassandraFlavorsOutputArgs struct {
	// Specifies the memory size of the flavors.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
	// The region in which to obtain the flavors. If omitted, the provider-level region will be
	// used.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Specifies the count of vcpus of the flavors.
	Vcpus pulumi.StringPtrInput `pulumi:"vcpus"`
	// Specifies the engine version of the flavors.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetCassandraFlavorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraFlavorsArgs)(nil)).Elem()
}

// A collection of values returned by getCassandraFlavors.
type GetCassandraFlavorsResultOutput struct{ *pulumi.OutputState }

func (GetCassandraFlavorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCassandraFlavorsResult)(nil)).Elem()
}

func (o GetCassandraFlavorsResultOutput) ToGetCassandraFlavorsResultOutput() GetCassandraFlavorsResultOutput {
	return o
}

func (o GetCassandraFlavorsResultOutput) ToGetCassandraFlavorsResultOutputWithContext(ctx context.Context) GetCassandraFlavorsResultOutput {
	return o
}

// Indicates the flavors information. Structure is documented below.
func (o GetCassandraFlavorsResultOutput) Flavors() GetCassandraFlavorsFlavorArrayOutput {
	return o.ApplyT(func(v GetCassandraFlavorsResult) []GetCassandraFlavorsFlavor { return v.Flavors }).(GetCassandraFlavorsFlavorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCassandraFlavorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraFlavorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates the memory size in GB.
func (o GetCassandraFlavorsResultOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandraFlavorsResult) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

func (o GetCassandraFlavorsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCassandraFlavorsResult) string { return v.Region }).(pulumi.StringOutput)
}

// Indicates the CPU size.
func (o GetCassandraFlavorsResultOutput) Vcpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandraFlavorsResult) *string { return v.Vcpus }).(pulumi.StringPtrOutput)
}

// Indicates the database version.
func (o GetCassandraFlavorsResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCassandraFlavorsResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCassandraFlavorsResultOutput{})
}
