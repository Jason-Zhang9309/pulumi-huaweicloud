// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * CSS cluster snapshot management
 *
 * ## Example Usage
 * ### Create a snapshot
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const snapshot = new huaweicloud.css.Snapshot("snapshot", {
 *     description: "a snapshot created by manual",
 *     clusterId: _var.css_cluster_id,
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported by specifying the CSS cluster ID and snapshot ID separated by a slash, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Css/snapshot:Snapshot snapshot_1 < cluster_id >/< snapshot_id >
 * ```
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotState, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Css/snapshot:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * Indicates the snapshot creation mode, the value should be "manual" or "automated".
     */
    public /*out*/ readonly backupType!: pulumi.Output<string>;
    /**
     * Specifies ID of the CSS cluster where index data is to be backed up.
     * Changing this parameter will create a new resource.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Indicates the CSS cluster name.
     */
    public /*out*/ readonly clusterName!: pulumi.Output<string>;
    /**
     * Specifies the description of a snapshot. The value contains 0 to 256
     * characters, and angle brackets (<) and (>) are not allowed. Changing this parameter will create a new resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the index to be backed up. Multiple index names are
     * separated by commas (,). By default, data of all indices is backed up. You can use the asterisk (*) to back up data of
     * certain indices. For example, if you enter 2020-06*, then data of indices with the name prefix of 2020-06 will be
     * backed up. The value contains 0 to 1024 characters. Uppercase letters, spaces, and certain special characters (
     * including "\\<|>/?) are not allowed. Changing this parameter will create a new resource.
     */
    public readonly index!: pulumi.Output<string>;
    /**
     * Specifies the snapshot name. The snapshot name must start with a letter and
     * contains 4 to 64 characters consisting of only lowercase letters, digits, hyphens (-), and underscores (_). Changing
     * this parameter will create a new resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates the snapshot status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotArgs | SnapshotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotState | undefined;
            resourceInputs["backupType"] = state ? state.backupType : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["index"] = state ? state.index : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as SnapshotArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["index"] = args ? args.index : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["backupType"] = undefined /*out*/;
            resourceInputs["clusterName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snapshot resources.
 */
export interface SnapshotState {
    /**
     * Indicates the snapshot creation mode, the value should be "manual" or "automated".
     */
    backupType?: pulumi.Input<string>;
    /**
     * Specifies ID of the CSS cluster where index data is to be backed up.
     * Changing this parameter will create a new resource.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Indicates the CSS cluster name.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Specifies the description of a snapshot. The value contains 0 to 256
     * characters, and angle brackets (<) and (>) are not allowed. Changing this parameter will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name of the index to be backed up. Multiple index names are
     * separated by commas (,). By default, data of all indices is backed up. You can use the asterisk (*) to back up data of
     * certain indices. For example, if you enter 2020-06*, then data of indices with the name prefix of 2020-06 will be
     * backed up. The value contains 0 to 1024 characters. Uppercase letters, spaces, and certain special characters (
     * including "\\<|>/?) are not allowed. Changing this parameter will create a new resource.
     */
    index?: pulumi.Input<string>;
    /**
     * Specifies the snapshot name. The snapshot name must start with a letter and
     * contains 4 to 64 characters consisting of only lowercase letters, digits, hyphens (-), and underscores (_). Changing
     * this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the snapshot status.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * Specifies ID of the CSS cluster where index data is to be backed up.
     * Changing this parameter will create a new resource.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Specifies the description of a snapshot. The value contains 0 to 256
     * characters, and angle brackets (<) and (>) are not allowed. Changing this parameter will create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name of the index to be backed up. Multiple index names are
     * separated by commas (,). By default, data of all indices is backed up. You can use the asterisk (*) to back up data of
     * certain indices. For example, if you enter 2020-06*, then data of indices with the name prefix of 2020-06 will be
     * backed up. The value contains 0 to 1024 characters. Uppercase letters, spaces, and certain special characters (
     * including "\\<|>/?) are not allowed. Changing this parameter will create a new resource.
     */
    index?: pulumi.Input<string>;
    /**
     * Specifies the snapshot name. The snapshot name must start with a letter and
     * contains 4 to 64 characters consisting of only lowercase letters, digits, hyphens (-), and underscores (_). Changing
     * this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
}
