// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a DNS record set resource within HuaweiCloud.
 *
 * ## Example Usage
 * ### Record Set with Multi-line
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const exampleZone = new huaweicloud.dns.Zone("exampleZone", {
 *     email: "email2@example.com",
 *     description: "a zone",
 *     ttl: 6000,
 *     zoneType: "public",
 * });
 * const test = new huaweicloud.dns.Recordset("test", {
 *     zoneId: exampleZone.id,
 *     type: "A",
 *     description: "a recordset description",
 *     status: "ENABLE",
 *     ttl: 300,
 *     records: ["10.1.0.0"],
 *     lineId: "Dianxin_Shanxi",
 *     weight: 3,
 *     tags: {
 *         key1: "value1",
 *         key2: "value2",
 *     },
 * });
 * ```
 * ### Record Set with Public Zone
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const exampleZone = new huaweicloud.dns.Zone("exampleZone", {
 *     email: "email2@example.com",
 *     description: "a public zone",
 *     ttl: 6000,
 *     zoneType: "public",
 * });
 * const test = new huaweicloud.dns.Recordset("test", {
 *     zoneId: exampleZone.id,
 *     description: "An example record set",
 *     ttl: 3000,
 *     type: "A",
 *     records: ["10.0.0.1"],
 * });
 * ```
 * ### Record Set with Private Zone
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const exampleZone = new huaweicloud.dns.Zone("exampleZone", {
 *     email: "email2@example.com",
 *     description: "a private zone",
 *     ttl: 6000,
 *     zoneType: "private",
 * });
 * const test = new huaweicloud.dns.Recordset("test", {
 *     zoneId: exampleZone.id,
 *     description: "An example record set",
 *     ttl: 3000,
 *     type: "A",
 *     records: ["10.0.0.1"],
 * });
 * ```
 *
 * ## Import
 *
 * The DNS recordset can be imported using `zone_id`, `recordset_id`, separated by slashes, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Dns/recordset:Recordset test <zone_id>/<recordset_id>
 * ```
 */
export class Recordset extends pulumi.CustomResource {
    /**
     * Get an existing Recordset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RecordsetState, opts?: pulumi.CustomResourceOptions): Recordset {
        return new Recordset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Dns/recordset:Recordset';

    /**
     * Returns true if the given object is an instance of Recordset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Recordset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Recordset.__pulumiType;
    }

    /**
     * Specifies the description of the record set.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies the resolution line ID.
     * Changing this parameter will create a new resource.
     */
    public readonly lineId!: pulumi.Output<string>;
    /**
     * Specifies the name of the record set.
     * The name suffixed with a zone name, which is a complete host name ended with a dot.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies an array of DNS records. The value rules vary depending on the record set type.
     */
    public readonly records!: pulumi.Output<string[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the status of the record set.
     * Value options: **ENABLE**, **DISABLE**. The default value is **ENABLE**.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Specifies the key/value pairs to associate with the DNS recordset.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the time to live (TTL) of the record set (in seconds).
     * The value range is 1–2147483647. The default value is 300.
     */
    public readonly ttl!: pulumi.Output<number | undefined>;
    /**
     * Specifies the type of the record set.
     * Value options: **A**, **AAAA**, **MX**, **CNAME**, **TXT**, **NS**, **SRV**, **CAA**.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Specifies the weight of the record set.
     * Only public zone support. The value range is 0–1000.
     */
    public readonly weight!: pulumi.Output<number>;
    /**
     * Specifies the zone ID.
     * Changing this parameter will create a new resource.
     */
    public readonly zoneId!: pulumi.Output<string>;
    /**
     * The zone name of the record set.
     */
    public /*out*/ readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a Recordset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RecordsetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RecordsetArgs | RecordsetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RecordsetState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lineId"] = state ? state.lineId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["records"] = state ? state.records : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as RecordsetArgs | undefined;
            if ((!args || args.records === undefined) && !opts.urn) {
                throw new Error("Missing required property 'records'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["lineId"] = args ? args.lineId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["records"] = args ? args.records : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["zoneName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Recordset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Recordset resources.
 */
export interface RecordsetState {
    /**
     * Specifies the description of the record set.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the resolution line ID.
     * Changing this parameter will create a new resource.
     */
    lineId?: pulumi.Input<string>;
    /**
     * Specifies the name of the record set.
     * The name suffixed with a zone name, which is a complete host name ended with a dot.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies an array of DNS records. The value rules vary depending on the record set type.
     */
    records?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the status of the record set.
     * Value options: **ENABLE**, **DISABLE**. The default value is **ENABLE**.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the DNS recordset.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the time to live (TTL) of the record set (in seconds).
     * The value range is 1–2147483647. The default value is 300.
     */
    ttl?: pulumi.Input<number>;
    /**
     * Specifies the type of the record set.
     * Value options: **A**, **AAAA**, **MX**, **CNAME**, **TXT**, **NS**, **SRV**, **CAA**.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the weight of the record set.
     * Only public zone support. The value range is 0–1000.
     */
    weight?: pulumi.Input<number>;
    /**
     * Specifies the zone ID.
     * Changing this parameter will create a new resource.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * The zone name of the record set.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Recordset resource.
 */
export interface RecordsetArgs {
    /**
     * Specifies the description of the record set.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the resolution line ID.
     * Changing this parameter will create a new resource.
     */
    lineId?: pulumi.Input<string>;
    /**
     * Specifies the name of the record set.
     * The name suffixed with a zone name, which is a complete host name ended with a dot.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies an array of DNS records. The value rules vary depending on the record set type.
     */
    records: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the status of the record set.
     * Value options: **ENABLE**, **DISABLE**. The default value is **ENABLE**.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the DNS recordset.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the time to live (TTL) of the record set (in seconds).
     * The value range is 1–2147483647. The default value is 300.
     */
    ttl?: pulumi.Input<number>;
    /**
     * Specifies the type of the record set.
     * Value options: **A**, **AAAA**, **MX**, **CNAME**, **TXT**, **NS**, **SRV**, **CAA**.
     */
    type: pulumi.Input<string>;
    /**
     * Specifies the weight of the record set.
     * Only public zone support. The value range is 0–1000.
     */
    weight?: pulumi.Input<number>;
    /**
     * Specifies the zone ID.
     * Changing this parameter will create a new resource.
     */
    zoneId: pulumi.Input<string>;
}
