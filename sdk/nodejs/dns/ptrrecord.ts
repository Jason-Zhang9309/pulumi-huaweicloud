// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a DNS PTR record resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const ptrrecordName = config.requireObject("ptrrecordName");
 * const eipId = config.requireObject("eipId");
 * const description = config.requireObject("description");
 * const test = new huaweicloud.dns.Ptrrecord("test", {
 *     floatingipId: eipId,
 *     description: description,
 *     ttl: 3000,
 *     tags: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The PTR record resource can be imported using `id` (consists of the region and the EIP ID (`floatingip_id`)), e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Dns/ptrrecord:Ptrrecord test <id>
 * ```
 *
 *  You can also use `region` and `floatingip_id` instead of `id`, separated by a colon (:), e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Dns/ptrrecord:Ptrrecord test <region>:<floatingip_id>
 * ```
 */
export class Ptrrecord extends pulumi.CustomResource {
    /**
     * Get an existing Ptrrecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PtrrecordState, opts?: pulumi.CustomResourceOptions): Ptrrecord {
        return new Ptrrecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Dns/ptrrecord:Ptrrecord';

    /**
     * Returns true if the given object is an instance of Ptrrecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ptrrecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ptrrecord.__pulumiType;
    }

    /**
     * The address of the FloatingIP/EIP.
     */
    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * Specifies the description of the PTR record.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the enterprise project ID of the PTR record.  
     * This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
     * Changing this parameter will create a new resource.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the FloatingIP/EIP.  
     * Changing this parameter will create a new resource.
     */
    public readonly floatingipId!: pulumi.Output<string>;
    /**
     * Specifies the domain name of the PTR record.  
     * A domain name is case-insensitive. Uppercase letters will also be converted into lowercase letters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the PTR record. If omitted,
     * the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the PTR record.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the time to live (TTL) of the record set (in seconds), defaults to `300`.  
     * The valid value is range from `1` to `2,147,483,647`.
     */
    public readonly ttl!: pulumi.Output<number>;

    /**
     * Create a Ptrrecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PtrrecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PtrrecordArgs | PtrrecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PtrrecordState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["floatingipId"] = state ? state.floatingipId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as PtrrecordArgs | undefined;
            if ((!args || args.floatingipId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'floatingipId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["floatingipId"] = args ? args.floatingipId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["address"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ptrrecord.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ptrrecord resources.
 */
export interface PtrrecordState {
    /**
     * The address of the FloatingIP/EIP.
     */
    address?: pulumi.Input<string>;
    /**
     * Specifies the description of the PTR record.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID of the PTR record.  
     * This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
     * Changing this parameter will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the FloatingIP/EIP.  
     * Changing this parameter will create a new resource.
     */
    floatingipId?: pulumi.Input<string>;
    /**
     * Specifies the domain name of the PTR record.  
     * A domain name is case-insensitive. Uppercase letters will also be converted into lowercase letters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the PTR record. If omitted,
     * the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the PTR record.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the time to live (TTL) of the record set (in seconds), defaults to `300`.  
     * The valid value is range from `1` to `2,147,483,647`.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Ptrrecord resource.
 */
export interface PtrrecordArgs {
    /**
     * Specifies the description of the PTR record.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID of the PTR record.  
     * This parameter is only valid for enterprise users, if omitted, default enterprise project will be used.
     * Changing this parameter will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the FloatingIP/EIP.  
     * Changing this parameter will create a new resource.
     */
    floatingipId: pulumi.Input<string>;
    /**
     * Specifies the domain name of the PTR record.  
     * A domain name is case-insensitive. Uppercase letters will also be converted into lowercase letters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the PTR record. If omitted,
     * the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the PTR record.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the time to live (TTL) of the record set (in seconds), defaults to `300`.  
     * The valid value is range from `1` to `2,147,483,647`.
     */
    ttl?: pulumi.Input<number>;
}
