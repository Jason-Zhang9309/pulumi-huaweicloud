// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an APIG (API) group resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const groupName = config.requireObject("groupName");
 * const description = config.requireObject("description");
 * const environmentId = config.requireObject("environmentId");
 * const test = new huaweicloud.dedicatedapig.Group("test", {
 *     instanceId: instanceId,
 *     description: description,
 *     environments: [{
 *         variables: [{
 *             name: "TERRAFORM",
 *             value: "/stage/terraform",
 *         }],
 *         environmentId: environmentId,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * API groups can be imported using their `id` and the ID of the related dedicated instance, separated by a slash, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:DedicatedApig/group:Group test <instance_id>/<id>
 * ```
 */
export class Group extends pulumi.CustomResource {
    /**
     * Get an existing Group resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupState, opts?: pulumi.CustomResourceOptions): Group {
        return new Group(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:DedicatedApig/group:Group';

    /**
     * Returns true if the given object is an instance of Group.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Group {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Group.__pulumiType;
    }

    /**
     * Specifies the group description.  
     * The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
     * Chinese characters must be in **UTF-8** or **Unicode** format.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies an array of one or more environments of the associated group.  
     * The object structure is documented below.
     */
    public readonly environments!: pulumi.Output<outputs.DedicatedApig.GroupEnvironment[] | undefined>;
    /**
     * Specifies the ID of the dedicated instance to which the group belongs.  
     * Changing this will create a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the variable name.  
     * The valid length is limited from `3` to `32` characters.
     * Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
     * In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
     * It is replaced by the actual value when the API is published in an environment.
     * The variable names are not allowed to be repeated for an API group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region where the APIG (API) group is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The registration time, in RFC-3339 format.
     */
    public /*out*/ readonly registrationTime!: pulumi.Output<string>;
    /**
     * schema: Deprecated; The latest update time of the group.
     *
     * @deprecated Use 'updated_at' instead
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The time when the API group was last modified, in RFC-3339 format.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Group resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupArgs | GroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environments"] = state ? state.environments : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["registrationTime"] = state ? state.registrationTime : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as GroupArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environments"] = args ? args.environments : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["registrationTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Group.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Group resources.
 */
export interface GroupState {
    /**
     * Specifies the group description.  
     * The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
     * Chinese characters must be in **UTF-8** or **Unicode** format.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies an array of one or more environments of the associated group.  
     * The object structure is documented below.
     */
    environments?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.GroupEnvironment>[]>;
    /**
     * Specifies the ID of the dedicated instance to which the group belongs.  
     * Changing this will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the variable name.  
     * The valid length is limited from `3` to `32` characters.
     * Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
     * In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
     * It is replaced by the actual value when the API is published in an environment.
     * The variable names are not allowed to be repeated for an API group.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the APIG (API) group is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The registration time, in RFC-3339 format.
     */
    registrationTime?: pulumi.Input<string>;
    /**
     * schema: Deprecated; The latest update time of the group.
     *
     * @deprecated Use 'updated_at' instead
     */
    updateTime?: pulumi.Input<string>;
    /**
     * The time when the API group was last modified, in RFC-3339 format.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Group resource.
 */
export interface GroupArgs {
    /**
     * Specifies the group description.  
     * The description contain a maximum of 255 characters and the angle brackets (< and >) are not allowed.
     * Chinese characters must be in **UTF-8** or **Unicode** format.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies an array of one or more environments of the associated group.  
     * The object structure is documented below.
     */
    environments?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.GroupEnvironment>[]>;
    /**
     * Specifies the ID of the dedicated instance to which the group belongs.  
     * Changing this will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the variable name.  
     * The valid length is limited from `3` to `32` characters.
     * Only letters, digits, hyphens (-), and underscores (_) are allowed, and must start with a letter.
     * In the definition of an API, `name` (case-sensitive) indicates a variable, such as #Name#.
     * It is replaced by the actual value when the API is published in an environment.
     * The variable names are not allowed to be repeated for an API group.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the APIG (API) group is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}
