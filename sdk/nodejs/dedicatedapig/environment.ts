// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an APIG environment resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const environmentName = config.requireObject("environmentName");
 * const description = config.requireObject("description");
 * const test = new huaweicloud.dedicatedapig.Environment("test", {
 *     instanceId: instanceId,
 *     description: description,
 * });
 * ```
 *
 * ## Import
 *
 * Environments can be imported using their `name` and the ID of the related dedicated instance, separated by a slash, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:DedicatedApig/environment:Environment test &ltinstance_id&gt/&ltname&gt
 * ```
 */
export class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentState, opts?: pulumi.CustomResourceOptions): Environment {
        return new Environment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:DedicatedApig/environment:Environment';

    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Environment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Environment.__pulumiType;
    }

    /**
     * schema: Deprecated; The time when the environment was created.
     *
     * @deprecated Use 'created_at' instead
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The time when the environment was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the environment description.  
     * The value can contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
     * Chinese characters must be in **UTF-8** or **Unicode** format.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the dedicated instance to which the environment
     * belongs.
     * Changing this will create a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the environment name.  
     * The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
     * The name must start with a letter.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region where the dedicated instance is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvironmentArgs | EnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvironmentState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as EnvironmentArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Environment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Environment resources.
 */
export interface EnvironmentState {
    /**
     * schema: Deprecated; The time when the environment was created.
     *
     * @deprecated Use 'created_at' instead
     */
    createTime?: pulumi.Input<string>;
    /**
     * The time when the environment was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the environment description.  
     * The value can contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
     * Chinese characters must be in **UTF-8** or **Unicode** format.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the dedicated instance to which the environment
     * belongs.
     * Changing this will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the environment name.  
     * The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
     * The name must start with a letter.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the dedicated instance is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * Specifies the environment description.  
     * The value can contain a maximum of `255` characters, and the angle brackets (< and >) are not allowed.
     * Chinese characters must be in **UTF-8** or **Unicode** format.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the dedicated instance to which the environment
     * belongs.
     * Changing this will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the environment name.  
     * The valid length is limited from `3` to `64`, only letters, digits and underscores (_) are allowed.
     * The name must start with a letter.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region where the dedicated instance is located.  
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}
