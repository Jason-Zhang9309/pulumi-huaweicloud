// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this resource to bind the APIs to the throttling policy within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const policyId = config.requireObject("policyId");
 * const apiPublishIds = config.requireObject("apiPublishIds");
 * const test = new huaweicloud.dedicatedapig.ThrottlingPolicyAssociate("test", {
 *     instanceId: instanceId,
 *     policyId: policyId,
 *     publishIds: apiPublishIds,
 * });
 * ```
 *
 * ## Import
 *
 * Associate resources can be imported using their `policy_id` and the APIG dedicated instance ID to which the policy belongs, separated by a slash, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:DedicatedApig/throttlingPolicyAssociate:ThrottlingPolicyAssociate test <instance_id>/<policy_id>
 * ```
 */
export class ThrottlingPolicyAssociate extends pulumi.CustomResource {
    /**
     * Get an existing ThrottlingPolicyAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThrottlingPolicyAssociateState, opts?: pulumi.CustomResourceOptions): ThrottlingPolicyAssociate {
        return new ThrottlingPolicyAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:DedicatedApig/throttlingPolicyAssociate:ThrottlingPolicyAssociate';

    /**
     * Returns true if the given object is an instance of ThrottlingPolicyAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThrottlingPolicyAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThrottlingPolicyAssociate.__pulumiType;
    }

    /**
     * Specifies the ID of the dedicated instance to which the APIs and the
     * throttling policy belongs.
     * Changing this will create a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the throttling policy.  
     * Changing this will create a new resource.
     */
    public readonly policyId!: pulumi.Output<string>;
    /**
     * Specifies the publish IDs corresponding to the APIs bound by the throttling policy.
     */
    public readonly publishIds!: pulumi.Output<string[]>;
    /**
     * Specifies the region where the dedicated instance and the throttling policy
     * are located.
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a ThrottlingPolicyAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThrottlingPolicyAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThrottlingPolicyAssociateArgs | ThrottlingPolicyAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThrottlingPolicyAssociateState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["publishIds"] = state ? state.publishIds : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as ThrottlingPolicyAssociateArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.policyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyId'");
            }
            if ((!args || args.publishIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publishIds'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["publishIds"] = args ? args.publishIds : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThrottlingPolicyAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ThrottlingPolicyAssociate resources.
 */
export interface ThrottlingPolicyAssociateState {
    /**
     * Specifies the ID of the dedicated instance to which the APIs and the
     * throttling policy belongs.
     * Changing this will create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the throttling policy.  
     * Changing this will create a new resource.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Specifies the publish IDs corresponding to the APIs bound by the throttling policy.
     */
    publishIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the region where the dedicated instance and the throttling policy
     * are located.
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ThrottlingPolicyAssociate resource.
 */
export interface ThrottlingPolicyAssociateArgs {
    /**
     * Specifies the ID of the dedicated instance to which the APIs and the
     * throttling policy belongs.
     * Changing this will create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the ID of the throttling policy.  
     * Changing this will create a new resource.
     */
    policyId: pulumi.Input<string>;
    /**
     * Specifies the publish IDs corresponding to the APIs bound by the throttling policy.
     */
    publishIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the region where the dedicated instance and the throttling policy
     * are located.
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}
