// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 * ### Publish a new version of the API
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const envId = config.requireObject("envId");
 * const apiId = config.requireObject("apiId");
 * const _default = new huaweicloud.dedicatedapig.ApiPublishment("default", {
 *     instanceId: instanceId,
 *     envId: envId,
 *     apiId: apiId,
 * });
 * ```
 * ### Switch to a specified version of the API which is published
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const envId = config.requireObject("envId");
 * const apiId = config.requireObject("apiId");
 * const versionId = config.requireObject("versionId");
 * const _default = new huaweicloud.dedicatedapig.ApiPublishment("default", {
 *     instanceId: instanceId,
 *     envId: envId,
 *     apiId: apiId,
 *     versionId: versionId,
 * });
 * ```
 *
 * ## Import
 *
 * The publishments can be imported using their related `instance_id`, `env_id` and `api_id`, separated by slashes, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:DedicatedApig/apiPublishment:ApiPublishment test <instance_id>/<env_id>/<api_id>
 * ```
 */
export class ApiPublishment extends pulumi.CustomResource {
    /**
     * Get an existing ApiPublishment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiPublishmentState, opts?: pulumi.CustomResourceOptions): ApiPublishment {
        return new ApiPublishment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:DedicatedApig/apiPublishment:ApiPublishment';

    /**
     * Returns true if the given object is an instance of ApiPublishment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiPublishment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiPublishment.__pulumiType;
    }

    /**
     * Specifies the ID of the API to be published or already published.  
     * Changing this will create a new resource.
     */
    public readonly apiId!: pulumi.Output<string>;
    /**
     * Specifies the description of the current publishment.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the environmentto which the current version of the API
     * will be published or has been published.
     * Changing this will create a new resource.
     */
    public readonly envId!: pulumi.Output<string>;
    /**
     * The name of the environment to which the current version of the API is published.
     */
    public /*out*/ readonly envName!: pulumi.Output<string>;
    /**
     * All publish informations of the API.  
     * The object structure is documented below.
     */
    public /*out*/ readonly histories!: pulumi.Output<outputs.DedicatedApig.ApiPublishmentHistory[]>;
    /**
     * Specifies an ID of the APIG dedicated instance to which the API belongs
     * to. Changing this will create a new publishment resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The publish ID of the API in current environment.
     */
    public /*out*/ readonly publishId!: pulumi.Output<string>;
    /**
     * Time when the current version was published.
     */
    public /*out*/ readonly publishedAt!: pulumi.Output<string>;
    /**
     * Specifies the region in which to publish APIs.  
     * If omitted, the provider-level region will be used.
     * Changing this will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the version ID of the current publishment.
     */
    public readonly versionId!: pulumi.Output<string | undefined>;

    /**
     * Create a ApiPublishment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiPublishmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiPublishmentArgs | ApiPublishmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiPublishmentState | undefined;
            resourceInputs["apiId"] = state ? state.apiId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["envId"] = state ? state.envId : undefined;
            resourceInputs["envName"] = state ? state.envName : undefined;
            resourceInputs["histories"] = state ? state.histories : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["publishId"] = state ? state.publishId : undefined;
            resourceInputs["publishedAt"] = state ? state.publishedAt : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as ApiPublishmentArgs | undefined;
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.envId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'envId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["envId"] = args ? args.envId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
            resourceInputs["envName"] = undefined /*out*/;
            resourceInputs["histories"] = undefined /*out*/;
            resourceInputs["publishId"] = undefined /*out*/;
            resourceInputs["publishedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiPublishment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiPublishment resources.
 */
export interface ApiPublishmentState {
    /**
     * Specifies the ID of the API to be published or already published.  
     * Changing this will create a new resource.
     */
    apiId?: pulumi.Input<string>;
    /**
     * Specifies the description of the current publishment.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the environmentto which the current version of the API
     * will be published or has been published.
     * Changing this will create a new resource.
     */
    envId?: pulumi.Input<string>;
    /**
     * The name of the environment to which the current version of the API is published.
     */
    envName?: pulumi.Input<string>;
    /**
     * All publish informations of the API.  
     * The object structure is documented below.
     */
    histories?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiPublishmentHistory>[]>;
    /**
     * Specifies an ID of the APIG dedicated instance to which the API belongs
     * to. Changing this will create a new publishment resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The publish ID of the API in current environment.
     */
    publishId?: pulumi.Input<string>;
    /**
     * Time when the current version was published.
     */
    publishedAt?: pulumi.Input<string>;
    /**
     * Specifies the region in which to publish APIs.  
     * If omitted, the provider-level region will be used.
     * Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the version ID of the current publishment.
     */
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiPublishment resource.
 */
export interface ApiPublishmentArgs {
    /**
     * Specifies the ID of the API to be published or already published.  
     * Changing this will create a new resource.
     */
    apiId: pulumi.Input<string>;
    /**
     * Specifies the description of the current publishment.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the ID of the environmentto which the current version of the API
     * will be published or has been published.
     * Changing this will create a new resource.
     */
    envId: pulumi.Input<string>;
    /**
     * Specifies an ID of the APIG dedicated instance to which the API belongs
     * to. Changing this will create a new publishment resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the region in which to publish APIs.  
     * If omitted, the provider-level region will be used.
     * Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the version ID of the current publishment.
     */
    versionId?: pulumi.Input<string>;
}
