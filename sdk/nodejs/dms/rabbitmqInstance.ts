// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manage DMS RabbitMQ instance resources within HuaweiCloud.
 *
 * ## Example Usage
 * ### Basic Instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject("vpcId");
 * const subnetId = config.requireObject("subnetId");
 * const securityGroupId = config.requireObject("securityGroupId");
 * const zones = huaweicloud.getAvailabilityZones({});
 * const testProduct = huaweicloud.Dms.getProduct({
 *     engine: "rabbitmq",
 *     instanceType: "cluster",
 *     version: "3.7.17",
 *     nodeNum: "3",
 * });
 * const testRabbitmqInstance = new huaweicloud.dms.RabbitmqInstance("testRabbitmqInstance", {
 *     productId: testProduct.then(testProduct => testProduct.id),
 *     engineVersion: testProduct.then(testProduct => testProduct.version),
 *     storageSpecCode: testProduct.then(testProduct => testProduct.storageSpecCode),
 *     vpcId: vpcId,
 *     networkId: subnetId,
 *     securityGroupId: securityGroupId,
 *     availabilityZones: [zones.then(zones => zones.names?[0])],
 *     accessUser: "user",
 *     password: "Rabbitmqtest@123",
 * });
 * ```
 *
 * ## Import
 *
 * DMS RabbitMQ instance can be imported using the instance id, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Dms/rabbitmqInstance:RabbitmqInstance huaweicloud_dms_rabbitmq_instance.instance_1 8d3c7938-dc47-4937-a30f-c80de381c5e3
 * ```
 *
 *  Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`password`. It is generally recommended running `terraform plan` after importing a DMS RabbitMQ instance. You can then decide if changes should be applied to the instance, or the resource definition should be updated to align with the instance. Also you can ignore changes as below. resource "huaweicloud_dms_rabbitmq_instance" "instance_1" {
 *
 *  ...
 *
 *  lifecycle {
 *
 *  ignore_changes = [
 *
 *  password
 *
 *  ]
 *
 *  } }
 */
export class RabbitmqInstance extends pulumi.CustomResource {
    /**
     * Get an existing RabbitmqInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RabbitmqInstanceState, opts?: pulumi.CustomResourceOptions): RabbitmqInstance {
        return new RabbitmqInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Dms/rabbitmqInstance:RabbitmqInstance';

    /**
     * Returns true if the given object is an instance of RabbitmqInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RabbitmqInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RabbitmqInstance.__pulumiType;
    }

    /**
     * Specifies a username. A username consists of 4 to 64 characters and
     * supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
     */
    public readonly accessUser!: pulumi.Output<string>;
    /**
     * Specifies the names of an AZ.
     * The parameter value can not be left blank or an empty array.
     * Changing this creates a new instance resource.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availability_zones" instead.
     */
    public readonly availableZones!: pulumi.Output<string[]>;
    /**
     * Indicates the IP address of the DMS RabbitMQ instance.
     */
    public /*out*/ readonly connectAddress!: pulumi.Output<string>;
    /**
     * Specifies the description of the DMS RabbitMQ instance.
     * It is a character string containing not more than 1,024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether public access to the DMS RabbitMQ instance is enabled.
     */
    public /*out*/ readonly enablePublicIp!: pulumi.Output<boolean>;
    /**
     * Indicates the message engine.
     */
    public /*out*/ readonly engine!: pulumi.Output<string>;
    /**
     * Specifies the version of the RabbitMQ engine. Default to "3.7.17".
     * Changing this creates a new instance resource.
     */
    public readonly engineVersion!: pulumi.Output<string | undefined>;
    /**
     * Specifies the enterprise project ID of the RabbitMQ instance.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the time at which a maintenance time window starts. Format: HH:mm.
     * The start time and end time of a maintenance time window must indicate the time segment of a supported maintenance
     * time window.
     * The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
     * and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
     * blank. In this case, the system automatically allocates the default start time 02:00.
     */
    public readonly maintainBegin!: pulumi.Output<string>;
    /**
     * Specifies the time at which a maintenance time window ends. Format: HH:mm.
     * The start time and end time of a maintenance time window must indicate the time segment of a supported maintenance
     * time window. The end time is four hours later than the start time.
     * For example, if the start time is 22:00, the end time is 02:00.
     * Parameters `maintainBegin` and `maintainEnd` must be set in pairs.
     * If parameter `maintainEnd` is left  blank, parameter `maintainBegin` is also blank.
     * In this case, the system automatically allocates the default end time 06:00.
     */
    public readonly maintainEnd!: pulumi.Output<string>;
    /**
     * Indicates the management address of the DMS RabbitMQ instance.
     */
    public /*out*/ readonly manegementConnectAddress!: pulumi.Output<string>;
    /**
     * Specifies the name of the DMS RabbitMQ instance. An instance name starts with a letter,
     * consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the ID of a subnet. Changing this creates a new instance
     * resource.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Specifies the password of the DMS RabbitMQ instance. A password must meet
     * the following complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following
     * character types: lowercase letters, uppercase letters, digits,
     * and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
     * Changing this creates a new instance resource.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Indicates the port number of the DMS RabbitMQ instance.
     */
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * Specifies a product ID. Changing this creates a new instance resource.
     */
    public readonly productId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the elastic IP address (EIP)
     * bound to the DMS RabbitMQ instance.
     */
    public readonly publicIpId!: pulumi.Output<string | undefined>;
    /**
     * The region in which to create the DMS RabbitMQ instance resource. If omitted,
     * the provider-level region will be used. Changing this creates a new instance resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Indicates a resource specifications identifier.
     */
    public /*out*/ readonly resourceSpecCode!: pulumi.Output<string>;
    /**
     * Specifies the ID of a security group.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Indicates the instance specification. For a single-node DMS RabbitMQ instance, VM specifications are
     * returned. For a cluster DMS RabbitMQ instance, VM specifications and the number of nodes are returned.
     */
    public /*out*/ readonly specification!: pulumi.Output<string>;
    /**
     * Specifies whether to enable public access for the DMS RabbitMQ instance.
     * Changing this creates a new instance resource.
     */
    public readonly sslEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates the status of the DMS RabbitMQ instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the message storage space, unit is GB. Value range:
     * + Single-node RabbitMQ instance: 100â€“90,000 GB
     * + Cluster RabbitMQ instance: 100 GB x number of nodes to 90,000 GB, 200 GB x number of nodes to 90,000 GB,
     * and 300 GB x number of nodes to 90,000 GB
     */
    public readonly storageSpace!: pulumi.Output<number>;
    /**
     * Specifies the storage I/O specification.
     * Valid values are **dms.physical.storage.high** and **dms.physical.storage.ultra**.
     * Changing this creates a new instance resource.
     */
    public readonly storageSpecCode!: pulumi.Output<string>;
    /**
     * The key/value pairs to associate with the DMS RabbitMQ instance.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Indicates the DMS RabbitMQ instance type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Indicates the used message storage space. Unit: GB
     */
    public /*out*/ readonly usedStorageSpace!: pulumi.Output<number>;
    /**
     * Indicates the ID of the user who created the DMS RabbitMQ instance
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;
    /**
     * Indicates the name of the user who created the DMS RabbitMQ instance
     */
    public /*out*/ readonly userName!: pulumi.Output<string>;
    /**
     * Specifies the ID of a VPC. Changing this creates a new instance resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a RabbitmqInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RabbitmqInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RabbitmqInstanceArgs | RabbitmqInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RabbitmqInstanceState | undefined;
            resourceInputs["accessUser"] = state ? state.accessUser : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["availableZones"] = state ? state.availableZones : undefined;
            resourceInputs["connectAddress"] = state ? state.connectAddress : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enablePublicIp"] = state ? state.enablePublicIp : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["maintainBegin"] = state ? state.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = state ? state.maintainEnd : undefined;
            resourceInputs["manegementConnectAddress"] = state ? state.manegementConnectAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["publicIpId"] = state ? state.publicIpId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceSpecCode"] = state ? state.resourceSpecCode : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["specification"] = state ? state.specification : undefined;
            resourceInputs["sslEnable"] = state ? state.sslEnable : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageSpace"] = state ? state.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = state ? state.storageSpecCode : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usedStorageSpace"] = state ? state.usedStorageSpace : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as RabbitmqInstanceArgs | undefined;
            if ((!args || args.accessUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessUser'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.productId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.storageSpecCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSpecCode'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accessUser"] = args ? args.accessUser : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["availableZones"] = args ? args.availableZones : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["maintainBegin"] = args ? args.maintainBegin : undefined;
            resourceInputs["maintainEnd"] = args ? args.maintainEnd : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["publicIpId"] = args ? args.publicIpId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["sslEnable"] = args ? args.sslEnable : undefined;
            resourceInputs["storageSpace"] = args ? args.storageSpace : undefined;
            resourceInputs["storageSpecCode"] = args ? args.storageSpecCode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["connectAddress"] = undefined /*out*/;
            resourceInputs["enablePublicIp"] = undefined /*out*/;
            resourceInputs["engine"] = undefined /*out*/;
            resourceInputs["manegementConnectAddress"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["resourceSpecCode"] = undefined /*out*/;
            resourceInputs["specification"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["usedStorageSpace"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RabbitmqInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RabbitmqInstance resources.
 */
export interface RabbitmqInstanceState {
    /**
     * Specifies a username. A username consists of 4 to 64 characters and
     * supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
     */
    accessUser?: pulumi.Input<string>;
    /**
     * Specifies the names of an AZ.
     * The parameter value can not be left blank or an empty array.
     * Changing this creates a new instance resource.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availability_zones" instead.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the IP address of the DMS RabbitMQ instance.
     */
    connectAddress?: pulumi.Input<string>;
    /**
     * Specifies the description of the DMS RabbitMQ instance.
     * It is a character string containing not more than 1,024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether public access to the DMS RabbitMQ instance is enabled.
     */
    enablePublicIp?: pulumi.Input<boolean>;
    /**
     * Indicates the message engine.
     */
    engine?: pulumi.Input<string>;
    /**
     * Specifies the version of the RabbitMQ engine. Default to "3.7.17".
     * Changing this creates a new instance resource.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID of the RabbitMQ instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the time at which a maintenance time window starts. Format: HH:mm.
     * The start time and end time of a maintenance time window must indicate the time segment of a supported maintenance
     * time window.
     * The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
     * and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
     * blank. In this case, the system automatically allocates the default start time 02:00.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * Specifies the time at which a maintenance time window ends. Format: HH:mm.
     * The start time and end time of a maintenance time window must indicate the time segment of a supported maintenance
     * time window. The end time is four hours later than the start time.
     * For example, if the start time is 22:00, the end time is 02:00.
     * Parameters `maintainBegin` and `maintainEnd` must be set in pairs.
     * If parameter `maintainEnd` is left  blank, parameter `maintainBegin` is also blank.
     * In this case, the system automatically allocates the default end time 06:00.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * Indicates the management address of the DMS RabbitMQ instance.
     */
    manegementConnectAddress?: pulumi.Input<string>;
    /**
     * Specifies the name of the DMS RabbitMQ instance. An instance name starts with a letter,
     * consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet. Changing this creates a new instance
     * resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Specifies the password of the DMS RabbitMQ instance. A password must meet
     * the following complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following
     * character types: lowercase letters, uppercase letters, digits,
     * and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
     * Changing this creates a new instance resource.
     */
    password?: pulumi.Input<string>;
    /**
     * Indicates the port number of the DMS RabbitMQ instance.
     */
    port?: pulumi.Input<number>;
    /**
     * Specifies a product ID. Changing this creates a new instance resource.
     */
    productId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP address (EIP)
     * bound to the DMS RabbitMQ instance.
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * The region in which to create the DMS RabbitMQ instance resource. If omitted,
     * the provider-level region will be used. Changing this creates a new instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Indicates a resource specifications identifier.
     */
    resourceSpecCode?: pulumi.Input<string>;
    /**
     * Specifies the ID of a security group.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Indicates the instance specification. For a single-node DMS RabbitMQ instance, VM specifications are
     * returned. For a cluster DMS RabbitMQ instance, VM specifications and the number of nodes are returned.
     */
    specification?: pulumi.Input<string>;
    /**
     * Specifies whether to enable public access for the DMS RabbitMQ instance.
     * Changing this creates a new instance resource.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Indicates the status of the DMS RabbitMQ instance.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the message storage space, unit is GB. Value range:
     * + Single-node RabbitMQ instance: 100â€“90,000 GB
     * + Cluster RabbitMQ instance: 100 GB x number of nodes to 90,000 GB, 200 GB x number of nodes to 90,000 GB,
     * and 300 GB x number of nodes to 90,000 GB
     */
    storageSpace?: pulumi.Input<number>;
    /**
     * Specifies the storage I/O specification.
     * Valid values are **dms.physical.storage.high** and **dms.physical.storage.ultra**.
     * Changing this creates a new instance resource.
     */
    storageSpecCode?: pulumi.Input<string>;
    /**
     * The key/value pairs to associate with the DMS RabbitMQ instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the DMS RabbitMQ instance type.
     */
    type?: pulumi.Input<string>;
    /**
     * Indicates the used message storage space. Unit: GB
     */
    usedStorageSpace?: pulumi.Input<number>;
    /**
     * Indicates the ID of the user who created the DMS RabbitMQ instance
     */
    userId?: pulumi.Input<string>;
    /**
     * Indicates the name of the user who created the DMS RabbitMQ instance
     */
    userName?: pulumi.Input<string>;
    /**
     * Specifies the ID of a VPC. Changing this creates a new instance resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RabbitmqInstance resource.
 */
export interface RabbitmqInstanceArgs {
    /**
     * Specifies a username. A username consists of 4 to 64 characters and
     * supports only letters, digits, and hyphens (-). Changing this creates a new instance resource.
     */
    accessUser: pulumi.Input<string>;
    /**
     * Specifies the names of an AZ.
     * The parameter value can not be left blank or an empty array.
     * Changing this creates a new instance resource.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated available_zones has deprecated, please use "availability_zones" instead.
     */
    availableZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the description of the DMS RabbitMQ instance.
     * It is a character string containing not more than 1,024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the version of the RabbitMQ engine. Default to "3.7.17".
     * Changing this creates a new instance resource.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID of the RabbitMQ instance.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the time at which a maintenance time window starts. Format: HH:mm.
     * The start time and end time of a maintenance time window must indicate the time segment of a supported maintenance
     * time window.
     * The start time must be set to 22:00, 02:00, 06:00, 10:00, 14:00, or 18:00. Parameters `maintainBegin`
     * and `maintainEnd` must be set in pairs. If parameter `maintainBegin` is left blank, parameter `maintainEnd` is also
     * blank. In this case, the system automatically allocates the default start time 02:00.
     */
    maintainBegin?: pulumi.Input<string>;
    /**
     * Specifies the time at which a maintenance time window ends. Format: HH:mm.
     * The start time and end time of a maintenance time window must indicate the time segment of a supported maintenance
     * time window. The end time is four hours later than the start time.
     * For example, if the start time is 22:00, the end time is 02:00.
     * Parameters `maintainBegin` and `maintainEnd` must be set in pairs.
     * If parameter `maintainEnd` is left  blank, parameter `maintainBegin` is also blank.
     * In this case, the system automatically allocates the default end time 06:00.
     */
    maintainEnd?: pulumi.Input<string>;
    /**
     * Specifies the name of the DMS RabbitMQ instance. An instance name starts with a letter,
     * consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of a subnet. Changing this creates a new instance
     * resource.
     */
    networkId: pulumi.Input<string>;
    /**
     * Specifies the password of the DMS RabbitMQ instance. A password must meet
     * the following complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following
     * character types: lowercase letters, uppercase letters, digits,
     * and special characters (`~!@#$%^&*()-_=+\\|[{}]:'",<.>/?).
     * Changing this creates a new instance resource.
     */
    password: pulumi.Input<string>;
    /**
     * Specifies a product ID. Changing this creates a new instance resource.
     */
    productId: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic IP address (EIP)
     * bound to the DMS RabbitMQ instance.
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * The region in which to create the DMS RabbitMQ instance resource. If omitted,
     * the provider-level region will be used. Changing this creates a new instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of a security group.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies whether to enable public access for the DMS RabbitMQ instance.
     * Changing this creates a new instance resource.
     */
    sslEnable?: pulumi.Input<boolean>;
    /**
     * Specifies the message storage space, unit is GB. Value range:
     * + Single-node RabbitMQ instance: 100â€“90,000 GB
     * + Cluster RabbitMQ instance: 100 GB x number of nodes to 90,000 GB, 200 GB x number of nodes to 90,000 GB,
     * and 300 GB x number of nodes to 90,000 GB
     */
    storageSpace?: pulumi.Input<number>;
    /**
     * Specifies the storage I/O specification.
     * Valid values are **dms.physical.storage.high** and **dms.physical.storage.ultra**.
     * Changing this creates a new instance resource.
     */
    storageSpecCode: pulumi.Input<string>;
    /**
     * The key/value pairs to associate with the DMS RabbitMQ instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the ID of a VPC. Changing this creates a new instance resource.
     */
    vpcId: pulumi.Input<string>;
}
