// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a DMS kafka user resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const kafkaInstanceId = config.requireObject("kafkaInstanceId");
 * const user = new huaweicloud.dms.KafkaUser("user", {
 *     instanceId: kafkaInstanceId,
 *     password: "Test@123",
 * });
 * ```
 *
 * ## Import
 *
 * DMS kafka users can be imported using the kafka instance ID and user name separated by a slash, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Dms/kafkaUser:KafkaUser user c8057fe5-23a8-46ef-ad83-c0055b4e0c5c/user_1
 * ```
 */
export class KafkaUser extends pulumi.CustomResource {
    /**
     * Get an existing KafkaUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaUserState, opts?: pulumi.CustomResourceOptions): KafkaUser {
        return new KafkaUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Dms/kafkaUser:KafkaUser';

    /**
     * Returns true if the given object is an instance of KafkaUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KafkaUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KafkaUser.__pulumiType;
    }

    /**
     * Specifies the ID of the DMS kafka instance to which the user belongs.
     * Changing this creates a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the name of the user. Changing this creates a new resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the password of the user. The parameter must be 8 to 32 characters
     * long and contain only letters(case-sensitive), digits, and special characters(`~!@#$%^&*()-_=+|[{}]:'",<.>/?).
     * The value must be different from name.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The region in which to create the DMS kafka user resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a KafkaUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KafkaUserArgs | KafkaUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KafkaUserState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as KafkaUserArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KafkaUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KafkaUser resources.
 */
export interface KafkaUserState {
    /**
     * Specifies the ID of the DMS kafka instance to which the user belongs.
     * Changing this creates a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the name of the user. Changing this creates a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password of the user. The parameter must be 8 to 32 characters
     * long and contain only letters(case-sensitive), digits, and special characters(`~!@#$%^&*()-_=+|[{}]:'",<.>/?).
     * The value must be different from name.
     */
    password?: pulumi.Input<string>;
    /**
     * The region in which to create the DMS kafka user resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KafkaUser resource.
 */
export interface KafkaUserArgs {
    /**
     * Specifies the ID of the DMS kafka instance to which the user belongs.
     * Changing this creates a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the name of the user. Changing this creates a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the password of the user. The parameter must be 8 to 32 characters
     * long and contain only letters(case-sensitive), digits, and special characters(`~!@#$%^&*()-_=+|[{}]:'",<.>/?).
     * The value must be different from name.
     */
    password: pulumi.Input<string>;
    /**
     * The region in which to create the DMS kafka user resource. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}
