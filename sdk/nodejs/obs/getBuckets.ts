// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get all OBS buckets.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const buckets = pulumi.output(huaweicloud.Obs.getBuckets({
 *     bucket: "your-bucket-name",
 * }));
 * ```
 */
export function getBuckets(args?: GetBucketsArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Obs/getBuckets:getBuckets", {
        "bucket": args.bucket,
        "enterpriseProjectId": args.enterpriseProjectId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getBuckets.
 */
export interface GetBucketsArgs {
    /**
     * The name of the OBS bucket.
     */
    bucket?: string;
    /**
     * The enterprise project id of the OBS bucket.
     */
    enterpriseProjectId?: string;
    /**
     * The region in which to obtain the OBS bucket.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getBuckets.
 */
export interface GetBucketsResult {
    /**
     * The name of the OBS bucket.
     */
    readonly bucket?: string;
    /**
     * A list of OBS buckets.
     */
    readonly buckets: outputs.Obs.GetBucketsBucket[];
    /**
     * The enterprise project id of the OBS bucket.
     */
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The region where the OBS bucket belongs.
     */
    readonly region?: string;
}

export function getBucketsOutput(args?: GetBucketsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketsResult> {
    return pulumi.output(args).apply(a => getBuckets(a, opts))
}

/**
 * A collection of arguments for invoking getBuckets.
 */
export interface GetBucketsOutputArgs {
    /**
     * The name of the OBS bucket.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The enterprise project id of the OBS bucket.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The region in which to obtain the OBS bucket.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
