// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a VPC network ACL resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const name = config.requireObject("name");
 * const subnetId1 = config.requireObject("subnetId1");
 * const subnetId2 = config.requireObject("subnetId2");
 * const test = new huaweicloud.vpc.NetworkAcl("test", {
 *     description: "created by terraform",
 *     enterpriseProjectId: "0",
 *     enabled: true,
 *     ingressRules: [
 *         {
 *             action: "allow",
 *             ipVersion: 4,
 *             protocol: "tcp",
 *             sourceIpAddress: "192.168.0.0/24",
 *             sourcePort: "22-30,33",
 *             destinationIpAddress: "0.0.0.0/0",
 *             destinationPort: "8001-8010",
 *         },
 *         {
 *             action: "deny",
 *             ipVersion: 4,
 *             protocol: "icmp",
 *             sourceIpAddress: "192.168.0.0/24",
 *             destinationIpAddress: "0.0.0.0/0",
 *         },
 *     ],
 *     egressRules: [
 *         {
 *             action: "allow",
 *             ipVersion: 4,
 *             protocol: "tcp",
 *             sourceIpAddress: "172.16.0.0/24",
 *             sourcePort: "22-30,33",
 *             destinationIpAddress: "0.0.0.0/0",
 *             destinationPort: "8001-8010",
 *         },
 *         {
 *             action: "deny",
 *             ipVersion: 4,
 *             protocol: "icmp",
 *             sourceIpAddress: "172.16.0.0/24",
 *             destinationIpAddress: "0.0.0.0/0",
 *         },
 *     ],
 *     associatedSubnets: [
 *         {
 *             subnetId: subnetId1,
 *         },
 *         {
 *             subnetId: subnetId2,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * The network ACL can be imported using `id`, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Vpc/networkAcl:NetworkAcl test <id>
 * ```
 */
export class NetworkAcl extends pulumi.CustomResource {
    /**
     * Get an existing NetworkAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkAclState, opts?: pulumi.CustomResourceOptions): NetworkAcl {
        return new NetworkAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Vpc/networkAcl:NetworkAcl';

    /**
     * Returns true if the given object is an instance of NetworkAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkAcl.__pulumiType;
    }

    /**
     * Specifies the associated subnets of the network ACL.
     * The associatedSubnets structure is documented below.
     */
    public readonly associatedSubnets!: pulumi.Output<outputs.Vpc.NetworkAclAssociatedSubnet[] | undefined>;
    /**
     * The created time of the ACL.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the network ACL rule description. The value can contain no more
     * than 255 characters. The value cannot contain angle brackets (< or >).
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the egress rules of the network ACL.
     * The rules structure is documented below.
     */
    public readonly egressRules!: pulumi.Output<outputs.Vpc.NetworkAclEgressRule[] | undefined>;
    /**
     * Specifies whether the network ACL is enabled. The default value is **true**.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the enterprise project ID of the network ACL.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the ingress rules of the network ACL.
     * The rules structure is documented below.
     */
    public readonly ingressRules!: pulumi.Output<outputs.Vpc.NetworkAclIngressRule[] | undefined>;
    /**
     * Specifies the network ACL rule name. The value can contain no more than 64 characters,
     * including letters, digits, underscores (_), hyphens (-), and periods (.).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The status of the ACL.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the key/value pairs to associate with the network ACL.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The updated time of the ACL.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a NetworkAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkAclArgs | NetworkAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkAclState | undefined;
            resourceInputs["associatedSubnets"] = state ? state.associatedSubnets : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["egressRules"] = state ? state.egressRules : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["ingressRules"] = state ? state.ingressRules : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as NetworkAclArgs | undefined;
            resourceInputs["associatedSubnets"] = args ? args.associatedSubnets : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["egressRules"] = args ? args.egressRules : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["ingressRules"] = args ? args.ingressRules : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkAcl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkAcl resources.
 */
export interface NetworkAclState {
    /**
     * Specifies the associated subnets of the network ACL.
     * The associatedSubnets structure is documented below.
     */
    associatedSubnets?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclAssociatedSubnet>[]>;
    /**
     * The created time of the ACL.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the network ACL rule description. The value can contain no more
     * than 255 characters. The value cannot contain angle brackets (< or >).
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the egress rules of the network ACL.
     * The rules structure is documented below.
     */
    egressRules?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclEgressRule>[]>;
    /**
     * Specifies whether the network ACL is enabled. The default value is **true**.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the enterprise project ID of the network ACL.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the ingress rules of the network ACL.
     * The rules structure is documented below.
     */
    ingressRules?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclIngressRule>[]>;
    /**
     * Specifies the network ACL rule name. The value can contain no more than 64 characters,
     * including letters, digits, underscores (_), hyphens (-), and periods (.).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The status of the ACL.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the network ACL.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The updated time of the ACL.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkAcl resource.
 */
export interface NetworkAclArgs {
    /**
     * Specifies the associated subnets of the network ACL.
     * The associatedSubnets structure is documented below.
     */
    associatedSubnets?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclAssociatedSubnet>[]>;
    /**
     * Specifies the network ACL rule description. The value can contain no more
     * than 255 characters. The value cannot contain angle brackets (< or >).
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the egress rules of the network ACL.
     * The rules structure is documented below.
     */
    egressRules?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclEgressRule>[]>;
    /**
     * Specifies whether the network ACL is enabled. The default value is **true**.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the enterprise project ID of the network ACL.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the ingress rules of the network ACL.
     * The rules structure is documented below.
     */
    ingressRules?: pulumi.Input<pulumi.Input<inputs.Vpc.NetworkAclIngressRule>[]>;
    /**
     * Specifies the network ACL rule name. The value can contain no more than 64 characters,
     * including letters, digits, underscores (_), hyphens (-), and periods (.).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the key/value pairs to associate with the network ACL.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
