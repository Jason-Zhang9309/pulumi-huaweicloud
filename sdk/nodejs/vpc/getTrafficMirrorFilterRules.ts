// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the traffic mirror filter rules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test1 = pulumi.output(huaweicloud.Vpc.getTrafficMirrorFilterRules({
 *     protocol: "udp",
 * }));
 * ```
 */
export function getTrafficMirrorFilterRules(args?: GetTrafficMirrorFilterRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetTrafficMirrorFilterRulesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Vpc/getTrafficMirrorFilterRules:getTrafficMirrorFilterRules", {
        "action": args.action,
        "destinationCidrBlock": args.destinationCidrBlock,
        "destinationPortRange": args.destinationPortRange,
        "direction": args.direction,
        "priority": args.priority,
        "protocol": args.protocol,
        "region": args.region,
        "sourceCidrBlock": args.sourceCidrBlock,
        "sourcePortRange": args.sourcePortRange,
        "trafficMirrorFilterId": args.trafficMirrorFilterId,
        "trafficMirrorFilterRuleId": args.trafficMirrorFilterRuleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTrafficMirrorFilterRules.
 */
export interface GetTrafficMirrorFilterRulesArgs {
    /**
     * The policy of in the traffic mirror filter rule.
     * Valid values are **accept** or **reject**.
     */
    action?: string;
    /**
     * The destination IP address of the traffic mirror filter rule.
     */
    destinationCidrBlock?: string;
    /**
     * The destination port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    destinationPortRange?: string;
    /**
     * The direction of the traffic mirror filter rule.
     * Valid values are **ingress** or **egress**.
     */
    direction?: string;
    /**
     * The priority number of the traffic mirror filter rule.
     * Valid value ranges from `1` to `65,535`.
     */
    priority?: string;
    /**
     * The protocol of the traffic mirror filter rule.
     * Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
     */
    protocol?: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * The source IP address of the traffic mirror filter rule.
     */
    sourceCidrBlock?: string;
    /**
     * The source port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    sourcePortRange?: string;
    /**
     * The traffic mirror filter ID used as the query filter.
     */
    trafficMirrorFilterId?: string;
    /**
     * The traffic mirror filter rule ID used as the query filter.
     */
    trafficMirrorFilterRuleId?: string;
}

/**
 * A collection of values returned by getTrafficMirrorFilterRules.
 */
export interface GetTrafficMirrorFilterRulesResult {
    /**
     * Whether to accept or reject traffic.
     */
    readonly action?: string;
    /**
     * Destination CIDR block of the mirrored traffic.
     */
    readonly destinationCidrBlock?: string;
    /**
     * Source port range.
     */
    readonly destinationPortRange?: string;
    /**
     * Traffic direction.
     */
    readonly direction?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Mirror filter rule priority.
     */
    readonly priority?: string;
    /**
     * Protocol of the mirrored traffic.
     */
    readonly protocol?: string;
    readonly region: string;
    /**
     * Source CIDR block of the mirrored traffic.
     */
    readonly sourceCidrBlock?: string;
    /**
     * Source port range.
     */
    readonly sourcePortRange?: string;
    /**
     * Traffic mirror filter ID.
     */
    readonly trafficMirrorFilterId?: string;
    readonly trafficMirrorFilterRuleId?: string;
    /**
     * List of traffic mirror filter rules.
     */
    readonly trafficMirrorFilterRules: outputs.Vpc.GetTrafficMirrorFilterRulesTrafficMirrorFilterRule[];
}

export function getTrafficMirrorFilterRulesOutput(args?: GetTrafficMirrorFilterRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTrafficMirrorFilterRulesResult> {
    return pulumi.output(args).apply(a => getTrafficMirrorFilterRules(a, opts))
}

/**
 * A collection of arguments for invoking getTrafficMirrorFilterRules.
 */
export interface GetTrafficMirrorFilterRulesOutputArgs {
    /**
     * The policy of in the traffic mirror filter rule.
     * Valid values are **accept** or **reject**.
     */
    action?: pulumi.Input<string>;
    /**
     * The destination IP address of the traffic mirror filter rule.
     */
    destinationCidrBlock?: pulumi.Input<string>;
    /**
     * The destination port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    destinationPortRange?: pulumi.Input<string>;
    /**
     * The direction of the traffic mirror filter rule.
     * Valid values are **ingress** or **egress**.
     */
    direction?: pulumi.Input<string>;
    /**
     * The priority number of the traffic mirror filter rule.
     * Valid value ranges from `1` to `65,535`.
     */
    priority?: pulumi.Input<string>;
    /**
     * The protocol of the traffic mirror filter rule.
     * Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * The source IP address of the traffic mirror filter rule.
     */
    sourceCidrBlock?: pulumi.Input<string>;
    /**
     * The source port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    sourcePortRange?: pulumi.Input<string>;
    /**
     * The traffic mirror filter ID used as the query filter.
     */
    trafficMirrorFilterId?: pulumi.Input<string>;
    /**
     * The traffic mirror filter rule ID used as the query filter.
     */
    trafficMirrorFilterRuleId?: pulumi.Input<string>;
}
