// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a supplementary network interface resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const subnetId = config.requireObject("subnetId");
 * const parentId = config.requireObject("parentId");
 * const vlanId = config.requireObject("vlanId");
 * const test = new huaweicloud.vpc.SubNetworkInterface("test", {
 *     subnetId: subnetId,
 *     parentId: parentId,
 *     vlanId: vlanId,
 *     description: "create a supplementary network interface",
 * });
 * ```
 *
 * ## Import
 *
 * The supplementary network interface can be imported using the `id`, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Vpc/subNetworkInterface:SubNetworkInterface test <id>
 * ```
 */
export class SubNetworkInterface extends pulumi.CustomResource {
    /**
     * Get an existing SubNetworkInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubNetworkInterfaceState, opts?: pulumi.CustomResourceOptions): SubNetworkInterface {
        return new SubNetworkInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Vpc/subNetworkInterface:SubNetworkInterface';

    /**
     * Returns true if the given object is an instance of SubNetworkInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SubNetworkInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubNetworkInterface.__pulumiType;
    }

    /**
     * The create time of the supplementary network interface.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the description of the supplementary network interface.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the private IPv4 address of the supplementary network interface.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * Specifies the IPv6 address is it enabled of the supplementary network interface.
     */
    public readonly ipv6Enable!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the IPv6 address of the supplementary network interface.
     */
    public readonly ipv6IpAddress!: pulumi.Output<string>;
    /**
     * The MAC address of the supplementary network interface.
     */
    public /*out*/ readonly macAddress!: pulumi.Output<string>;
    /**
     * The ID of the ECS to which the supplementary network interface belongs.
     */
    public /*out*/ readonly parentDeviceId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the elastic network interface to which the
     * supplementary network interface belongs.
     * Changing this creates a new resource.
     */
    public readonly parentId!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the list of the security groups IDs to which the supplementary
     * network interface belongs.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * The status of the supplementary network interface.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the ID of the subnet to which the supplementary network
     * interface belongs.
     * Changing this creates a new resource.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Specifies the vlan ID of the supplementary network interface.
     * The valid value is range from `1` t0 `4094`.
     */
    public readonly vlanId!: pulumi.Output<string>;
    /**
     * The ID of the VPC to which the supplementary network interface belongs.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a SubNetworkInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubNetworkInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubNetworkInterfaceArgs | SubNetworkInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubNetworkInterfaceState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["ipv6IpAddress"] = state ? state.ipv6IpAddress : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["parentDeviceId"] = state ? state.parentDeviceId : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as SubNetworkInterfaceArgs | undefined;
            if ((!args || args.parentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["ipv6IpAddress"] = args ? args.ipv6IpAddress : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["parentDeviceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SubNetworkInterface.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SubNetworkInterface resources.
 */
export interface SubNetworkInterfaceState {
    /**
     * The create time of the supplementary network interface.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the description of the supplementary network interface.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the private IPv4 address of the supplementary network interface.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Specifies the IPv6 address is it enabled of the supplementary network interface.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the IPv6 address of the supplementary network interface.
     */
    ipv6IpAddress?: pulumi.Input<string>;
    /**
     * The MAC address of the supplementary network interface.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The ID of the ECS to which the supplementary network interface belongs.
     */
    parentDeviceId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic network interface to which the
     * supplementary network interface belongs.
     * Changing this creates a new resource.
     */
    parentId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the list of the security groups IDs to which the supplementary
     * network interface belongs.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the supplementary network interface.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the ID of the subnet to which the supplementary network
     * interface belongs.
     * Changing this creates a new resource.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Specifies the vlan ID of the supplementary network interface.
     * The valid value is range from `1` t0 `4094`.
     */
    vlanId?: pulumi.Input<string>;
    /**
     * The ID of the VPC to which the supplementary network interface belongs.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SubNetworkInterface resource.
 */
export interface SubNetworkInterfaceArgs {
    /**
     * Specifies the description of the supplementary network interface.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the private IPv4 address of the supplementary network interface.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Specifies the IPv6 address is it enabled of the supplementary network interface.
     */
    ipv6Enable?: pulumi.Input<boolean>;
    /**
     * Specifies the IPv6 address of the supplementary network interface.
     */
    ipv6IpAddress?: pulumi.Input<string>;
    /**
     * Specifies the ID of the elastic network interface to which the
     * supplementary network interface belongs.
     * Changing this creates a new resource.
     */
    parentId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the list of the security groups IDs to which the supplementary
     * network interface belongs.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the ID of the subnet to which the supplementary network
     * interface belongs.
     * Changing this creates a new resource.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specifies the vlan ID of the supplementary network interface.
     * The valid value is range from `1` t0 `4094`.
     */
    vlanId?: pulumi.Input<string>;
}
