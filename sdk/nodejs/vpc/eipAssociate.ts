// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Associates an EIP to a specified IP address or port.
 *
 * ## Example Usage
 * ### Associate with a fixed IP
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const publicAddress = config.requireObject("publicAddress");
 * const networkId = config.requireObject("networkId");
 * const associated = new huaweicloud.vpc.EipAssociate("associated", {
 *     publicIp: publicAddress,
 *     networkId: networkId,
 *     fixedIp: "192.168.0.100",
 * });
 * ```
 * ### Associate with a port
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const networkId = config.requireObject("networkId");
 * const myport = huaweicloud.Vpc.getPort({
 *     networkId: networkId,
 *     fixedIp: "192.168.0.100",
 * });
 * const myeip = new huaweicloud.vpc.Eip("myeip", {
 *     publicip: {
 *         type: "5_bgp",
 *     },
 *     bandwidth: {
 *         name: "test",
 *         size: 5,
 *         shareType: "PER",
 *         chargeMode: "traffic",
 *     },
 * });
 * const associated = new huaweicloud.vpc.EipAssociate("associated", {
 *     publicIp: myeip.address,
 *     portId: myport.then(myport => myport.id),
 * });
 * ```
 *
 * ## Import
 *
 * EIP associations can be imported using the `id` of the EIP, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Vpc/eipAssociate:EipAssociate eip 2c7f39f3-702b-48d1-940c-b50384177ee1
 * ```
 */
export class EipAssociate extends pulumi.CustomResource {
    /**
     * Get an existing EipAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EipAssociateState, opts?: pulumi.CustomResourceOptions): EipAssociate {
        return new EipAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Vpc/eipAssociate:EipAssociate';

    /**
     * Returns true if the given object is an instance of EipAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EipAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EipAssociate.__pulumiType;
    }

    /**
     * Specifies a private IP address to associate with the EIP.
     * Changing this creates a new resource.
     */
    public readonly fixedIp!: pulumi.Output<string>;
    /**
     * The MAC address of the private IP.
     */
    public /*out*/ readonly macAddress!: pulumi.Output<string>;
    /**
     * Specifies the ID of the network to which the **fixed_ip** belongs.
     * It is mandatory when `fixedIp` is set. Changing this creates a new resource.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Specifies an existing port ID to associate with the EIP.
     * This parameter and `fixedIp` are alternative. Changing this creates a new resource.
     */
    public readonly portId!: pulumi.Output<string>;
    /**
     * Specifies the EIP address to associate. Changing this creates a new resource.
     */
    public readonly publicIp!: pulumi.Output<string>;
    /**
     * The IPv6 address of the private IP.
     */
    public /*out*/ readonly publicIpv6!: pulumi.Output<string>;
    /**
     * Specifies the region in which to associate the EIP. If omitted, the provider-level
     * region will be used. Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The status of EIP, should be **BOUND**.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a EipAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EipAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EipAssociateArgs | EipAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EipAssociateState | undefined;
            resourceInputs["fixedIp"] = state ? state.fixedIp : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["portId"] = state ? state.portId : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["publicIpv6"] = state ? state.publicIpv6 : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as EipAssociateArgs | undefined;
            if ((!args || args.publicIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicIp'");
            }
            resourceInputs["fixedIp"] = args ? args.fixedIp : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["portId"] = args ? args.portId : undefined;
            resourceInputs["publicIp"] = args ? args.publicIp : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["publicIpv6"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EipAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EipAssociate resources.
 */
export interface EipAssociateState {
    /**
     * Specifies a private IP address to associate with the EIP.
     * Changing this creates a new resource.
     */
    fixedIp?: pulumi.Input<string>;
    /**
     * The MAC address of the private IP.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Specifies the ID of the network to which the **fixed_ip** belongs.
     * It is mandatory when `fixedIp` is set. Changing this creates a new resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Specifies an existing port ID to associate with the EIP.
     * This parameter and `fixedIp` are alternative. Changing this creates a new resource.
     */
    portId?: pulumi.Input<string>;
    /**
     * Specifies the EIP address to associate. Changing this creates a new resource.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The IPv6 address of the private IP.
     */
    publicIpv6?: pulumi.Input<string>;
    /**
     * Specifies the region in which to associate the EIP. If omitted, the provider-level
     * region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The status of EIP, should be **BOUND**.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EipAssociate resource.
 */
export interface EipAssociateArgs {
    /**
     * Specifies a private IP address to associate with the EIP.
     * Changing this creates a new resource.
     */
    fixedIp?: pulumi.Input<string>;
    /**
     * Specifies the ID of the network to which the **fixed_ip** belongs.
     * It is mandatory when `fixedIp` is set. Changing this creates a new resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Specifies an existing port ID to associate with the EIP.
     * This parameter and `fixedIp` are alternative. Changing this creates a new resource.
     */
    portId?: pulumi.Input<string>;
    /**
     * Specifies the EIP address to associate. Changing this creates a new resource.
     */
    publicIp: pulumi.Input<string>;
    /**
     * Specifies the region in which to associate the EIP. If omitted, the provider-level
     * region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
}
