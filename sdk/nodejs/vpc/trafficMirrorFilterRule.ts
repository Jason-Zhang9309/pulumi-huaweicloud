// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a VPC traffic mirror filter rule resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const trafficMirrorFilterId = config.requireObject("trafficMirrorFilterId");
 * const test = new huaweicloud.vpc.TrafficMirrorFilterRule("test", {
 *     trafficMirrorFilterId: trafficMirrorFilterId,
 *     direction: "ingress",
 *     protocol: "tcp",
 *     ethertype: "IPv4",
 *     action: "accept",
 *     priority: 1,
 *     sourceCidrBlock: "10.0.0.0/8",
 *     sourcePortRange: "80-90",
 *     destinationCidrBlock: "192.168.1.0/24",
 *     destinationPortRange: "10-65535",
 * });
 * ```
 *
 * ## Import
 *
 * The traffic mirror filter rule can be imported using `id`, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule test <id>
 * ```
 */
export class TrafficMirrorFilterRule extends pulumi.CustomResource {
    /**
     * Get an existing TrafficMirrorFilterRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficMirrorFilterRuleState, opts?: pulumi.CustomResourceOptions): TrafficMirrorFilterRule {
        return new TrafficMirrorFilterRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule';

    /**
     * Returns true if the given object is an instance of TrafficMirrorFilterRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficMirrorFilterRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficMirrorFilterRule.__pulumiType;
    }

    /**
     * Specifies the policy of in the traffic mirror filter rule.
     * Valid values are **accept** or **reject**.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The creation time of the traffic mirror filter rule.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the description of the traffic mirror filter rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the destination IP address of the traffic traffic mirror filter
     * rule.
     */
    public readonly destinationCidrBlock!: pulumi.Output<string | undefined>;
    /**
     * Specifies the destination port number range of the traffic mirror filter
     * rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    public readonly destinationPortRange!: pulumi.Output<string | undefined>;
    /**
     * Specifies the direction of the traffic mirror filter rule.
     * Valid values are **ingress** or **egress**. Changing this creates a new resource.
     */
    public readonly direction!: pulumi.Output<string>;
    /**
     * Specifies the IP address protocol type of the traffic mirror filter rule.
     * Valid values are **IPv4** or **IPv6**.
     */
    public readonly ethertype!: pulumi.Output<string>;
    /**
     * Specifies the priority number of the traffic mirror filter rule.
     * Valid value ranges from `1` to `65,535`.
     * The smaller the priority number, the higher the priority.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * Specifies the protocol of the traffic mirror filter rule.
     * Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the source IP address of the traffic traffic mirror filter rule.
     */
    public readonly sourceCidrBlock!: pulumi.Output<string | undefined>;
    /**
     * Specifies the source port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    public readonly sourcePortRange!: pulumi.Output<string | undefined>;
    /**
     * Specifies an ID of the traffic mirror filter to which
     * the rule belongs. Changing this creates a new resource.
     */
    public readonly trafficMirrorFilterId!: pulumi.Output<string>;
    /**
     * The latest update time of the traffic mirror filter rule.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a TrafficMirrorFilterRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrafficMirrorFilterRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficMirrorFilterRuleArgs | TrafficMirrorFilterRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficMirrorFilterRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationCidrBlock"] = state ? state.destinationCidrBlock : undefined;
            resourceInputs["destinationPortRange"] = state ? state.destinationPortRange : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["ethertype"] = state ? state.ethertype : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["sourceCidrBlock"] = state ? state.sourceCidrBlock : undefined;
            resourceInputs["sourcePortRange"] = state ? state.sourcePortRange : undefined;
            resourceInputs["trafficMirrorFilterId"] = state ? state.trafficMirrorFilterId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as TrafficMirrorFilterRuleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if ((!args || args.ethertype === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ethertype'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.trafficMirrorFilterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trafficMirrorFilterId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationCidrBlock"] = args ? args.destinationCidrBlock : undefined;
            resourceInputs["destinationPortRange"] = args ? args.destinationPortRange : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["ethertype"] = args ? args.ethertype : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["sourceCidrBlock"] = args ? args.sourceCidrBlock : undefined;
            resourceInputs["sourcePortRange"] = args ? args.sourcePortRange : undefined;
            resourceInputs["trafficMirrorFilterId"] = args ? args.trafficMirrorFilterId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrafficMirrorFilterRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TrafficMirrorFilterRule resources.
 */
export interface TrafficMirrorFilterRuleState {
    /**
     * Specifies the policy of in the traffic mirror filter rule.
     * Valid values are **accept** or **reject**.
     */
    action?: pulumi.Input<string>;
    /**
     * The creation time of the traffic mirror filter rule.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the description of the traffic mirror filter rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the destination IP address of the traffic traffic mirror filter
     * rule.
     */
    destinationCidrBlock?: pulumi.Input<string>;
    /**
     * Specifies the destination port number range of the traffic mirror filter
     * rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    destinationPortRange?: pulumi.Input<string>;
    /**
     * Specifies the direction of the traffic mirror filter rule.
     * Valid values are **ingress** or **egress**. Changing this creates a new resource.
     */
    direction?: pulumi.Input<string>;
    /**
     * Specifies the IP address protocol type of the traffic mirror filter rule.
     * Valid values are **IPv4** or **IPv6**.
     */
    ethertype?: pulumi.Input<string>;
    /**
     * Specifies the priority number of the traffic mirror filter rule.
     * Valid value ranges from `1` to `65,535`.
     * The smaller the priority number, the higher the priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Specifies the protocol of the traffic mirror filter rule.
     * Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the source IP address of the traffic traffic mirror filter rule.
     */
    sourceCidrBlock?: pulumi.Input<string>;
    /**
     * Specifies the source port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    sourcePortRange?: pulumi.Input<string>;
    /**
     * Specifies an ID of the traffic mirror filter to which
     * the rule belongs. Changing this creates a new resource.
     */
    trafficMirrorFilterId?: pulumi.Input<string>;
    /**
     * The latest update time of the traffic mirror filter rule.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrafficMirrorFilterRule resource.
 */
export interface TrafficMirrorFilterRuleArgs {
    /**
     * Specifies the policy of in the traffic mirror filter rule.
     * Valid values are **accept** or **reject**.
     */
    action: pulumi.Input<string>;
    /**
     * Specifies the description of the traffic mirror filter rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the destination IP address of the traffic traffic mirror filter
     * rule.
     */
    destinationCidrBlock?: pulumi.Input<string>;
    /**
     * Specifies the destination port number range of the traffic mirror filter
     * rule. The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    destinationPortRange?: pulumi.Input<string>;
    /**
     * Specifies the direction of the traffic mirror filter rule.
     * Valid values are **ingress** or **egress**. Changing this creates a new resource.
     */
    direction: pulumi.Input<string>;
    /**
     * Specifies the IP address protocol type of the traffic mirror filter rule.
     * Valid values are **IPv4** or **IPv6**.
     */
    ethertype: pulumi.Input<string>;
    /**
     * Specifies the priority number of the traffic mirror filter rule.
     * Valid value ranges from `1` to `65,535`.
     * The smaller the priority number, the higher the priority.
     */
    priority: pulumi.Input<number>;
    /**
     * Specifies the protocol of the traffic mirror filter rule.
     * Valid value are **tcp**, **udp**, **icmp**, **icmpv6**, **all**.
     */
    protocol: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used.
     * Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the source IP address of the traffic traffic mirror filter rule.
     */
    sourceCidrBlock?: pulumi.Input<string>;
    /**
     * Specifies the source port number range of the traffic mirror filter rule.
     * The value ranges from `1` to `65,535`, enter two port numbers connected by a hyphen (-). For example, **80-200**.
     */
    sourcePortRange?: pulumi.Input<string>;
    /**
     * Specifies an ID of the traffic mirror filter to which
     * the rule belongs. Changing this creates a new resource.
     */
    trafficMirrorFilterId: pulumi.Input<string>;
}
