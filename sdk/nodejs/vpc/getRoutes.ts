// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of VPC routes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = pulumi.output(huaweicloud.Vpc.getRoutes({
 *     type: "peering",
 * }));
 * ```
 */
export function getRoutes(args?: GetRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Vpc/getRoutes:getRoutes", {
        "destination": args.destination,
        "region": args.region,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutes.
 */
export interface GetRoutesArgs {
    /**
     * Specifies the route destination.
     */
    destination?: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the route type.
     */
    type?: string;
    /**
     * Specifies the ID of the VPC to which the route belongs.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getRoutes.
 */
export interface GetRoutesResult {
    /**
     * The route destination.
     */
    readonly destination?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    /**
     * The list of routes.
     */
    readonly routes: outputs.Vpc.GetRoutesRoute[];
    /**
     * The route type.
     */
    readonly type?: string;
    /**
     * The ID of the VPC to which the route belongs.
     */
    readonly vpcId?: string;
}

export function getRoutesOutput(args?: GetRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutesResult> {
    return pulumi.output(args).apply(a => getRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getRoutes.
 */
export interface GetRoutesOutputArgs {
    /**
     * Specifies the route destination.
     */
    destination?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the route type.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the ID of the VPC to which the route belongs.
     */
    vpcId?: pulumi.Input<string>;
}
