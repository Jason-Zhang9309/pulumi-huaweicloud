// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a CCI Network resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const namespaceName = config.requireObject("namespaceName");
 * const networkName = config.requireObject("networkName");
 * const vpcNetworkId = config.requireObject("vpcNetworkId");
 * const securityGroupId = config.requireObject("securityGroupId");
 * const test = new huaweicloud.cci.Network("test", {
 *     namespace: namespaceName,
 *     networkId: vpcNetworkId,
 *     securityGroupId: securityGroupId,
 * });
 * ```
 *
 * ## Import
 *
 * Networks can be imported using their `namespace` and `id`, separated by a slash, e.g.bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:Cci/network:Network test <namespace>/<id>
 * ```
 */
export class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState, opts?: pulumi.CustomResourceOptions): Network {
        return new Network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Cci/network:Network';

    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Network.__pulumiType;
    }

    /**
     * Specifies the availability zone (AZ) to which the CCI network
     * belongs. Changing this will create a new CCI network resource.
     */
    public readonly availabilityZone!: pulumi.Output<string | undefined>;
    /**
     * The network segment on which the subnet resides.
     */
    public /*out*/ readonly cidr!: pulumi.Output<string>;
    /**
     * Specifies an unique name of the CCI network resource.
     * The name can contain a maximum of `200` characters, which may consist of lowercase letters, digits and hyphens (-).
     * The name must start and end with a lowercase letter or digit. Changing this will create a new CCI network resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the namespace to logically divide your cloud container instances
     * into different group. Changing this will create a new CCI network resource.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * Specifies a network ID of the VPC subnet which the CCI network belongs to.
     * Changing this will create a new CCI network resource.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the CCI network.
     * If omitted, the provider-level region will be used. Changing this will create a new CCI network resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies a security group ID to which the CCI network belongs to.
     * Changing this will create a new CCI network resource.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * The CCI network status, including **Initializing**, **Pending** and **Active**.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * IPv4 subnet ID.
     */
    public /*out*/ readonly subnetId!: pulumi.Output<string>;
    /**
     * VPC ID which the subnet and CCI network belongs to.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkArgs | NetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkState | undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as NetworkArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["cidr"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["subnetId"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Network.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    /**
     * Specifies the availability zone (AZ) to which the CCI network
     * belongs. Changing this will create a new CCI network resource.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The network segment on which the subnet resides.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Specifies an unique name of the CCI network resource.
     * The name can contain a maximum of `200` characters, which may consist of lowercase letters, digits and hyphens (-).
     * The name must start and end with a lowercase letter or digit. Changing this will create a new CCI network resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the namespace to logically divide your cloud container instances
     * into different group. Changing this will create a new CCI network resource.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Specifies a network ID of the VPC subnet which the CCI network belongs to.
     * Changing this will create a new CCI network resource.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the CCI network.
     * If omitted, the provider-level region will be used. Changing this will create a new CCI network resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies a security group ID to which the CCI network belongs to.
     * Changing this will create a new CCI network resource.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The CCI network status, including **Initializing**, **Pending** and **Active**.
     */
    status?: pulumi.Input<string>;
    /**
     * IPv4 subnet ID.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * VPC ID which the subnet and CCI network belongs to.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * Specifies the availability zone (AZ) to which the CCI network
     * belongs. Changing this will create a new CCI network resource.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Specifies an unique name of the CCI network resource.
     * The name can contain a maximum of `200` characters, which may consist of lowercase letters, digits and hyphens (-).
     * The name must start and end with a lowercase letter or digit. Changing this will create a new CCI network resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the namespace to logically divide your cloud container instances
     * into different group. Changing this will create a new CCI network resource.
     */
    namespace: pulumi.Input<string>;
    /**
     * Specifies a network ID of the VPC subnet which the CCI network belongs to.
     * Changing this will create a new CCI network resource.
     */
    networkId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the CCI network.
     * If omitted, the provider-level region will be used. Changing this will create a new CCI network resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies a security group ID to which the CCI network belongs to.
     * Changing this will create a new CCI network resource.
     */
    securityGroupId: pulumi.Input<string>;
}
