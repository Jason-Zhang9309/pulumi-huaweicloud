// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query the IAM user list within HuaweiCloud.
 *
 * > **NOTE:** You *must* have IAM read privileges to use this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const all = pulumi.output(huaweicloud.Iam.getUsers());
 * const one = pulumi.output(huaweicloud.Iam.getUsers({
 *     name: "user_name",
 * }));
 * ```
 */
export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Iam/getUsers:getUsers", {
        "enabled": args.enabled,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * Specifies the status of the IAM user, the default value is **true**.
     */
    enabled?: boolean;
    /**
     * Specifies the IAM user name.
     */
    name?: string;
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * Indicates the whether the IAM user is enabled.
     */
    readonly enabled?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates the IAM user name.
     */
    readonly name?: string;
    /**
     * The details of the queried IAM users. The structure is documented below.
     */
    readonly users: outputs.Iam.GetUsersUser[];
}

export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(args).apply(a => getUsers(a, opts))
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    /**
     * Specifies the status of the IAM user, the default value is **true**.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the IAM user name.
     */
    name?: pulumi.Input<string>;
}
