// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a WAF blacklist and whitelist rule resource within HuaweiCloud.
 *
 * > **NOTE:** All WAF resources depend on WAF instances, and the WAF instances need to be purchased before they can be
 * used. The blacklist and whitelist rule resource can be used in Cloud Mode, Dedicated Mode and ELB Mode.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const policy1 = new huaweicloud.waf.Policy("policy1", {});
 * const rule1 = new huaweicloud.waf.RuleBlacklist("rule1", {
 *     policyId: policy1.id,
 *     ipAddress: "192.168.0.0/24",
 *     action: 0,
 * });
 * ```
 *
 * ## Import
 *
 * Blacklist and Whiltelist Rules can be imported using the policy ID and rule ID separated by a slash, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Waf/ruleBlacklist:RuleBlacklist rule_1 d78b439fd5e54ea08886e5f63ee7b3f5/ac01a092d50e4e6ba3cd622c1128ba2c
 * ```
 */
export class RuleBlacklist extends pulumi.CustomResource {
    /**
     * Get an existing RuleBlacklist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleBlacklistState, opts?: pulumi.CustomResourceOptions): RuleBlacklist {
        return new RuleBlacklist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Waf/ruleBlacklist:RuleBlacklist';

    /**
     * Returns true if the given object is an instance of RuleBlacklist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleBlacklist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleBlacklist.__pulumiType;
    }

    /**
     * Specifies the protective action. Defaults is `0`. The value can be:
     * + `0`: block the request.
     * + `1`: allow the request.
     * + `2`: log the request only.
     */
    public readonly action!: pulumi.Output<number | undefined>;
    /**
     * Specifies the IP address or range. For example, 192.168.0.125 or 192.168.0.0/24.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * Specifies the WAF policy ID. Changing this creates a new rule. Please make
     * sure that the region which the policy belongs to be consistent with the `region`.
     */
    public readonly policyId!: pulumi.Output<string>;
    /**
     * The region in which to create the WAF blacklist and whitelist rule resource.
     * If omitted, the provider-level region will be used. Changing this setting will push a new certificate.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a RuleBlacklist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleBlacklistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleBlacklistArgs | RuleBlacklistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleBlacklistState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as RuleBlacklistArgs | undefined;
            if ((!args || args.ipAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddress'");
            }
            if ((!args || args.policyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleBlacklist.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleBlacklist resources.
 */
export interface RuleBlacklistState {
    /**
     * Specifies the protective action. Defaults is `0`. The value can be:
     * + `0`: block the request.
     * + `1`: allow the request.
     * + `2`: log the request only.
     */
    action?: pulumi.Input<number>;
    /**
     * Specifies the IP address or range. For example, 192.168.0.125 or 192.168.0.0/24.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Specifies the WAF policy ID. Changing this creates a new rule. Please make
     * sure that the region which the policy belongs to be consistent with the `region`.
     */
    policyId?: pulumi.Input<string>;
    /**
     * The region in which to create the WAF blacklist and whitelist rule resource.
     * If omitted, the provider-level region will be used. Changing this setting will push a new certificate.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleBlacklist resource.
 */
export interface RuleBlacklistArgs {
    /**
     * Specifies the protective action. Defaults is `0`. The value can be:
     * + `0`: block the request.
     * + `1`: allow the request.
     * + `2`: log the request only.
     */
    action?: pulumi.Input<number>;
    /**
     * Specifies the IP address or range. For example, 192.168.0.125 or 192.168.0.0/24.
     */
    ipAddress: pulumi.Input<string>;
    /**
     * Specifies the WAF policy ID. Changing this creates a new rule. Please make
     * sure that the region which the policy belongs to be consistent with the `region`.
     */
    policyId: pulumi.Input<string>;
    /**
     * The region in which to create the WAF blacklist and whitelist rule resource.
     * If omitted, the provider-level region will be used. Changing this setting will push a new certificate.
     */
    region?: pulumi.Input<string>;
}
