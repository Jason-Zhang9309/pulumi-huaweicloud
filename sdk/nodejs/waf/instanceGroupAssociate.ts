// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Associate ELB instances to a WAF instance group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const groupId = config.requireObject("groupId");
 * const elbInstanceId = config.requireObject("elbInstanceId");
 * const groupAssociate = new huaweicloud.waf.InstanceGroupAssociate("groupAssociate", {
 *     groupId: groupId,
 *     loadBalancers: [elbInstanceId],
 * });
 * ```
 *
 * ## Import
 *
 * The instance group associate can be imported using the group ID, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Waf/instanceGroupAssociate:InstanceGroupAssociate group_associate 0be1e69d-1987-4d9c-9dc5-fc7eed592398
 * ```
 */
export class InstanceGroupAssociate extends pulumi.CustomResource {
    /**
     * Get an existing InstanceGroupAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceGroupAssociateState, opts?: pulumi.CustomResourceOptions): InstanceGroupAssociate {
        return new InstanceGroupAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Waf/instanceGroupAssociate:InstanceGroupAssociate';

    /**
     * Returns true if the given object is an instance of InstanceGroupAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceGroupAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceGroupAssociate.__pulumiType;
    }

    /**
     * Specifies the ID of the WAF instance group.
     * Changing this will create a new resource.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * Specifies the IDs of the ELB instances bound to the WAF instance group.
     * This is an array of ELB instance ids.
     */
    public readonly loadBalancers!: pulumi.Output<string[]>;
    /**
     * The region in which the WAF instance group created.
     * If omitted, the provider-level region will be used. Changing this setting will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a InstanceGroupAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceGroupAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceGroupAssociateArgs | InstanceGroupAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceGroupAssociateState | undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["loadBalancers"] = state ? state.loadBalancers : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as InstanceGroupAssociateArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.loadBalancers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancers'");
            }
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["loadBalancers"] = args ? args.loadBalancers : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InstanceGroupAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceGroupAssociate resources.
 */
export interface InstanceGroupAssociateState {
    /**
     * Specifies the ID of the WAF instance group.
     * Changing this will create a new resource.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Specifies the IDs of the ELB instances bound to the WAF instance group.
     * This is an array of ELB instance ids.
     */
    loadBalancers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which the WAF instance group created.
     * If omitted, the provider-level region will be used. Changing this setting will create a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceGroupAssociate resource.
 */
export interface InstanceGroupAssociateArgs {
    /**
     * Specifies the ID of the WAF instance group.
     * Changing this will create a new resource.
     */
    groupId: pulumi.Input<string>;
    /**
     * Specifies the IDs of the ELB instances bound to the WAF instance group.
     * This is an array of ELB instance ids.
     */
    loadBalancers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which the WAF instance group created.
     * If omitted, the provider-level region will be used. Changing this setting will create a new resource.
     */
    region?: pulumi.Input<string>;
}
