// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of ELB pools.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const poolName = config.requireObject("poolName");
 * const test = huaweicloud.DedicatedElb.getPools({
 *     name: poolName,
 * });
 * ```
 */
export function getPools(args?: GetPoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetPoolsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:DedicatedElb/getPools:getPools", {
        "description": args.description,
        "healthmonitorId": args.healthmonitorId,
        "lbMethod": args.lbMethod,
        "listenerId": args.listenerId,
        "loadbalancerId": args.loadbalancerId,
        "name": args.name,
        "poolId": args.poolId,
        "protectionStatus": args.protectionStatus,
        "protocol": args.protocol,
        "region": args.region,
        "type": args.type,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPools.
 */
export interface GetPoolsArgs {
    /**
     * Specifies the description of the ELB pool.
     */
    description?: string;
    /**
     * Specifies the health monitor ID of the ELB pool.
     */
    healthmonitorId?: string;
    /**
     * Specifies the method of the ELB pool. Value options: **ROUND_ROBIN**,
     * **LEAST_CONNECTIONS**, **SOURCE_IP** or **QUIC_CID**.
     */
    lbMethod?: string;
    /**
     * Specifies the listener ID of the ELB pool.
     */
    listenerId?: string;
    /**
     * Specifies the loadbalancer ID of the ELB pool.
     */
    loadbalancerId?: string;
    /**
     * Specifies the name of the ELB pool.
     */
    name?: string;
    /**
     * Specifies the ID of the ELB pool.
     */
    poolId?: string;
    /**
     * Specifies the protection status for update.
     * Value options: **nonProtection**, **consoleProtection**.
     */
    protectionStatus?: string;
    /**
     * Specifies the protocol of the ELB pool. Value options: **TCP**, **UDP**, **HTTP**,
     * **HTTPS**, **QUIC**, **GRPC** or **TLS**.
     */
    protocol?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the type of the backend server group. Value options: **instance**, **ip**.
     */
    type?: string;
    /**
     * Specifies the ID of the VPC where the backend server group works.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getPools.
 */
export interface GetPoolsResult {
    /**
     * The description of pool.
     */
    readonly description?: string;
    /**
     * The health monitor ID of the LB pool.
     */
    readonly healthmonitorId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The load balancing algorithm to distribute traffic to the pool's members.
     */
    readonly lbMethod?: string;
    readonly listenerId?: string;
    readonly loadbalancerId?: string;
    /**
     * The pool name.
     */
    readonly name?: string;
    readonly poolId?: string;
    /**
     * Pool list. For details, see data structure of the pool field.
     * The object structure is documented below.
     */
    readonly pools: outputs.DedicatedElb.GetPoolsPool[];
    /**
     * The protection status for update.
     */
    readonly protectionStatus?: string;
    /**
     * The protocol of pool.
     */
    readonly protocol?: string;
    readonly region: string;
    /**
     * The type of persistence mode.
     */
    readonly type?: string;
    /**
     * The ID of the VPC where the backend server group works.
     */
    readonly vpcId?: string;
}

export function getPoolsOutput(args?: GetPoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPoolsResult> {
    return pulumi.output(args).apply(a => getPools(a, opts))
}

/**
 * A collection of arguments for invoking getPools.
 */
export interface GetPoolsOutputArgs {
    /**
     * Specifies the description of the ELB pool.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the health monitor ID of the ELB pool.
     */
    healthmonitorId?: pulumi.Input<string>;
    /**
     * Specifies the method of the ELB pool. Value options: **ROUND_ROBIN**,
     * **LEAST_CONNECTIONS**, **SOURCE_IP** or **QUIC_CID**.
     */
    lbMethod?: pulumi.Input<string>;
    /**
     * Specifies the listener ID of the ELB pool.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * Specifies the loadbalancer ID of the ELB pool.
     */
    loadbalancerId?: pulumi.Input<string>;
    /**
     * Specifies the name of the ELB pool.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the ELB pool.
     */
    poolId?: pulumi.Input<string>;
    /**
     * Specifies the protection status for update.
     * Value options: **nonProtection**, **consoleProtection**.
     */
    protectionStatus?: pulumi.Input<string>;
    /**
     * Specifies the protocol of the ELB pool. Value options: **TCP**, **UDP**, **HTTP**,
     * **HTTPS**, **QUIC**, **GRPC** or **TLS**.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the type of the backend server group. Value options: **instance**, **ip**.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the ID of the VPC where the backend server group works.
     */
    vpcId?: pulumi.Input<string>;
}
