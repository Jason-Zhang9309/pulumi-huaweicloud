// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of ELB logtanks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const logtankId = config.requireObject("logtankId");
 * const test = huaweicloud.DedicatedElb.getLogtanks({
 *     logtankId: logtankId,
 * });
 * ```
 */
export function getLogtanks(args?: GetLogtanksArgs, opts?: pulumi.InvokeOptions): Promise<GetLogtanksResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:DedicatedElb/getLogtanks:getLogtanks", {
        "enterpriseProjectId": args.enterpriseProjectId,
        "loadbalancerId": args.loadbalancerId,
        "logGroupId": args.logGroupId,
        "logTopicId": args.logTopicId,
        "logtankId": args.logtankId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogtanks.
 */
export interface GetLogtanksArgs {
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: string;
    /**
     * Specifies the ID of a load balancer
     */
    loadbalancerId?: string;
    /**
     * Specifies the log group ID.
     */
    logGroupId?: string;
    /**
     * Specifies the log topic ID.
     */
    logTopicId?: string;
    /**
     * Specifies the ID of the log tank.
     */
    logtankId?: string;
    /**
     * Specifies the region in which to query the data source. If omitted, the provider-level
     * region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getLogtanks.
 */
export interface GetLogtanksResult {
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of a load balancer.
     */
    readonly loadbalancerId?: string;
    /**
     * The log group ID.
     */
    readonly logGroupId?: string;
    /**
     * The log topic ID.
     */
    readonly logTopicId?: string;
    readonly logtankId?: string;
    /**
     * Lists the logtanks.
     * The logtanks structure is documented below.
     */
    readonly logtanks: outputs.DedicatedElb.GetLogtanksLogtank[];
    readonly region: string;
}

export function getLogtanksOutput(args?: GetLogtanksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogtanksResult> {
    return pulumi.output(args).apply(a => getLogtanks(a, opts))
}

/**
 * A collection of arguments for invoking getLogtanks.
 */
export interface GetLogtanksOutputArgs {
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the ID of a load balancer
     */
    loadbalancerId?: pulumi.Input<string>;
    /**
     * Specifies the log group ID.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Specifies the log topic ID.
     */
    logTopicId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the log tank.
     */
    logtankId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source. If omitted, the provider-level
     * region will be used.
     */
    region?: pulumi.Input<string>;
}
