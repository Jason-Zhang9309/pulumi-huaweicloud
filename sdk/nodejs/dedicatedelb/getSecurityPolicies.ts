// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of ELB security policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const securityPoliciesName = config.requireObject("securityPoliciesName");
 * const test = huaweicloud.DedicatedElb.getSecurityPolicies({
 *     name: securityPoliciesName,
 * });
 * ```
 */
export function getSecurityPolicies(args?: GetSecurityPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityPoliciesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:DedicatedElb/getSecurityPolicies:getSecurityPolicies", {
        "cipher": args.cipher,
        "description": args.description,
        "name": args.name,
        "protocol": args.protocol,
        "region": args.region,
        "securityPolicyId": args.securityPolicyId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicies.
 */
export interface GetSecurityPoliciesArgs {
    /**
     * Specifies the cipher suite supported by the security policy.
     */
    cipher?: string;
    /**
     * Specifies the description of the security policy.
     */
    description?: string;
    /**
     * Specifies the name of the security policy.
     */
    name?: string;
    /**
     * Specifies the TLS protocol supported by the security policy.
     */
    protocol?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the ID of the security policy.
     */
    securityPolicyId?: string;
    /**
     * Specifies the type of the security policy. Value options: **system**, **custom**.
     */
    type?: string;
}

/**
 * A collection of values returned by getSecurityPolicies.
 */
export interface GetSecurityPoliciesResult {
    readonly cipher?: string;
    /**
     * The description of the security policy.
     */
    readonly description?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the security policy.
     */
    readonly name?: string;
    readonly protocol?: string;
    readonly region: string;
    /**
     * Lists the security policies.
     * The securityPolicies structure is documented below.
     */
    readonly securityPolicies: outputs.DedicatedElb.GetSecurityPoliciesSecurityPolicy[];
    readonly securityPolicyId?: string;
    /**
     * The type of the security policy.
     */
    readonly type?: string;
}

export function getSecurityPoliciesOutput(args?: GetSecurityPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityPoliciesResult> {
    return pulumi.output(args).apply(a => getSecurityPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityPolicies.
 */
export interface GetSecurityPoliciesOutputArgs {
    /**
     * Specifies the cipher suite supported by the security policy.
     */
    cipher?: pulumi.Input<string>;
    /**
     * Specifies the description of the security policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name of the security policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the TLS protocol supported by the security policy.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the security policy.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * Specifies the type of the security policy. Value options: **system**, **custom**.
     */
    type?: pulumi.Input<string>;
}
