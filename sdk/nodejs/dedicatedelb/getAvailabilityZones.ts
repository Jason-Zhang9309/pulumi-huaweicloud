// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of available AZs when create a load balancer.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = pulumi.output(huaweicloud.DedicatedElb.getAvailabilityZones());
 * ```
 */
export function getAvailabilityZones(args?: GetAvailabilityZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetAvailabilityZonesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:DedicatedElb/getAvailabilityZones:getAvailabilityZones", {
        "loadbalancerId": args.loadbalancerId,
        "publicBorderGroup": args.publicBorderGroup,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getAvailabilityZones.
 */
export interface GetAvailabilityZonesArgs {
    /**
     * Specifies the load balancer ID.
     */
    loadbalancerId?: string;
    /**
     * Specifies the public border group.
     */
    publicBorderGroup?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getAvailabilityZones.
 */
export interface GetAvailabilityZonesResult {
    /**
     * Indicates the AZs that are available during load balancer creation. For example, in [az1,az2] and
     * [az2,az3] sets, you can select **az1** and **az2** or **az2** and **az3**, but cannot select **az1** and **az3**.
     * The availabilityZones structure is documented below.
     */
    readonly availabilityZones: outputs.DedicatedElb.GetAvailabilityZonesAvailabilityZone[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly loadbalancerId?: string;
    /**
     * Indicates the public border group, for example, **center**.
     */
    readonly publicBorderGroup?: string;
    readonly region: string;
}

export function getAvailabilityZonesOutput(args?: GetAvailabilityZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAvailabilityZonesResult> {
    return pulumi.output(args).apply(a => getAvailabilityZones(a, opts))
}

/**
 * A collection of arguments for invoking getAvailabilityZones.
 */
export interface GetAvailabilityZonesOutputArgs {
    /**
     * Specifies the load balancer ID.
     */
    loadbalancerId?: pulumi.Input<string>;
    /**
     * Specifies the public border group.
     */
    publicBorderGroup?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
