// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an ELB security policy resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = new huaweicloud.DedicatedElb.SecurityPolicy("test", {
 *     ciphers: [
 *         "ECDHE-RSA-AES256-GCM-SHA384",
 *         "ECDHE-RSA-AES128-GCM-SHA256",
 *     ],
 *     description: "this is a security policy",
 *     protocols: [
 *         "TLSv1",
 *         "TLSv1.1",
 *         "TLSv1.2",
 *         "TLSv1.3",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * The elb security policies can be imported using the `id`, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:DedicatedElb/securityPolicy:SecurityPolicy test 0ce123456a00f2591fabc00385ff1234
 * ```
 */
export class SecurityPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityPolicyState, opts?: pulumi.CustomResourceOptions): SecurityPolicy {
        return new SecurityPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:DedicatedElb/securityPolicy:SecurityPolicy';

    /**
     * Returns true if the given object is an instance of SecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityPolicy.__pulumiType;
    }

    /**
     * Specifies the cipher suite list of the security policy.
     * The protocol and cipher suite must match. That is to say, there must be at least one cipher suite in
     * ciphers that matches the protocol. The following cipher suites are supported:
     * **ECDHE-RSA-AES256-GCM-SHA384**, **ECDHE-RSA-AES128-GCM-SHA256**, **ECDHE-ECDSA-AES256-GCM-SHA384**,
     * **ECDHE-ECDSA-AES128-GCM-SHA256**, **AES128-GCM-SHA256**, **AES256-GCM-SHA384**, **ECDHE-ECDSA-AES128-SHA256**,
     * **ECDHE-RSA-AES128-SHA256**, **AES128-SHA256**, **AES256-SHA256**, **ECDHE-ECDSA-AES256-SHA384**,
     * **ECDHE-RSA-AES256-SHA384**, **ECDHE-ECDSA-AES128-SHA**, **ECDHE-RSA-AES128-SHA**, **ECDHE-RSA-AES256-SHA**,
     * **ECDHE-ECDSA-AES256-SHA**, **AES128-SHA**, **AES256-SHA**, **CAMELLIA128-SHA**, **DES-CBC3-SHA**,
     * **CAMELLIA256-SHA**, **ECDHE-RSA-CHACHA20-POLY1305**, **ECDHE-ECDSA-CHACHA20-POLY1305**, **TLS_AES_128_GCM_SHA256**,
     * **TLS_AES_256_GCM_SHA384**, **TLS_CHACHA20_POLY1305_SHA256**, **TLS_AES_128_CCM_SHA256**,
     * **TLS_AES_128_CCM_8_SHA256**.
     */
    public readonly ciphers!: pulumi.Output<string[]>;
    /**
     * The create time of the security policy.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the description of the ELB security policy.
     * The value can contain 0 to 255 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies the enterprise project ID to which the Enterprise
     * router belongs.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * The listener which the security policy associated with.
     * The ListenerRef structure is documented below.
     */
    public /*out*/ readonly listeners!: pulumi.Output<outputs.DedicatedElb.SecurityPolicyListener[]>;
    /**
     * Specifies the ELB security policy name.
     * The name contains only Chinese characters, letters, digits, underscores (_), and hyphens (-),
     * and cannot exceed 255 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the TSL protocol list which the security policy select.
     * Value options: **TLSv1**, **TLSv1.1**, **TLSv1.2**, and **TLSv1.3**.
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The update time of the security policy.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a SecurityPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityPolicyArgs | SecurityPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityPolicyState | undefined;
            resourceInputs["ciphers"] = state ? state.ciphers : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["listeners"] = state ? state.listeners : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as SecurityPolicyArgs | undefined;
            if ((!args || args.ciphers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ciphers'");
            }
            if ((!args || args.protocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocols'");
            }
            resourceInputs["ciphers"] = args ? args.ciphers : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["listeners"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityPolicy resources.
 */
export interface SecurityPolicyState {
    /**
     * Specifies the cipher suite list of the security policy.
     * The protocol and cipher suite must match. That is to say, there must be at least one cipher suite in
     * ciphers that matches the protocol. The following cipher suites are supported:
     * **ECDHE-RSA-AES256-GCM-SHA384**, **ECDHE-RSA-AES128-GCM-SHA256**, **ECDHE-ECDSA-AES256-GCM-SHA384**,
     * **ECDHE-ECDSA-AES128-GCM-SHA256**, **AES128-GCM-SHA256**, **AES256-GCM-SHA384**, **ECDHE-ECDSA-AES128-SHA256**,
     * **ECDHE-RSA-AES128-SHA256**, **AES128-SHA256**, **AES256-SHA256**, **ECDHE-ECDSA-AES256-SHA384**,
     * **ECDHE-RSA-AES256-SHA384**, **ECDHE-ECDSA-AES128-SHA**, **ECDHE-RSA-AES128-SHA**, **ECDHE-RSA-AES256-SHA**,
     * **ECDHE-ECDSA-AES256-SHA**, **AES128-SHA**, **AES256-SHA**, **CAMELLIA128-SHA**, **DES-CBC3-SHA**,
     * **CAMELLIA256-SHA**, **ECDHE-RSA-CHACHA20-POLY1305**, **ECDHE-ECDSA-CHACHA20-POLY1305**, **TLS_AES_128_GCM_SHA256**,
     * **TLS_AES_256_GCM_SHA384**, **TLS_CHACHA20_POLY1305_SHA256**, **TLS_AES_128_CCM_SHA256**,
     * **TLS_AES_128_CCM_8_SHA256**.
     */
    ciphers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The create time of the security policy.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the description of the ELB security policy.
     * The value can contain 0 to 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the Enterprise
     * router belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The listener which the security policy associated with.
     * The ListenerRef structure is documented below.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.DedicatedElb.SecurityPolicyListener>[]>;
    /**
     * Specifies the ELB security policy name.
     * The name contains only Chinese characters, letters, digits, underscores (_), and hyphens (-),
     * and cannot exceed 255 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the TSL protocol list which the security policy select.
     * Value options: **TLSv1**, **TLSv1.1**, **TLSv1.2**, and **TLSv1.3**.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The update time of the security policy.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityPolicy resource.
 */
export interface SecurityPolicyArgs {
    /**
     * Specifies the cipher suite list of the security policy.
     * The protocol and cipher suite must match. That is to say, there must be at least one cipher suite in
     * ciphers that matches the protocol. The following cipher suites are supported:
     * **ECDHE-RSA-AES256-GCM-SHA384**, **ECDHE-RSA-AES128-GCM-SHA256**, **ECDHE-ECDSA-AES256-GCM-SHA384**,
     * **ECDHE-ECDSA-AES128-GCM-SHA256**, **AES128-GCM-SHA256**, **AES256-GCM-SHA384**, **ECDHE-ECDSA-AES128-SHA256**,
     * **ECDHE-RSA-AES128-SHA256**, **AES128-SHA256**, **AES256-SHA256**, **ECDHE-ECDSA-AES256-SHA384**,
     * **ECDHE-RSA-AES256-SHA384**, **ECDHE-ECDSA-AES128-SHA**, **ECDHE-RSA-AES128-SHA**, **ECDHE-RSA-AES256-SHA**,
     * **ECDHE-ECDSA-AES256-SHA**, **AES128-SHA**, **AES256-SHA**, **CAMELLIA128-SHA**, **DES-CBC3-SHA**,
     * **CAMELLIA256-SHA**, **ECDHE-RSA-CHACHA20-POLY1305**, **ECDHE-ECDSA-CHACHA20-POLY1305**, **TLS_AES_128_GCM_SHA256**,
     * **TLS_AES_256_GCM_SHA384**, **TLS_CHACHA20_POLY1305_SHA256**, **TLS_AES_128_CCM_SHA256**,
     * **TLS_AES_128_CCM_8_SHA256**.
     */
    ciphers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the description of the ELB security policy.
     * The value can contain 0 to 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID to which the Enterprise
     * router belongs.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the ELB security policy name.
     * The name contains only Chinese characters, letters, digits, underscores (_), and hyphens (-),
     * and cannot exceed 255 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the TSL protocol list which the security policy select.
     * Value options: **TLSv1**, **TLSv1.1**, **TLSv1.2**, and **TLSv1.3**.
     */
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}
