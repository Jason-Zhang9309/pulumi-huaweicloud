// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manage an ELB logtank resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const loadbalancerId = config.requireObject("loadbalancerId");
 * const groupId = config.requireObject("groupId");
 * const topicId = config.requireObject("topicId");
 * const test = new huaweicloud.dedicatedelb.Logtank("test", {
 *     loadbalancerId: loadbalancerId,
 *     logGroupId: groupId,
 *     logTopicId: topicId,
 * });
 * ```
 *
 * ## Import
 *
 * ELB logtank can be imported using the logtank ID, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:DedicatedElb/logtank:Logtank test 2f148a75-acd3-4ce7-8f63-d5c9fadab3a0
 * ```
 */
export class Logtank extends pulumi.CustomResource {
    /**
     * Get an existing Logtank resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogtankState, opts?: pulumi.CustomResourceOptions): Logtank {
        return new Logtank(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:DedicatedElb/logtank:Logtank';

    /**
     * Returns true if the given object is an instance of Logtank.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Logtank {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Logtank.__pulumiType;
    }

    /**
     * Specifies the ID of a loadbalancer. Changing this
     * creates a new logtank
     */
    public readonly loadbalancerId!: pulumi.Output<string>;
    /**
     * Specifies the ID of a log group. It is provided by other service.
     */
    public readonly logGroupId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the subscribe topic.
     */
    public readonly logTopicId!: pulumi.Output<string>;
    /**
     * The region in which to create the logtank resource.
     * If omitted, the provider-level region will be used. Changing this creates a new logtank.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a Logtank resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogtankArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogtankArgs | LogtankState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogtankState | undefined;
            resourceInputs["loadbalancerId"] = state ? state.loadbalancerId : undefined;
            resourceInputs["logGroupId"] = state ? state.logGroupId : undefined;
            resourceInputs["logTopicId"] = state ? state.logTopicId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as LogtankArgs | undefined;
            if ((!args || args.loadbalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadbalancerId'");
            }
            if ((!args || args.logGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logGroupId'");
            }
            if ((!args || args.logTopicId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logTopicId'");
            }
            resourceInputs["loadbalancerId"] = args ? args.loadbalancerId : undefined;
            resourceInputs["logGroupId"] = args ? args.logGroupId : undefined;
            resourceInputs["logTopicId"] = args ? args.logTopicId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Logtank.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Logtank resources.
 */
export interface LogtankState {
    /**
     * Specifies the ID of a loadbalancer. Changing this
     * creates a new logtank
     */
    loadbalancerId?: pulumi.Input<string>;
    /**
     * Specifies the ID of a log group. It is provided by other service.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the subscribe topic.
     */
    logTopicId?: pulumi.Input<string>;
    /**
     * The region in which to create the logtank resource.
     * If omitted, the provider-level region will be used. Changing this creates a new logtank.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Logtank resource.
 */
export interface LogtankArgs {
    /**
     * Specifies the ID of a loadbalancer. Changing this
     * creates a new logtank
     */
    loadbalancerId: pulumi.Input<string>;
    /**
     * Specifies the ID of a log group. It is provided by other service.
     */
    logGroupId: pulumi.Input<string>;
    /**
     * Specifies the ID of the subscribe topic.
     */
    logTopicId: pulumi.Input<string>;
    /**
     * The region in which to create the logtank resource.
     * If omitted, the provider-level region will be used. Changing this creates a new logtank.
     */
    region?: pulumi.Input<string>;
}
