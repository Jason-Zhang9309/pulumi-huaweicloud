// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface ProviderAssumeRole {
    agencyName: pulumi.Input<string>;
    domainName: pulumi.Input<string>;
}
export namespace Aom {
    export interface AlarmRuleDimension {
        /**
         * Specifies the dimension name. Changing this creates a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the dimension value. Changing this creates a new resource.
         */
        value: pulumi.Input<string>;
    }

    export interface ServiceDiscoveryRuleDiscoveryRule {
        /**
         * Specifies the matched value. This is a list of strings.
         */
        checkContents: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the match condition. The values can be **contain** and **equals**.
         */
        checkMode: pulumi.Input<string>;
        /**
         * Specifies the match type. The values can be **cmdLine**, **env** and **scope**.
         */
        checkType: pulumi.Input<string>;
    }

    export interface ServiceDiscoveryRuleLogPathRule {
        /**
         * Specifies the input value.
         */
        args: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the value type. The value can be **cmdLineHash**, **cmdLine**, **env**
         * and **str**.
         */
        nameType: pulumi.Input<string>;
        /**
         * Specifies the application name, which is mandatory only when the value of
         * `nameType` is **cmdLineHash**.
         */
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ServiceDiscoveryRuleNameRules {
        /**
         * Specifies the application name rule. If the value of `nameType` is
         * **cmdLine**, `args` is in the format of ["start", "end"], indicating that the characters between start and end in
         * the command are extracted. If the value of `nameType` is **env**, `args` is in the format of ["aa"], indicating that
         * the environment variable named aa is extracted. If the value of `nameType` is **str**, `args` is in the format of
         * ["fix"], indicating that the application name is suffixed with fix. If the value of `nameType` is **cmdLineHash**,
         * `args` is in the format of ["0001"] and `value` is in the format of ["ser"], indicating that the application name is
         * ser when the startup command is 0001. The object structure is documented below.
         */
        applicationNameRules: pulumi.Input<pulumi.Input<inputs.Aom.ServiceDiscoveryRuleNameRulesApplicationNameRule>[]>;
        /**
         * Specifies the service name rule. If there are multiple objects in the array,
         * the character strings extracted from these objects constitute the service name. If the value of `nameType` is
         * **cmdLine**, `args` is in the format of ["start", "end"], indicating that the characters between start and end
         * in the command are extracted. If the value of `nameType` is **env**, `args` is in the format of ["aa"],
         * indicating that the environment variable named aa is extracted. If the value of `nameType` is **str**, `args` is in the
         * format of ["fix"], indicating that the service name is suffixed with fix. If the value of `nameType` is
         * **cmdLineHash**, `args` is in the format of ["0001"] and `value` is in the format of ["ser"], indicating that the
         * service name is ser when the startup command is 0001. The object structure is
         * documented below.
         */
        serviceNameRules: pulumi.Input<pulumi.Input<inputs.Aom.ServiceDiscoveryRuleNameRulesServiceNameRule>[]>;
    }

    export interface ServiceDiscoveryRuleNameRulesApplicationNameRule {
        /**
         * Specifies the input value.
         */
        args: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the value type. The value can be **cmdLineHash**, **cmdLine**, **env**
         * and **str**.
         */
        nameType: pulumi.Input<string>;
        /**
         * Specifies the application name, which is mandatory only when the value of
         * `nameType` is **cmdLineHash**.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ServiceDiscoveryRuleNameRulesServiceNameRule {
        /**
         * Specifies the input value.
         */
        args: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the value type. The value can be **cmdLineHash**, **cmdLine**, **env**
         * and **str**.
         */
        nameType: pulumi.Input<string>;
        /**
         * Specifies the application name, which is mandatory only when the value of
         * `nameType` is **cmdLineHash**.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace As {
    export interface BandwidthPolicyScalingPolicyAction {
        /**
         * Specifies the operation restrictions.
         * - If operation is not SET, this parameter takes effect and the unit is Mbit/s.
         * - If operation is set to ADD, this parameter indicates the maximum bandwidth allowed.
         * - If operation is set to REDUCE, this parameter indicates the minimum bandwidth allowed.
         */
        limits?: pulumi.Input<number>;
        /**
         * Specifies the operation to be performed. The default operation is ADD.
         * The options are as follows:
         * - **ADD**: indicates adding the bandwidth size.
         * - **REDUCE**: indicates reducing the bandwidth size.
         * - **SET**: indicates setting the bandwidth size to a specified value.
         */
        operation?: pulumi.Input<string>;
        /**
         * Specifies the bandwidth (Mbit/s).
         * The value is an integer from 1 to 2000. The default value is 1.
         */
        size?: pulumi.Input<number>;
    }

    export interface BandwidthPolicyScheduledPolicy {
        /**
         * Specifies the end time of the scaling action triggered periodically.
         * The time format complies with UTC. This parameter is mandatory when scalingPolicyType is set to RECURRENCE.
         * When the scaling action is triggered periodically, the end time cannot be earlier than the current and start time.
         * The time format is YYYY-MM-DDThh:mmZ.
         */
        endTime?: pulumi.Input<string>;
        /**
         * Specifies the time when the scaling action is triggered.
         * The time format complies with UTC.
         * - If scalingPolicyType is set to SCHEDULED, the time format is YYYY-MM-DDThh:mmZ.
         * - If scalingPolicyType is set to RECURRENCE, the time format is hh:mm.
         */
        launchTime: pulumi.Input<string>;
        /**
         * Specifies the periodic triggering type.
         * This parameter is mandatory when scalingPolicyType is set to RECURRENCE. The options are as follows:
         * - **Daily**: indicates that the scaling action is triggered once a day.
         * - **Weekly**: indicates that the scaling action is triggered once a week.
         * - **Monthly**: indicates that the scaling action is triggered once a month.
         */
        recurrenceType?: pulumi.Input<string>;
        /**
         * Specifies the day when a periodic scaling action is triggered.
         * This parameter is mandatory when scalingPolicyType is set to RECURRENCE.
         * - If recurrenceType is set to Daily, the value is null, indicating that the scaling action is triggered once a day.
         * - If recurrenceType is set to Weekly, the value ranges from 1 (Sunday) to 7 (Saturday).
         * The digits refer to dates in each week and separated by a comma, such as 1,3,5.
         * - If recurrenceType is set to Monthly, the value ranges from 1 to 31.
         * The digits refer to the dates in each month and separated by a comma, such as 1,10,13,28.
         */
        recurrenceValue?: pulumi.Input<string>;
        /**
         * Specifies the start time of the scaling action triggered periodically.
         * The time format complies with UTC. The default value is the local time.
         * The time format is YYYY-MM-DDThh:mmZ.
         */
        startTime?: pulumi.Input<string>;
    }

    export interface ConfigurationInstanceConfig {
        /**
         * Specifies the disk group information. System disks are mandatory and
         * data disks are optional. The object structure is documented below.
         * Changing this will create a new resource.
         */
        disks?: pulumi.Input<pulumi.Input<inputs.As.ConfigurationInstanceConfigDisk>[]>;
        /**
         * Specifies the ECS flavor name. A maximum of 10 flavors can be selected.
         * Use a comma (,) to separate multiple flavor names. Changing this will create a new resource.
         */
        flavor?: pulumi.Input<string>;
        /**
         * Specifies the ECS image ID. Changing this will create a new resource.
         */
        image?: pulumi.Input<string>;
        /**
         * Specifies the ECS instance ID when using its specification
         * as the template to create AS configurations. In this case, `flavor`, `image`, and `disk` arguments do not take effect.
         * If this argument is not specified, `flavor`, `image`, and `disk` arguments are mandatory.
         * Changing this will create a new resource.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Specifies the name of the SSH key pair used to log in to the instance.
         * Changing this will create a new resource.
         */
        keyName: pulumi.Input<string>;
        /**
         * Specifies the key/value pairs to make available from within the instance.
         * Changing this will create a new resource.
         */
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the customize personality of an instance by defining one or
         * more files and their contents. The object structure is documented below.
         * Changing this will create a new resource.
         */
        personalities?: pulumi.Input<pulumi.Input<inputs.As.ConfigurationInstanceConfigPersonality>[]>;
        /**
         * Specifies the EIP of the ECS instance.
         * The object structure is documented below.
         * Changing this will create a new resource.
         */
        publicIp?: pulumi.Input<inputs.As.ConfigurationInstanceConfigPublicIp>;
        /**
         * Specifies the user data to provide when launching the instance.
         * The file content must be encoded with Base64. Changing this will create a new resource.
         */
        userData?: pulumi.Input<string>;
    }

    export interface ConfigurationInstanceConfigDisk {
        /**
         * Specifies whether the disk is a system disk or a data disk.
         * Option **DATA** indicates a data disk, option **SYS** indicates a system disk.
         * Changing this will create a new resource.
         */
        diskType: pulumi.Input<string>;
        /**
         * Specifies the encryption KMS ID of the **DATA** disk.
         * Changing this will create a new resource.
         */
        kmsId?: pulumi.Input<string>;
        /**
         * Specifies the bandwidth (Mbit/s). The value range for bandwidth billed by bandwidth
         * is 1 to 2000 and that for bandwidth billed by traffic is 1 to 300.
         * Changing this creates a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the disk type. Changing this will create a new resource.
         * Available options are:
         * + `SAS`: high I/O disk type.
         * + `SSD`: ultra-high I/O disk type.
         * + `GPSSD`: general purpose SSD disk type.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface ConfigurationInstanceConfigPersonality {
        content: pulumi.Input<string>;
        /**
         * Specifies the path of the injected file. Changing this creates a new resource.
         */
        path: pulumi.Input<string>;
    }

    export interface ConfigurationInstanceConfigPublicIp {
        /**
         * Specifies the EIP configuration that will be automatically assigned to the instance.
         * The object structure is documented below. Changing this will create a new resource.
         */
        eip: pulumi.Input<inputs.As.ConfigurationInstanceConfigPublicIpEip>;
    }

    export interface ConfigurationInstanceConfigPublicIpEip {
        /**
         * Specifies the bandwidth information. The object structure is documented below.
         * Changing this will create a new resource.
         */
        bandwidth: pulumi.Input<inputs.As.ConfigurationInstanceConfigPublicIpEipBandwidth>;
        /**
         * Specifies the EIP type. Possible values are **5_bgp** (dynamic BGP)
         * and **5_sbgp** (static BGP). Changing this will create a new resource.
         */
        ipType: pulumi.Input<string>;
    }

    export interface ConfigurationInstanceConfigPublicIpEipBandwidth {
        /**
         * Specifies whether the bandwidth is billed by traffic or by bandwidth
         * size. The value can be **traffic** or **bandwidth**. Changing this creates a new resource.
         */
        chargingMode: pulumi.Input<string>;
        /**
         * Specifies the bandwidth sharing type. The system only supports
         * **PER** (indicates exclusive bandwidth). Changing this will create a new resource.
         */
        shareType: pulumi.Input<string>;
        /**
         * Specifies the bandwidth (Mbit/s). The value range for bandwidth billed by bandwidth
         * is 1 to 2000 and that for bandwidth billed by traffic is 1 to 300.
         * Changing this creates a new resource.
         */
        size: pulumi.Input<number>;
    }

    export interface GroupLbaasListener {
        /**
         * Specifies the backend ECS group ID.
         */
        poolId: pulumi.Input<string>;
        /**
         * Specifies the backend protocol, which is the port on which a backend ECS listens for
         * traffic. The number of the port ranges from 1 to 65535.
         */
        protocolPort: pulumi.Input<number>;
        /**
         * Specifies the weight, which determines the portion of requests a backend ECS processes
         * compared to other backend ECSs added to the same listener. The value of this parameter ranges from 0 to 100. The
         * default value is 1.
         */
        weight?: pulumi.Input<number>;
    }

    export interface GroupNetwork {
        /**
         * The UUID of the security group.
         */
        id: pulumi.Input<string>;
    }

    export interface GroupSecurityGroup {
        /**
         * The UUID of the security group.
         */
        id: pulumi.Input<string>;
    }

    export interface PolicyScalingPolicyAction {
        /**
         * The number of instances to be operated. The default number is 1.
         */
        instanceNumber?: pulumi.Input<number>;
        /**
         * The operation to be performed. The options include `ADD` (default), `REMOVE`,
         * and `SET`.
         */
        operation?: pulumi.Input<string>;
    }

    export interface PolicyScheduledPolicy {
        /**
         * The end time of the scaling action triggered periodically. The time format complies
         * with UTC. This argument is mandatory when `scalingPolicyType`
         * is set to `RECURRENCE`. The time format is YYYY-MM-DDThh:mmZ.
         */
        endTime?: pulumi.Input<string>;
        /**
         * The time when the scaling action is triggered.
         * + If `scalingPolicyType` is set to `SCHEDULED`, the time format is YYYY-MM-DDThh:mmZ.
         * + If `scalingPolicyType` is set to `RECURRENCE`, the time format is hh:mm.
         */
        launchTime: pulumi.Input<string>;
        /**
         * The periodic triggering type. This argument is mandatory when
         * `scalingPolicyType` is set to `RECURRENCE`. The options include `Daily`, `Weekly`, and `Monthly`.
         */
        recurrenceType?: pulumi.Input<string>;
        /**
         * The frequency at which scaling actions are triggered.
         */
        recurrenceValue?: pulumi.Input<string>;
        /**
         * The start time of the scaling action triggered periodically. The time format
         * complies with UTC. The current time is used by default. The time format is YYYY-MM-DDThh:mmZ.
         */
        startTime?: pulumi.Input<string>;
    }
}

export namespace Bcs {
    export interface InstanceBlockInfo {
        /**
         * Specifies the volume of the block, the unit is MB. The default value is 2.
         * Changing this creates a new instance.
         */
        blockSize?: pulumi.Input<number>;
        /**
         * Specifies the block generation time, the unit is second. The defalt
         * value is 2. Changing this creates a new instance.
         */
        generationInterval?: pulumi.Input<number>;
        /**
         * Specifies the number of transactions included in the block. The
         * defalt value is 500. Changing this creates a new instance.
         */
        transactionQuantity?: pulumi.Input<number>;
    }

    export interface InstanceChannel {
        /**
         * Specifies the name of the channel. Changing this creates a new instance.
         */
        name: pulumi.Input<string>;
        orgNames?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface InstanceCouchdb {
        /**
         * Specifies the password of the couch datebase. The password consists of 8 to
         * 26 characters and must consist at least three of following: uppercase letters, lowercase letters, digits, special
         * charactors(!@$%^-_=+[{}]:,./?). Changing this creates a new instance.
         */
        password: pulumi.Input<string>;
        /**
         * Specifies the user name of the couch datebase. Changing this creates a new
         * instance.
         */
        userName: pulumi.Input<string>;
    }

    export interface InstanceKafka {
        /**
         * Specifies the availability zone in which to create the kafka. The
         * list must contain one or more than three availability zone. Please
         * following [reference](https://developer.huaweicloud.com/en-us/endpoint/?all) for the values. Changing this creates a
         * new instance.
         */
        availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the kafka flavor type. Changing this creates a new instance.
         * + `c3.mini` : Mini type, the reference bandwidth is 100MB/s.
         * + `c3.small.2` : Small type, the reference bandwidth is 300MB/s.
         * + `c3.middle.2` : Middle type, the reference bandwidth is 600MB/s.
         * + `c3.high.2` : High type, the reference bandwidth is 1200MB/s.
         */
        flavor: pulumi.Input<string>;
        /**
         * Specifies the name of the channel. Changing this creates a new instance.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the kafka storage capacity. The storage capacity must be an
         * integral multiple of 100 and the maximum is 90000GB. Changing this creates a new instance.
         * + The minimum storage capacity of mini type is 600GB.
         * + The minimum storage capacity of small type is 1200GB.
         * + The minimum storage capacity of middle type is 2400GB.
         * + The minimum storage capacity of high type is 4800GB.
         */
        storageSize: pulumi.Input<number>;
    }

    export interface InstancePeerOrg {
        addresses?: pulumi.Input<pulumi.Input<inputs.Bcs.InstancePeerOrgAddress>[]>;
        /**
         * Specifies the number of peers in organization. Changing this creates a new
         * instance.
         */
        count: pulumi.Input<number>;
        /**
         * Specifies the name of the peer organization. Changing this creates a new
         * instance.
         */
        orgName: pulumi.Input<string>;
        pvcName?: pulumi.Input<string>;
        /**
         * The status of the BCS instance.
         */
        status?: pulumi.Input<string>;
        statusDetail?: pulumi.Input<string>;
    }

    export interface InstancePeerOrgAddress {
        domainPort: pulumi.Input<string>;
        ipPort: pulumi.Input<string>;
    }

    export interface InstanceSfsTurbo {
        /**
         * Specifies the availability zone in which to create the kafka. The
         * list must contain one or more than three availability zone. Please
         * following [reference](https://developer.huaweicloud.com/en-us/endpoint/?all) for the values. Changing this creates a
         * new instance.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * Specifies the kafka flavor type. Changing this creates a new instance.
         * + `c3.mini` : Mini type, the reference bandwidth is 100MB/s.
         * + `c3.small.2` : Small type, the reference bandwidth is 300MB/s.
         * + `c3.middle.2` : Middle type, the reference bandwidth is 600MB/s.
         * + `c3.high.2` : High type, the reference bandwidth is 1200MB/s.
         */
        flavor?: pulumi.Input<string>;
        /**
         * Specifies the share type of the SFS turbo. Changing this creates a new
         * instance.
         */
        shareType?: pulumi.Input<string>;
        /**
         * Specifies the type of SFS turbo. Changing this creates a new instance.
         */
        type?: pulumi.Input<string>;
    }
}

export namespace Bms {
    export interface InstanceDataDisk {
        /**
         * Specifies the data disk size, in GB. The value ranges form 10 to 32768. Changing
         * this creates a new instance.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the BMS data disk type, which must be one of available disk types,
         * contains of *SSD*, *GPSSD* and *SAS*. Changing this creates a new instance.
         */
        type: pulumi.Input<string>;
    }

    export interface InstanceNic {
        /**
         * Specifies a fixed IPv4 address to be used on this network. Changing this
         * creates a new instance.
         */
        ipAddress?: pulumi.Input<string>;
        macAddress?: pulumi.Input<string>;
        portId?: pulumi.Input<string>;
        /**
         * Specifies the ID of subnet to attach to the instance. Changing this creates
         * a new instance.
         */
        subnetId: pulumi.Input<string>;
    }
}

export namespace Cbr {
    export interface GetVaultsVault {
        /**
         * The allocated capacity of the vault, in GB.
         */
        allocated?: number;
        /**
         * Specifies whether to enable automatic expansion of the backup protection
         * type vault. Default to **false**.
         */
        autoExpandEnabled?: boolean;
        /**
         * Specifies the backup specifications.
         * The valid values are as follows:
         * + **[crashConsistent](https://support.huaweicloud.com/intl/en-us/usermanual-cbr/cbr_03_0109.html)**
         * + **[appConsistent](https://support.huaweicloud.com/intl/en-us/usermanual-cbr/cbr_03_0109.html)**
         */
        consistentLevel?: string;
        /**
         * Specifies a unique ID in UUID format of enterprise project.
         */
        enterpriseProjectId?: string;
        /**
         * The vault ID in UUID format.
         */
        id?: string;
        /**
         * Specifies a unique name of the CBR vault. This parameter can contain a maximum of 64
         * characters, which may consist of letters, digits, underscores(_) and hyphens (-).
         */
        name?: string;
        /**
         * Specifies a policy to associate with the CBR vault.
         * The `policyId` cannot be used with the vault of replicate protection type.
         */
        policyId?: string;
        /**
         * Specifies the protection type of the CBR vault.
         * The valid values are **backup** and **replication**. Vaults of type **disk** don't support **replication**.
         */
        protectionType?: string;
        /**
         * An array of one or more resources to attach to the CBR vault.
         * The object structure is documented below.
         */
        resources?: inputs.Cbr.GetVaultsVaultResource[];
        /**
         * Specifies the vault sapacity, in GB. The valid value range is `1` to `10,485,760`.
         */
        size?: number;
        /**
         * The specification code.
         */
        specCode?: string;
        /**
         * Specifies the CBR vault status, including **available**, **lock**, **frozen** and **error**.
         */
        status?: string;
        /**
         * The name of the bucket for the vault.
         */
        storage?: string;
        /**
         * The key/value pairs to associate with the CBR vault.
         */
        tags?: {[key: string]: string};
        /**
         * Specifies the object type of the CBR vault. The vaild values are as follows:
         * + **server** (Cloud Servers)
         * + **disk** (EVS Disks)
         * + **turbo** (SFS Turbo file systems)
         */
        type?: string;
        /**
         * The used capacity, in GB.
         */
        used?: number;
    }

    export interface GetVaultsVaultArgs {
        /**
         * The allocated capacity of the vault, in GB.
         */
        allocated?: pulumi.Input<number>;
        /**
         * Specifies whether to enable automatic expansion of the backup protection
         * type vault. Default to **false**.
         */
        autoExpandEnabled?: pulumi.Input<boolean>;
        /**
         * Specifies the backup specifications.
         * The valid values are as follows:
         * + **[crashConsistent](https://support.huaweicloud.com/intl/en-us/usermanual-cbr/cbr_03_0109.html)**
         * + **[appConsistent](https://support.huaweicloud.com/intl/en-us/usermanual-cbr/cbr_03_0109.html)**
         */
        consistentLevel?: pulumi.Input<string>;
        /**
         * Specifies a unique ID in UUID format of enterprise project.
         */
        enterpriseProjectId?: pulumi.Input<string>;
        /**
         * The vault ID in UUID format.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies a unique name of the CBR vault. This parameter can contain a maximum of 64
         * characters, which may consist of letters, digits, underscores(_) and hyphens (-).
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies a policy to associate with the CBR vault.
         * The `policyId` cannot be used with the vault of replicate protection type.
         */
        policyId?: pulumi.Input<string>;
        /**
         * Specifies the protection type of the CBR vault.
         * The valid values are **backup** and **replication**. Vaults of type **disk** don't support **replication**.
         */
        protectionType?: pulumi.Input<string>;
        /**
         * An array of one or more resources to attach to the CBR vault.
         * The object structure is documented below.
         */
        resources?: pulumi.Input<pulumi.Input<inputs.Cbr.GetVaultsVaultResourceArgs>[]>;
        /**
         * Specifies the vault sapacity, in GB. The valid value range is `1` to `10,485,760`.
         */
        size?: pulumi.Input<number>;
        /**
         * The specification code.
         */
        specCode?: pulumi.Input<string>;
        /**
         * Specifies the CBR vault status, including **available**, **lock**, **frozen** and **error**.
         */
        status?: pulumi.Input<string>;
        /**
         * The name of the bucket for the vault.
         */
        storage?: pulumi.Input<string>;
        /**
         * The key/value pairs to associate with the CBR vault.
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the object type of the CBR vault. The vaild values are as follows:
         * + **server** (Cloud Servers)
         * + **disk** (EVS Disks)
         * + **turbo** (SFS Turbo file systems)
         */
        type?: pulumi.Input<string>;
        /**
         * The used capacity, in GB.
         */
        used?: pulumi.Input<number>;
    }

    export interface GetVaultsVaultResource {
        /**
         * An array of disk IDs which will be excluded in the backup.
         */
        excludes?: string[];
        /**
         * An array of disk or SFS file system IDs which will be included in the backup.
         */
        includes?: string[];
        /**
         * The ID of the ECS instance to be backed up.
         */
        serverId?: string;
    }

    export interface GetVaultsVaultResourceArgs {
        /**
         * An array of disk IDs which will be excluded in the backup.
         */
        excludes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * An array of disk or SFS file system IDs which will be included in the backup.
         */
        includes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the ECS instance to be backed up.
         */
        serverId?: pulumi.Input<string>;
    }

    export interface PolicyBackupCycle {
        /**
         * Specifies the weekly backup day of backup schedule. It supports seven days a week (MO, TU,
         * WE, TH, FR, SA, SU) and this parameter is separated by a comma (,) without spaces, between date and date during the
         * configuration.
         */
        days?: pulumi.Input<string>;
        /**
         * Specifies the backup time. Automated backups will be triggered at the backup
         * time. The current time is in the UTC format (HH:MM). The minutes in the list must be set to **00** and the hours
         * cannot be repeated. In the replication policy, you are advised to set one time point for one day.
         */
        executionTimes: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the interval (in days) of backup schedule. The value range is `1` to `30`. This
         * parameter and `days` are alternative.
         */
        interval?: pulumi.Input<number>;
    }

    export interface PolicyLongTermRetention {
        /**
         * - Specifies the latest backup of each day is saved in the long term.
         */
        daily?: pulumi.Input<number>;
        /**
         * - Specifies the latest backup of each month is saved in the long term.
         */
        monthly?: pulumi.Input<number>;
        /**
         * - Specifies the latest backup of each week is saved in the long term.
         */
        weekly?: pulumi.Input<number>;
        /**
         * - Specifies the latest backup of each year is saved in the long term.
         */
        yearly?: pulumi.Input<number>;
    }

    export interface VaultResource {
        /**
         * Specifies the array of disk IDs which will be excluded in the backup.
         * Only **server** vault support this parameter.
         */
        excludes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the array of disk or SFS file system IDs which will be included in the backup.
         * Only **disk** and **turbo** vault support this parameter.
         */
        includes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the ID of the ECS instance to be backed up.
         */
        serverId?: pulumi.Input<string>;
    }
}

export namespace Cce {
    export interface AddonValues {
        /**
         * Specifies the key/value pairs vary depending on the add-on.
         * Only supports non-nested structure and only supports string type elements.
         * This is an alternative to `basicJson`, but it is not recommended.
         * Changing this parameter will create a new resource.
         */
        basic?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the json string vary depending on the add-on.
         * Changing this parameter will create a new resource.
         */
        basicJson?: pulumi.Input<string>;
        /**
         * Specifies the key/value pairs vary depending on the add-on.
         * Only supports non-nested structure and only supports string type elements.
         * This is an alternative to `customJson`, but it is not recommended.
         * Changing this parameter will create a new resource.
         */
        custom?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the json string vary depending on the add-on.
         * Changing this parameter will create a new resource.
         */
        customJson?: pulumi.Input<string>;
        /**
         * Specifies the key/value pairs vary depending on the add-on.
         * Only supports non-nested structure and only supports string type elements.
         * This is an alternative to `flavorJson`, but it is not recommended.
         * Changing this parameter will create a new resource.
         */
        flavor?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the json string vary depending on the add-on.
         * Changing this parameter will create a new resource.
         */
        flavorJson?: pulumi.Input<string>;
    }

    export interface ClusterCertificateCluster {
        /**
         * The certificate data.
         */
        certificateAuthorityData?: pulumi.Input<string>;
        /**
         * Specifies the cluster name.
         * Changing this parameter will create a new cluster resource.
         */
        name?: pulumi.Input<string>;
        /**
         * The server IP address.
         */
        server?: pulumi.Input<string>;
    }

    export interface ClusterCertificateUser {
        /**
         * The client certificate data.
         */
        clientCertificateData?: pulumi.Input<string>;
        /**
         * The client key data.
         */
        clientKeyData?: pulumi.Input<string>;
        /**
         * Specifies the cluster name.
         * Changing this parameter will create a new cluster resource.
         */
        name?: pulumi.Input<string>;
    }

    export interface ClusterMaster {
        /**
         * Specifies the availability zone of the master node.
         * Changing this parameter will create a new cluster resource.
         */
        availabilityZone?: pulumi.Input<string>;
    }

    export interface NodeAttachDataVolume {
        extendParam?: pulumi.Input<string>;
        extendParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        hwPassthrough?: pulumi.Input<boolean>;
        kmsKeyId?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        volumetype?: pulumi.Input<string>;
    }

    export interface NodeAttachRootVolume {
        extendParam?: pulumi.Input<string>;
        extendParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        hwPassthrough?: pulumi.Input<boolean>;
        size?: pulumi.Input<number>;
        volumetype?: pulumi.Input<string>;
    }

    export interface NodeAttachTaint {
        /**
         * Available options are NoSchedule, PreferNoSchedule, and NoExecute.
         * Changing this parameter will create a new resource.
         */
        effect: pulumi.Input<string>;
        /**
         * A key must contain 1 to 63 characters starting with a letter or digit.
         * Only letters, digits, hyphens (-), underscores (_), and periods (.) are allowed. A DNS subdomain name can be used
         * as the prefix of a key. Changing this parameter will create a new resource.
         */
        key: pulumi.Input<string>;
        /**
         * A value must start with a letter or digit and can contain a maximum of 63
         * characters, including letters, digits, hyphens (-), underscores (_), and periods (.). Changing this parameter will
         * create a new resource.
         */
        value: pulumi.Input<string>;
    }

    export interface NodeDataVolume {
        /**
         * Specifies the extended parameter.
         * Changing this parameter will create a new resource.
         * The available keys are as follows:
         * + **agency_name**: The agency name to provide temporary credentials for CCE node to access other cloud services.
         * + **alpha.cce/NodeImageID**: The custom image ID used to create the BMS nodes.
         * + **dockerBaseSize**: The available disk space of a single docker container on the node in device mapper mode.
         * + **DockerLVMConfigOverride**: Specifies the data disk configurations of Docker.
         *
         * @deprecated use extend_params instead
         */
        extendParam?: pulumi.Input<string>;
        /**
         * Specifies the disk expansion parameters.
         * Changing this parameter will create a new resource.
         */
        extendParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        hwPassthrough?: pulumi.Input<boolean>;
        /**
         * Specifies the ID of a KMS key. This is used to encrypt the volume.
         * Changing this parameter will create a new resource.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Specifies the size of a virtual space. Only an integer percentage is supported.
         * Example: 90%. Note that the total percentage of all virtual spaces in a group cannot exceed 100%.
         * Changing this parameter will create a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the disk type.
         * Changing this parameter will create a new resource.
         */
        volumetype: pulumi.Input<string>;
    }

    export interface NodePoolDataVolume {
        /**
         * Specifies the extended parameter.
         * Changing this parameter will create a new resource.
         * The available keys are as follows:
         * + **agency_name**: The agency name to provide temporary credentials for CCE node to access other cloud services.
         * + **alpha.cce/NodeImageID**: The custom image ID used to create the BMS nodes.
         * + **dockerBaseSize**: The available disk space of a single docker container on the node in device mapper mode.
         * + **DockerLVMConfigOverride**: Specifies the data disk configurations of Docker.
         *
         * @deprecated use extend_params instead
         */
        extendParam?: pulumi.Input<string>;
        /**
         * Specifies the disk expansion parameters.
         * Changing this parameter will create a new resource.
         */
        extendParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        hwPassthrough?: pulumi.Input<boolean>;
        /**
         * Specifies the KMS key ID. This is used to encrypt the volume.
         * Changing this parameter will create a new resource.
         */
        kmsKeyId?: pulumi.Input<string>;
        /**
         * Specifies the disk size in GB. Changing this parameter will create a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the disk type. Changing this parameter will create a new resource.
         */
        volumetype: pulumi.Input<string>;
    }

    export interface NodePoolRootVolume {
        /**
         * Specifies the extended parameter.
         * Changing this parameter will create a new resource.
         * The available keys are as follows:
         * + **agency_name**: The agency name to provide temporary credentials for CCE node to access other cloud services.
         * + **alpha.cce/NodeImageID**: The custom image ID used to create the BMS nodes.
         * + **dockerBaseSize**: The available disk space of a single docker container on the node in device mapper mode.
         * + **DockerLVMConfigOverride**: Specifies the data disk configurations of Docker.
         *
         * @deprecated use extend_params instead
         */
        extendParam?: pulumi.Input<string>;
        /**
         * Specifies the disk expansion parameters.
         * Changing this parameter will create a new resource.
         */
        extendParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        hwPassthrough?: pulumi.Input<boolean>;
        /**
         * Specifies the disk size in GB. Changing this parameter will create a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the disk type. Changing this parameter will create a new resource.
         */
        volumetype: pulumi.Input<string>;
    }

    export interface NodePoolTaint {
        /**
         * Available options are NoSchedule, PreferNoSchedule, and NoExecute.
         */
        effect: pulumi.Input<string>;
        /**
         * A key must contain 1 to 63 characters starting with a letter or digit. Only letters,
         * digits, hyphens (-), underscores (_), and periods (.) are allowed. A DNS subdomain name can be used as the
         * prefix of a key.
         */
        key: pulumi.Input<string>;
        /**
         * A value must start with a letter or digit and can contain a maximum of 63 characters,
         * including letters, digits, hyphens (-), underscores (_), and periods (.).
         */
        value: pulumi.Input<string>;
    }

    export interface NodeRootVolume {
        /**
         * Specifies the extended parameter.
         * Changing this parameter will create a new resource.
         * The available keys are as follows:
         * + **agency_name**: The agency name to provide temporary credentials for CCE node to access other cloud services.
         * + **alpha.cce/NodeImageID**: The custom image ID used to create the BMS nodes.
         * + **dockerBaseSize**: The available disk space of a single docker container on the node in device mapper mode.
         * + **DockerLVMConfigOverride**: Specifies the data disk configurations of Docker.
         *
         * @deprecated use extend_params instead
         */
        extendParam?: pulumi.Input<string>;
        /**
         * Specifies the disk expansion parameters.
         * Changing this parameter will create a new resource.
         */
        extendParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        hwPassthrough?: pulumi.Input<boolean>;
        /**
         * Specifies the size of a virtual space. Only an integer percentage is supported.
         * Example: 90%. Note that the total percentage of all virtual spaces in a group cannot exceed 100%.
         * Changing this parameter will create a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the disk type.
         * Changing this parameter will create a new resource.
         */
        volumetype: pulumi.Input<string>;
    }

    export interface NodeStorage {
        /**
         * Specifies the storage group consists of multiple storage devices.
         * This is used to divide storage space. Structure is documented below.
         * Changing this parameter will create a new resource.
         */
        groups: pulumi.Input<pulumi.Input<inputs.Cce.NodeStorageGroup>[]>;
        /**
         * Specifies the disk selection.
         * Matched disks are managed according to match labels and storage type. Structure is documented below.
         * Changing this parameter will create a new resource.
         */
        selectors: pulumi.Input<pulumi.Input<inputs.Cce.NodeStorageSelector>[]>;
    }

    export interface NodeStorageGroup {
        /**
         * Specifies the whether the storage space is for **kubernetes** and
         * **runtime** components. Only one group can be set to true. The default value is **false**.
         * Changing this parameter will create a new resource.
         */
        cceManaged?: pulumi.Input<boolean>;
        /**
         * Specifies the virtual space name. Currently, only **kubernetes**, **runtime**,
         * and **user** are supported. Changing this parameter will create a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the list of names of seletors to match.
         * This parameter corresponds to name in `selectors`. A group can match multiple selectors,
         * but a selector can match only one group. Changing this parameter will create a new resource.
         */
        selectorNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the detailed management of space configuration in a group.
         * Changing this parameter will create a new resource.
         */
        virtualSpaces: pulumi.Input<pulumi.Input<inputs.Cce.NodeStorageGroupVirtualSpace>[]>;
    }

    export interface NodeStorageGroupVirtualSpace {
        /**
         * Specifies the LVM write mode, values can be **linear** and **striped**.
         * This parameter takes effect only in **kubernetes** and **user** configuration. Changing this parameter will create
         * a new resource.
         */
        lvmLvType?: pulumi.Input<string>;
        /**
         * Specifies the absolute path to which the disk is attached.
         * This parameter takes effect only in **user** configuration. Changing this parameter will create a new resource.
         */
        lvmPath?: pulumi.Input<string>;
        /**
         * Specifies the virtual space name. Currently, only **kubernetes**, **runtime**,
         * and **user** are supported. Changing this parameter will create a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the LVM write mode, values can be **linear** and **striped**.
         * This parameter takes effect only in **runtime** configuration. Changing this parameter will create a new resource.
         */
        runtimeLvType?: pulumi.Input<string>;
        /**
         * Specifies the size of a virtual space. Only an integer percentage is supported.
         * Example: 90%. Note that the total percentage of all virtual spaces in a group cannot exceed 100%.
         * Changing this parameter will create a new resource.
         */
        size: pulumi.Input<string>;
    }

    export interface NodeStorageSelector {
        /**
         * Specifies the number of disks to be selected. If omitted,
         * all disks of this type are selected. Changing this parameter will create a new resource.
         */
        matchLabelCount?: pulumi.Input<string>;
        /**
         * Specifies the cstomer master key ID of an encrypted
         * disk. Changing this parameter will create a new resource.
         */
        matchLabelMetadataCmkid?: pulumi.Input<string>;
        /**
         * Specifies the disk encryption identifier.
         * Values can be: **0** indicates that the disk is not encrypted and **1** indicates that the disk is encrypted.
         * If omitted, whether the disk is encrypted is not limited. Changing this parameter will create a new resource.
         */
        matchLabelMetadataEncrypted?: pulumi.Input<string>;
        /**
         * Specifies the matched disk size. If omitted,
         * the disk size is not limited. Example: 100. Changing this parameter will create a new resource.
         */
        matchLabelSize?: pulumi.Input<string>;
        /**
         * Specifies the EVS disk type. Currently,
         * **SSD**, **GPSSD**, and **SAS** are supported. If omitted, the disk type is not limited.
         * Changing this parameter will create a new resource.
         */
        matchLabelVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the virtual space name. Currently, only **kubernetes**, **runtime**,
         * and **user** are supported. Changing this parameter will create a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the storage type. Currently, only **evs (EVS volumes)** is supported.
         * The default value is **evs**. Changing this parameter will create a new resource.
         */
        type?: pulumi.Input<string>;
    }

    export interface NodeTaint {
        /**
         * Available options are NoSchedule, PreferNoSchedule, and NoExecute.
         * Changing this parameter will create a new resource.
         */
        effect: pulumi.Input<string>;
        /**
         * A key must contain 1 to 63 characters starting with a letter or digit.
         * Only letters, digits, hyphens (-), underscores (_), and periods (.) are allowed. A DNS subdomain name can be used
         * as the prefix of a key. Changing this parameter will create a new resource.
         */
        key: pulumi.Input<string>;
        /**
         * A value must start with a letter or digit and can contain a maximum of 63
         * characters, including letters, digits, hyphens (-), underscores (_), and periods (.). Changing this parameter will
         * create a new resource.
         */
        value: pulumi.Input<string>;
    }

}

export namespace Cci {
}

export namespace Cdm {
    export interface ClusterInstance {
        /**
         * Instance ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Management IP address.
         */
        manageIp?: pulumi.Input<string>;
        /**
         * Specifies cluster name. Changing this parameter will create a new resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Private IP.
         */
        privateIp?: pulumi.Input<string>;
        /**
         * Public IP.
         */
        publicIp?: pulumi.Input<string>;
        /**
         * Instance role.
         */
        role?: pulumi.Input<string>;
        /**
         * Traffic IP.
         */
        trafficIp?: pulumi.Input<string>;
        /**
         * Instance type.
         */
        type?: pulumi.Input<string>;
    }

    export interface JobConfig {
        /**
         * Specifies group to which a job belongs. The default group is `DEFAULT`.
         */
        groupName?: pulumi.Input<string>;
        /**
         * Specifies whether to automatically retry if a job fails to be executed.
         * The options are as follows:
         * + **NONE**: Do not retry.
         * + **RETRY_TRIPLE**: Retry three times.
         */
        retryType?: pulumi.Input<string>;
        /**
         * Specifies cycle of a scheduled task. If `schedulerCycleType` is set to minute
         * and `schedulerCycle` is set to 10, the scheduled task is executed every 10 minutes.
         */
        schedulerCycle?: pulumi.Input<number>;
        /**
         * Specifies cycle type of a scheduled task. The options are as follows:
         * `minute`, `hour`, `day`, `week`, `month`.
         */
        schedulerCycleType?: pulumi.Input<string>;
        /**
         * Specifies whether to delete a job after the job is executed.
         * The options are as follows:
         * + **NONE**: The job will not be deleted after it is executed.
         * + **DELETE_AFTER_SUCCEED**: The job will be deleted only after it is successfully executed. It is applicable to
         * massive one-time jobs.
         * + **DELETE**: Thejob will be deleted after it is executed, regardless of the execution result.
         */
        schedulerDisposableType?: pulumi.Input<string>;
        /**
         * Specifies whether to enable a scheduled task.  Default value is `false`.
         */
        schedulerEnabled?: pulumi.Input<boolean>;
        /**
         * Specifies time when a scheduled task is triggered in a cycle. This parameter
         * is valid only when `schedulerCycleType` is set to `hour`, `week`, or `month`.
         * + If `schedulerCycleType` is set to month, cycle is set to 1, and runAt is set to 15, the scheduled task is executed
         * on the 15th day of each month. You can set runAt to multiple values and separate the values with commas (,).
         * For example, if runAt is set to 1,2,3,4,5, the scheduled task is executed on the first day, second day, third day,
         * fourth day, and fifth day of each month.
         * + If `schedulerCycleType` is set to week and runAt is set to mon,tue,wed,thu,fri, the scheduled task is executed on
         * Monday to Friday.
         * + If `schedulerCycleType` is set to hour and runAt is set to 27,57, the scheduled task is executed at the 27th and
         * 57th minute in the cycle.
         */
        schedulerRunAt?: pulumi.Input<string>;
        /**
         * Specifies start time of a scheduled task.
         * For example, `2018-01-24 19:56:19`
         */
        schedulerStartDate?: pulumi.Input<string>;
        /**
         * Specifies End time of a scheduled task. For example, `2018-01-27 23:59:00`.
         * If you do not set the end time, the scheduled task is always executed and will never stop.
         */
        schedulerStopDate?: pulumi.Input<string>;
        /**
         * Specifies name of the OBS bucket to which dirty data is
         * written. This parameter is valid only when dirty data is written to `OBS`.
         */
        throttlingDirtyWriteToBucket?: pulumi.Input<string>;
        /**
         * Specifies the directory in the OBS bucket or HDFS which
         * dirty data is written to. For example, `/data/dirtydata/`.
         */
        throttlingDirtyWriteToDirectory?: pulumi.Input<string>;
        /**
         * Specifies the link name to which dirty data is written to.
         * The Dirty data can be written only to `OBS` or `HDFS`.
         */
        throttlingDirtyWriteToLink?: pulumi.Input<string>;
        /**
         * Specifies maximum number of concurrent extraction jobs.
         */
        throttlingExtractorsNumber?: pulumi.Input<number>;
        /**
         * Specifies maximum number of loading jobs. This parameter is available
         * only when HBase or Hive serves as the destination data source.
         */
        throttlingLoaderNumber?: pulumi.Input<number>;
        /**
         * Specifies maximum number of error records in a single
         * shard. When the number of error records of a map exceeds the upper limit, the task automatically ends.
         */
        throttlingMaxErrorRecords?: pulumi.Input<number>;
        /**
         * Specifies whether to write dirty data.
         */
        throttlingRecordDirtyData?: pulumi.Input<boolean>;
    }
}

export namespace Cdn {
    export interface DomainCacheSettings {
        /**
         * Specifies whether to enable origin cache control.
         */
        followOrigin?: pulumi.Input<boolean>;
        /**
         * Specifies the cache rules, which overwrite the previous rule configurations.
         * Blank rules are reset to default rules. The object structure is documented below.
         */
        rules?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainCacheSettingsRule>[]>;
    }

    export interface DomainCacheSettingsRule {
        /**
         * Specifies the content that matches `ruleType`. If `ruleType` is set to **0**,
         * this parameter is empty. If `ruleType` is set to **1**, the value of this parameter is a list of file name
         * extensions. A file name extension starts with a period (.). File name extensions are separated by semicolons (;),
         * for example, .jpg;.zip;.exe. If `ruleType` is set to **2**, the value of this parameter is a list of directories.
         * A directory starts with a slash (/). Directories are separated by semicolons (;), for example,
         * /test/folder01;/test/folder02.
         */
        content?: pulumi.Input<string>;
        /**
         * Specifies the priority weight of this rule. The default value is 1.
         * A larger value indicates a higher priority. The value ranges from 1 to 100. The weight values must be unique.
         */
        priority?: pulumi.Input<number>;
        /**
         * Specifies the rule type. Possible value are:
         * **0**: All types of files are matched. It is the default value.
         * **1**: Files are matched based on their suffixes.
         * **2**: Files are matched based on their directories.
         * **3**: Files are matched based on their full paths.
         */
        ruleType: pulumi.Input<number>;
        /**
         * Specifies the cache age. The maximum cache age is 365 days.
         */
        ttl?: pulumi.Input<number>;
        /**
         * Specifies the unit of the cache age. Possible values: **1** (second), **2** (minute),
         * **3** (hour), and **4** (day).
         */
        ttlType?: pulumi.Input<number>;
    }

    export interface DomainConfigs {
        /**
         * Specifies the settings for caching URL parameters.
         * The object structure is documented below.
         */
        cacheUrlParameterFilter?: pulumi.Input<inputs.Cdn.DomainConfigsCacheUrlParameterFilter>;
        /**
         * Specifies the smart compression. The object structure
         * is documented below.
         */
        compress?: pulumi.Input<inputs.Cdn.DomainConfigsCompress>;
        /**
         * Specifies the force redirect.
         * The object structure is documented below.
         */
        forceRedirect?: pulumi.Input<inputs.Cdn.DomainConfigsForceRedirect>;
        /**
         * Specifies the HTTP response header settings.
         * The object structure is documented below.
         */
        httpResponseHeaders?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainConfigsHttpResponseHeader>[]>;
        /**
         * Specifies the certificate configuration. The object
         * structure is documented below.
         */
        httpsSettings?: pulumi.Input<inputs.Cdn.DomainConfigsHttpsSettings>;
        /**
         * Specifies whether to enable IPv6.
         */
        ipv6Enable?: pulumi.Input<boolean>;
        /**
         * Specifies the content retrieval protocol. Possible values:
         * + **follow**: same as user requests.
         * + **http**: HTTP, which is the default value.
         * + **https**: HTTPS.
         */
        originProtocol?: pulumi.Input<string>;
        /**
         * Specifies whether to enable range-based retrieval.
         */
        rangeBasedRetrievalEnabled?: pulumi.Input<boolean>;
        /**
         * Specifies the retrieval request header settings.
         * The object structure is documented below.
         */
        retrievalRequestHeaders?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainConfigsRetrievalRequestHeader>[]>;
        /**
         * Specifies the URL signing.
         * The object structure is documented below.
         */
        urlSigning?: pulumi.Input<inputs.Cdn.DomainConfigsUrlSigning>;
    }

    export interface DomainConfigsCacheUrlParameterFilter {
        /**
         * Specifies the operation type for caching URL parameters. Posiible values are:
         * **full_url**: cache all parameters
         * **ignore_url_params**: ignore all parameters
         * **del_args**: ignore specific URL parameters
         * **reserve_args**: reserve specified URL parameters
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the parameter values. Multiple values are separated by semicolons (;).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainConfigsCompress {
        /**
         * Specifies the whether to enable force redirect or smart compression.
         */
        enabled: pulumi.Input<boolean>;
        status?: pulumi.Input<string>;
        /**
         * Specifies the operation type for caching URL parameters. Posiible values are:
         * **full_url**: cache all parameters
         * **ignore_url_params**: ignore all parameters
         * **del_args**: ignore specific URL parameters
         * **reserve_args**: reserve specified URL parameters
         */
        type?: pulumi.Input<string>;
    }

    export interface DomainConfigsForceRedirect {
        /**
         * Specifies the whether to enable force redirect or smart compression.
         */
        enabled: pulumi.Input<boolean>;
        status?: pulumi.Input<string>;
        /**
         * Specifies the operation type for caching URL parameters. Posiible values are:
         * **full_url**: cache all parameters
         * **ignore_url_params**: ignore all parameters
         * **del_args**: ignore specific URL parameters
         * **reserve_args**: reserve specified URL parameters
         */
        type?: pulumi.Input<string>;
    }

    export interface DomainConfigsHttpResponseHeader {
        /**
         * Specifies the operation type of request or response
         */
        action: pulumi.Input<string>;
        /**
         * Specifies the request or response header.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the parameter values. Multiple values are separated by semicolons (;).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainConfigsHttpsSettings {
        /**
         * Specifies the content of the certificate used by the HTTPS protocol.
         * This parameter is mandatory when a certificate is configured. The value is in PEM format.
         */
        certificateBody?: pulumi.Input<string>;
        /**
         * Specifies the certificate name. The value contains 3 to 32 characters.
         * This parameter is mandatory when a certificate is configured.
         */
        certificateName?: pulumi.Input<string>;
        /**
         * Specifies the certificate type. Possible values are:
         * + **1**: Huawei-managed certificate.
         * + **0**: your own certificate.
         */
        certificateSource?: pulumi.Input<number>;
        /**
         * Specifies whether HTTP/2 is used.
         */
        http2Enabled?: pulumi.Input<boolean>;
        http2Status?: pulumi.Input<string>;
        /**
         * Specifies whether to enable HTTPS.
         */
        httpsEnabled?: pulumi.Input<boolean>;
        httpsStatus?: pulumi.Input<string>;
        /**
         * Specifies the private key used by the HTTPS protocol. This parameter is mandatory
         * when a certificate is configured. The value is in PEM format.
         */
        privateKey?: pulumi.Input<string>;
        /**
         * Specifies the transport Layer Security (TLS). Currently, **TLSv1.0**,
         * **TLSv1.1**, **TLSv1.2**, and **TLSv1.3** are supported. By default, all versions are enabled. You can enable
         * a single version or consecutive versions. To enable multiple versions, use commas (,) to separate versions,
         * for example, **TLSv1.1,TLSv1.2**.
         */
        tlsVersion?: pulumi.Input<string>;
    }

    export interface DomainConfigsRetrievalRequestHeader {
        /**
         * Specifies the operation type of request or response
         */
        action: pulumi.Input<string>;
        /**
         * Specifies the request or response header.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the parameter values. Multiple values are separated by semicolons (;).
         */
        value?: pulumi.Input<string>;
    }

    export interface DomainConfigsUrlSigning {
        /**
         * Specifies the whether to enable force redirect or smart compression.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specifies the expiration time. The value ranges from **0** to **31536000**,
         * in seconds.
         */
        expireTime?: pulumi.Input<number>;
        /**
         * Specifies the authentication key contains 6 to 32 characters, including letters and digits.
         */
        key?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
        /**
         * Specifies the time format. Possible values are:
         * **dec**: Decimal, can be used in Method A, Method B and Method C2.
         * **hex**: Hexadecimal, can be used in Method C1 and Method C2.
         */
        timeFormat?: pulumi.Input<string>;
        /**
         * Specifies the operation type for caching URL parameters. Posiible values are:
         * **full_url**: cache all parameters
         * **ignore_url_params**: ignore all parameters
         * **del_args**: ignore specific URL parameters
         * **reserve_args**: reserve specified URL parameters
         */
        type?: pulumi.Input<string>;
    }

    export interface DomainSource {
        /**
         * Whether an origin server is active or standby (1: active; 0: standby). The default value is
         * 1.
         */
        active?: pulumi.Input<number>;
        /**
         * Specifies the HTTP port. Default value: **80**.
         */
        httpPort?: pulumi.Input<number>;
        /**
         * Specifies the HTTPS port. Default value: **443**.
         */
        httpsPort?: pulumi.Input<number>;
        /**
         * Whether to enable static website hosting for the OBS bucket.
         * This parameter is mandatory when the `originType` is **obs_bucket**.
         */
        obsWebHostingEnabled?: pulumi.Input<boolean>;
        /**
         * The domain name or IP address of the origin server.
         */
        origin: pulumi.Input<string>;
        /**
         * The origin server type. The valid values are 'ipaddr', 'domain', and 'obs_bucket'.
         */
        originType: pulumi.Input<string>;
        /**
         * Specifies the retrieval host. The default value is the acceleration domain name.
         */
        retrievalHost?: pulumi.Input<string>;
    }
}

export namespace Cse {
    export interface AlarmruleAlarmAction {
        /**
         * specifies the list of objects to be notified if the alarm status changes, the
         * maximum length is 5.
         */
        notificationLists: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * specifies the type of action triggered by an alarm. the value is notification.
         * notification: indicates that a notification will be sent to the user.
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmruleCondition {
        /**
         * Specifies the comparison condition of alarm thresholds. The value can be >,
         * =, <, >=, or <=.
         */
        comparisonOperator: pulumi.Input<string>;
        /**
         * Specifies the number of consecutive occurrence times. The value ranges from 1 to 5.
         */
        count: pulumi.Input<number>;
        /**
         * Specifies the data rollup methods. The value can be max, min, average, sum, and vaiance.
         */
        filter: pulumi.Input<string>;
        /**
         * Specifies the alarm checking period in seconds. The value can be 0, 1, 300, 1200, 3600, 14400,
         * and 86400.
         */
        period: pulumi.Input<number>;
        /**
         * Specifies the interval for triggering an alarm if the alarm persists.
         * Changing this creates a new resource. Possible values are as follows:
         * + **0**: Cloud Eye triggers the alarm only once;
         * + **300**: Cloud Eye triggers the alarm every 5 minutes;
         * + **600**: Cloud Eye triggers the alarm every 10 minutes;
         * + **900**: Cloud Eye triggers the alarm every 15 minutes;
         * + **1800**: Cloud Eye triggers the alarm every 30 minutes;
         * + **3600**: Cloud Eye triggers the alarm every hour;
         * + **10800**: Cloud Eye triggers the alarm every 3 hours;
         * + **21600**: Cloud Eye triggers the alarm every 6 hours;
         * + **43200**: Cloud Eye triggers the alarm every 12 hour;
         * + **86400**: Cloud Eye triggers the alarm every day.
         */
        suppressDuration?: pulumi.Input<number>;
        /**
         * Specifies the data unit. Changing this creates a new resource.
         * For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
         */
        unit?: pulumi.Input<string>;
        /**
         * Specifies the alarm threshold. The value ranges from 0 to Number of
         * 1.7976931348623157e+308.
         */
        value: pulumi.Input<number>;
    }

    export interface AlarmruleInsufficientdataAction {
        /**
         * specifies the list of objects to be notified if the alarm status changes, the
         * maximum length is 5.
         */
        notificationLists: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * specifies the type of action triggered by an alarm. the value is notification.
         * notification: indicates that a notification will be sent to the user.
         */
        type: pulumi.Input<string>;
    }

    export interface AlarmruleMetric {
        /**
         * Specifies the list of metric dimensions. The structure is described below.
         * Changing this creates a new resource.
         */
        dimensions?: pulumi.Input<pulumi.Input<inputs.Cse.AlarmruleMetricDimension>[]>;
        /**
         * Specifies the metric name. The value can be a string of 1 to 64
         * characters that must start with a letter and contain only letters, digits, and underscores (_).
         * Changing this creates a new resource.
         * For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
         */
        metricName: pulumi.Input<string>;
        /**
         * Specifies the namespace in **service.item** format. **service** and **item**
         * each must be a string that starts with a letter and contains only letters, digits, and underscores (_).
         * Changing this creates a new resource.
         * For details, see [Services Interconnected with Cloud Eye](https://support.huaweicloud.com/intl/en-us/api-ces/ces_03_0059.html).
         */
        namespace: pulumi.Input<string>;
    }

    export interface AlarmruleMetricDimension {
        /**
         * Specifies the dimension name. The value can be a string of 1 to 32 characters
         * that must start with a letter and contain only letters, digits, underscores (_), and hyphens (-).
         * Changing this creates a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the alarm threshold. The value ranges from 0 to Number of
         * 1.7976931348623157e+308.
         */
        value: pulumi.Input<string>;
    }

    export interface AlarmruleOkAction {
        /**
         * specifies the list of objects to be notified if the alarm status changes, the
         * maximum length is 5.
         */
        notificationLists: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * specifies the type of action triggered by an alarm. the value is notification.
         * notification: indicates that a notification will be sent to the user.
         */
        type: pulumi.Input<string>;
    }

    export interface MicroserviceEngineConfigCenterAddress {
        /**
         * The internal access address.
         */
        private?: pulumi.Input<string>;
        /**
         * The public access address. This address is only set when EIP is bound.
         */
        public?: pulumi.Input<string>;
    }

    export interface MicroserviceEngineServiceRegistryAddress {
        /**
         * The internal access address.
         */
        private?: pulumi.Input<string>;
        /**
         * The public access address. This address is only set when EIP is bound.
         */
        public?: pulumi.Input<string>;
    }

    export interface MicroserviceInstanceDataCenter {
        /**
         * Specifies the custom availability zone name of the data center.
         * Changing this will create a new microservice instance.
         */
        availabilityZone: pulumi.Input<string>;
        /**
         * Specifies the data center name.
         * Changing this will create a new microservice instance.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the custom region name of the data center.
         * Changing this will create a new microservice instance.
         */
        region: pulumi.Input<string>;
    }

    export interface MicroserviceInstanceHealthCheck {
        /**
         * Specifies the heartbeat interval. The unit is **s** (second).
         * Changing this will create a new microservice instance.
         */
        interval: pulumi.Input<number>;
        /**
         * Specifies the maximum retries.
         * Changing this will create a new microservice instance.
         */
        maxRetries: pulumi.Input<number>;
        /**
         * Specifies the heartbeat mode. The valid values are **push** and **pull**.
         * Changing this will create a new microservice instance.
         */
        mode: pulumi.Input<string>;
        /**
         * Specifies the port number.
         * Changing this will create a new microservice instance.
         */
        port?: pulumi.Input<number>;
    }
}

export namespace Css {
    export interface ClusterBackupStrategy {
        /**
         * Specifies the IAM agency used to access OBS.
         */
        agency?: pulumi.Input<string>;
        /**
         * Specifies the storage path of the snapshot in the OBS bucket.
         */
        backupPath?: pulumi.Input<string>;
        /**
         * Specifies the OBS bucket used for index data backup. If there is snapshot data in an OBS
         * bucket, only the OBS bucket is used and cannot be changed.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Specifies the number of days to retain the generated snapshots. Snapshots are reserved
         * for seven days by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the prefix of the snapshot that is automatically created. The default value
         * is "snapshot".
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies the time when a snapshot is automatically created everyday. Snapshots can
         * only be created on the hour. The time format is the time followed by the time zone, specifically, **HH:mm z**. In the
         * format, HH:mm refers to the hour time and z refers to the time zone. For example, "00:00 GMT+08:00"
         * and "01:00 GMT+08:00".
         */
        startTime: pulumi.Input<string>;
    }

    export interface ClusterClientNodeConfig {
        /**
         * Specifies the flavor name. For example: value range of flavor ess.spec-2u8g:
         * 40 GB to 800 GB, value range of flavor ess.spec-4u16g: 40 GB to 1600 GB, value range of flavor ess.spec-8u32g: 80 GB
         * to 3200 GB, value range of flavor ess.spec-16u64g: 100 GB to 6400 GB, value range of flavor ess.spec-32u128g: 100 GB
         * to 10240 GB. Changing this parameter will create a new resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * Specifies the number of cluster instances.
         * + When it is `essNodeConfig`, The value range is 1 to 200.
         * + When it is `masterNodeConfig`, The value range is 3 to 10.
         * + When it is `clientNodeConfig`, The value range is 1 to 32.
         * + When it is `coldNodeConfig`, The value range is 1 to 32.
         */
        instanceNumber: pulumi.Input<number>;
        /**
         * Specifies the information about the volume.
         * The volume structure is documented below.
         */
        volume: pulumi.Input<inputs.Css.ClusterClientNodeConfigVolume>;
    }

    export interface ClusterClientNodeConfigVolume {
        /**
         * Specifies the volume size in GB, which must be a multiple of 10.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. COMMON: Common I/O. The SATA disk is used.
         * HIGH: High I/O. The SAS disk is used. ULTRAHIGH: Ultra-high I/O. The solid-state drive (SSD) is used. Changing this
         * parameter will create a new resource.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface ClusterColdNodeConfig {
        /**
         * Specifies the flavor name. For example: value range of flavor ess.spec-2u8g:
         * 40 GB to 800 GB, value range of flavor ess.spec-4u16g: 40 GB to 1600 GB, value range of flavor ess.spec-8u32g: 80 GB
         * to 3200 GB, value range of flavor ess.spec-16u64g: 100 GB to 6400 GB, value range of flavor ess.spec-32u128g: 100 GB
         * to 10240 GB. Changing this parameter will create a new resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * Specifies the number of cluster instances.
         * + When it is `essNodeConfig`, The value range is 1 to 200.
         * + When it is `masterNodeConfig`, The value range is 3 to 10.
         * + When it is `clientNodeConfig`, The value range is 1 to 32.
         * + When it is `coldNodeConfig`, The value range is 1 to 32.
         */
        instanceNumber: pulumi.Input<number>;
        /**
         * Specifies the information about the volume.
         * The volume structure is documented below.
         */
        volume: pulumi.Input<inputs.Css.ClusterColdNodeConfigVolume>;
    }

    export interface ClusterColdNodeConfigVolume {
        /**
         * Specifies the volume size in GB, which must be a multiple of 10.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. COMMON: Common I/O. The SATA disk is used.
         * HIGH: High I/O. The SAS disk is used. ULTRAHIGH: Ultra-high I/O. The solid-state drive (SSD) is used. Changing this
         * parameter will create a new resource.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface ClusterEssNodeConfig {
        /**
         * Specifies the flavor name. For example: value range of flavor ess.spec-2u8g:
         * 40 GB to 800 GB, value range of flavor ess.spec-4u16g: 40 GB to 1600 GB, value range of flavor ess.spec-8u32g: 80 GB
         * to 3200 GB, value range of flavor ess.spec-16u64g: 100 GB to 6400 GB, value range of flavor ess.spec-32u128g: 100 GB
         * to 10240 GB. Changing this parameter will create a new resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * Specifies the number of cluster instances.
         * + When it is `essNodeConfig`, The value range is 1 to 200.
         * + When it is `masterNodeConfig`, The value range is 3 to 10.
         * + When it is `clientNodeConfig`, The value range is 1 to 32.
         * + When it is `coldNodeConfig`, The value range is 1 to 32.
         */
        instanceNumber: pulumi.Input<number>;
        /**
         * Specifies the information about the volume.
         * The volume structure is documented below.
         */
        volume: pulumi.Input<inputs.Css.ClusterEssNodeConfigVolume>;
    }

    export interface ClusterEssNodeConfigVolume {
        /**
         * Specifies the volume size in GB, which must be a multiple of 10.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. COMMON: Common I/O. The SATA disk is used.
         * HIGH: High I/O. The SAS disk is used. ULTRAHIGH: Ultra-high I/O. The solid-state drive (SSD) is used. Changing this
         * parameter will create a new resource.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface ClusterKibanaPublicAccess {
        /**
         * Specifies the public network bandwidth.
         */
        bandwidth: pulumi.Input<number>;
        publicIp?: pulumi.Input<string>;
        /**
         * Specifies the whitelist of access control.
         * Separate the whitelisted Account IDs with commas (,), and each of them must be unique.
         */
        whitelist?: pulumi.Input<string>;
        /**
         * Specifies whether to enable the public network access control.
         */
        whitelistEnabled: pulumi.Input<boolean>;
    }

    export interface ClusterMasterNodeConfig {
        /**
         * Specifies the flavor name. For example: value range of flavor ess.spec-2u8g:
         * 40 GB to 800 GB, value range of flavor ess.spec-4u16g: 40 GB to 1600 GB, value range of flavor ess.spec-8u32g: 80 GB
         * to 3200 GB, value range of flavor ess.spec-16u64g: 100 GB to 6400 GB, value range of flavor ess.spec-32u128g: 100 GB
         * to 10240 GB. Changing this parameter will create a new resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * Specifies the number of cluster instances.
         * + When it is `essNodeConfig`, The value range is 1 to 200.
         * + When it is `masterNodeConfig`, The value range is 3 to 10.
         * + When it is `clientNodeConfig`, The value range is 1 to 32.
         * + When it is `coldNodeConfig`, The value range is 1 to 32.
         */
        instanceNumber: pulumi.Input<number>;
        /**
         * Specifies the information about the volume.
         * The volume structure is documented below.
         */
        volume: pulumi.Input<inputs.Css.ClusterMasterNodeConfigVolume>;
    }

    export interface ClusterMasterNodeConfigVolume {
        /**
         * Specifies the volume size in GB, which must be a multiple of 10.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. COMMON: Common I/O. The SATA disk is used.
         * HIGH: High I/O. The SAS disk is used. ULTRAHIGH: Ultra-high I/O. The solid-state drive (SSD) is used. Changing this
         * parameter will create a new resource.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface ClusterNode {
        /**
         * Specifies the availability zone name.
         * Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
         * than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
         * distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
         * between node quantity in any two AZs is 1 at most.
         * Changing this parameter will create a new resource.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * Instance ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the cluster name. It contains 4 to 32 characters.
         * Only letters, digits, hyphens (-), and underscores (_) are allowed. The value must start with a letter.
         * Changing this parameter will create a new resource.
         */
        name?: pulumi.Input<string>;
        specCode?: pulumi.Input<string>;
        /**
         * The cluster status
         * + `100`: The operation, such as instance creation, is in progress.
         * + `200`: The cluster is available.
         * + `303`: The cluster is unavailable.
         */
        status?: pulumi.Input<string>;
        /**
         * Node type. The options are as follows:
         */
        type?: pulumi.Input<string>;
    }

    export interface ClusterNodeConfig {
        /**
         * Specifies the availability zone name.
         * Separate multiple AZs with commas (,), for example, az1,az2. AZs must be unique. The number of nodes must be greater
         * than or equal to the number of AZs. If the number of nodes is a multiple of the number of AZs, the nodes are evenly
         * distributed to each AZ. If the number of nodes is not a multiple of the number of AZs, the absolute difference
         * between node quantity in any two AZs is 1 at most.
         * Changing this parameter will create a new resource.
         */
        availabilityZone: pulumi.Input<string>;
        /**
         * Specifies the flavor name. For example: value range of flavor ess.spec-2u8g:
         * 40 GB to 800 GB, value range of flavor ess.spec-4u16g: 40 GB to 1600 GB, value range of flavor ess.spec-8u32g: 80 GB
         * to 3200 GB, value range of flavor ess.spec-16u64g: 100 GB to 6400 GB, value range of flavor ess.spec-32u128g: 100 GB
         * to 10240 GB. Changing this parameter will create a new resource.
         */
        flavor: pulumi.Input<string>;
        networkInfo: pulumi.Input<inputs.Css.ClusterNodeConfigNetworkInfo>;
        /**
         * Specifies the information about the volume.
         * The volume structure is documented below.
         */
        volume: pulumi.Input<inputs.Css.ClusterNodeConfigVolume>;
    }

    export interface ClusterNodeConfigNetworkInfo {
        /**
         * Specifies Security group ID.
         * Changing this parameter will create a new resource.
         */
        securityGroupId: pulumi.Input<string>;
        /**
         * Specifies the Subnet ID. Changing this parameter will create a new resource.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Specifies the VPC ID. Changing this parameter will create a new resource.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface ClusterNodeConfigVolume {
        /**
         * Specifies the volume size in GB, which must be a multiple of 10.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. COMMON: Common I/O. The SATA disk is used.
         * HIGH: High I/O. The SAS disk is used. ULTRAHIGH: Ultra-high I/O. The solid-state drive (SSD) is used. Changing this
         * parameter will create a new resource.
         */
        volumeType: pulumi.Input<string>;
    }

    export interface ClusterPublicAccess {
        /**
         * Specifies the public network bandwidth.
         */
        bandwidth: pulumi.Input<number>;
        publicIp?: pulumi.Input<string>;
        /**
         * Specifies the whitelist of access control.
         * Separate the whitelisted Account IDs with commas (,), and each of them must be unique.
         */
        whitelist?: pulumi.Input<string>;
        /**
         * Specifies whether to enable the public network access control.
         */
        whitelistEnabled: pulumi.Input<boolean>;
    }

    export interface ClusterVpcepEndpoint {
        /**
         * Specifies whether to enable the private domain name.
         */
        endpointWithDnsName: pulumi.Input<boolean>;
        /**
         * Specifies the whitelist of access control.
         * Separate the whitelisted Account IDs with commas (,), and each of them must be unique.
         */
        whitelists?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Cts {
    export interface NotificationOperation {
        /**
         * Specifies the resource type.
         */
        resource: pulumi.Input<string>;
        /**
         * Specifies the cloud service.
         */
        service: pulumi.Input<string>;
        /**
         * Specifies an array of trace names.
         */
        traceNames: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface NotificationOperationUser {
        /**
         * Specifies the IAM user group name.
         */
        group: pulumi.Input<string>;
        /**
         * Specifies an array of IAM users in the group.
         */
        users: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Dcs {
    export interface InstanceBackupPolicy {
        /**
         * Day in a week on which backup starts, the value ranges from 1 to 7.
         * Where: 1 indicates Monday; 7 indicates Sunday.
         */
        backupAts: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Backup type. Default value is `auto`. The valid values are as follows:
         * + `auto`: automatic backup.
         * + `manual`: manual backup.
         */
        backupType?: pulumi.Input<string>;
        /**
         * Time at which backup starts.
         * Format: `hh24:00-hh24:00`, "00:00-01:00" indicates that backup starts at 00:00:00.
         */
        beginAt: pulumi.Input<string>;
        /**
         * Interval at which backup is performed. Default value is `weekly`.
         * Currently, only weekly backup is supported.
         */
        periodType?: pulumi.Input<string>;
        /**
         * Retention time. Unit: day, the value ranges from 1 to 7.
         */
        saveDays?: pulumi.Input<number>;
    }

    export interface InstanceWhitelist {
        /**
         * Specifies the name of IP address group.
         */
        groupName: pulumi.Input<string>;
        /**
         * Specifies the list of IP address or CIDR which can be whitelisted for an instance.
         * The maximum is 20.
         */
        ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace Dds {
    export interface DatabaseRoleInheritedPrivilege {
        /**
         * The operation permission list.
         */
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The details of the resource to which the privilege belongs.
         * The object structure is documented below.
         */
        resources?: pulumi.Input<pulumi.Input<inputs.Dds.DatabaseRoleInheritedPrivilegeResource>[]>;
    }

    export interface DatabaseRoleInheritedPrivilegeResource {
        /**
         * The database collection type.
         */
        collection?: pulumi.Input<string>;
        /**
         * Specifies the database name to which this owned role belongs.
         * Changing this parameter will create a new role.
         */
        dbName?: pulumi.Input<string>;
    }

    export interface DatabaseRolePrivilege {
        /**
         * The operation permission list.
         */
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The details of the resource to which the privilege belongs.
         * The object structure is documented below.
         */
        resources?: pulumi.Input<pulumi.Input<inputs.Dds.DatabaseRolePrivilegeResource>[]>;
    }

    export interface DatabaseRolePrivilegeResource {
        /**
         * The database collection type.
         */
        collection?: pulumi.Input<string>;
        /**
         * Specifies the database name to which this owned role belongs.
         * Changing this parameter will create a new role.
         */
        dbName?: pulumi.Input<string>;
    }

    export interface DatabaseRoleRole {
        /**
         * Specifies the database name to which this owned role belongs.
         * Changing this parameter will create a new role.
         */
        dbName: pulumi.Input<string>;
        /**
         * Specifies the name of role owned by the current role.
         * The name can contain `1` to `64` characters, only letters, digits, underscores (_), hyphens (-) and dots (.) are
         * allowed. Changing this parameter will create a new role.
         */
        name: pulumi.Input<string>;
    }

    export interface DatabaseUserInheritedPrivilege {
        /**
         * The operation permission list.
         */
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The details of the resource to which the privilege belongs.
         * The object structure is documented below.
         */
        resources?: pulumi.Input<pulumi.Input<inputs.Dds.DatabaseUserInheritedPrivilegeResource>[]>;
    }

    export interface DatabaseUserInheritedPrivilegeResource {
        /**
         * The database collection type.
         */
        collection?: pulumi.Input<string>;
        /**
         * Specifies the database name to which this owned role belongs.
         * Changing this parameter will create a new user.
         */
        dbName?: pulumi.Input<string>;
    }

    export interface DatabaseUserPrivilege {
        /**
         * The operation permission list.
         */
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The details of the resource to which the privilege belongs.
         * The object structure is documented below.
         */
        resources?: pulumi.Input<pulumi.Input<inputs.Dds.DatabaseUserPrivilegeResource>[]>;
    }

    export interface DatabaseUserPrivilegeResource {
        /**
         * The database collection type.
         */
        collection?: pulumi.Input<string>;
        /**
         * Specifies the database name to which this owned role belongs.
         * Changing this parameter will create a new user.
         */
        dbName?: pulumi.Input<string>;
    }

    export interface DatabaseUserRole {
        /**
         * Specifies the database name to which this owned role belongs.
         * Changing this parameter will create a new user.
         */
        dbName: pulumi.Input<string>;
        /**
         * Specifies the name of role owned by the current user.
         * The name can contain `1` to `64` characters, only letters, digits, underscores (_), hyphens (-) and dots (.) are
         * allowed. Changing this parameter will create a new user.
         */
        name: pulumi.Input<string>;
    }

    export interface InstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value range is
         * from 0 to 732.
         * + If this parameter is set to 0, the automated backup policy is not set.
         * + If this parameter is not transferred, the automated backup policy is enabled by default. Backup files are stored
         * for seven days by default.
         */
        keepDays: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. The value cannot be empty. It must be a valid value in the
         * "hh:mm-HH:MM" format. The current time is in the UTC format.
         * + The HH value must be 1 greater than the hh value.
         * + The values from mm and MM must be the same and must be set to any of the following 00, 15, 30, or 45.
         */
        startTime: pulumi.Input<string>;
    }

    export interface InstanceDatastore {
        /**
         * Specifies the storage engine of the DB instance. DDS Community Edition
         * supports wiredTiger engine, and the Enhanced Edition supports rocksDB engine.
         */
        storageEngine?: pulumi.Input<string>;
        /**
         * Specifies the node type. Valid value:
         * + For a Community Edition cluster instance, the value can be mongos, shard, or config.
         * + For an Enhanced Edition cluster instance, the value is shard.
         * + For a Community Edition replica set instance, the value is replica.
         * + For a Community Edition single node instance, the value is single.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the DB instance version. For the Community Edition, the valid
         * values are 3.2, 3.4, or 4.0. For the Enhanced Edition, only 3.4 is supported now.
         */
        version: pulumi.Input<string>;
    }

    export interface InstanceFlavor {
        /**
         * Specifies the node quantity. Valid value:
         * + In a Community Edition cluster instance,the number of mongos ranges from 2 to 16.
         * + In a Community Edition cluster instance,the number of shards ranges from 2 to 16.
         * + In an Enhanced Edition cluster instance, the number of shards ranges from 2 to 12.
         * + config: the value is 1.
         * + replica: the value is 1.
         * + single: The value is 1. This parameter can be updated when the value of `type` is mongos or shard.
         */
        num: pulumi.Input<number>;
        /**
         * Specifies the disk size. The value must be a multiple of 10. The unit is GB. This parameter
         * is mandatory for nodes except mongos and invalid for mongos. This parameter can be updated when the value of `type` is
         * shard, replica or single.
         */
        size?: pulumi.Input<number>;
        /**
         * Specifies the resource specification code. In a cluster instance, multiple
         * specifications need to be specified. All specifications must be of the same series, that is, general-purpose (s6),
         * enhanced (c3), or enhanced II (c6). For example:
         * + dds.mongodb.s6.large.4.mongos and dds.mongodb.s6.large.4.config have the same specifications.
         * + dds.mongodb.s6.large.4.mongos and dds.mongodb.c3.large.4.config are not of the same specifications. This parameter
         * can be updated when the value of `type` is mongos, shard, replica or single.
         */
        specCode: pulumi.Input<string>;
        /**
         * Specifies the disk type. Valid value: ULTRAHIGH which indicates the type SSD.
         */
        storage?: pulumi.Input<string>;
        /**
         * Specifies the node type. Valid value:
         * + For a Community Edition cluster instance, the value can be mongos, shard, or config.
         * + For an Enhanced Edition cluster instance, the value is shard.
         * + For a Community Edition replica set instance, the value is replica.
         * + For a Community Edition single node instance, the value is single.
         */
        type: pulumi.Input<string>;
    }

    export interface InstanceNode {
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the DB instance name. The DB instance name of the same type is unique in the
         * same tenant.
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the private IP address of a node. This parameter is valid only for mongos nodes, replica set
         * instances, and single node instances.
         */
        privateIp?: pulumi.Input<string>;
        /**
         * Indicates the EIP that has been bound on a node. This parameter is valid only for mongos nodes of
         * cluster instances, primary nodes and secondary nodes of replica set instances, and single node instances.
         */
        publicIp?: pulumi.Input<string>;
        /**
         * Indicates the node role.
         */
        role?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
        /**
         * Specifies the node type. Valid value:
         * + For a Community Edition cluster instance, the value can be mongos, shard, or config.
         * + For an Enhanced Edition cluster instance, the value is shard.
         * + For a Community Edition replica set instance, the value is replica.
         * + For a Community Edition single node instance, the value is single.
         */
        type?: pulumi.Input<string>;
    }
}

export namespace DedicatedApig {
    export interface ApiBackendParam {
        /**
         * Specifies the description of the constant or system parameter, which contain a
         * maximum of 255 characters, and the angle brackets (< and >) are not allowed.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the location of the backend parameter. The valid values are **PATH**,
         * **QUERY** and **HEADER**.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiFuncGraph {
        /**
         * Specifies the ID of the backend custom authorization.
         */
        authorizerId?: pulumi.Input<string>;
        /**
         * Specifies the URN of the function graph.
         */
        functionUrn: pulumi.Input<string>;
        /**
         * Specifies the invocation mode. The valid values are **async** and **sync**,
         * default to **sync**.
         */
        invocationType?: pulumi.Input<string>;
        /**
         * Specifies the timeout, in ms, which allowed for APIG to request the backend service. The
         * valid value is range from 1 to 600,000, default to 5,000.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the version of the function graph.
         */
        version?: pulumi.Input<string>;
    }

    export interface ApiFuncGraphPolicy {
        /**
         * Specifies the ID of the backend custom authorization.
         */
        authorizerId?: pulumi.Input<string>;
        /**
         * Specifies an array of one or more backend parameters. The maximum of request
         * parameters is 50. The object structure is documented above.
         */
        backendParams?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiFuncGraphPolicyBackendParam>[]>;
        /**
         * Specifies an array of one or more policy conditions. Up to five conditions can be set.
         * The object structure is documented below.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiFuncGraphPolicyCondition>[]>;
        /**
         * Specifies the effective mode of the backend policy. The valid values are **ALL**
         * and **ANY**, default to **ANY**.
         */
        effectiveMode?: pulumi.Input<string>;
        /**
         * Specifies the URN of the function graph.
         */
        functionUrn: pulumi.Input<string>;
        /**
         * Specifies the invocation mode of the function graph. The valid values are
         * **async** and **sync**, default to **sync**.
         */
        invocationMode?: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the timeout, in ms, which allowed for APIG to request the backend service. The
         * valid value is range from 1 to 600,000, default to 5,000.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the version of the function graph.
         */
        version?: pulumi.Input<string>;
    }

    export interface ApiFuncGraphPolicyBackendParam {
        /**
         * Specifies the description of the constant or system parameter, which contain a
         * maximum of 255 characters, and the angle brackets (< and >) are not allowed.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the location of the backend parameter. The valid values are **PATH**,
         * **QUERY** and **HEADER**.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiFuncGraphPolicyCondition {
        /**
         * Specifies the request parameter name. This parameter is required if the policy type
         * is param.
         */
        paramName?: pulumi.Input<string>;
        /**
         * Specifies the policy type. The valid values are **param** and **source**, default to
         * **source**.
         */
        source?: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiMock {
        /**
         * Specifies the ID of the backend custom authorization.
         */
        authorizerId?: pulumi.Input<string>;
        /**
         * Specifies the response of the backend policy, which contain a maximum of 2,048
         * characters, and the angle brackets (< and >) are not allowed.
         */
        response?: pulumi.Input<string>;
    }

    export interface ApiMockPolicy {
        /**
         * Specifies the ID of the backend custom authorization.
         */
        authorizerId?: pulumi.Input<string>;
        /**
         * Specifies an array of one or more backend parameters. The maximum of request
         * parameters is 50. The object structure is documented above.
         */
        backendParams?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiMockPolicyBackendParam>[]>;
        /**
         * Specifies an array of one or more policy conditions. Up to five conditions can be set.
         * The object structure is documented below.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiMockPolicyCondition>[]>;
        /**
         * Specifies the effective mode of the backend policy. The valid values are **ALL**
         * and **ANY**, default to **ANY**.
         */
        effectiveMode?: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the response of the backend policy, which contain a maximum of 2,048
         * characters, and the angle brackets (< and >) are not allowed.
         */
        response?: pulumi.Input<string>;
    }

    export interface ApiMockPolicyBackendParam {
        /**
         * Specifies the description of the constant or system parameter, which contain a
         * maximum of 255 characters, and the angle brackets (< and >) are not allowed.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the location of the backend parameter. The valid values are **PATH**,
         * **QUERY** and **HEADER**.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiMockPolicyCondition {
        /**
         * Specifies the request parameter name. This parameter is required if the policy type
         * is param.
         */
        paramName?: pulumi.Input<string>;
        /**
         * Specifies the policy type. The valid values are **param** and **source**, default to
         * **source**.
         */
        source?: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiPublishmentHistory {
        /**
         * Specifies the description of the current publishment.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the version ID of the current publishment.
         */
        versionId?: pulumi.Input<string>;
    }

    export interface ApiRequestParam {
        /**
         * Specifies the default value of the request parameter, which contain a maximum of 255
         * characters, and the angle brackets (< and >) are not allowed.
         */
        default?: pulumi.Input<string>;
        /**
         * Specifies the description of the constant or system parameter, which contain a
         * maximum of 255 characters, and the angle brackets (< and >) are not allowed.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the example value of the request parameter, which contain a maximum of 255
         * characters, and the angle brackets (< and >) are not allowed.
         */
        example?: pulumi.Input<string>;
        /**
         * Specifies the location of the backend parameter. The valid values are **PATH**,
         * **QUERY** and **HEADER**.
         */
        location?: pulumi.Input<string>;
        /**
         * Specifies the maximum value or size of the request parameter.
         */
        maximum?: pulumi.Input<number>;
        /**
         * Specifies the minimum value or size of the request parameter. For string type,
         * The `maximum` and `minimum` means size. For number type, they means value.
         */
        minimum?: pulumi.Input<number>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies whether the request parameter is required.
         */
        required: pulumi.Input<boolean>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type?: pulumi.Input<string>;
    }

    export interface ApiWeb {
        /**
         * Specifies the ID of the backend custom authorization.
         */
        authorizerId?: pulumi.Input<string>;
        /**
         * Specifies the backend service address, which consists of a domain name or IP
         * address, and a port number, with not more than 255 characters. The backend service address must be in the format "Host
         * name:Port number", for example, apig.example.com:7443. If the port number is not specified, the default HTTPS port 443
         * or the default HTTP port 80 is used. The backend service address can contain environment variables, each starting with
         * a letter and consisting of 3 to 32 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
         */
        backendAddress?: pulumi.Input<string>;
        /**
         * Specifies the proxy host header. The host header can be customized for requests to
         * be forwarded to cloud servers through the VPC channel. By default, the original host header of the request is used.
         */
        hostHeader?: pulumi.Input<string>;
        /**
         * Specifies the backend request address, which can contain a maximum of 512 characters and
         * must comply with URI specifications.
         * + The request address can contain request parameters enclosed with brackets ({}).
         * + The request address can contain special characters, such as asterisks (*), percent signs (%), hyphens (-) and
         * underscores (_) and must comply with URI specifications.
         * + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
         * Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the backend request method of the API. The valid types are **GET**,
         * **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
         */
        requestMethod?: pulumi.Input<string>;
        /**
         * Specifies the backend request protocol. The valid values are **HTTP** and
         * **HTTPS**, default to **HTTPS**.
         */
        requestProtocol?: pulumi.Input<string>;
        /**
         * Specifies the indicates whether to enable two-way authentication, default to false.
         */
        sslEnable?: pulumi.Input<boolean>;
        /**
         * Specifies the timeout, in ms, which allowed for APIG to request the backend service. The
         * valid value is range from 1 to 600,000, default to 5,000.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the VPC channel ID. This parameter and `backendAddress` are
         * alternative.
         */
        vpcChannelId?: pulumi.Input<string>;
    }

    export interface ApiWebPolicy {
        /**
         * Specifies the ID of the backend custom authorization.
         */
        authorizerId?: pulumi.Input<string>;
        /**
         * Specifies the backend service address, which consists of a domain name or IP
         * address, and a port number, with not more than 255 characters. The backend service address must be in the format "Host
         * name:Port number", for example, apig.example.com:7443. If the port number is not specified, the default HTTPS port 443
         * or the default HTTP port 80 is used. The backend service address can contain environment variables, each starting with
         * a letter and consisting of 3 to 32 characters. Only letters, digits, hyphens (-), and underscores (_) are allowed.
         */
        backendAddress?: pulumi.Input<string>;
        /**
         * Specifies an array of one or more backend parameters. The maximum of request
         * parameters is 50. The object structure is documented above.
         */
        backendParams?: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiWebPolicyBackendParam>[]>;
        /**
         * Specifies an array of one or more policy conditions. Up to five conditions can be set.
         * The object structure is documented below.
         */
        conditions: pulumi.Input<pulumi.Input<inputs.DedicatedApig.ApiWebPolicyCondition>[]>;
        /**
         * Specifies the effective mode of the backend policy. The valid values are **ALL**
         * and **ANY**, default to **ANY**.
         */
        effectiveMode?: pulumi.Input<string>;
        /**
         * Specifies the proxy host header. The host header can be customized for requests to
         * be forwarded to cloud servers through the VPC channel. By default, the original host header of the request is used.
         */
        hostHeader?: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the backend request address, which can contain a maximum of 512 characters and
         * must comply with URI specifications.
         * + The request address can contain request parameters enclosed with brackets ({}).
         * + The request address can contain special characters, such as asterisks (*), percent signs (%), hyphens (-) and
         * underscores (_) and must comply with URI specifications.
         * + The address can contain environment variables, each starting with a letter and consisting of 3 to 32 characters.
         * Only letters, digits, hyphens (-), and underscores (_) are allowed in environment variables.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the backend request method of the API. The valid types are **GET**,
         * **POST**, **PUT**, **DELETE**, **HEAD**, **PATCH**, **OPTIONS** and **ANY**.
         */
        requestMethod: pulumi.Input<string>;
        /**
         * Specifies the backend request protocol. The valid values are **HTTP** and
         * **HTTPS**, default to **HTTPS**.
         */
        requestProtocol?: pulumi.Input<string>;
        /**
         * Specifies the timeout, in ms, which allowed for APIG to request the backend service. The
         * valid value is range from 1 to 600,000, default to 5,000.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the VPC channel ID. This parameter and `backendAddress` are
         * alternative.
         */
        vpcChannelId?: pulumi.Input<string>;
    }

    export interface ApiWebPolicyBackendParam {
        /**
         * Specifies the description of the constant or system parameter, which contain a
         * maximum of 255 characters, and the angle brackets (< and >) are not allowed.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the location of the backend parameter. The valid values are **PATH**,
         * **QUERY** and **HEADER**.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the backend policy name, which can contains of 3 to 64 characters and start with
         * a letter. Only letters, digits, and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface ApiWebPolicyCondition {
        /**
         * Specifies the request parameter name. This parameter is required if the policy type
         * is param.
         */
        paramName?: pulumi.Input<string>;
        /**
         * Specifies the policy type. The valid values are **param** and **source**, default to
         * **source**.
         */
        source?: pulumi.Input<string>;
        /**
         * Specifies the condition type of the backend policy. The valid values are **Equal**,
         * **Enumerated** and **Matching**, default to **Equal**.
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the condition type. For a condition with the input parameter source:
         * + If the condition type is **Enumerated**, separate condition values with commas.
         * + If the condition type is **Matching**, enter a regular expression compatible with PERL.
         */
        value: pulumi.Input<string>;
    }

    export interface CustomAuthorizerIdentity {
        /**
         * Specifies the parameter location, which support 'HEADER' and 'QUERY'.
         * Changing this will create a new custom authorizer resource.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the name of the parameter to be verified.
         * The parameter includes front-end and back-end parameters.
         * Changing this will create a new custom authorizer resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the parameter verification expression.
         * If omitted, the custom authorizer will not perform verification.
         * The valid value is range form 1 to 2,048.
         * Changing this will create a new custom authorizer resource.
         */
        validation?: pulumi.Input<string>;
    }

    export interface GroupEnvironment {
        /**
         * Specifies the APIG environment ID of the associated APIG group.
         */
        environmentId: pulumi.Input<string>;
        /**
         * Specifies an array of one or more APIG environment variables. The object structure is
         * documented below. The environment variables of different groups are isolated in the same environment.
         */
        variables: pulumi.Input<pulumi.Input<inputs.DedicatedApig.GroupEnvironmentVariable>[]>;
    }

    export interface GroupEnvironmentVariable {
        /**
         * Specifies the variable name, which can contains of 3 to 32 characters, starting with a
         * letter. Only letters, digits, hyphens (-), and underscores (_) are allowed. In the definition of an API, `name` (
         * case-sensitive) indicates a variable, such as #Name#. It is replaced by the actual value when the API is published in
         * an environment. The variable names are not allowed to be repeated for an API group.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the environment ariable value, which can contains of 1 to 255 characters. Only
         * letters, digits and special characters (_-/.:) are allowed.
         */
        value: pulumi.Input<string>;
        variableId?: pulumi.Input<string>;
    }

    export interface ResponseRule {
        /**
         * Specifies the body template of the API response rule, e.g.
         * `{\"code\":\"$context.authorizer.frontend.code\",\"message\":\"$context.authorizer.frontend.message\"}`
         */
        body: pulumi.Input<string>;
        /**
         * Specifies the type of the API custom response rule.
         * + **AUTH_FAILURE**: Authentication failed.
         * + **AUTH_HEADER_MISSING**: The identity source is missing.
         * + **AUTHORIZER_FAILURE**: Custom authentication failed.
         * + **AUTHORIZER_CONF_FAILURE**: There has been a custom authorizer error.
         * + **AUTHORIZER_IDENTITIES_FAILURE**: The identity source of the custom authorizer is invalid.
         * + **BACKEND_UNAVAILABLE**: The backend service is unavailable.
         * + **BACKEND_TIMEOUT**: Communication with the backend service timed out.
         * + **THROTTLED**: The request was rejected due to request throttling.
         * + **UNAUTHORIZED**: The app you are using has not been authorized to call the API.
         * + **ACCESS_DENIED**: Access denied.
         * + **NOT_FOUND**: No API is found.
         * + **REQUEST_PARAMETERS_FAILURE**: The request parameters are incorrect.
         * + **DEFAULT_4XX**: Another 4XX error occurred.
         * + **DEFAULT_5XX**: Another 5XX error occurred.
         */
        errorType: pulumi.Input<string>;
        /**
         * Specifies the HTTP status code of the API response rule.
         */
        statusCode?: pulumi.Input<number>;
    }

    export interface ThrottlingPolicyAppThrottle {
        /**
         * ID of the special application throttling policy.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the maximum number of times an API can be accessed within a specified
         * period.
         */
        maxApiRequests: pulumi.Input<number>;
        /**
         * Specifies the object ID which the special throttling policy belongs.
         */
        throttlingObjectId: pulumi.Input<string>;
        /**
         * The object name which the special application throttling policy belongs.
         */
        throttlingObjectName?: pulumi.Input<string>;
    }

    export interface ThrottlingPolicyUserThrottle {
        /**
         * ID of the special application throttling policy.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the maximum number of times an API can be accessed within a specified
         * period.
         */
        maxApiRequests: pulumi.Input<number>;
        /**
         * Specifies the object ID which the special throttling policy belongs.
         */
        throttlingObjectId: pulumi.Input<string>;
        /**
         * The object name which the special application throttling policy belongs.
         */
        throttlingObjectName?: pulumi.Input<string>;
    }

    export interface VpcChannelMember {
        /**
         * Specifies the ECS ID for each backend servers.
         * Required if `memberType` is *ECS*.
         * This parameter and `ipAddress` are alternative.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the IP address each backend servers.
         * Required if `memberType` is *EIP*.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Specifies the backend server weight.
         * The valid values are range from 1 to 100, default to 1.
         */
        weight?: pulumi.Input<number>;
    }
}

export namespace DedicatedElb {
    export interface IpgroupIpList {
        /**
         * Human-readable description for the ip.
         */
        description?: pulumi.Input<string>;
        /**
         * IP address or CIDR block.
         */
        ip: pulumi.Input<string>;
    }

    export interface PoolPersistence {
        /**
         * The name of the cookie if persistence mode is set appropriately. Required
         * if `type = APP_COOKIE`.
         */
        cookieName?: pulumi.Input<string>;
        /**
         * The type of persistence mode. The current specification supports SOURCE_IP,
         * HTTP_COOKIE, and APP_COOKIE.
         */
        type: pulumi.Input<string>;
    }

}

export namespace Dew {
}

export namespace Dis {
    export interface StreamPartition {
        /**
         * Possible value range of the hash key used by each partition.
         */
        hashRange?: pulumi.Input<string>;
        /**
         * The ID of the partition.
         */
        id?: pulumi.Input<string>;
        /**
         * Sequence number range of each partition.
         */
        sequenceNumberRange?: pulumi.Input<string>;
        /**
         * The status of the partition.
         */
        status?: pulumi.Input<string>;
    }
}

export namespace Dli {
    export interface SparkJobDependentPackage {
        groupName: pulumi.Input<string>;
        packages: pulumi.Input<pulumi.Input<inputs.Dli.SparkJobDependentPackagePackage>[]>;
    }

    export interface SparkJobDependentPackagePackage {
        /**
         * Specifies the resource name of the package.
         * Changing this parameter will submit a new spark job.
         */
        packageName: pulumi.Input<string>;
        /**
         * Specifies the resource type of the package.
         * Changing this parameter will submit a new spark job.
         */
        type: pulumi.Input<string>;
    }

    export interface SqlJobConf {
        /**
         * Sets the job running timeout interval. If the timeout interval
         * expires, the job is canceled. Unit: `ms`. Changing this parameter will create a new resource.
         */
        dliSqlJobTimeout?: pulumi.Input<number>;
        /**
         * Specifies whether DDL and DCL statements are executed
         * asynchronously. The value true indicates that asynchronous execution is enabled. Default value is `false`.
         * Changing this parameter will create a new resource.
         */
        dliSqlSqlasyncEnabled?: pulumi.Input<boolean>;
        /**
         * Maximum size of the table that
         * displays all working nodes when a connection is executed. You can set this parameter to -1 to disable the display.
         * Default value is `209715200`. Changing this parameter will create a new resource.
         */
        sparkSqlAutoBroadcastJoinThreshold?: pulumi.Input<number>;
        /**
         * Path of bad records. Changing this parameter will create
         * a new resource.
         */
        sparkSqlBadRecordsPath?: pulumi.Input<string>;
        /**
         * In dynamic mode, Spark does not delete
         * the previous partitions and only overwrites the partitions without data during execution. Default value is `false`.
         * Changing this parameter will create a new resource.
         */
        sparkSqlDynamicPartitionOverwriteEnabled?: pulumi.Input<boolean>;
        /**
         * Maximum number of bytes to be packed into a
         * single partition when a file is read. Default value is `134217728`. Changing this parameter will create a new
         * resource.
         */
        sparkSqlFilesMaxPartitionBytes?: pulumi.Input<number>;
        /**
         * Maximum number of records to be written
         * into a single file. If the value is zero or negative, there is no limit. Default value is `0`.
         * Changing this parameter will create a new resource.
         */
        sparkSqlMaxRecordsPerFile?: pulumi.Input<number>;
        /**
         * Default number of partitions used to filter
         * data for join or aggregation. Default value is `4096`. Changing this parameter will create a new resource.
         */
        sparkSqlShufflePartitions?: pulumi.Input<number>;
    }

    export interface TableColumn {
        /**
         * Specifies the description of column. Changing this parameter will
         * create a new resource.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies whether the column is a partition column. The value
         * `true` indicates a partition column, and the value false indicates a non-partition column. The default value
         * is false. Changing this parameter will create a new resource.
         */
        isPartition?: pulumi.Input<boolean>;
        /**
         * Specifies the name of column. Changing this parameter will create a new
         * resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies data type of column. Changing this parameter will create a new
         * resource.
         */
        type: pulumi.Input<string>;
    }
}

export namespace Dms {
    export interface KafkaInstanceCrossVpcAccess {
        /**
         * -(Optional, String) The advertised IP Address or domain name.
         */
        advertisedIp?: pulumi.Input<string>;
        /**
         * The listener IP address.
         */
        lisenterIp?: pulumi.Input<string>;
        /**
         * The port number.
         */
        port?: pulumi.Input<number>;
        /**
         * The port ID associated with the address.
         */
        portId?: pulumi.Input<string>;
    }

    export interface KafkaPermissionsPolicy {
        /**
         * -(Required, String) Specifies the permissions type. The value can be:
         * + **all**: publish and subscribe permissions.
         * + **pub**: publish permissions.
         * + **sub**: subscribe permissions.
         */
        accessPolicy: pulumi.Input<string>;
        /**
         * -(Required, String) Specifies the user name.
         */
        userName: pulumi.Input<string>;
    }
}

export namespace Dns {
    export interface ZoneRouter {
        /**
         * ID of the associated VPC.
         */
        routerId: pulumi.Input<string>;
        /**
         * The region of the VPC.
         */
        routerRegion?: pulumi.Input<string>;
    }
}

export namespace Drs {
    export interface JobDestinationDb {
        /**
         * Specifies the engine type of database. Changing this parameter will
         * create a new resource. The options are as follows: `mysql`, `mongodb`, `gaussdbv5`.
         */
        engineType: pulumi.Input<string>;
        /**
         * Specifies the instance id of database when it is a RDS database.
         * Changing this parameter will create a new resource.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Specifies the IP of database. Changing this parameter will create a new resource.
         */
        ip: pulumi.Input<string>;
        /**
         * Specifies the job name. The name consists of 4 to 50 characters, starting with
         * a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the password of database.
         * Changing this parameter will create a new resource.
         */
        password: pulumi.Input<string>;
        /**
         * Specifies the port of database. Changing this parameter will create a new resource.
         */
        port: pulumi.Input<number>;
        /**
         * Specifies the region which the database belongs when it is a RDS database.
         * Changing this parameter will create a new resource.
         */
        region?: pulumi.Input<string>;
        /**
         * Specifies the checksum of SSL certificate content.
         * It is mandatory when `sslEnabled` is `true`. Changing this parameter will create a new resource.
         */
        sslCertCheckSum?: pulumi.Input<string>;
        /**
         * Specifies the SSL certificate content, encrypted with base64.
         * It is mandatory when `sslEnabled` is `true`. Changing this parameter will create a new resource.
         */
        sslCertKey?: pulumi.Input<string>;
        /**
         * Specifies SSL certificate name.
         * It is mandatory when `sslEnabled` is `true`. Changing this parameter will create a new resource.
         */
        sslCertName?: pulumi.Input<string>;
        /**
         * Specifies SSL certificate password. It is mandatory when
         * `sslEnabled` is `true` and the certificate file suffix is `.p12`. Changing this parameter will create a new resource.
         */
        sslCertPassword?: pulumi.Input<string>;
        /**
         * Specifies whether to enable SSL connection.
         * Changing this parameter will create a new resource.
         */
        sslEnabled?: pulumi.Input<boolean>;
        /**
         * Specifies subnet ID of database when it is a RDS database.
         * It is mandatory when `direction` is `down`. Changing this parameter will create a new resource.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Specifies the user name of database.
         * Changing this parameter will create a new resource.
         */
        user: pulumi.Input<string>;
    }

    export interface JobLimitSpeed {
        /**
         * Specifies the time to end speed limit, this time is UTC time. The input must
         * end at 59 minutes, the format is `hh:mm`, for example: 15:59. Changing this parameter will create a new resource.
         */
        endTime: pulumi.Input<string>;
        /**
         * Specifies the transmission speed, the value range is 1 to 9999, unit: `MB/s`.
         * Changing this parameter will create a new resource.
         */
        speed: pulumi.Input<string>;
        /**
         * Specifies the time to start speed limit, this time is UTC time. The start
         * time is the whole hour, if there is a minute, it will be ignored, the format is `hh:mm`, and the hour number
         * is two digits, for example: 01:00. Changing this parameter will create a new resource.
         */
        startTime: pulumi.Input<string>;
    }

    export interface JobSourceDb {
        /**
         * Specifies the engine type of database. Changing this parameter will
         * create a new resource. The options are as follows: `mysql`, `mongodb`, `gaussdbv5`.
         */
        engineType: pulumi.Input<string>;
        /**
         * Specifies the instance id of database when it is a RDS database.
         * Changing this parameter will create a new resource.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Specifies the IP of database. Changing this parameter will create a new resource.
         */
        ip: pulumi.Input<string>;
        /**
         * Specifies the job name. The name consists of 4 to 50 characters, starting with
         * a letter. Only letters, digits, underscores (\_) and hyphens (-) are allowed.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the password of database.
         * Changing this parameter will create a new resource.
         */
        password: pulumi.Input<string>;
        /**
         * Specifies the port of database. Changing this parameter will create a new resource.
         */
        port: pulumi.Input<number>;
        /**
         * Specifies the region which the database belongs when it is a RDS database.
         * Changing this parameter will create a new resource.
         */
        region?: pulumi.Input<string>;
        /**
         * Specifies the checksum of SSL certificate content.
         * It is mandatory when `sslEnabled` is `true`. Changing this parameter will create a new resource.
         */
        sslCertCheckSum?: pulumi.Input<string>;
        /**
         * Specifies the SSL certificate content, encrypted with base64.
         * It is mandatory when `sslEnabled` is `true`. Changing this parameter will create a new resource.
         */
        sslCertKey?: pulumi.Input<string>;
        /**
         * Specifies SSL certificate name.
         * It is mandatory when `sslEnabled` is `true`. Changing this parameter will create a new resource.
         */
        sslCertName?: pulumi.Input<string>;
        /**
         * Specifies SSL certificate password. It is mandatory when
         * `sslEnabled` is `true` and the certificate file suffix is `.p12`. Changing this parameter will create a new resource.
         */
        sslCertPassword?: pulumi.Input<string>;
        /**
         * Specifies whether to enable SSL connection.
         * Changing this parameter will create a new resource.
         */
        sslEnabled?: pulumi.Input<boolean>;
        /**
         * Specifies subnet ID of database when it is a RDS database.
         * It is mandatory when `direction` is `down`. Changing this parameter will create a new resource.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * Specifies the user name of database.
         * Changing this parameter will create a new resource.
         */
        user: pulumi.Input<string>;
    }
}

export namespace Dws {
    export interface ClusterEndpoint {
        /**
         * (Optional, String) Private network connection information.
         */
        connectInfo?: pulumi.Input<string>;
        /**
         * (Optional, String)
         * JDBC URL. The following is the default format:
         * jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
         */
        jdbcUrl?: pulumi.Input<string>;
    }

    export interface ClusterPublicEndpoint {
        /**
         * (Optional, String)
         * JDBC URL. The following is the default format:
         * jdbc:postgresql://< public_connect_info>/<YOUR_DATABASE_NAME>
         */
        jdbcUrl?: pulumi.Input<string>;
        /**
         * (Optional, String)
         * Public network connection information.
         */
        publicConnectInfo?: pulumi.Input<string>;
    }

    export interface ClusterPublicIp {
        /**
         * EIP ID.
         */
        eipId?: pulumi.Input<string>;
        /**
         * Binding type of an EIP. The value can be either of the following:
         * autoAssign not_use bindExisting The default value is not_use.
         */
        publicBindType?: pulumi.Input<string>;
    }

}

export namespace Ecs {
    export interface GetInstanceSchedulerHintArgs {
        /**
         * The UUID of a Server Group where the instance will be placed into.
         */
        group?: pulumi.Input<string>;
    }

    export interface GetInstanceSchedulerHint {
        /**
         * The UUID of a Server Group where the instance will be placed into.
         */
        group?: string;
    }

    export interface InstanceBandwidth {
        /**
         * Specifies the bandwidth billing mode. The value can be *traffic* or *bandwidth*.
         * Changing this creates a new instance.
         */
        chargeMode?: pulumi.Input<string>;
        /**
         * Specifies the **shared** bandwidth id. This parameter is mandatory when
         * `shareType` is set to **WHOLE**. Changing this creates a new instance.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the bandwidth sharing type. Changing this creates a new instance.
         * Possible values are as follows:
         * + **PER**: Dedicated bandwidth
         * + **WHOLE**: Shared bandwidth
         */
        shareType: pulumi.Input<string>;
        /**
         * Specifies the bandwidth size. The value ranges from 1 to 300 Mbit/s.
         * This parameter is mandatory when `shareType` is set to **PER**. Changing this creates a new instance.
         */
        size?: pulumi.Input<number>;
    }

    export interface InstanceBlockDevice {
        bootIndex?: pulumi.Input<number>;
        deleteOnTermination?: pulumi.Input<boolean>;
        destinationType?: pulumi.Input<string>;
        guestFormat?: pulumi.Input<string>;
        sourceType: pulumi.Input<string>;
        /**
         * Specifies the network UUID to attach to the instance.
         * Changing this creates a new instance.
         */
        uuid?: pulumi.Input<string>;
        volumeSize?: pulumi.Input<number>;
    }

    export interface InstanceDataDisk {
        /**
         * Specifies the bandwidth size. The value ranges from 1 to 300 Mbit/s.
         * This parameter is mandatory when `shareType` is set to **PER**. Changing this creates a new instance.
         */
        size: pulumi.Input<number>;
        snapshotId?: pulumi.Input<string>;
        /**
         * Specifies the ECS data disk type, which must be one of available disk types,
         * contains of *SSD*, *GPSSD* and *SAS*. Changing this creates a new instance.
         */
        type: pulumi.Input<string>;
    }

    export interface InstanceNetwork {
        /**
         * Specifies if this network should be used for provisioning access.
         * Accepts true or false. Defaults to false.
         */
        accessNetwork?: pulumi.Input<boolean>;
        /**
         * Specifies a fixed IPv4 address to be used on this network.
         * Changing this creates a new instance.
         */
        fixedIpV4?: pulumi.Input<string>;
        fixedIpV6?: pulumi.Input<string>;
        /**
         * Specifies whether the IPv6 function is enabled for the nic.
         * Defaults to false. Changing this creates a new instance.
         */
        ipv6Enable?: pulumi.Input<boolean>;
        mac?: pulumi.Input<string>;
        port?: pulumi.Input<string>;
        /**
         * Specifies whether the ECS processes only traffic that is destined specifically
         * for it. This function is enabled by default but should be disabled if the ECS functions as a SNAT server or has a
         * virtual IP address bound to it.
         */
        sourceDestCheck?: pulumi.Input<boolean>;
        /**
         * Specifies the network UUID to attach to the instance.
         * Changing this creates a new instance.
         */
        uuid?: pulumi.Input<string>;
    }

    export interface InstanceSchedulerHint {
        /**
         * Specifies the ID of DeH.
         * This parameter takes effect only when the value of tenancy is dedicated. Changing this creates a new instance.
         */
        dehId?: pulumi.Input<string>;
        faultDomain?: pulumi.Input<string>;
        /**
         * Specifies a UUID of a Server Group.
         * The instance will be placed into that group. Changing this creates a new instance.
         */
        group?: pulumi.Input<string>;
        /**
         * Specifies the tenancy specifies whether the ECS is to be created on a
         * Dedicated Host
         * (DeH) or in a shared pool. Changing this creates a new instance.
         */
        tenancy?: pulumi.Input<string>;
    }

    export interface InstanceVolumeAttached {
        bootIndex?: pulumi.Input<number>;
        pciAddress?: pulumi.Input<string>;
        /**
         * Specifies the bandwidth size. The value ranges from 1 to 300 Mbit/s.
         * This parameter is mandatory when `shareType` is set to **PER**. Changing this creates a new instance.
         */
        size?: pulumi.Input<number>;
        /**
         * Specifies the ECS data disk type, which must be one of available disk types,
         * contains of *SSD*, *GPSSD* and *SAS*. Changing this creates a new instance.
         */
        type?: pulumi.Input<string>;
        volumeId?: pulumi.Input<string>;
    }

}

export namespace Eip {
}

export namespace Elb {
    export interface PoolPersistence {
        /**
         * The name of the cookie if persistence mode is set appropriately. Required
         * if `type = APP_COOKIE`.
         */
        cookieName?: pulumi.Input<string>;
        /**
         * Specifies the sticky session timeout duration in minutes. This parameter is
         * invalid when type is set to APP_COOKIE. The value range varies depending on the protocol of the backend server group:
         * + When the protocol of the backend server group is TCP or UDP, the value ranges from 1 to 60.
         * + When the protocol of the backend server group is HTTP or HTTPS, the value ranges from 1 to 1440.
         */
        timeout?: pulumi.Input<number>;
        /**
         * The type of persistence mode. The current specification supports SOURCE_IP,
         * HTTP_COOKIE, and APP_COOKIE.
         */
        type: pulumi.Input<string>;
    }

}

export namespace Evs {
    export interface VolumeAttachment {
        device?: pulumi.Input<string>;
        /**
         * A resource ID in UUID format.
         */
        id?: pulumi.Input<string>;
        instanceId?: pulumi.Input<string>;
    }
}

export namespace FunctionGraph {
    export interface FunctionCustomImage {
        /**
         * Specifies the URL of SWR image, the URL must start with `swr.`.
         * Changing this will create a new resource.
         */
        url: pulumi.Input<string>;
    }

    export interface FunctionFuncMount {
        /**
         * Specifies the function access path.
         */
        localMountPath: pulumi.Input<string>;
        /**
         * Specifies the ID of the mounted resource (corresponding cloud service).
         */
        mountResource: pulumi.Input<string>;
        /**
         * Specifies the remote mount path. Example: 192.168.0.12:/data.
         */
        mountSharePath: pulumi.Input<string>;
        /**
         * Specifies the mount type. Options: sfs, sfsTurbo, and ecs.
         */
        mountType: pulumi.Input<string>;
        status?: pulumi.Input<string>;
    }

    export interface TriggerApig {
        /**
         * Specifies the API name. Changing this will create a new trigger resource.
         */
        apiName: pulumi.Input<string>;
        /**
         * Specifies the API environment name.
         * Changing this will create a new trigger resource.
         */
        envName: pulumi.Input<string>;
        /**
         * Specifies the ID of the APIG group to which the API belongs.
         * Changing this will create a new trigger resource.
         */
        groupId: pulumi.Input<string>;
        /**
         * Specifies the ID of the APIG dedicated instance to which the API belongs.
         * Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
         */
        instanceId?: pulumi.Input<string>;
        /**
         * Specifies the request protocol of the API. The valid value are
         * **HTTP** and **HTTPS**. Default to **HTTPS**. Changing this will create a new trigger resource.
         */
        requestProtocol?: pulumi.Input<string>;
        /**
         * Specifies the security authentication mode. The valid values
         * are **NONE**, **APP** and **IAM**, default to **IAM**. Changing this will create a new trigger resource.
         */
        securityAuthentication?: pulumi.Input<string>;
        /**
         * Specifies the timeout for request sending. The valid value is range form
         * `1` to `60,000`, default to `5,000`. Changing this will create a new trigger resource.
         */
        timeout?: pulumi.Input<number>;
    }

    export interface TriggerDis {
        /**
         * Specifies the maximum volume of data that can be obtained for a single
         * request, in Byte. Only the records with a size smaller than this value can be obtained.
         * The valid value is range from `1,024` to `4,194,304`.
         * Changing this will create a new trigger resource.
         */
        maxFetchBytes: pulumi.Input<number>;
        /**
         * Specifies the interval at which data is pulled from the specified stream.
         * The valid value is range from `2` to `60,000`.
         * Changing this will create a new trigger resource.
         */
        pullPeriod: pulumi.Input<number>;
        /**
         * Specifies the determines whether to pull data only after the data pulled
         * in the last period has been processed.
         * Changing this will create a new trigger resource.
         */
        serialEnable: pulumi.Input<boolean>;
        /**
         * Specifies the type of starting position for DIS queue.
         * The valid values are as follows:
         * + **TRIM_HORIZON**: Starts reading from the earliest data stored in the partitions.
         * + **LATEST**: Starts reading from the latest data stored in the partitions.
         * Changing this will create a new trigger resource.
         */
        startingPosition: pulumi.Input<string>;
        /**
         * Specifies the name of the DIS stream resource.
         * Changing this will create a new trigger resource.
         */
        streamName: pulumi.Input<string>;
    }

    export interface TriggerKafka {
        /**
         * Specifies the The number of messages consumed from the topic each time.
         * The valid value is range from `1` to `1,000`. Defaults to `100`.
         * Changing this will create a new trigger resource.
         */
        batchSize?: pulumi.Input<number>;
        /**
         * Specifies the ID of the APIG dedicated instance to which the API belongs.
         * Required if the `type` is `DEDICATEDGATEWAY`. Changing this will create a new trigger resource.
         */
        instanceId: pulumi.Input<string>;
        /**
         * Specifies one or more topic IDs of DMS kafka instance.
         * Changing this will create a new trigger resource.
         */
        topicIds: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface TriggerLts {
        /**
         * Specifies the log group ID.
         * Changing this will create a new trigger resource.
         */
        logGroupId: pulumi.Input<string>;
        /**
         * Specifies the log stream ID.
         * Changing this will create a new trigger resource.
         */
        logTopicId: pulumi.Input<string>;
    }

    export interface TriggerObs {
        /**
         * Specifies the OBS bucket name.
         * Changing this will create a new trigger resource.
         */
        bucketName: pulumi.Input<string>;
        /**
         * Specifies the event notification name.
         * Changing this will create a new trigger resource.
         */
        eventNotificationName: pulumi.Input<string>;
        /**
         * Specifies the events that can trigger functions.
         * Changing this will create a new trigger resource.
         * The valid values are as follows:
         * + **ObjectCreated**, **Put**, **Post**, **Copy** and **CompleteMultipartUpload**.
         * + **ObjectRemoved**, **Delete** and **DeleteMarkerCreated**.
         */
        events: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the prefix to limit notifications to objects beginning with this keyword.
         * Changing this will create a new trigger resource.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies the suffix to limit notifications to objects ending with this keyword.
         * Changing this will create a new trigger resource.
         */
        suffix?: pulumi.Input<string>;
    }

    export interface TriggerSmn {
        /**
         * Specifies the Uniform Resource Name (URN) for SMN topic.
         * Changing this will create a new trigger resource.
         */
        topicUrn: pulumi.Input<string>;
    }

    export interface TriggerTimer {
        /**
         * Specifies the event used by the timer to trigger the function.
         * Changing this will create a new trigger resource.
         */
        additionalInformation?: pulumi.Input<string>;
        /**
         * Specifies the trigger name, which can contains of 1 to 64 characters.
         * The name must start with a letter, only letters, digits, hyphens (-) and underscores (_) are allowed.
         * Changing this will create a new trigger resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the time schedule.
         * For the rate type, schedule is composed of time and time unit.
         * The time unit supports minutes (m), hours (h) and days (d).
         * For the corn expression, please refer to the HuaweiCloud
         * [document](https://support.huaweicloud.com/en-us/usermanual-functiongraph/functiongraph_01_0908.html).
         * Changing this will create a new trigger resource.
         */
        schedule: pulumi.Input<string>;
        /**
         * Specifies the type of the time schedule.
         * The valid values are **Rate** and **Cron**.
         * Changing this will create a new trigger resource.
         */
        scheduleType: pulumi.Input<string>;
    }
}

export namespace GaussDB {
    export interface MysqlInstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value ranges from
         * 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
         * the automated backup policy is enabled by default. Backup files are stored for seven days by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
         * HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
         * value: 08:00-09:00, 03:00-04:00.
         */
        startTime: pulumi.Input<string>;
    }

    export interface MysqlInstanceDatastore {
        /**
         * Specifies the database engine. Only "gauss-mysql" is supported now.
         */
        engine: pulumi.Input<string>;
        /**
         * Specifies the database version. Only "8.0" is supported now.
         */
        version: pulumi.Input<string>;
    }

    export interface MysqlInstanceNode {
        /**
         * Indicates the availability zone where the node resides.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the instance name, which can be the same as an existing instance name. The value
         * must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
         * digits, hyphens (-), and underscores (_).
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the private IP address of a node.
         */
        privateReadIp?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
        /**
         * Indicates the node type: master or slave.
         */
        type?: pulumi.Input<string>;
    }

}

export namespace GaussDBforNoSQL {
    export interface CassandraInstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value ranges from
         * 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
         * the automated backup policy is enabled by default. Backup files are stored for seven days by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
         * HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
         * value: 08:00-09:00, 03:00-04:00.
         */
        startTime: pulumi.Input<string>;
    }

    export interface CassandraInstanceDatastore {
        /**
         * Specifies the database engine. Only "GeminiDB-Cassandra" is supported now.
         */
        engine: pulumi.Input<string>;
        /**
         * Specifies the storage engine. Only "rocksDB" is supported now.
         */
        storageEngine: pulumi.Input<string>;
        /**
         * Specifies the database version.
         */
        version: pulumi.Input<string>;
    }

    export interface CassandraInstanceNode {
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the instance name, which can be the same as an existing instance name. The value
         * must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
         * digits, hyphens (-), and underscores (_).
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the private IP address of a node.
         */
        privateIp?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
        /**
         * Indicates whether the node support reduce or not.
         */
        supportReduce?: pulumi.Input<boolean>;
    }

    export interface InfluxInstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value ranges from
         * **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
         * transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
         * HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
         * value: 08:00-09:00, 03:00-04:00.
         */
        startTime: pulumi.Input<string>;
    }

    export interface InfluxInstanceDatastore {
        /**
         * Specifies the database engine. Only **influxdb** is supported now.
         */
        engine: pulumi.Input<string>;
        /**
         * Specifies the storage engine. Only **rocksDB** is supported now.
         */
        storageEngine: pulumi.Input<string>;
        /**
         * Specifies the database version.
         */
        version: pulumi.Input<string>;
    }

    export interface InfluxInstanceNode {
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the instance name, which can be the same as an existing instance name. The
         * value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
         * letters, digits, hyphens (-), and underscores (_).
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the private IP address of a node.
         */
        privateIp?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
        /**
         * Indicates whether the node support reduce or not.
         */
        supportReduce?: pulumi.Input<boolean>;
    }

    export interface MongoInstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value ranges from
         * **0** to **35**. If this parameter is set to **0**, the automated backup policy is not set. If this parameter is not
         * transferred, the automated backup policy is enabled by default. Backup files are stored for seven days by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
         * HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
         * value: 08:00-09:00, 03:00-04:00.
         */
        startTime: pulumi.Input<string>;
    }

    export interface MongoInstanceDatastore {
        /**
         * Specifies the database engine. Only **mongodb** is supported now.
         */
        engine: pulumi.Input<string>;
        /**
         * Specifies the storage engine. Only **rocksDB** is supported now.
         */
        storageEngine: pulumi.Input<string>;
        /**
         * Specifies the database version.
         */
        version: pulumi.Input<string>;
    }

    export interface MongoInstanceNode {
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the instance name, which can be the same as an existing instance name. The
         * value must be **4** to **64** characters in length and start with a letter. It is case-sensitive and can contain only
         * letters, digits, hyphens (-), and underscores (_).
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the private IP address of a node.
         */
        privateIp?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
        /**
         * Indicates whether the node support reduce or not.
         */
        supportReduce?: pulumi.Input<boolean>;
    }

    export interface RedisInstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value ranges from
         * 0 to 35. If this parameter is set to 0, the automated backup policy is not set. If this parameter is not transferred,
         * the automated backup policy is enabled by default. Backup files are stored for seven days by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the "hh:mm-HH:MM" format. The current time is in the UTC format. The
         * HH value must be 1 greater than the hh value. The values of mm and MM must be the same and must be set to 00. Example
         * value: 08:00-09:00, 03:00-04:00.
         */
        startTime: pulumi.Input<string>;
    }

    export interface RedisInstanceDatastore {
        /**
         * Specifies the database engine. Only "redis" is supported now.
         */
        engine: pulumi.Input<string>;
        /**
         * Specifies the storage engine. Only "rocksDB" is supported now.
         */
        storageEngine: pulumi.Input<string>;
        /**
         * Specifies the database version. Only "5.0" is supported now.
         */
        version: pulumi.Input<string>;
    }

    export interface RedisInstanceNode {
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the instance name, which can be the same as an existing instance name. The value
         * must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
         * digits, hyphens (-), and underscores (_). Chinese characters must be in UTF-8 or Unicode format.
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the private IP address of a node.
         */
        privateIp?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
        /**
         * Indicates whether the node support reduce or not.
         */
        supportReduce?: pulumi.Input<boolean>;
    }

}

export namespace GaussDBforOpenGauss {
    export interface OpengaussInstanceBackupStrategy {
        /**
         * Specifies the number of days to retain the generated backup files. The value ranges from
         * `0` to `732`. If this parameter is set to `0`, the automated backup policy is not set.
         * If this parameter is not transferred, the automated backup policy is enabled by default.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the **hh:mm-HH:MM** format. The current time is in the UTC format. The
         * **HH** value must be `1` greater than the **hh** value. The values of mm and MM must be the same and must be set to
         * **00**. Example value: **08:00-09:00**, **23:00-00:00**.
         */
        startTime: pulumi.Input<string>;
    }

    export interface OpengaussInstanceDatastore {
        /**
         * Specifies the database engine. Only **GaussDB(for openGauss)** is supported
         * now. Changing this parameter will create a new resource.
         */
        engine: pulumi.Input<string>;
        /**
         * Specifies the database version. Defaults to the latest version. Please
         * reference to the API docs for valid options. Changing this parameter will create a new resource.
         */
        version?: pulumi.Input<string>;
    }

    export interface OpengaussInstanceHa {
        /**
         * Specifies the database consistency mode.
         * The valid values are **strong** and **eventual**, not case sensitive.
         * Changing this parameter will create a new resource.
         */
        consistency?: pulumi.Input<string>;
        /**
         * Specifies the database mode.
         * The valid values are **enterprise** and **centralization_standard**.
         * Changing this parameter will create a new resource.
         */
        mode: pulumi.Input<string>;
        /**
         * Specifies the database replication mode.
         * Only **sync** is supported now. Changing this parameter will create a new resource.
         */
        replicationMode: pulumi.Input<string>;
    }

    export interface OpengaussInstanceNode {
        /**
         * Specifies the availability zone information, can be three same or
         * different az like **cn-north-4a,cn-north-4a,cn-north-4a**. Changing this parameter will create a new resource.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the instance name, which can be the same as an existing instance name.
         * The value must be `4` to `64` characters in length and start with a letter. It is case-sensitive and can contain only
         * letters, digits, hyphens (-), and underscores (_).
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the node role.
         * + **master**.
         * + **slave**.
         */
        role?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
    }

    export interface OpengaussInstanceVolume {
        /**
         * Specifies the volume size (in gigabytes). The valid value is range form `40` to `4,000`.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. Only **ULTRAHIGH** is supported now.
         * Changing this parameter will create a new resource.
         */
        type: pulumi.Input<string>;
    }

}

export namespace Iam {
    export interface AclIpCidr {
        /**
         * Specifies the IPv4 CIDR block, for example, **192.168.0.0/24**.
         */
        cidr: pulumi.Input<string>;
        /**
         * Specifies a description about an IP address range. This parameter can contain a
         * maximum of 255 characters and the following charactors are not allowed:**@#%^&*<>\\**.
         */
        description?: pulumi.Input<string>;
    }

    export interface AclIpRange {
        /**
         * Specifies a description about an IP address range. This parameter can contain a
         * maximum of 255 characters and the following charactors are not allowed:**@#%^&*<>\\**.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the Ip address range, for example, **0.0.0.0-255.255.255.0**.
         */
        range: pulumi.Input<string>;
    }

    export interface AgencyProjectRole {
        /**
         * Specifies the name of project.
         */
        project: pulumi.Input<string>;
        /**
         * Specifies an array of role names.
         */
        roles: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ProviderAccessConfig {
        /**
         * Specifies the access type of the identity provider.
         * Available options are:
         * + `program`: programmatic access only.
         * + `programConsole`: programmatic access and management console access.
         */
        accessType: pulumi.Input<string>;
        /**
         * Specifies the authorization endpoint of the OpenID Connect identity
         * provider. This field is required only if the access type is set to `programConsole`.
         */
        authorizationEndpoint?: pulumi.Input<string>;
        /**
         * Specifies the ID of a client registered with the OpenID Connect identity provider.
         */
        clientId: pulumi.Input<string>;
        /**
         * Specifies the URL of the identity provider.
         * This field corresponds to the iss field in the ID token.
         */
        providerUrl: pulumi.Input<string>;
        /**
         * Response mode.
         * Valid values is *form_post* and *fragment*, default value is *form_post*.
         * This field is required only if the access type is set to `programConsole`.
         */
        responseMode?: pulumi.Input<string>;
        /**
         * Response type. Valid values is *id_token*, default value is *id_token*.
         * This field is required only if the access type is set to `programConsole`.
         */
        responseType?: pulumi.Input<string>;
        /**
         * Specifies the scopes of authorization requests. It is an array of one or more scopes.
         * Valid values are *openid*, *email*, *profile* and other values defined by you.
         * This field is required only if the access type is set to `programConsole`.
         */
        scopes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Public key used to sign the ID token of the OpenID Connect identity provider.
         * This field is required only if the protocol is set to *oidc*.
         */
        signingKey: pulumi.Input<string>;
    }

    export interface ProviderConversionRule {
        /**
         * The federated user information on the cloud platform.
         */
        locals?: pulumi.Input<pulumi.Input<inputs.Iam.ProviderConversionRuleLocal>[]>;
        /**
         * The description of the identity provider.
         */
        remotes?: pulumi.Input<pulumi.Input<inputs.Iam.ProviderConversionRuleRemote>[]>;
    }

    export interface ProviderConversionRuleLocal {
        /**
         * The user group to which the federated user belongs on the cloud platform.
         */
        group?: pulumi.Input<string>;
        /**
         * The name of a federated user on the cloud platform.
         */
        username?: pulumi.Input<string>;
    }

    export interface ProviderConversionRuleRemote {
        /**
         * The attribute in the IDP assertion.
         */
        attribute?: pulumi.Input<string>;
        /**
         * The condition of conversion rule.
         */
        condition?: pulumi.Input<string>;
        /**
         * The rule is matched only if the specified strings appear in the attribute type.
         */
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

}

export namespace Iec {
    export interface NetworkAclNetwork {
        /**
         * Specifies the id of the iec subnet.
         */
        subnetId: pulumi.Input<string>;
        /**
         * Specifies the id of the iec vpc.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface SecurityGroupSecurityGroupRule {
        /**
         * Specifies the description of the iec security group. description must be
         * 0 to 64 characters in length, and does not contain angle brackets (<) and (>). Changing this parameter will creates a
         * new iec security group resource.
         */
        description?: pulumi.Input<string>;
        /**
         * The direction of the iec security group rules.
         */
        direction?: pulumi.Input<string>;
        /**
         * The layer 3 protocol type.
         */
        ethertype?: pulumi.Input<string>;
        /**
         * The id of the iec security group rules.
         */
        id?: pulumi.Input<string>;
        /**
         * The higher part of the allowed port range.
         */
        portRangeMax?: pulumi.Input<number>;
        /**
         * The lower part of the allowed port range.
         */
        portRangeMin?: pulumi.Input<number>;
        /**
         * The layer 4 protocol type.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The remote group id of the iec security group rules.
         */
        remoteGroupId?: pulumi.Input<string>;
        /**
         * The remote CIDR of the iec security group rules.
         */
        remoteIpPrefix?: pulumi.Input<string>;
        /**
         * The id of the iec security group rules.
         */
        securityGroupId?: pulumi.Input<string>;
    }

    export interface ServerCoverageSite {
        /**
         * Specifies the operator of the IEC site.
         */
        operator: pulumi.Input<string>;
        /**
         * Specifies the ID of IEC site.
         */
        siteId: pulumi.Input<string>;
    }

    export interface ServerDataDisk {
        /**
         * Specifies the size of data disk for the IEC server binding. The value range is
         * 10 to 500 in GB. Changing this parameter creates a new IEC server resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the type of data disk for the IEC server binding. Valid value is
         * *SAS*(high I/O disk type). Changing this parameter creates a new IEC server resource.
         */
        type: pulumi.Input<string>;
    }

    export interface ServerNic {
        /**
         * The IPv4 address of the server on that network.
         */
        address?: pulumi.Input<string>;
        /**
         * The MAC address of the NIC on that network.
         */
        mac?: pulumi.Input<string>;
        /**
         * The port ID corresponding to the IP address on that network.
         */
        port?: pulumi.Input<string>;
    }

    export interface ServerVolumeAttached {
        /**
         * The volume boot index on that attachment.
         */
        bootIndex?: pulumi.Input<string>;
        /**
         * The device name in the IEC server.
         */
        device?: pulumi.Input<string>;
        /**
         * Specifies the size of data disk for the IEC server binding. The value range is
         * 10 to 500 in GB. Changing this parameter creates a new IEC server resource.
         */
        size?: pulumi.Input<number>;
        /**
         * Specifies the type of data disk for the IEC server binding. Valid value is
         * *SAS*(high I/O disk type). Changing this parameter creates a new IEC server resource.
         */
        type?: pulumi.Input<string>;
        /**
         * The volume ID on that attachment.
         */
        volumeId?: pulumi.Input<string>;
    }

}

export namespace IoTDA {
    export interface DataforwardingRuleTarget {
        /**
         * Specifies the detail of AMQP forwards. It is required when type
         * is `AMQP_FORWARDING`. The amqpForwarding structure is documented below.
         */
        amqpForwarding?: pulumi.Input<inputs.IoTDA.DataforwardingRuleTargetAmqpForwarding>;
        /**
         * Specifies the detail of the DIS forwards. It is required when type
         * is `DIS_FORWARDING`. The disForwarding structure is documented below.
         */
        disForwarding?: pulumi.Input<inputs.IoTDA.DataforwardingRuleTargetDisForwarding>;
        /**
         * Specifies the detail of the HTTP forwards. It is required when type
         * is `HTTP_FORWARDING`. The httpForwarding structure is documented below.
         */
        httpForwarding?: pulumi.Input<inputs.IoTDA.DataforwardingRuleTargetHttpForwarding>;
        /**
         * The resource ID in UUID format.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the detail of the KAFKA forwards. It is required when type
         * is `DMS_KAFKA_FORWARDING`. The properties structure is documented below.
         */
        kafkaForwarding?: pulumi.Input<inputs.IoTDA.DataforwardingRuleTargetKafkaForwarding>;
        /**
         * Specifies the detail of the OBS forwards. It is required when type
         * is `OBS_FORWARDING`. The obsForwarding structure is documented below.
         */
        obsForwarding?: pulumi.Input<inputs.IoTDA.DataforwardingRuleTargetObsForwarding>;
        /**
         * Specifies the type of forwarding target. The options are as follows:
         * + **HTTP_FORWARDING**: The platform can push specified device data to a Third-party application (HTTP push).
         * You can set different addresses that different types of device data are pushed to.
         * + **DIS_FORWARDING**: DIS provides efficient collection, transmission, and distribution of real-time data. It also
         * provides an abundant selection of APIs to help you quickly create real-time data applications.
         * + **OBS_FORWARDING**: OBS is a stable, secure, cloud storage service that is scalable, efficient and easy-to-use.
         * It allows you to store any amount of unstructured data in any format, and provides REST APIs so you can access your
         * data from anywhere.
         * + **AMQP_FORWARDING**: AMQP provides a scalable, distributed message queue that supports high throughput with low
         * latency. AMQP is ready from the get-go and is O&M free.
         * + **DMS_KAFKA_FORWARDING**: Distributed Message Service (DMS) for Kafka features high throughput, concurrency, and
         * scalability. It is suitable for real-time data transmission, stream data processing, system decoupling,
         * and traffic balancing.
         */
        type: pulumi.Input<string>;
    }

    export interface DataforwardingRuleTargetAmqpForwarding {
        /**
         * Specifies the AMQP Queue name.
         */
        queueName: pulumi.Input<string>;
    }

    export interface DataforwardingRuleTargetDisForwarding {
        /**
         * Specifies the project ID to which the KAFKA belongs.
         * If omitted, the default project in the region will be used.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Specifies the region to which the KAFKA belongs.
         */
        region: pulumi.Input<string>;
        /**
         * Specifies the DIS stream ID.
         */
        streamId: pulumi.Input<string>;
    }

    export interface DataforwardingRuleTargetHttpForwarding {
        /**
         * Specifies the Push URL. The request method must is post.
         */
        url: pulumi.Input<string>;
    }

    export interface DataforwardingRuleTargetKafkaForwarding {
        /**
         * Specifies the list of the connected service addresses.
         * The addresses structure is documented below.
         */
        addresses: pulumi.Input<pulumi.Input<inputs.IoTDA.DataforwardingRuleTargetKafkaForwardingAddress>[]>;
        /**
         * Specifies the password.
         */
        password?: pulumi.Input<string>;
        /**
         * Specifies the project ID to which the KAFKA belongs.
         * If omitted, the default project in the region will be used.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Specifies the region to which the KAFKA belongs.
         */
        region: pulumi.Input<string>;
        /**
         * Specifies the topic.
         */
        topic: pulumi.Input<string>;
        /**
         * Specifies the SASL user name.
         */
        userName?: pulumi.Input<string>;
    }

    export interface DataforwardingRuleTargetKafkaForwardingAddress {
        /**
         * Specifies the domain of the connected service address.
         * Exactly one of `ip` or `domain` must be provided.
         */
        domain?: pulumi.Input<string>;
        /**
         * Specifies the IP of the connected service address.
         * Exactly one of `ip` or `domain` must be provided.
         */
        ip?: pulumi.Input<string>;
        /**
         * Specifies the port of the connected service address.
         */
        port: pulumi.Input<number>;
    }

    export interface DataforwardingRuleTargetObsForwarding {
        /**
         * Specifies the OBS Bucket.
         */
        bucket: pulumi.Input<string>;
        /**
         * Specifies the custom directory for storing channel files. The ID contains a
         * maximum of 256 characters. Multi-level directories can be separated by (/), and cannot start or end with a slash (/),
         * and cannot contain more than two adjacent slashes (/). Only letters, digits, hyphens (-), underscores (_), slash (/)
         * and braces ({}) are allowed. Braces can be used only for the time template parameters. For example, if the custom
         * directory is in the format of {YYYY}/{MM}/{DD}/{HH}, data is generated in the directory based on the current
         * time(for example, 2022/06/14/10) when data is forwarded.
         */
        customDirectory?: pulumi.Input<string>;
        /**
         * Specifies the project ID to which the KAFKA belongs.
         * If omitted, the default project in the region will be used.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Specifies the region to which the KAFKA belongs.
         */
        region: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleAction {
        /**
         * Specifies the detail of device alarm. It is required when type
         * is `DEVICE_ALARM`. The deviceAlarm structure is documented below.
         */
        deviceAlarm?: pulumi.Input<inputs.IoTDA.DeviceLinkageRuleActionDeviceAlarm>;
        /**
         * Specifies the detail of device command. It is required when type
         * is `DEVICE_CMD`. The deviceCommand structure is documented below.
         */
        deviceCommand?: pulumi.Input<inputs.IoTDA.DeviceLinkageRuleActionDeviceCommand>;
        /**
         * Specifies the detail of SMN notifications. It is required when type
         * is `SMN_FORWARDING`. The smnForwarding structure is documented below.
         */
        smnForwarding?: pulumi.Input<inputs.IoTDA.DeviceLinkageRuleActionSmnForwarding>;
        /**
         * Specifies the type of the alarm. The options are as follows:
         * + **fault**: Report alarms.
         * + **recovery**: Clear alarms.
         */
        type: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleActionDeviceAlarm {
        /**
         * Specifies the description of the alarm.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the name of the alarm.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the severity level of the alarm.
         * The valid values are **warning**, **minor**, **major** and **critical**.
         */
        severity: pulumi.Input<string>;
        /**
         * Specifies the type of the alarm. The options are as follows:
         * + **fault**: Report alarms.
         * + **recovery**: Clear alarms.
         */
        type: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleActionDeviceCommand {
        /**
         * Specifies the command parameters, in json format.
         * + Example of device command using LWM2M protocol: `{"value":"1"}`, there are key-value pairs, each key is the
         * parameter name of the command in the product model.
         * + Example of device command using MQTT protocol: `{"header": {"mode": "ACK","from": "/users/testUser","method":
         * "SET_TEMPERATURE_READ_PERIOD","to":"/devices/{device_id }/services/{service_id}"},"body": {"value" : "1"}}`.
         * - **mode**: Required, whether the device needs to reply to the confirmation message after receiving the command.
         * The default is ACK mode. `ACK` indicates that the confirmation message needs to be replied,
         * `NOACK` indicates that the confirmation message does not need to be replied.
         * - **from**: Optional, the address of the command sender.
         * When the App initiates a request, the format is /users/{userId},
         * when the application server initiates a request, the format is /{serviceName},
         * and when the IoT platform initiates a request, the format is /cloud/{serviceName}.
         * - **to**: optional, the address of the command receiver, the format is /devices/{device_id}/services/{service_id}.
         * - **method**: optional, the command name defined in the product model.
         * - **body**: optional, the message body of the command, which contains key-value pairs, each key is the parameter
         * name of the command in the product model. The specific format requires application and device conventions.
         */
        commandBody: pulumi.Input<string>;
        /**
         * Specifies the command name.
         */
        commandName: pulumi.Input<string>;
        /**
         * Specifies the device id which excutes the command.
         */
        deviceId: pulumi.Input<string>;
        /**
         * Specifies the service id to which the command belongs.
         */
        serviceId: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleActionSmnForwarding {
        /**
         * Specifies the message content.
         */
        messageContent: pulumi.Input<string>;
        /**
         * Specifies the message title.
         */
        messageTitle: pulumi.Input<string>;
        /**
         * Specifies the project ID to which the SMN belongs.
         * If omitted, the default project in the region will be used.
         */
        projectId?: pulumi.Input<string>;
        /**
         * Specifies the region to which the SMN belongs.
         */
        region: pulumi.Input<string>;
        /**
         * Specifies the topic name of the SMN.
         */
        topicName: pulumi.Input<string>;
        /**
         * Specifies the topic URN of the SMN.
         */
        topicUrn: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleEffectivePeriod {
        /**
         * Specifies a list of days of week, separated by commas. 1 represents Sunday,
         * 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
         */
        daysOfWeek?: pulumi.Input<string>;
        /**
         * Specifies the end time, in the format: `HH:mm`.
         * For example: `10:00`. If the end time is the same as the start time, the effective period is the whole day.
         */
        endTime: pulumi.Input<string>;
        /**
         * Specifies the start time, in the format: `HH:mm`.
         * For example: `03:00`.
         */
        startTime: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleTrigger {
        /**
         * Specifies the condition triggered at specified time every day. It is
         * required when type is `DAILY_TIMER`. The dailyTimerCondition structure is
         * documented below.
         */
        dailyTimerCondition?: pulumi.Input<inputs.IoTDA.DeviceLinkageRuleTriggerDailyTimerCondition>;
        /**
         * Specifies the condition triggered upon the property of device. It is
         * required when type is `DEVICE_DATA`. The deviceDataCondition structure is
         * documented below.
         */
        deviceDataCondition?: pulumi.Input<inputs.IoTDA.DeviceLinkageRuleTriggerDeviceDataCondition>;
        /**
         * Specifies the condition triggered by policy. It is required when type
         * is `SIMPLE_TIMER`. The simpleTimerCondition structure is documented below.
         */
        simpleTimerCondition?: pulumi.Input<inputs.IoTDA.DeviceLinkageRuleTriggerSimpleTimerCondition>;
        /**
         * Specifies the type of the alarm. The options are as follows:
         * + **fault**: Report alarms.
         * + **recovery**: Clear alarms.
         */
        type: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleTriggerDailyTimerCondition {
        /**
         * Specifies a list of days of week, separated by commas. 1 represents Sunday,
         * 2 represents Monday, and so on. Defaults to `1,2,3,4,5,6,7` (every day).
         */
        daysOfWeek?: pulumi.Input<string>;
        /**
         * Specifies the start time, in the format: `HH:mm`.
         * For example: `03:00`.
         */
        startTime: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleTriggerDeviceDataCondition {
        /**
         * Specifies data validity period, Unit is `seconds`. Defaults to `300`.
         * For example, if Data Validity Period is set to 30 minutes, a device generates data at 19:00, and the platform receives
         * the data at 20:00, the action is nottriggered regardless of whether the conditions are met.
         */
        dataValidatiyPeriod?: pulumi.Input<number>;
        /**
         * Specifies the device id which excutes the command.
         */
        deviceId?: pulumi.Input<string>;
        /**
         * Specifies the data comparison operator. The valid values are: **>**, **<**,
         * **>=**, **<=**, **=** and **between**.
         */
        operator: pulumi.Input<string>;
        /**
         * Specifies the path of the device property, in the format: **service_id/DataProperty**.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the product id, all devices belonging to this product will trigger
         * the rule. Exactly one of `deviceId` or `productId` must be provided.
         */
        productId?: pulumi.Input<string>;
        /**
         * Specifies the trigger strategy. The options are as follows:
         * + **pulse**: When the data reported by the device meets the conditions, the rule can be triggered.
         * + **reverse**: Repetition suppression. For example, if an alarm is configured to be triggered when the battery level
         * is lower than 20%, the alarm will be triggered once the battery initially drops below 20% but will not be triggered
         * again each time the battery drops to a lower level.
         */
        triggerStrategy?: pulumi.Input<string>;
        /**
         * Specifies the Rvalue of a data comparison expression. When the `operator` is `between`,
         * the Rvalue represents the minimum and maximum values, separated by commas, such as "20,30",
         * which means greater than or equal to 20 and less than 30.
         */
        value: pulumi.Input<string>;
    }

    export interface DeviceLinkageRuleTriggerSimpleTimerCondition {
        /**
         * Specifies total number of repetition.
         */
        repeatCount: pulumi.Input<number>;
        /**
         * Specifies the interval of repetition, Unit is `minutes`.
         */
        repeatInterval: pulumi.Input<number>;
        /**
         * Specifies the start time, in the format: `HH:mm`.
         * For example: `03:00`.
         */
        startTime: pulumi.Input<string>;
    }

    export interface ProductService {
        /**
         * Specifies the list of commands for the service.
         * The commands structure is documented below.
         */
        commands?: pulumi.Input<pulumi.Input<inputs.IoTDA.ProductServiceCommand>[]>;
        /**
         * Specifies the description of the parameter. The description contains a maximum of
         * 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail
         * characters are allowed: `?'#().,&%@!`.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the service ID. The ID contains a maximum of 64 characters. Only letters,
         * Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are allowed: `?'#().,&%@!`.
         */
        id: pulumi.Input<string>;
        /**
         * Specifies the list of properties for the service.
         * The properties structure is documented below.
         */
        properties?: pulumi.Input<pulumi.Input<inputs.IoTDA.ProductServiceProperty>[]>;
        /**
         * Specifies the type of the parameter.
         * The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
         */
        type?: pulumi.Input<string>;
    }

    export interface ProductServiceCommand {
        /**
         * Specifies the name of the parameter. The name contains a maximum of 64 characters.
         * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
         * allowed: `?'#().,&%@!`.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the list of parameters for the command.
         * The paras structure is documented below.
         */
        paras?: pulumi.Input<pulumi.Input<inputs.IoTDA.ProductServiceCommandPara>[]>;
        /**
         * Specifies the list of responses for the command.
         * The responses structure is documented below.
         */
        responses?: pulumi.Input<pulumi.Input<inputs.IoTDA.ProductServiceCommandResponse>[]>;
    }

    export interface ProductServiceCommandPara {
        /**
         * Specifies the description of the parameter. The description contains a maximum of
         * 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail
         * characters are allowed: `?'#().,&%@!`.
         */
        description?: pulumi.Input<string>;
        enumLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the max value of the parameter when the `type` is **int** or **decimal**.
         * Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
         */
        max?: pulumi.Input<string>;
        /**
         * Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
         * **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
         */
        maxLength?: pulumi.Input<number>;
        /**
         * Specifies the min value of the parameter when the `type` is **int** or **decimal**.
         * Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
         */
        min?: pulumi.Input<string>;
        /**
         * Specifies the name of the parameter. The name contains a maximum of 64 characters.
         * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
         * allowed: `?'#().,&%@!`.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the step of the parameter when the `type` is **int** or **decimal**.
         * Value range: 0 ~ 2147483647. Defaults to **0**.
         */
        step?: pulumi.Input<number>;
        /**
         * Specifies the type of the parameter.
         * The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the unit of the parameter when the `type` is **int** or **decimal**.
         * The unit contains a maximum of 16 characters.
         */
        unit?: pulumi.Input<string>;
    }

    export interface ProductServiceCommandResponse {
        /**
         * Specifies the description of the parameter. The description contains a maximum of
         * 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail
         * characters are allowed: `?'#().,&%@!`.
         */
        description?: pulumi.Input<string>;
        enumLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the max value of the parameter when the `type` is **int** or **decimal**.
         * Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
         */
        max?: pulumi.Input<string>;
        /**
         * Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
         * **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
         */
        maxLength?: pulumi.Input<number>;
        /**
         * Specifies the min value of the parameter when the `type` is **int** or **decimal**.
         * Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
         */
        min?: pulumi.Input<string>;
        /**
         * Specifies the name of the parameter. The name contains a maximum of 64 characters.
         * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
         * allowed: `?'#().,&%@!`.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the step of the parameter when the `type` is **int** or **decimal**.
         * Value range: 0 ~ 2147483647. Defaults to **0**.
         */
        step?: pulumi.Input<number>;
        /**
         * Specifies the type of the parameter.
         * The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the unit of the parameter when the `type` is **int** or **decimal**.
         * The unit contains a maximum of 16 characters.
         */
        unit?: pulumi.Input<string>;
    }

    export interface ProductServiceProperty {
        /**
         * Specifies the description of the parameter. The description contains a maximum of
         * 128 characters. Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail
         * characters are allowed: `?'#().,&%@!`.
         */
        description?: pulumi.Input<string>;
        enumLists?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the max value of the parameter when the `type` is **int** or **decimal**.
         * Value range: -2147483647 ~ 2147483647. Defaults to **"65535"**.
         */
        max?: pulumi.Input<string>;
        /**
         * Specifies the max length of the parameter when the `type` is **string**, **DateTime**,
         * **jsonObject** or **string list**. Value range: 0 ~ 2147483647. Defaults to **0**.
         */
        maxLength?: pulumi.Input<number>;
        method: pulumi.Input<string>;
        /**
         * Specifies the min value of the parameter when the `type` is **int** or **decimal**.
         * Value range: -2147483647 ~ 2147483647. Defaults to **"0"**.
         */
        min?: pulumi.Input<string>;
        /**
         * Specifies the name of the parameter. The name contains a maximum of 64 characters.
         * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
         * allowed: `?'#().,&%@!`.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the step of the parameter when the `type` is **int** or **decimal**.
         * Value range: 0 ~ 2147483647. Defaults to **0**.
         */
        step?: pulumi.Input<number>;
        /**
         * Specifies the type of the parameter.
         * The valid values are **int**, **decimal**, **string**, **DateTime**, **jsonObject** and **string list**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the unit of the parameter when the `type` is **int** or **decimal**.
         * The unit contains a maximum of 16 characters.
         */
        unit?: pulumi.Input<string>;
    }
}

export namespace Live {
    export interface RecordingFlv {
        /**
         * Specifies the path and file name prefix of a recording file. The default value is
         * `Record/{publish_domain}/{app}/{record_type}/{record_format}/{stream}_{file_start_time}/{file_start_time}`.
         */
        fileNaming?: pulumi.Input<string>;
        /**
         * Specifies the interval threshold for combining recording chunks. If the
         * stream pause length exceeds the value of this parameter, a new recording is generated.
         * Value range: 0 ~ 300, unit: `second`.
         * If the value is set to `0`, a new file will be generated once the stream is interrupted. Defaults to `0`.
         */
        maxStreamPauseLength?: pulumi.Input<number>;
        /**
         * Specifies the recording length. Value range: 15 ~ 180, unit: `minute`.
         * A stream exceeding the recording length will generate a new recording.
         */
        recordingLength: pulumi.Input<number>;
    }

    export interface RecordingHls {
        /**
         * Specifies the path and file name prefix of a recording file. The default value is
         * `Record/{publish_domain}/{app}/{record_type}/{record_format}/{stream}_{file_start_time}/{file_start_time}`.
         */
        fileNaming?: pulumi.Input<string>;
        /**
         * Specifies the interval threshold for combining recording chunks. If the
         * stream pause length exceeds the value of this parameter, a new recording is generated.
         * Value range: 0 ~ 300, unit: `second`.
         * If the value is set to `0`, a new file will be generated once the stream is interrupted. Defaults to `0`.
         */
        maxStreamPauseLength?: pulumi.Input<number>;
        /**
         * Specifies the recording length. Value range: 15 ~ 180, unit: `minute`.
         * A stream exceeding the recording length will generate a new recording.
         */
        recordingLength: pulumi.Input<number>;
        /**
         * Specifies TS file name prefix.
         * The default value is `{file_start_time_unix}_{file_end_time_unix}_{ts_sequence_number}`.
         */
        tsFileNaming?: pulumi.Input<string>;
    }

    export interface RecordingMp4 {
        /**
         * Specifies the path and file name prefix of a recording file. The default value is
         * `Record/{publish_domain}/{app}/{record_type}/{record_format}/{stream}_{file_start_time}/{file_start_time}`.
         */
        fileNaming?: pulumi.Input<string>;
        /**
         * Specifies the interval threshold for combining recording chunks. If the
         * stream pause length exceeds the value of this parameter, a new recording is generated.
         * Value range: 0 ~ 300, unit: `second`.
         * If the value is set to `0`, a new file will be generated once the stream is interrupted. Defaults to `0`.
         */
        maxStreamPauseLength?: pulumi.Input<number>;
        /**
         * Specifies the recording length. Value range: 15 ~ 180, unit: `minute`.
         * A stream exceeding the recording length will generate a new recording.
         */
        recordingLength: pulumi.Input<number>;
    }

    export interface RecordingObs {
        /**
         * Specifies OBS bucket.
         */
        bucket: pulumi.Input<string>;
        /**
         * Specifies OBS object path. If omitted, recordings will be saved to the root directory.
         */
        object?: pulumi.Input<string>;
        /**
         * Specifies the region of OBS.
         */
        region: pulumi.Input<string>;
    }

    export interface TranscodingTemplate {
        /**
         * Specifies the bitrate of a transcoded video, in kbit/s. Value range: 40 ~ 30000.
         */
        bitrate: pulumi.Input<number>;
        /**
         * Specifies the frame rate of the transcoded video, in fps. Value range: 0 ~ 30.
         * Value 0 indicates that the frame rate remains unchanged.
         */
        frameRate?: pulumi.Input<number>;
        /**
         * Specifies video height (unit: pixel).
         * + **When the video encoding is H264**, value range: 32 ~ 2160 and must be a multiple of 2.
         * + **When the video encoding is H265**, value range: 240 ~ 2160 and must be a multiple of 4.
         */
        height: pulumi.Input<number>;
        /**
         * Specifies the template name. The name can contain a maximum of 64 characters, and only
         * contains letters, digits and hyphens (-).
         */
        name: pulumi.Input<string>;
        /**
         * Specifies video width (unit: pixel).
         * + **When the video encoding is H264**, value range: 32 ~ 3840 and must be a multiple of 2.
         * + **When the video encoding is H265**, value range: 320 ~ 3840 and must be a multiple of 4.
         */
        width: pulumi.Input<number>;
    }
}

export namespace Meeting {
    export interface ConferenceConfiguration {
        /**
         * Specifies whether to allow guests to start conferences (only valid for random
         * ID conferences).
         */
        allowGuestStart?: pulumi.Input<boolean>;
        /**
         * Specifies the range to allow incoming calls.
         * + **0**: All users.
         * + **2**: Users within the enterprise.
         * + **3**: The invited user.
         */
        callinRestriction?: pulumi.Input<number>;
        /**
         * Specifies the guest password (pure number which is 4 to 16 digits long).
         */
        guestPassword?: pulumi.Input<string>;
        /**
         * Specifies whether the soft terminal is automatically muted when the guest joins the
         * conference.
         */
        isAutoMute?: pulumi.Input<boolean>;
        /**
         * Specifies whether the guest is password-free (only valid for random
         * conferences).
         */
        isGuestFreePassword?: pulumi.Input<boolean>;
        /**
         * Specifies whether the guest joins the conference, whether the hard
         * terminal is automatically muted.
         */
        isHardTerminalAutoMute?: pulumi.Input<boolean>;
        /**
         * Specifies whether to send conference calendar notifications.
         */
        isSendCalendar?: pulumi.Input<boolean>;
        /**
         * Specifies whether to send conference email notification.
         */
        isSendNotify?: pulumi.Input<boolean>;
        /**
         * Specifies whether to send conference SMS notification.
         */
        isSendSms?: pulumi.Input<boolean>;
        /**
         * Specifies the Automatically extend duration, the valid value is range from `0` to
         * `60`.
         */
        prolongTime?: pulumi.Input<number>;
        /**
         * Specifies whether to open the waiting room (only valid for RTC enterprises).
         */
        waitingRoomEnabled?: pulumi.Input<boolean>;
    }

    export interface ConferenceCycleParams {
        /**
         * Specifies the period type. The valid values are as follows:
         * + **Day**
         * + **Week**
         * + **Month**
         */
        cycle: pulumi.Input<string>;
        /**
         * Specifies the end date of the recurring conference.
         * The format is `YYYY-MM-DD`.
         */
        endDate: pulumi.Input<string>;
        /**
         * Specifies the cycle interval.
         * For different `cycle` types, the value range of interval are as follows:
         * + **Day**: Means that it will be held every few days, and the valid value is range from `1` to `15`.
         * + **Week**: Means that it is held every few weeks, and the valid value is range from `1` to `5`.
         * + **Month**: Means every few months, the value range is `1` to `3`.
         */
        interval?: pulumi.Input<number>;
        /**
         * Specifies the conference point in the cycle. Only valid by **Week** and **Month**.
         * For different `cycle` types, the value range of elements are as follows:
         * + **Week**: The valid value is range from `0` to `6`. The **0** means Sunday, **6** means Saturday.
         * + **Month**: The valid range for the elements is `1` to `31`. If the value does not exist in the current month, the
         * value means the end of the month.
         */
        points?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Specifies the number of days for advance conference notice.
         * The valid value is range from `0` to `30`, defaults to `1`.
         */
        preRemind: pulumi.Input<number>;
        /**
         * Specifies the start date of the recurring conference.
         * The format is `YYYY-MM-DD`.
         */
        startDate: pulumi.Input<string>;
    }

    export interface ConferenceJoinPassword {
        guest?: pulumi.Input<string>;
        host?: pulumi.Input<string>;
    }

    export interface ConferenceParticipant {
        /**
         * Specifies the account ID of the participant.
         */
        accountId?: pulumi.Input<string>;
        /**
         * Specifies the email address.
         */
        email?: pulumi.Input<string>;
        /**
         * Specifies whether to automatically invite this participant when the conference
         * starts. The valid values are as follows:
         * + **0**: Do not automatically invite.
         * + **1**: Automatic invitation.
         */
        isAutoInvite?: pulumi.Input<number>;
        /**
         * Specifies whether the user needs to be automatically muted when joining the conference
         * (only effective when invited in the conference). The valid values are as follows:
         * + **0**: No mute.
         * + **1**: Mute.
         */
        isMute?: pulumi.Input<number>;
        /**
         * Specifies the attendee name or nickname.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the SIP or TEL number, maximum of 127 characters.
         */
        phone?: pulumi.Input<string>;
        /**
         * Specifies the role in the conference. The valid values are as follows:
         * + **0**: Normal attendee.
         * + **1**: The conference chair.
         */
        role?: pulumi.Input<number>;
        /**
         * Specifies the mobile number for SMS notification, maximum of 32 characters.
         */
        sms?: pulumi.Input<string>;
        /**
         * Specifies the call-in type. The valid values are as follows:
         * + **normal**: The soft terminal.
         * + **terminal**: The conference room or hard terminal.
         * + **outside**: The outside participant.
         * + **mobile**: The user's landline phone.
         * + **ideahub**: The ideahub.
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the user ID of the participant.
         */
        userId?: pulumi.Input<string>;
    }

    export interface ConferenceSubconference {
        /**
         * The sub-conference end time.
         */
        endTime?: pulumi.Input<string>;
        /**
         * The sub-conference ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies whether the conference automatically starts recording, it only takes
         * effect when the recording type is:
         * + **1**: Automatically start recording.
         * + **0**: Do not start recording automatically.
         */
        isAutoRecord?: pulumi.Input<number>;
        /**
         * Specifies the conference media type list.
         * It consists of one or more enumerations, and the valid values are as follows:
         * + **Voice**: Voice.
         * + **Video**: SD video.
         * + **HDVideo**: High-definition video (mutually exclusive with Video, if Video and HDVideo are selected at the same
         * time, the system will select Video by default).
         * + **Data**: Multimedia (If omitted, the system configuration will determines whether to automatically add **Data**).
         */
        mediaTypes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the recording authentication method.
         * **0**: Viewable/downloadable via link.
         * **1**: Enterprise users can watch/download.
         * **2**: Attendees can watch/download.
         */
        recordAuthType?: pulumi.Input<number>;
        /**
         * Specifies the conference start time (UTC time).
         * The time format is `YYYY-MM-DD hh:mm`, e.g. `2006-01-02 15:04`.
         * There is no need to set if you book a cyclical conference.
         */
        startTime?: pulumi.Input<string>;
        /**
         * The other configuration information of periodic subconferences.
         * The object structure is documented below.
         */
        subconfigurations?: pulumi.Input<pulumi.Input<inputs.Meeting.ConferenceSubconferenceSubconfiguration>[]>;
    }

    export interface ConferenceSubconferenceSubconfiguration {
        /**
         * Specifies whether to allow guests to start conferences (only valid for random
         * ID conferences).
         */
        allowGuestStart?: pulumi.Input<boolean>;
        /**
         * The range that the webinar audience is allowed to call in.
         * The valid values are as follows:
         * + **0**: All users.
         * + **2**: Users within the enterprise.
         */
        audienceCallinRestriction?: pulumi.Input<number>;
        /**
         * Specifies the range to allow incoming calls.
         * + **0**: All users.
         * + **2**: Users within the enterprise.
         * + **3**: The invited user.
         */
        callinRestriction?: pulumi.Input<number>;
        showAudiencePolicies?: pulumi.Input<pulumi.Input<inputs.Meeting.ConferenceSubconferenceSubconfigurationShowAudiencePolicy>[]>;
        /**
         * Specifies whether to open the waiting room (only valid for RTC enterprises).
         */
        waitingRoomEnabled?: pulumi.Input<boolean>;
    }

    export interface ConferenceSubconferenceSubconfigurationShowAudiencePolicy {
        /**
         * Specifies the basic number of people, the valid values is range from `0` to `10,000`.
         */
        baseAudienceCount?: pulumi.Input<number>;
        /**
         * Audience display strategy: The server is used to calculate the number of audiences and send it to the client
         * to control the audience display.
         * + **0**: Do not display.
         * + **1**: Multiply display the number of participants, based on the real-time number of participants or the cumulative
         * number of participants, the multiplication setting can be performed.
         */
        mode?: pulumi.Input<number>;
        /**
         * Specifies the multiplier. The valid values is range from `0` to `10`, it can be set to 1 decimal place.
         */
        multiple?: pulumi.Input<number>;
    }
}

export namespace ModelArts {
    export interface DatasetDataSource {
        /**
         * Specifies the cluster ID of DWS/MRS when `dataType` is `1` or `4`.
         * Changing this parameter will create a new resource.
         */
        clusterId?: pulumi.Input<string>;
        /**
         * Specifies the type of data source. The options are as follows:
         * + **0**: OBS.
         * + **1**: GaussDB(DWS).
         * + **2**: DLI.
         * + **4**: MRS.
         */
        dataType?: pulumi.Input<number>;
        /**
         * Specifies the database name of DWS/DLI when `dataType` is `1` or `2`.
         * Changing this parameter will create a new resource.
         */
        databaseName?: pulumi.Input<string>;
        /**
         * Specifies the password of database when `dataType` is `1`.
         * Changing this parameter will create a new resource.
         */
        password?: pulumi.Input<string>;
        /**
         * Specifies the OBS path when `dataType` is `0`
         * or the hdsf path when `dataType` is `4`. All the file in this directory and subdirectories will be which be imported
         * to the dataset. Changing this parameter will create a new resource.
         */
        path?: pulumi.Input<string>;
        /**
         * Specifies the queue name of DLI when `dataType` is `2`.
         * Changing this parameter will create a new resource.
         */
        queueName?: pulumi.Input<string>;
        /**
         * Specifies the table name of DWS/DLI when `dataType` is `1` or `2`.
         * Changing this parameter will create a new resource.
         */
        tableName?: pulumi.Input<string>;
        /**
         * Specifies the user name of databse when `dataType` is `1`.
         * Changing this parameter will create a new resource.
         */
        userName?: pulumi.Input<string>;
        /**
         * Specifies whether the data contains table header when the type
         * of dataset is `400`(Table type). Default value is `true`. Changing this parameter will create a new resource.
         */
        withColumnHeader?: pulumi.Input<boolean>;
    }

    export interface DatasetLabel {
        /**
         * Specifies the name of label.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies color of label.
         */
        propertyColor?: pulumi.Input<string>;
        /**
         * Specifies shape of label. Valid values include: `bndbox`, `polygon`,
         * `circle`, `line`, `dashed`, `point`, `polyline`.
         */
        propertyShape?: pulumi.Input<string>;
        /**
         * Specifies shortcut of label.
         */
        propertyShortcut?: pulumi.Input<string>;
    }

    export interface DatasetLabelFormat {
        /**
         * Specifies the separator between label and label.
         * Changing this parameter will create a new resource.
         */
        labelSeparator?: pulumi.Input<string>;
        /**
         * Specifies the separator between text and label.
         * Changing this parameter will create a new resource.
         */
        textLabelSeparator?: pulumi.Input<string>;
        /**
         * Specifies Label type for text classification.
         * The optional values are as follows:
         */
        type?: pulumi.Input<string>;
    }

    export interface DatasetSchema {
        /**
         * Specifies the name of label.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies Label type for text classification.
         * The optional values are as follows:
         */
        type: pulumi.Input<string>;
    }

    export interface NotebookMountStorage {
        /**
         * The mount ID.
         */
        id?: pulumi.Input<string>;
        /**
         * The local mount path.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * The path of storage which be mounted.
         */
        path?: pulumi.Input<string>;
        /**
         * The status of mount.
         */
        status?: pulumi.Input<string>;
        /**
         * Specifies the volume type. The options are as follows:
         * - *EFS*: use Scalable File Service, default 50GB is **free**.
         * - *EVS*: use Elastic Volume Service, default size is 5 GB.
         */
        type?: pulumi.Input<string>;
    }

    export interface NotebookVolume {
        /**
         * The local mount path.
         */
        mountPath?: pulumi.Input<string>;
        /**
         * Specifies the volume ownership. The options are as follows:
         * - *MANAGED*: shared storage disk of the ModelArts service.
         * - *DEDICATED*: dedicated storage disk, only supported when the category is `EFS`.
         */
        ownership?: pulumi.Input<string>;
        /**
         * Specifies the volume size. Its value range is from 5 GB to 4096 GB.
         */
        size?: pulumi.Input<number>;
        /**
         * Specifies the volume type. The options are as follows:
         * - *EFS*: use Scalable File Service, default 50GB is **free**.
         * - *EVS*: use Elastic Volume Service, default size is 5 GB.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the uri of dedicated storage disk, which is mandatory when the `type`
         * is `EFS` and the `ownership` is `DEDICATED`. Example: `192.168.0.1:/user-9sfdsdgdfgh5ea4d56871e75d6966aa274/mount/`.
         * Changing this parameter will create a new resource.
         */
        uri?: pulumi.Input<string>;
    }

}

export namespace Mpc {
    export interface TranscodingTemplateAudio {
        /**
         * Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
         * 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
         * adaptive value.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Specifies the number of audio channels. Possible values are:
         * + **1**: AUDIO_CHANNELS_1
         * + **2**: AUDIO_CHANNELS_2
         * + **6**: AUDIO_CHANNELS_5_1
         */
        channels: pulumi.Input<number>;
        /**
         * Specifies the video codec. Possible values are:
         * + **1**: H.264
         * + **2**: H.265
         */
        codec: pulumi.Input<number>;
        /**
         * Specifies the output policy. Possible values are **discard** and **transcode**.
         * The default value is transcode.
         */
        outputPolicy?: pulumi.Input<string>;
        /**
         * Specifies the audio sampling rate. Possible values are:
         * + **1**: AUDIO_SAMPLE_AUTO
         * + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
         * + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
         * + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
         * + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
         * + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface TranscodingTemplateGroupAudio {
        /**
         * Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
         * 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
         * adaptive value.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Specifies the number of audio channels. Possible values are:
         * + **1**: AUDIO_CHANNELS_1
         * + **2**: AUDIO_CHANNELS_2
         * + **6**: AUDIO_CHANNELS_5_1
         */
        channels: pulumi.Input<number>;
        /**
         * Specifies the video codec. Possible values are:
         * + **1**: H.264
         * + **2**: H.265
         */
        codec: pulumi.Input<number>;
        /**
         * Specifies the output policy. Possible values are **discard** and **transcode**.
         * The default value is transcode.
         */
        outputPolicy?: pulumi.Input<string>;
        /**
         * Specifies the audio sampling rate. Possible values are:
         * + **1**: AUDIO_SAMPLE_AUTO
         * + **2**: AUDIO_SAMPLE_22050 (22,050 Hz)
         * + **3**: AUDIO_SAMPLE_32000 (32,000 Hz)
         * + **4**: AUDIO_SAMPLE_44100 (44,100 Hz)
         * + **5**: AUDIO_SAMPLE_48000 (48,000 Hz)
         * + **6**: AUDIO_SAMPLE_96000 (96,000 Hz)
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface TranscodingTemplateGroupVideo {
        /**
         * Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
         * 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
         * adaptive value.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
         * and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
         * is an adaptive value. The default value is 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
         * and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
         * is an adaptive value. The default value is 0.
         */
        width?: pulumi.Input<number>;
    }

    export interface TranscodingTemplateGroupVideoCommon {
        /**
         * Specifies whether to enable black bar removal. Possible values are:
         * + **0**: Disable black bar removal.
         * + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
         * + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
         */
        blackBarRemoval?: pulumi.Input<number>;
        /**
         * Specifies the video codec. Possible values are:
         * + **1**: H.264
         * + **2**: H.265
         */
        codec?: pulumi.Input<number>;
        /**
         * Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
         * The default value is 0. The unit is FPS.
         */
        fps?: pulumi.Input<number>;
        /**
         * Specifies the encoding level. Possible values are:
         * + **1**: VIDEO_LEVEL_1_0
         * + **2**: VIDEO_LEVEL_1_1
         * + **3**: VIDEO_LEVEL_1_2
         * + **4**: VIDEO_LEVEL_1_3
         * + **5**: VIDEO_LEVEL_2_0
         * + **6**: VIDEO_LEVEL_2_1
         * + **7**: VIDEO_LEVEL_2_2
         * + **8**: VIDEO_LEVEL_3_0
         * + **9**: VIDEO_LEVEL_3_1
         * + **10**: VIDEO_LEVEL_3_2
         * + **11**: VIDEO_LEVEL_4_0
         * + **12**: VIDEO_LEVEL_4_1
         * + **13**: VIDEO_LEVEL_4_2
         * + **14**: VIDEO_LEVEL_5_0
         * + **15**: VIDEO_LEVEL_5_1
         */
        level?: pulumi.Input<number>;
        /**
         * Specifies the maximum number of B-frames.
         * The vaule range is  0 to 7, and the default value is 4. The unit is frame.
         */
        maxConsecutiveBframes?: pulumi.Input<number>;
        /**
         * Specifies the mximum I-frame interval. The value ranges from 2 to 10.
         * The default value is 5. The unit is second.
         */
        maxIframesInterval?: pulumi.Input<number>;
        /**
         * Specifies the maximum reference frames. When the `codec` is H.264,
         * the vaule rang is 1 to 8. When the `codec` is H.265, the value is fixed at 4. The default value is 4. The unit is frame.
         */
        maxReferenceFrames?: pulumi.Input<number>;
        /**
         * Specifies the output policy. Possible values are **discard** and **transcode**.
         * The default value is transcode.
         */
        outputPolicy?: pulumi.Input<string>;
        /**
         * Specifies the encoding profile. The recommended value is 3. Possible values are:
         * + **1**: VIDEO_PROFILE_H264_BASE
         * + **2**: VIDEO_PROFILE_H264_MAIN
         * + **3**: VIDEO_PROFILE_H264_HIGH
         * + **4**: VIDEO_PROFILE_H265_MAIN
         */
        profile?: pulumi.Input<number>;
        /**
         * Specifies the encoding quality. A larger value indicates higher encoding quality and
         * longer transcoding time. Possible values are:
         * + **1**: VIDEO_PRESET_HSPEED2
         * + **2**: VIDEO_PRESET_HSPEED
         * + **3**: VIDEO_PRESET_NORMAL
         */
        quality?: pulumi.Input<number>;
    }

    export interface TranscodingTemplateVideo {
        /**
         * Specifies the average output bitrate. The value is 0 or an integer ranging from 40 to
         * 30,000. The default value is 0. The unit is kbit/s. If this parameter is set to 0, the average output bitrate is an
         * adaptive value.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Specifies whether to enable black bar removal. Possible values are:
         * + **0**: Disable black bar removal.
         * + **1**: Enable black bar removal and low-complexity algorithms for long videos (>5 minutes).
         * + **2**: Enable black bar removal and high-complexity algorithms for short videos (≤5 minutes).
         */
        blackBarRemoval?: pulumi.Input<number>;
        /**
         * Specifies the video codec. Possible values are:
         * + **1**: H.264
         * + **2**: H.265
         */
        codec?: pulumi.Input<number>;
        /**
         * Specifies the frame rate. Its value is 0 or an integer ranging from 5 to 30.
         * The default value is 0. The unit is FPS.
         */
        fps?: pulumi.Input<number>;
        /**
         * Specifies the video height. The value is 0 or a multiple of 2 from 32 to 2,880 for H.264,
         * and 0 or a multiple of 4 from 96 to 2,880 for H.265. The unit is pixel. If this parameter is set to 0, the video height
         * is an adaptive value. The default value is 0.
         */
        height?: pulumi.Input<number>;
        /**
         * Specifies the encoding level. Possible values are:
         * + **1**: VIDEO_LEVEL_1_0
         * + **2**: VIDEO_LEVEL_1_1
         * + **3**: VIDEO_LEVEL_1_2
         * + **4**: VIDEO_LEVEL_1_3
         * + **5**: VIDEO_LEVEL_2_0
         * + **6**: VIDEO_LEVEL_2_1
         * + **7**: VIDEO_LEVEL_2_2
         * + **8**: VIDEO_LEVEL_3_0
         * + **9**: VIDEO_LEVEL_3_1
         * + **10**: VIDEO_LEVEL_3_2
         * + **11**: VIDEO_LEVEL_4_0
         * + **12**: VIDEO_LEVEL_4_1
         * + **13**: VIDEO_LEVEL_4_2
         * + **14**: VIDEO_LEVEL_5_0
         * + **15**: VIDEO_LEVEL_5_1
         */
        level?: pulumi.Input<number>;
        /**
         * Specifies the maximum number of B-frames.
         * The vaule range is  0 to 7, and the default value is 4. The unit is frame.
         */
        maxConsecutiveBframes?: pulumi.Input<number>;
        /**
         * Specifies the mximum I-frame interval. The value ranges from 2 to 10.
         * The default value is 5. The unit is second.
         */
        maxIframesInterval?: pulumi.Input<number>;
        /**
         * Specifies the maximum reference frames. When the `codec` is H.264,
         * the vaule rang is 1 to 8. When the `codec` is H.265, the value is fixed at 4. The default value is 4. The unit is frame.
         */
        maxReferenceFrames?: pulumi.Input<number>;
        /**
         * Specifies the output policy. Possible values are **discard** and **transcode**.
         * The default value is transcode.
         */
        outputPolicy?: pulumi.Input<string>;
        /**
         * Specifies the encoding profile. The recommended value is 3. Possible values are:
         * + **1**: VIDEO_PROFILE_H264_BASE
         * + **2**: VIDEO_PROFILE_H264_MAIN
         * + **3**: VIDEO_PROFILE_H264_HIGH
         * + **4**: VIDEO_PROFILE_H265_MAIN
         */
        profile?: pulumi.Input<number>;
        /**
         * Specifies the encoding quality. A larger value indicates higher encoding quality and
         * longer transcoding time. Possible values are:
         * + **1**: VIDEO_PRESET_HSPEED2
         * + **2**: VIDEO_PRESET_HSPEED
         * + **3**: VIDEO_PRESET_NORMAL
         */
        quality?: pulumi.Input<number>;
        /**
         * Specifies the video width. The value can be 0 or a multiple of 2 from 32 to 4,096 for H.264
         * and 0 or a multiple of 4 from 160 to 4,096 for H.265. The unit is pixel. If this parameter is set to 0, the video width
         * is an adaptive value. The default value is 0.
         */
        width?: pulumi.Input<number>;
    }
}

export namespace Mrs {
    export interface ClusterAnalysisCoreNodes {
        /**
         * Specifies the roles deployed in a node group.This argument is mandatory
         * when the cluster type is CUSTOM. Each character string represents a role expression.
         */
        assignedRoles?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the data disk number of the nodes. The number configuration
         * of each node are as follows:
         * + master_nodes: 1.
         * + analysis_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + analysis_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         */
        dataVolumeCount: pulumi.Input<number>;
        /**
         * Specifies the data disk size of the nodes,in GB. The value range is 10
         * to 32768. Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce
         * cluster resource.
         */
        dataVolumeSize?: pulumi.Input<number>;
        /**
         * Specifies the data disk flavor of the nodes.
         * Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce cluster resource.
         * The following disk types are supported:
         * + `SATA`: common I/O disk
         * + `SAS`: high I/O disk
         * + `SSD`: ultra-high I/O disk
         */
        dataVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the instance specifications for each nodes in node group.
         * Changing this will create a new MapReduce cluster resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * The host list of this nodes group in the cluster.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of nodes for the node group.
         */
        nodeNumber: pulumi.Input<number>;
        /**
         * Specifies the system disk size of the nodes. Changing this will create
         * a new MapReduce cluster resource.
         */
        rootVolumeSize: pulumi.Input<number>;
        /**
         * Specifies the system disk flavor of the nodes. Changing this will
         * create a new MapReduce cluster resource.
         */
        rootVolumeType: pulumi.Input<string>;
    }

    export interface ClusterAnalysisTaskNodes {
        /**
         * Specifies the roles deployed in a node group.This argument is mandatory
         * when the cluster type is CUSTOM. Each character string represents a role expression.
         */
        assignedRoles?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the data disk number of the nodes. The number configuration
         * of each node are as follows:
         * + master_nodes: 1.
         * + analysis_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + analysis_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         */
        dataVolumeCount: pulumi.Input<number>;
        /**
         * Specifies the data disk size of the nodes,in GB. The value range is 10
         * to 32768. Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce
         * cluster resource.
         */
        dataVolumeSize?: pulumi.Input<number>;
        /**
         * Specifies the data disk flavor of the nodes.
         * Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce cluster resource.
         * The following disk types are supported:
         * + `SATA`: common I/O disk
         * + `SAS`: high I/O disk
         * + `SSD`: ultra-high I/O disk
         */
        dataVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the instance specifications for each nodes in node group.
         * Changing this will create a new MapReduce cluster resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * The host list of this nodes group in the cluster.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of nodes for the node group.
         */
        nodeNumber: pulumi.Input<number>;
        /**
         * Specifies the system disk size of the nodes. Changing this will create
         * a new MapReduce cluster resource.
         */
        rootVolumeSize: pulumi.Input<number>;
        /**
         * Specifies the system disk flavor of the nodes. Changing this will
         * create a new MapReduce cluster resource.
         */
        rootVolumeType: pulumi.Input<string>;
    }

    export interface ClusterCustomNode {
        /**
         * Specifies the roles deployed in a node group.This argument is mandatory
         * when the cluster type is CUSTOM. Each character string represents a role expression.
         */
        assignedRoles?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the data disk number of the nodes. The number configuration
         * of each node are as follows:
         * + master_nodes: 1.
         * + analysis_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + analysis_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         */
        dataVolumeCount: pulumi.Input<number>;
        /**
         * Specifies the data disk size of the nodes,in GB. The value range is 10
         * to 32768. Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce
         * cluster resource.
         */
        dataVolumeSize?: pulumi.Input<number>;
        /**
         * Specifies the data disk flavor of the nodes.
         * Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce cluster resource.
         * The following disk types are supported:
         * + `SATA`: common I/O disk
         * + `SAS`: high I/O disk
         * + `SSD`: ultra-high I/O disk
         */
        dataVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the instance specifications for each nodes in node group.
         * Changing this will create a new MapReduce cluster resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * Specifies the name of nodes for the node group.
         */
        groupName: pulumi.Input<string>;
        /**
         * The host list of this nodes group in the cluster.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of nodes for the node group.
         */
        nodeNumber: pulumi.Input<number>;
        /**
         * Specifies the system disk size of the nodes. Changing this will create
         * a new MapReduce cluster resource.
         */
        rootVolumeSize: pulumi.Input<number>;
        /**
         * Specifies the system disk flavor of the nodes. Changing this will
         * create a new MapReduce cluster resource.
         */
        rootVolumeType: pulumi.Input<string>;
    }

    export interface ClusterMasterNodes {
        /**
         * Specifies the roles deployed in a node group.This argument is mandatory
         * when the cluster type is CUSTOM. Each character string represents a role expression.
         */
        assignedRoles?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the data disk number of the nodes. The number configuration
         * of each node are as follows:
         * + master_nodes: 1.
         * + analysis_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + analysis_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         */
        dataVolumeCount: pulumi.Input<number>;
        /**
         * Specifies the data disk size of the nodes,in GB. The value range is 10
         * to 32768. Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce
         * cluster resource.
         */
        dataVolumeSize?: pulumi.Input<number>;
        /**
         * Specifies the data disk flavor of the nodes.
         * Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce cluster resource.
         * The following disk types are supported:
         * + `SATA`: common I/O disk
         * + `SAS`: high I/O disk
         * + `SSD`: ultra-high I/O disk
         */
        dataVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the instance specifications for each nodes in node group.
         * Changing this will create a new MapReduce cluster resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * The host list of this nodes group in the cluster.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of nodes for the node group.
         */
        nodeNumber: pulumi.Input<number>;
        /**
         * Specifies the system disk size of the nodes. Changing this will create
         * a new MapReduce cluster resource.
         */
        rootVolumeSize: pulumi.Input<number>;
        /**
         * Specifies the system disk flavor of the nodes. Changing this will
         * create a new MapReduce cluster resource.
         */
        rootVolumeType: pulumi.Input<string>;
    }

    export interface ClusterStreamingCoreNodes {
        /**
         * Specifies the roles deployed in a node group.This argument is mandatory
         * when the cluster type is CUSTOM. Each character string represents a role expression.
         */
        assignedRoles?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the data disk number of the nodes. The number configuration
         * of each node are as follows:
         * + master_nodes: 1.
         * + analysis_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + analysis_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         */
        dataVolumeCount: pulumi.Input<number>;
        /**
         * Specifies the data disk size of the nodes,in GB. The value range is 10
         * to 32768. Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce
         * cluster resource.
         */
        dataVolumeSize?: pulumi.Input<number>;
        /**
         * Specifies the data disk flavor of the nodes.
         * Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce cluster resource.
         * The following disk types are supported:
         * + `SATA`: common I/O disk
         * + `SAS`: high I/O disk
         * + `SSD`: ultra-high I/O disk
         */
        dataVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the instance specifications for each nodes in node group.
         * Changing this will create a new MapReduce cluster resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * The host list of this nodes group in the cluster.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of nodes for the node group.
         */
        nodeNumber: pulumi.Input<number>;
        /**
         * Specifies the system disk size of the nodes. Changing this will create
         * a new MapReduce cluster resource.
         */
        rootVolumeSize: pulumi.Input<number>;
        /**
         * Specifies the system disk flavor of the nodes. Changing this will
         * create a new MapReduce cluster resource.
         */
        rootVolumeType: pulumi.Input<string>;
    }

    export interface ClusterStreamingTaskNodes {
        /**
         * Specifies the roles deployed in a node group.This argument is mandatory
         * when the cluster type is CUSTOM. Each character string represents a role expression.
         */
        assignedRoles?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the data disk number of the nodes. The number configuration
         * of each node are as follows:
         * + master_nodes: 1.
         * + analysis_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_core_nodes: minimum is one and the maximum is subject to the configuration of the corresponding flavor.
         * + analysis_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         * + streaming_task_nodes: minimum is zero and the maximum is subject to the configuration of the corresponding flavor.
         */
        dataVolumeCount: pulumi.Input<number>;
        /**
         * Specifies the data disk size of the nodes,in GB. The value range is 10
         * to 32768. Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce
         * cluster resource.
         */
        dataVolumeSize?: pulumi.Input<number>;
        /**
         * Specifies the data disk flavor of the nodes.
         * Required if `dataVolumeCount` is greater than zero. Changing this will create a new MapReduce cluster resource.
         * The following disk types are supported:
         * + `SATA`: common I/O disk
         * + `SAS`: high I/O disk
         * + `SSD`: ultra-high I/O disk
         */
        dataVolumeType?: pulumi.Input<string>;
        /**
         * Specifies the instance specifications for each nodes in node group.
         * Changing this will create a new MapReduce cluster resource.
         */
        flavor: pulumi.Input<string>;
        /**
         * The host list of this nodes group in the cluster.
         */
        hostIps?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of nodes for the node group.
         */
        nodeNumber: pulumi.Input<number>;
        /**
         * Specifies the system disk size of the nodes. Changing this will create
         * a new MapReduce cluster resource.
         */
        rootVolumeSize: pulumi.Input<number>;
        /**
         * Specifies the system disk flavor of the nodes. Changing this will
         * create a new MapReduce cluster resource.
         */
        rootVolumeType: pulumi.Input<string>;
    }
}

export namespace Obs {
    export interface BucketCorsRule {
        /**
         * Specifies the allowed header of cross-origin requests. Only CORS requests
         * matching the allowed header are valid.
         */
        allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the acceptable operation type of buckets and objects. The methods
         * include `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
         */
        allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Requests from this origin can access the bucket. Multiple matching rules are
         * allowed. One rule occupies one line, and allows one wildcard character (*) at most.
         */
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the exposed header in CORS responses, providing additional information
         * for clients.
         */
        exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the duration that your browser can cache CORS responses, expressed in
         * seconds. The default value is 100.
         */
        maxAgeSeconds?: pulumi.Input<number>;
    }

    export interface BucketLifecycleRule {
        /**
         * Specifies lifecycle rule status.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * Specifies a period when objects that have been last updated are automatically
         * deleted. (documented below).
         */
        expirations?: pulumi.Input<pulumi.Input<inputs.Obs.BucketLifecycleRuleExpiration>[]>;
        /**
         * Unique identifier for lifecycle rules. The Rule Name contains a maximum of 255 characters.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies a period when noncurrent object versions are
         * automatically deleted. (documented below).
         */
        noncurrentVersionExpirations?: pulumi.Input<pulumi.Input<inputs.Obs.BucketLifecycleRuleNoncurrentVersionExpiration>[]>;
        /**
         * Specifies a period when noncurrent object versions are
         * automatically transitioned to `WARM` or `COLD` storage class (documented below).
         */
        noncurrentVersionTransitions?: pulumi.Input<pulumi.Input<inputs.Obs.BucketLifecycleRuleNoncurrentVersionTransition>[]>;
        /**
         * Object key prefix identifying one or more objects to which the rule applies. If omitted,
         * all objects in the bucket will be managed by the lifecycle rule. The prefix cannot start or end with a slash (/),
         * cannot have consecutive slashes (/), and cannot contain the following special characters: \:*?"<>|.
         */
        prefix?: pulumi.Input<string>;
        /**
         * Specifies a period when objects that have been last updated are automatically
         * transitioned to `WARM` or `COLD` storage class (documented below).
         */
        transitions?: pulumi.Input<pulumi.Input<inputs.Obs.BucketLifecycleRuleTransition>[]>;
    }

    export interface BucketLifecycleRuleExpiration {
        /**
         * Specifies the number of days when objects that have been last updated are automatically
         * deleted. The expiration time must be greater than the transition times.
         */
        days: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleNoncurrentVersionExpiration {
        /**
         * Specifies the number of days when noncurrent object versions are automatically deleted.
         */
        days: pulumi.Input<number>;
    }

    export interface BucketLifecycleRuleNoncurrentVersionTransition {
        /**
         * Specifies the number of days when noncurrent object versions are automatically transitioned
         * to the specified storage class.
         */
        days: pulumi.Input<number>;
        /**
         * The class of storage used to store the object. Only `WARM` and `COLD` are
         * supported.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketLifecycleRuleTransition {
        /**
         * Specifies the number of days when objects that have been last updated are automatically
         * transitioned to the specified storage class.
         */
        days: pulumi.Input<number>;
        /**
         * The class of storage used to store the object. Only `WARM` and `COLD` are
         * supported.
         */
        storageClass: pulumi.Input<string>;
    }

    export interface BucketLogging {
        /**
         * The name of the bucket that will receive the log objects. The acl policy of the
         * target bucket should be `log-delivery-write`.
         */
        targetBucket: pulumi.Input<string>;
        /**
         * To specify a key prefix for log objects.
         */
        targetPrefix?: pulumi.Input<string>;
    }

    export interface BucketWebsite {
        /**
         * Specifies the error page returned when an error occurs during static website
         * access. Only HTML, JPG, PNG, BMP, and WEBP files under the root directory are supported.
         */
        errorDocument?: pulumi.Input<string>;
        /**
         * Unless using `redirectAllRequestsTo`. Specifies the default homepage of the
         * static website, only HTML web pages are supported. OBS only allows files such as `index.html` in the root directory of
         * a bucket to function as the default homepage. That is to say, do not set the default homepage with a multi-level
         * directory structure (for example, /page/index.html).
         */
        indexDocument?: pulumi.Input<string>;
        /**
         * A hostname to redirect all website requests for this bucket to.
         * Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The
         * default is the protocol that is used in the original request.
         */
        redirectAllRequestsTo?: pulumi.Input<string>;
        /**
         * A JSON or XML format containing routing rules describing redirect behavior and
         * when redirects are applied. Each rule contains a `Condition` and a `Redirect` as shown in the following table:
         */
        routingRules?: pulumi.Input<string>;
    }

}

export namespace Oms {
    export interface MigrationTaskBandwidthPolicy {
        /**
         * Specifies the end time of the traffic limit rule. The format is **hh:mm**,
         * e.g. **12:03**.
         */
        end: pulumi.Input<string>;
        /**
         * Specifies the maximum traffic bandwidth allowed in the specified time
         * segment. The unit is byte/s. The value ranges from **1** MB/s to **200** MB/s.
         */
        maxBandwidth: pulumi.Input<number>;
        /**
         * Specifies the start time of the traffic limit rule. The format is **hh:mm**,
         * e.g. **12:03**.
         */
        start: pulumi.Input<string>;
    }

    export interface MigrationTaskDestinationObject {
        /**
         * Specifies the access key for accessing the destination bucket.
         * Changing this creates a new resource.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Specifies the name of the destination bucket.
         * Changing this creates a new resource.
         */
        bucket: pulumi.Input<string>;
        /**
         * Specifies the region where the destination bucket is located.
         * Changing this creates a new resource.
         */
        region: pulumi.Input<string>;
        /**
         * Specifies the path prefix in the destination bucket. The prefix is added
         * before the object key to form a new key. Changing this creates a new resource.
         */
        savePrefix?: pulumi.Input<string>;
        /**
         * Specifies the secret key for accessing the destination bucket.
         * Changing this creates a new resource.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Specifies the temporary token for accessing the destination bucket.
         * Changing this creates a new resource.
         */
        securityToken?: pulumi.Input<string>;
    }

    export interface MigrationTaskSmnConfig {
        /**
         * Specifies the SMN message language. The value can be **zh-cn** or
         * **en-us**. Default value: **en-us**. Changing this creates a new resource.
         */
        language?: pulumi.Input<string>;
        /**
         * Specifies the SMN message topic URN bound to a migration task.
         * Changing this creates a new resource.
         */
        topicUrn: pulumi.Input<string>;
        /**
         * Specifies the trigger conditions of sending messages using SMN.
         * The value can be:
         * + **FAILURE**: indicates that an SMN message will be sent after the migration task fails.
         * + **SUCCESS**: indicates that an SMN message will be sent after the migration task succeeds.
         */
        triggerConditions: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MigrationTaskSourceCdn {
        /**
         * Specifies the CDN authentication key.
         * Changing this creates a new resource.
         */
        authenticationKey?: pulumi.Input<string>;
        /**
         * Specifies the authentication type. Valid values are **NONE**,
         * **QINIU_PRIVATE_AUTHENTICATION**, **ALIYUN_OSS_A**, **ALIYUN_OSS_B**, **ALIYUN_OSS_C**,
         * **KSYUN_PRIVATE_AUTHENTICATION**. Default value: **None**. Changing this creates a new resource.
         */
        authenticationType?: pulumi.Input<string>;
        /**
         * Specifies the domain name from which to obtain objects to be migrated.
         * Changing this creates a new resource.
         */
        domain: pulumi.Input<string>;
        /**
         * Specifies the protocol type. Valid values are **HTTP** and **HTTPS**.
         * Changing this creates a new resource.
         */
        protocol: pulumi.Input<string>;
    }

    export interface MigrationTaskSourceObject {
        /**
         * Specifies the access key for accessing the destination bucket.
         * Changing this creates a new resource.
         */
        accessKey?: pulumi.Input<string>;
        /**
         * Specifies the APP ID. This parameter is mandatory when `dataSource` is  
         * **Tencent**. Changing this creates a new resource.
         */
        appId?: pulumi.Input<string>;
        /**
         * Specifies the name of the destination bucket.
         * Changing this creates a new resource.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Specifies the source cloud service provider. If `type` is
         * **url_list**,set this parameter to **URLSource**. The value can be **AWS**, **Azure**, **Aliyun**, **Tencent**,
         * **HuaweiCloud**, **QingCloud**, **KingsoftCloud**, **Baidu**, **Qiniu**, **URLSource** and **UCloud**.
         * The default value is **Aliyun**. Changing this creates a new resource.
         */
        dataSource?: pulumi.Input<string>;
        /**
         * Specifies the name of the OBS bucket for storing the object list files.
         * `listFileBucket` is mandatory when `type` is set to **list** or **url_list**. Changing this creates a new resource.
         */
        listFileBucket?: pulumi.Input<string>;
        /**
         * Specifies the object name of the list file or URL list file.
         * `listFileKey` is mandatory when `type` is set to **list** or **url_list**. Changing this creates a new resource.
         */
        listFileKey?: pulumi.Input<string>;
        /**
         * Specifies the list of object keys.
         * + If `type` is set to **object**, this parameter specifies the names of the objects to be migrated. The strings
         * ending with a slash (/) indicate the folders to be migrated, and the strings not ending with a slash (/) indicate the
         * files to be migrated.
         * + If `type` is set to **prefix**, this parameter indicates the name prefixes of the objects to be migrated.
         * Set this parameter to [""] to migrate the entire bucket
         */
        objects?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the region where the destination bucket is located.
         * Changing this creates a new resource.
         */
        region?: pulumi.Input<string>;
        /**
         * Specifies the secret key for accessing the destination bucket.
         * Changing this creates a new resource.
         */
        secretKey?: pulumi.Input<string>;
        /**
         * Specifies the temporary token for accessing the destination bucket.
         * Changing this creates a new resource.
         */
        securityToken?: pulumi.Input<string>;
    }
}

export namespace Rds {
    export interface Database_privilegeUser {
        /**
         * Specifies the username of the database account. Changing this creates a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the read-only permission. The value can be:
         * + **true**: indicates the read-only permission.
         * + **false**: indicates the read and write permission.
         */
        readonly?: pulumi.Input<boolean>;
    }

    export interface GetEngineVersionsVersionArgs {
        /**
         * Version ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Version name.
         */
        name?: pulumi.Input<string>;
    }

    export interface GetEngineVersionsVersion {
        /**
         * Version ID.
         */
        id?: string;
        /**
         * Version name.
         */
        name?: string;
    }

    export interface InstanceBackupStrategy {
        /**
         * Specifies the retention days for specific backup files. The value range is from 0 to
         * 732. If this parameter is not specified or set to 0, the automated backup policy is disabled.
         */
        keepDays?: pulumi.Input<number>;
        /**
         * Specifies the backup time window. Automated backups will be triggered during the
         * backup time window. It must be a valid value in the **hh:mm-HH:MM**
         * format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
         * MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
         * 00.
         */
        startTime: pulumi.Input<string>;
    }

    export interface InstanceDb {
        /**
         * Specifies the database password. The value cannot be empty and should
         * contain 8 to 32 characters, including uppercase and lowercase letters, digits, and the following special
         * characters: ~!@#%^*-_=+? You are advised to enter a strong password to improve security, preventing security risks
         * such as brute force cracking. Changing this parameter will create a new resource.
         */
        password: pulumi.Input<string>;
        /**
         * Specifies the database port.
         * + The MySQL database port ranges from 1024 to 65535 (excluding 12017 and 33071, which are occupied by the RDS system
         * and cannot be used). The default value is 3306.
         * + The PostgreSQL database port ranges from 2100 to 9500. The default value is 5432.
         * + The Microsoft SQL Server database port can be 1433 or ranges from 2100 to 9500, excluding 5355 and 5985. The
         * default value is 1433.
         */
        port?: pulumi.Input<number>;
        /**
         * Specifies the volume type. Its value can be any of the following and is
         * case-sensitive:
         * + *ULTRAHIGH*: SSD storage.
         * + *LOCALSSD*: local SSD storage.
         * + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
         * instances.
         * + *ESSD*: extreme SSD storage.
         */
        type: pulumi.Input<string>;
        userName?: pulumi.Input<string>;
        /**
         * Specifies the database version. Changing this parameter will create a new
         * resource. Available values detailed in
         * [DB Engines and Versions](https://support.huaweicloud.com/intl/en-us/productdesc-rds/en-us_topic_0043898356.html).
         */
        version: pulumi.Input<string>;
    }

    export interface InstanceNode {
        /**
         * Specifies the list of AZ name. Changing this parameter will create a
         * new resource.
         */
        availabilityZone?: pulumi.Input<string>;
        /**
         * Indicates the node ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the DB instance name. The DB instance name of the same type must be unique for
         * the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
         * contain only letters, digits, hyphens (-), and underscores (_).
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates the node type. The value can be master or slave, indicating the primary node or standby node
         * respectively.
         */
        role?: pulumi.Input<string>;
        /**
         * Indicates the node status.
         */
        status?: pulumi.Input<string>;
    }

    export interface InstanceVolume {
        /**
         * Specifies the key ID for disk encryption. Changing this parameter will create a new
         * resource.
         */
        diskEncryptionId?: pulumi.Input<string>;
        /**
         * Specifies the volume size. Its value range is from 40 GB to 4000 GB. The value must be a
         * multiple of 10 and greater than the original size.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the volume type. Its value can be any of the following and is
         * case-sensitive:
         * + *ULTRAHIGH*: SSD storage.
         * + *LOCALSSD*: local SSD storage.
         * + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
         * instances.
         * + *ESSD*: extreme SSD storage.
         */
        type: pulumi.Input<string>;
    }

    export interface ParametergroupConfigurationParameter {
        /**
         * The parameter group description. It contains a maximum of 256 characters and cannot
         * contain the following special characters:>!<"&'= the value is left blank by default.
         */
        description?: pulumi.Input<string>;
        /**
         * The parameter group name. It contains a maximum of 64 characters.
         */
        name?: pulumi.Input<string>;
        /**
         * Indicates whether the parameter is read-only.
         */
        readonly?: pulumi.Input<boolean>;
        /**
         * Indicates whether a restart is required.
         */
        restartRequired?: pulumi.Input<boolean>;
        /**
         * The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
         * value is case-insensitive and can be mysql, postgresql, or sqlserver.
         */
        type?: pulumi.Input<string>;
        /**
         * Indicates the parameter value.
         */
        value?: pulumi.Input<string>;
        /**
         * Indicates the parameter value range.
         */
        valueRange?: pulumi.Input<string>;
    }

    export interface ParametergroupDatastore {
        /**
         * The DB engine. Currently, MySQL, PostgreSQL, and Microsoft SQL Server are supported. The
         * value is case-insensitive and can be mysql, postgresql, or sqlserver.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the database version.
         */
        version: pulumi.Input<string>;
    }

    export interface ReadReplicaInstanceDb {
        /**
         * Indicates the database port information.
         */
        port?: pulumi.Input<number>;
        /**
         * Specifies the volume type. Its value can be any of the following and is
         * case-sensitive:
         * + *ULTRAHIGH*: SSD storage.
         * + *LOCALSSD*: local SSD storage.
         * + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
         * instances.
         * + *ESSD*: extreme SSD storage.
         */
        type?: pulumi.Input<string>;
        /**
         * Indicates the default user name of database.
         */
        userName?: pulumi.Input<string>;
        /**
         * Indicates the database version.
         */
        version?: pulumi.Input<string>;
    }

    export interface ReadReplicaInstanceVolume {
        /**
         * Specifies the key ID for disk encryption. Changing this parameter
         * will create a new resource.
         */
        diskEncryptionId?: pulumi.Input<string>;
        size?: pulumi.Input<number>;
        /**
         * Specifies the volume type. Its value can be any of the following and is
         * case-sensitive:
         * + *ULTRAHIGH*: SSD storage.
         * + *LOCALSSD*: local SSD storage.
         * + *CLOUDSSD*: cloud SSD storage. This storage type is supported only with general-purpose and dedicated DB
         * instances.
         * + *ESSD*: extreme SSD storage.
         */
        type: pulumi.Input<string>;
    }

}

export namespace Scm {
    export interface CertificateAuthentification {
        /**
         * Domain name mapping to the verification value
         */
        domain?: pulumi.Input<string>;
        /**
         * Name of a domain ownership verification value.
         */
        recordName?: pulumi.Input<string>;
        /**
         * Type of the domain name verification value.
         */
        recordType?: pulumi.Input<string>;
        /**
         * Domain verification value.
         */
        recordValue?: pulumi.Input<string>;
    }

    export interface CertificateTarget {
        /**
         * The project where the service you want to push a certificate to. The same certificate
         * can be pushed repeatedly to the same WAF or ELB service in the same `project`, but the CDN service can only be pushed
         * once.
         */
        projects?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Service to which the certificate is pushed. The options include `CDN`,`WAF`
         * and `Enhance_ELB`.
         */
        service: pulumi.Input<string>;
    }

}

export namespace ServiceStage {
    export interface ApplicationEnvironment {
        /**
         * Specifies the environment ID to which the variables belongs.
         */
        id: pulumi.Input<string>;
        /**
         * Specifies the list of environment variables.
         * The object structure is documented below.
         */
        variables: pulumi.Input<pulumi.Input<inputs.ServiceStage.ApplicationEnvironmentVariable>[]>;
    }

    export interface ApplicationEnvironmentVariable {
        /**
         * Specifies the variable name. The name can contain `1` to `64` characters, only letters,
         * digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the variable value. The value can contian a maximum of `2,048` characters.
         */
        value: pulumi.Input<string>;
    }

    export interface ComponentBuilder {
        /**
         * Specifies the cluster ID.
         */
        clusterId: pulumi.Input<string>;
        /**
         * Specifies the build command. If omitted, the default command will be used.
         * + About the  default command or script: build.sh in the root directory will be preferentially executed.
         * If build.sh does not exist, the code will be compiled using the common method of the selected language,
         * for example, mvn clean package for Java.
         * + About the custom command: Commands will be customized using the selected language.
         * Alternatively, the default command or script will be used after build.sh is modified.
         */
        cmd?: pulumi.Input<string>;
        /**
         * Specifies the filter labels for CCE nodes.
         */
        nodeLabel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the organization name.
         * The organization is usually **domain name**. You can find out in the organization management of SWR.
         */
        organization: pulumi.Input<string>;
    }

    export interface ComponentInstanceArtifact {
        /**
         * Specifies the authentication mode.
         * The valid values are **iam** and **none**. Defaults to **iam**.
         */
        authType?: pulumi.Input<string>;
        /**
         * Specifies the name of a configuration item or secret.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the properties of the OBS object.
         * This parameter is available only `storage` is **obs**.
         * The object structure is documented below.
         */
        properties?: pulumi.Input<inputs.ServiceStage.ComponentInstanceArtifactProperties>;
        /**
         * Specifies the data storage configuration.
         * The object structure is documented below.
         */
        storage: pulumi.Input<string>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the software package or image address.
         * For a component deployed on a VM, this parameter is the software package address.
         * For a component deployed based on a container, this parameter is the image address or component name:v${index}.
         * The latter indicates that the component source code or the image automatically built using the software package
         * will be used.
         */
        url: pulumi.Input<string>;
        /**
         * Specifies the version number.
         */
        version?: pulumi.Input<string>;
    }

    export interface ComponentInstanceArtifactProperties {
        /**
         * Specifies the OBS bucket name.
         */
        bucket?: pulumi.Input<string>;
        /**
         * Specifies the OBS bucket endpoint.
         */
        endpoint?: pulumi.Input<string>;
        /**
         * Specifies the key name of the OBS object.
         */
        key?: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfiguration {
        /**
         * Specifies the environment variables.
         * The object structure is documented below.
         */
        envVariables?: pulumi.Input<pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationEnvVariable>[]>;
        /**
         * Specifies the lifecycle.
         * The object structure is documented below.
         */
        lifecycle?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLifecycle>;
        /**
         * Specifies the policies of the log collection.
         * The object structure is documented below.
         */
        logCollectionPolicies?: pulumi.Input<pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLogCollectionPolicy>[]>;
        /**
         * Specifies the variable value.
         * The object structure is documented below.
         */
        probe?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbe>;
        /**
         * Specifies the scheduling policy.
         * The key indicates the component name. In the Docker container scenario, key indicates the container name.
         * If the source parameters of a component specify the software package source, this parameter is optional, and the
         * software package source of the component is inherited by default. Otherwise, this parameter is required.
         * The object structure is documented below.
         */
        scheduler?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationScheduler>;
        /**
         * Specifies the data storage configuration.
         * The object structure is documented below.
         */
        storages?: pulumi.Input<pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationStorage>[]>;
        /**
         * Specifies the upgrade policy.
         * The object structure is documented below.
         */
        strategy?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationStrategy>;
    }

    export interface ComponentInstanceConfigurationEnvVariable {
        /**
         * Specifies the name of a configuration item or secret.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the variable value.
         */
        value: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationLifecycle {
        /**
         * Specifies the startup commands.
         * The object structure is documented below.
         */
        entrypoint?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLifecycleEntrypoint>;
        /**
         * Specifies the post-start processing.
         * The object structure is documented below.
         */
        postStart?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLifecyclePostStart>;
        /**
         * Specifies the pre-stop processing.
         * The object structure is documented below.
         */
        preStop?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLifecyclePreStop>;
    }

    export interface ComponentInstanceConfigurationLifecycleEntrypoint {
        /**
         * Specifies the running parameters.
         */
        args: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the command list.
         */
        commands: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ComponentInstanceConfigurationLifecyclePostStart {
        /**
         * Specifies the start post-processing or stop pre-processing parameters.
         * The object structure is documented below.
         */
        parameters: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLifecyclePostStartParameters>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationLifecyclePostStartParameters {
        /**
         * Specifies the command list.
         */
        commands: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the custom IP address. The defualt address is pod IP address.
         */
        host?: pulumi.Input<string>;
        /**
         * Specifies the request path.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the listening port of the application component process.
         */
        port: pulumi.Input<number>;
    }

    export interface ComponentInstanceConfigurationLifecyclePreStop {
        /**
         * Specifies the start post-processing or stop pre-processing parameters.
         * The object structure is documented below.
         */
        parameters: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLifecyclePreStopParameters>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationLifecyclePreStopParameters {
        /**
         * Specifies the command list.
         */
        commands: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the custom IP address. The defualt address is pod IP address.
         */
        host?: pulumi.Input<string>;
        /**
         * Specifies the request path.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the listening port of the application component process.
         */
        port: pulumi.Input<number>;
    }

    export interface ComponentInstanceConfigurationLogCollectionPolicy {
        /**
         * Specifies the configurations of the container mounting.
         * The object structure is documented below.
         */
        containerMountings: pulumi.Input<pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationLogCollectionPolicyContainerMounting>[]>;
        /**
         * Specifies the The host path that will be mounted to the specified container path.
         */
        hostPath?: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationLogCollectionPolicyContainerMounting {
        /**
         * Specifies the aging period.
         * The valid values are **Hourly**, **Daily** and **Weekly**. The default value is **Hourly**.
         */
        agingPeriod?: pulumi.Input<string>;
        /**
         * Specifies the extended host path.
         * This parameter can be configured only when `hostPath` is configured.
         * The valid values are as follows:
         * + **PodUID**
         * + **PodName**
         * + **PodUID/ContainerName**
         * + **PodName/ContainerName**
         */
        hostExtendPath?: pulumi.Input<string>;
        /**
         * Specifies the request path.
         */
        path: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationProbe {
        /**
         * Specifies the component liveness probe.
         * The object structure is documented below.
         */
        liveness?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeLiveness>;
        /**
         * Specifies the component service probe.
         * The object structure is documented below.
         */
        readiness?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeReadiness>;
    }

    export interface ComponentInstanceConfigurationProbeLiveness {
        /**
         * Specifies the commands. Required if `type` is **command**.
         * The object structure is documented below.
         */
        commandParam?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeLivenessCommandParam>;
        /**
         * Specifies the interval between the startup and detection.
         */
        delay?: pulumi.Input<number>;
        /**
         * Specifies the commands. Required if `type` is **http**.
         * The object structure is documented below.
         */
        httpParam?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeLivenessHttpParam>;
        /**
         * Specifies the commands. Required if `type` is **tcp**.
         * The object structure is documented below.
         */
        tcpParam?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeLivenessTcpParam>;
        /**
         * Specifies the detection timeout interval.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationProbeLivenessCommandParam {
        /**
         * Specifies the command list.
         */
        commands: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ComponentInstanceConfigurationProbeLivenessHttpParam {
        /**
         * Specifies the custom IP address. The defualt address is pod IP address.
         */
        host?: pulumi.Input<string>;
        /**
         * Specifies the request path.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the listening port of the application component process.
         */
        port: pulumi.Input<number>;
        /**
         * Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
         */
        scheme: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationProbeLivenessTcpParam {
        /**
         * Specifies the listening port of the application component process.
         */
        port: pulumi.Input<number>;
    }

    export interface ComponentInstanceConfigurationProbeReadiness {
        /**
         * Specifies the commands. Required if `type` is **command**.
         * The object structure is documented below.
         */
        commandParam?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeReadinessCommandParam>;
        /**
         * Specifies the interval between the startup and detection.
         */
        delay?: pulumi.Input<number>;
        /**
         * Specifies the commands. Required if `type` is **http**.
         * The object structure is documented below.
         */
        httpParam?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeReadinessHttpParam>;
        /**
         * Specifies the commands. Required if `type` is **tcp**.
         * The object structure is documented below.
         */
        tcpParam?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationProbeReadinessTcpParam>;
        /**
         * Specifies the detection timeout interval.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationProbeReadinessCommandParam {
        /**
         * Specifies the command list.
         */
        commands: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ComponentInstanceConfigurationProbeReadinessHttpParam {
        /**
         * Specifies the custom IP address. The defualt address is pod IP address.
         */
        host?: pulumi.Input<string>;
        /**
         * Specifies the request path.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the listening port of the application component process.
         */
        port: pulumi.Input<number>;
        /**
         * Specifies the protocol scheme. The valid values are **HTTP** and **HTTPS**.
         */
        scheme: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationProbeReadinessTcpParam {
        /**
         * Specifies the listening port of the application component process.
         */
        port: pulumi.Input<number>;
    }

    export interface ComponentInstanceConfigurationScheduler {
        /**
         * Specifies the commands.
         * The object structure is documented below.
         */
        affinity?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationSchedulerAffinity>;
        /**
         * Specifies the commands.
         * The object structure is documented below.
         */
        antiAffinity?: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationSchedulerAntiAffinity>;
    }

    export interface ComponentInstanceConfigurationSchedulerAffinity {
        /**
         * Specifies the AZ list.
         */
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the list of component instance names.
         */
        instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the node private IP address list.
         */
        privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ComponentInstanceConfigurationSchedulerAntiAffinity {
        /**
         * Specifies the AZ list.
         */
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the list of component instance names.
         */
        instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the node private IP address list.
         */
        privateIps?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ComponentInstanceConfigurationStorage {
        /**
         * Specifies the directory mounted to the container.
         * The object structure is documented below.
         */
        mounts: pulumi.Input<pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationStorageMount>[]>;
        /**
         * Specifies the storage parameters.
         * The object structure is documented below.
         */
        parameter: pulumi.Input<inputs.ServiceStage.ComponentInstanceConfigurationStorageParameter>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationStorageMount {
        /**
         * Specifies the request path.
         */
        path: pulumi.Input<string>;
        /**
         * Specifies the mounted disk permission is read-only or read-write.
         * + **true**: read-only.
         * + **false**: read-write.
         */
        readonly: pulumi.Input<boolean>;
        /**
         * Specifies the subpath of the mounted disk.
         * This parameter is applicable to `http` type.
         */
        subpath?: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationStorageParameter {
        /**
         * Specifies the PVC name.
         */
        claimName?: pulumi.Input<string>;
        /**
         * Specifies the name of a configuration item or secret.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the request path.
         */
        path?: pulumi.Input<string>;
    }

    export interface ComponentInstanceConfigurationStrategy {
        /**
         * Specifies the upgrade policy.
         * The valid values are **Recreate** or **RollingUpdate**. The default value is **RollingUpdate**.
         * The **Recreate** indicates in-place upgrade while the **RollingUpdate** indicates rolling upgrade.
         */
        upgrade?: pulumi.Input<string>;
    }

    export interface ComponentInstanceExternalAccess {
        /**
         * Specifies the access address. For example: www.example.com.
         */
        address?: pulumi.Input<string>;
        /**
         * Specifies the listening port of the application component process.
         */
        port?: pulumi.Input<number>;
        /**
         * Specifies the protocol. The valid values are **HTTP** and **HTTPS**.
         */
        protocol?: pulumi.Input<string>;
    }

    export interface ComponentInstanceReferResource {
        /**
         * Specifies the application alias, which is provided only in DCS scenario.
         * The valid values are: **distributed_session**, **distributed_cache** and **distributed_session, distributed_cache**.
         * Defaults to **distributed_session, distributed_cache**.
         */
        alias?: pulumi.Input<string>;
        /**
         * Specifies the resource ID.
         * If the `type` is set to **ecs**, the value of this parameter must be **Default**.
         */
        id: pulumi.Input<string>;
        /**
         * Specifies the start post-processing or stop pre-processing parameters.
         * The object structure is documented below.
         */
        parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Specifies the probe type. The valid values are as follows:
         * + **command**: command execution check.
         * + **http**: HTTP request check.
         * + **tcp**: TCP port check.
         */
        type: pulumi.Input<string>;
    }

    export interface ComponentSource {
        /**
         * Specifies the authorization name.
         * This parameter and `storageType` are alternative.
         */
        authorization?: pulumi.Input<string>;
        /**
         * Specifies the namespace name.
         */
        repoNamespace?: pulumi.Input<string>;
        /**
         * Specifies the name of the branch of the code repository.
         * The default value is `master`.
         */
        repoRef?: pulumi.Input<string>;
        /**
         * Specifies the storage type, such as **obs**, **swr**.
         * This parameter is conflict with `repoRef` and `repoNamespace`.
         */
        storageType?: pulumi.Input<string>;
        /**
         * Specifies the type of repository source or storage.
         * The valid values are **GitHub**, **GitLab**, **Gitee**, **Bitbucket** and **package**.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the URL of the repository or package storage.
         */
        url: pulumi.Input<string>;
    }

    export interface EnvironmentBasicResource {
        /**
         * Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
         * but for CCI namespace, this parameter needs to fill in **name**.
         */
        id: pulumi.Input<string>;
        /**
         * Specifies the resource type.
         * + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
         * + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
         */
        type: pulumi.Input<string>;
    }

    export interface EnvironmentOptionalResource {
        /**
         * Specifies the resource ID. For most resources, this parameter needs to fill in their **id**,
         * but for CCI namespace, this parameter needs to fill in **name**.
         */
        id: pulumi.Input<string>;
        /**
         * Specifies the resource type.
         * + The type of basic resource supports **cce**, **cci**, **ecs** and **as**.
         * + The type of optional resource supports **elb**, **eip**, **rds**, **dcs** and **cse**.
         */
        type: pulumi.Input<string>;
    }

}

export namespace Sfs {
    export interface FileSystemAccessRule {
        /**
         * Specifies the access level of the shared file system. Possible values are *ro* (
         * read-only)
         * and *rw* (read-write). The default value is *rw* (read/write). Changing this will create a new access rule.
         */
        accessLevel?: pulumi.Input<string>;
        /**
         * The UUID of the share access rule.
         */
        accessRuleId?: pulumi.Input<string>;
        /**
         * Specifies the value that defines the access rule. The value contains 1 to 255
         * characters. Changing this will create a new access rule. The value varies according to the scenario:
         * + Set the VPC ID in VPC authorization scenarios.
         * + Set this parameter in IP address authorization scenario:
         * - For an NFS shared file system, the value in the format of *VPC_ID#IP_address#priority#user_permission*.
         * For example, 0157b53f-4974-4e80-91c9-098532bcaf00#2.2.2.2/16#100#all_squash,root_squash.
         * - For a CIFS shared file system, the value in the format of *VPC_ID#IP_address#priority*.
         * For example, 0157b53f-4974-4e80-91c9-098532bcaf00#2.2.2.2/16#0.
         */
        accessTo?: pulumi.Input<string>;
        /**
         * Specifies the type of the share access rule. The default value is *cert*. Changing
         * this will create a new access rule.
         */
        accessType?: pulumi.Input<string>;
        /**
         * The status of the share access rule.
         */
        status?: pulumi.Input<string>;
    }

}

export namespace SharedApig {
    export interface ApiBackendParameter {
        /**
         * Specifies the description of the parameter. The description cannot exceed 255
         * characters.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the parameter location, which can be 'PATH', 'QUERY' or 'HEADER'.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the parameter name. A parameter name consists of 1–32 characters, starting with
         * a letter. Only letters, digits, periods (.), hyphens (-), and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the parameter type, which can be 'REQUEST', 'CONSTANT', or 'SYSTEM'.
         */
        type?: pulumi.Input<string>;
        /**
         * Specifies the parameter value, which is a string of not more than 255 characters. The
         * value varies depending on the parameter type:
         * + 'REQUEST': parameter name in `requestParameter`
         * + 'CONSTANT': real value of the parameter
         * + 'SYSTEM': gateway parameter name
         */
        value: pulumi.Input<string>;
    }

    export interface ApiFunctionBackend {
        /**
         * Specifies the function URN.
         */
        functionUrn: pulumi.Input<string>;
        /**
         * Specifies the invocation mode, which can be 'async' or 'sync'.
         */
        invocationType: pulumi.Input<string>;
        /**
         * Timeout duration (in ms) for API Gateway to request for FunctionGraph. Defaults to 50000.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the function version.
         */
        version: pulumi.Input<string>;
    }

    export interface ApiHttpBackend {
        /**
         * Specifies the backend request method, including 'GET','POST','PUT' and etc..
         */
        method: pulumi.Input<string>;
        /**
         * Specifies the backend request protocol. The value can be 'HTTP' and 'HTTPS'.
         */
        protocol: pulumi.Input<string>;
        /**
         * Timeout duration (in ms) for API Gateway to request for the backend service. Defaults to
         * 50000.
         */
        timeout?: pulumi.Input<number>;
        /**
         * Specifies the backend request path. The value must comply with URI specifications.
         */
        uri: pulumi.Input<string>;
        /**
         * Specifies the backend service address. An endpoint URL is in the format of
         * "domain name (or IP address):port number", with up to 255 characters. This parameter and `vpcChannel` are
         * alternative.
         */
        urlDomain?: pulumi.Input<string>;
        /**
         * Specifies the VPC channel ID. This parameter and `urlDomain` are alternative.
         */
        vpcChannel?: pulumi.Input<string>;
    }

    export interface ApiMockBackend {
        /**
         * Specifies the description of the Mock backend. The description cannot exceed 255
         * characters.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the return result.
         */
        resultContent?: pulumi.Input<string>;
        /**
         * Specifies the version of the Mock backend.
         */
        version?: pulumi.Input<string>;
    }

    export interface ApiRequestParameter {
        /**
         * Specifies the default value when the parameter is optional.
         */
        default?: pulumi.Input<string>;
        /**
         * Specifies the description of the parameter. The description cannot exceed 255
         * characters.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the input parameter location, which can be 'PATH', 'QUERY' or 'HEADER'.
         */
        location: pulumi.Input<string>;
        /**
         * Specifies the input parameter name. A parameter name consists of 1–32 characters, starting
         * with a letter. Only letters, digits, periods (.), hyphens (-), and underscores (_) are allowed.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies whether the parameter is mandatory or not.
         */
        required: pulumi.Input<boolean>;
        /**
         * Specifies the input parameter type, which can be 'STRING' or 'NUMBER'.
         */
        type: pulumi.Input<string>;
    }
}

export namespace Smn {
}

export namespace Sms {
    export interface TaskTargetServerDisk {
        /**
         * Specifies the partition type. The value can be **NORMAL** and **OS**.
         * Changing this parameter will create a new resource.
         */
        deviceType: pulumi.Input<string>;
        /**
         * Specifies the disk index, e.g. "0".
         * Changing this parameter will create a new resource.
         */
        diskId?: pulumi.Input<string>;
        /**
         * Specifies the volume name. In Windows, it indicates the drive letter,
         * and in Linux, it indicates the device ID, e.g. "/dev/sda1".
         * Changing this parameter will create a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies an array of physical volume informations.
         * The object is documented below. Changing this parameter will create a new resource.
         */
        physicalVolumes?: pulumi.Input<pulumi.Input<inputs.Sms.TaskTargetServerDiskPhysicalVolume>[]>;
        /**
         * Specifies the volume size in MB. Changing this parameter will create a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the used space in MB.
         * Changing this parameter will create a new resource.
         */
        usedSize?: pulumi.Input<number>;
    }

    export interface TaskTargetServerDiskPhysicalVolume {
        /**
         * Specifies the partition type. The value can be **NORMAL** and **OS**.
         * Changing this parameter will create a new resource.
         */
        deviceType: pulumi.Input<string>;
        /**
         * Specifies the file system type, e.g. "ext4".
         * Changing this parameter will create a new resource.
         */
        fileSystem: pulumi.Input<string>;
        /**
         * Specifies the serial number of the volume.
         * Changing this parameter will create a new resource.
         */
        index: pulumi.Input<number>;
        /**
         * Specifies the mount point, e.g. "/".
         * Changing this parameter will create a new resource.
         */
        mountPoint: pulumi.Input<string>;
        /**
         * Specifies the volume name. In Windows, it indicates the drive letter,
         * and in Linux, it indicates the device ID, e.g. "/dev/sda1".
         * Changing this parameter will create a new resource.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the volume size in MB. Changing this parameter will create a new resource.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the used space in MB.
         * Changing this parameter will create a new resource.
         */
        usedSize?: pulumi.Input<number>;
        /**
         * Specifies the GUID of the volume.
         * Changing this parameter will create a new resource.
         */
        uuid?: pulumi.Input<string>;
    }
}

export namespace Swr {
    export interface OrganizationPermissionsSelfPermission {
        /**
         * Specifies the permission of the existing HuaweiCloud user.
         * The values can be **Manage**, **Write** and **Read**.
         */
        permission?: pulumi.Input<string>;
        /**
         * Specifies the ID of the existing HuaweiCloud user.
         */
        userId?: pulumi.Input<string>;
        /**
         * Specifies the name of the existing HuaweiCloud user.
         */
        userName?: pulumi.Input<string>;
    }

    export interface OrganizationPermissionsUser {
        /**
         * Specifies the permission of the existing HuaweiCloud user.
         * The values can be **Manage**, **Write** and **Read**.
         */
        permission: pulumi.Input<string>;
        /**
         * Specifies the ID of the existing HuaweiCloud user.
         */
        userId: pulumi.Input<string>;
        /**
         * Specifies the name of the existing HuaweiCloud user.
         */
        userName?: pulumi.Input<string>;
    }
}

export namespace Tms {
    export interface TagsTag {
        /**
         * Specifies the tag key. The value can contain up to 36 characters.
         * Only letters, digits, hyphens (-), underscores (_), and Unicode characters from \u4e00 to \u9fff are allowed.
         * Changing this will create a new resource.
         */
        key: pulumi.Input<string>;
        /**
         * Specifies the tag value. The value can contain up to 43 characters.
         * Only letters, digits, periods (.), hyphens (-), and underscores (_), and Unicode characters from \u4e00 to \u9fff
         * are allowed. Changing this will create a new resource.
         */
        value: pulumi.Input<string>;
    }
}

export namespace Vod {
    export interface MediaAssetThumbnail {
        /**
         * Specifies the screenshot aspect ratio. The value can be:
         * + **0**: adaptive (maintain the original aspect ratio).
         * + **1**: 16:9.
         */
        aspectRatio?: pulumi.Input<number>;
        /**
         * Specifies the number of screenshots as the cover. Defaults to: **1**.
         * Changing this creates a new resource.
         */
        coverPosition?: pulumi.Input<number>;
        /**
         * Specifies an array of time points of screenshot. Required when `type` is **dots**.
         * Changing this creates a new resource.
         */
        dots?: pulumi.Input<pulumi.Input<number>[]>;
        /**
         * Specifies the screenshot file format. Currently, only **1** (jpg) is supported.
         * Defaults to: **1**. Changing this creates a new resource.
         */
        format?: pulumi.Input<number>;
        /**
         * Specifies the size of the longest side of the screenshot. Unit: pixel.
         * The width dimension is calculated by scaling the dimension proportional to the original video pixels.
         * Changing this creates a new resource.
         */
        maxLength?: pulumi.Input<number>;
        /**
         * Specifies the screenshot time interval (unit: second). The value range is 1 to 12.
         * Required when `type` is **time**. Changing this creates a new resource.
         */
        time?: pulumi.Input<number>;
        /**
         * Specifies the screenshot type. Valid values are: **time** and **dots**.
         * Changing this creates a new resource.
         */
        type: pulumi.Input<string>;
    }

    export interface TranscodingTemplateGroupQualityInfo {
        /**
         * Specifies the audio configurations.
         * The object structure is documented below.
         */
        audio?: pulumi.Input<inputs.Vod.TranscodingTemplateGroupQualityInfoAudio>;
        /**
         * Specifies the output format. The value can be: **HLS**, **MP4**, **DASH**,
         * **DASH_HLS**, **MP3** and **ADTS**.
         */
        outputFormat: pulumi.Input<string>;
        /**
         * Specifies the video configurations.
         * The object structure is documented below.
         */
        video?: pulumi.Input<inputs.Vod.TranscodingTemplateGroupQualityInfoVideo>;
    }

    export interface TranscodingTemplateGroupQualityInfoAudio {
        /**
         * Specifies the audio bitrate. The value can be **0** or range from
         * **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Specifies the audio channels. The value can be:
         * + **1**: Mono
         * + **2**: Stereo
         */
        channels: pulumi.Input<number>;
        /**
         * Specifies the audio sample rate. The value can be:
         * + **1**: AUTO
         * + **2**: 22,050 Hz
         * + **3**: 32,000 Hz
         * + **4**: 44,100 Hz
         * + **5**: 48,000 Hz
         * + **6**: 96,000 Hz
         */
        sampleRate: pulumi.Input<number>;
    }

    export interface TranscodingTemplateGroupQualityInfoVideo {
        /**
         * Specifies the audio bitrate. The value can be **0** or range from
         * **8** to **1000**. Defaults to: **0**. If set to **0**, the output audio will be produced at the recommended bitrate.
         */
        bitrate?: pulumi.Input<number>;
        /**
         * Specifies the video frame rate. The value ranges from **1** to **75**.
         * Defaults to: **1**. If set to **1**, the frame rate of the transcoded video is the same as that of the
         * untransocded video.
         */
        frameRate?: pulumi.Input<number>;
        /**
         * Specifies the video height. The value can be **0** or range from **128** to **2160**.
         * Defaults to: **0**. If set to **0**, the system will automatically adjust the `height` according to the `width`.
         */
        height?: pulumi.Input<number>;
        /**
         * Specifies the video quality.
         * The value can be: **4K**, **2K**, **FHD**, **SD**, **LD** and **HD**.
         */
        quality: pulumi.Input<string>;
        /**
         * Specifies the video width. The value can be **0** or range from **128** to **3840**.
         * Defaults to: **0**. If set to **0**, the system will automatically adjust the `width` according to the `height`.
         */
        width?: pulumi.Input<number>;
    }
}

export namespace Vpc {
    export interface BandwidthPublicip {
        /**
         * The ID of the EIP or IPv6 port that uses the bandwidth.
         */
        id?: pulumi.Input<string>;
        /**
         * The IPv4 or IPv6 address.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * The IP version, either 4 or 6.
         */
        ipVersion?: pulumi.Input<number>;
        /**
         * The EIP type. Possible values are *5_bgp* (dynamic BGP) and *5_sbgp* (static BGP).
         */
        type?: pulumi.Input<string>;
    }

    export interface EipBandwidth {
        /**
         * Specifies whether the bandwidth is billed by traffic or by bandwidth
         * size. The value can be *traffic* or *bandwidth*. Changing this creates a new resource.
         */
        chargeMode?: pulumi.Input<string>;
        /**
         * The shared bandwidth id. This parameter is mandatory when
         * `shareType` is set to **WHOLE**. Changing this creates a new resource.
         */
        id?: pulumi.Input<string>;
        /**
         * The bandwidth name, which is a string of 1 to 64 characters that contain letters, digits,
         * underscores (_), and hyphens (-). This parameter is mandatory when `shareType` is set to **PER**.
         */
        name?: pulumi.Input<string>;
        /**
         * Whether the bandwidth is dedicated or shared. Changing this creates a new
         * resource. Possible values are as follows:
         * + **PER**: Dedicated bandwidth
         * + **WHOLE**: Shared bandwidth
         */
        shareType: pulumi.Input<string>;
        /**
         * The bandwidth size. The value ranges from 1 to 300 Mbit/s. This parameter is mandatory
         * when `shareType` is set to **PER**.
         */
        size?: pulumi.Input<number>;
    }

    export interface EipPublicip {
        /**
         * Specifies the EIP to be assigned. The value must be a valid **IPv4**
         * address in the available IP address range. The system automatically assigns an EIP if you do not specify it.
         * Changing this creates a new resource.
         */
        ipAddress?: pulumi.Input<string>;
        /**
         * Specifies the IP version, either 4 (default) or 6.
         */
        ipVersion?: pulumi.Input<number>;
        /**
         * The port ID which the EIP associated with.
         */
        portId?: pulumi.Input<string>;
        /**
         * Specifies the EIP type. Possible values are *5_bgp* (dynamic BGP)
         * and *5_sbgp* (static BGP), the default value is *5_bgp*. Changing this creates a new resource.
         */
        type?: pulumi.Input<string>;
    }

    export interface PortAllowedAddressPair {
        ipAddress: pulumi.Input<string>;
        macAddress?: pulumi.Input<string>;
    }

    export interface PortExtraDhcpOption {
        ipVersion?: pulumi.Input<number>;
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface PortFixedIp {
        ipAddress?: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface RouteTableRoute {
        /**
         * - Specifies the supplementary information about the route.
         * The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
         */
        description?: pulumi.Input<string>;
        /**
         * - Specifies the destination address in the CIDR notation format,
         * for example, 192.168.200.0/24. The destination of each route must be unique and cannot overlap
         * with any subnet in the VPC.
         */
        destination: pulumi.Input<string>;
        /**
         * - Specifies the next hop.
         * + If the route type is **ecs**, the value is an ECS instance ID in the VPC.
         * + If the route type is **eni**, the value is the extension NIC of an ECS in the VPC.
         * + If the route type is **vip**, the value is a virtual IP address.
         * + If the route type is **nat**, the value is a VPN gateway ID.
         * + If the route type is **peering**, the value is a VPC peering connection ID.
         * + If the route type is **vpn**, the value is a VPN gateway ID.
         * + If the route type is **dc**, the value is a Direct Connect gateway ID.
         * + If the route type is **cc**, the value is a Cloud Connection ID.
         */
        nexthop: pulumi.Input<string>;
        /**
         * - Specifies the route type. Currently, the value can be:
         * **ecs**, **eni**, **vip**, **nat**, **peering**, **vpn**, **dc** and **cc**.
         */
        type: pulumi.Input<string>;
    }

    export interface SecgroupRule {
        /**
         * The effective policy.
         */
        action?: pulumi.Input<string>;
        /**
         * Specifies the description for the security group.
         */
        description?: pulumi.Input<string>;
        /**
         * The direction of the rule. The value can be *egress* or *ingress*.
         */
        direction?: pulumi.Input<string>;
        /**
         * The IP protocol version. The value can be *IPv4* or *IPv6*.
         */
        ethertype?: pulumi.Input<string>;
        /**
         * The security group rule ID.
         */
        id?: pulumi.Input<string>;
        portRangeMax?: pulumi.Input<number>;
        portRangeMin?: pulumi.Input<number>;
        /**
         * The port value range.
         */
        ports?: pulumi.Input<string>;
        /**
         * The priority number.
         */
        priority?: pulumi.Input<number>;
        /**
         * The protocol type.
         */
        protocol?: pulumi.Input<string>;
        /**
         * The ID of the remote address group.
         */
        remoteAddressGroupId?: pulumi.Input<string>;
        /**
         * The ID of the peer security group.
         */
        remoteGroupId?: pulumi.Input<string>;
        /**
         * The remote IP address. The value can be in the CIDR format or IP addresses.
         */
        remoteIpPrefix?: pulumi.Input<string>;
    }

    export interface VpcRoute {
        destination?: pulumi.Input<string>;
        nexthop?: pulumi.Input<string>;
    }

}

export namespace Vpcep {
    export interface ApprovalConnection {
        /**
         * The user's domain ID.
         */
        domainId?: pulumi.Input<string>;
        /**
         * The unique ID of the VPC endpoint.
         */
        endpointId?: pulumi.Input<string>;
        /**
         * The packet ID of the VPC endpoint.
         */
        packetId?: pulumi.Input<number>;
        /**
         * The connection status of the VPC endpoint.
         */
        status?: pulumi.Input<string>;
    }

    export interface ServiceConnection {
        /**
         * The user's domain ID.
         */
        domainId?: pulumi.Input<string>;
        /**
         * The unique ID of the VPC endpoint.
         */
        endpointId?: pulumi.Input<string>;
        /**
         * The packet ID of the VPC endpoint.
         */
        packetId?: pulumi.Input<number>;
        /**
         * The connection status of the VPC endpoint.
         */
        status?: pulumi.Input<string>;
    }

    export interface ServicePortMapping {
        /**
         * Specifies the protocol used in port mappings. The value can be **TCP** or **UDP**. The
         * default value is **TCP**.
         */
        protocol?: pulumi.Input<string>;
        /**
         * Specifies the port for accessing the VPC endpoint service. This port is provided by
         * the backend service to provide services. The value ranges from 1 to 65535.
         */
        servicePort?: pulumi.Input<number>;
        /**
         * Specifies the port for accessing the VPC endpoint. This port is provided by the VPC
         * endpoint, allowing you to access the VPC endpoint service. The value ranges from 1 to 65535.
         */
        terminalPort?: pulumi.Input<number>;
    }
}

export namespace Waf {
    export interface DedicatedDomainServer {
        /**
         * IP address or domain name of the web server that the client accesses. For
         * example, 192.168.1.1 or www.example.com. Changing this creates a new service.
         */
        address: pulumi.Input<string>;
        /**
         * Protocol type of the client. The options include `HTTP` and `HTTPS`.
         * Changing this creates a new service.
         */
        clientProtocol: pulumi.Input<string>;
        /**
         * Port number used by the web server. The value ranges from 0 to 65535. Changing this
         * creates a new service.
         */
        port: pulumi.Input<number>;
        /**
         * Protocol used by WAF to forward client requests to the server. The
         * options include `HTTP` and `HTTPS`. Changing this creates a new service.
         */
        serverProtocol: pulumi.Input<string>;
        /**
         * Server network type, IPv4 or IPv6. Valid values are: `ipv4` and `ipv6`. Changing
         * this creates a new service.
         */
        type: pulumi.Input<string>;
        /**
         * The id of the vpc used by the server. Changing this creates a service.
         */
        vpcId: pulumi.Input<string>;
    }

    export interface DomainServer {
        /**
         * IP address or domain name of the web server that the client accesses. For example,
         * 192.168.1.1 or www.a.com.
         */
        address: pulumi.Input<string>;
        /**
         * Protocol type of the client. The options include `HTTP` and `HTTPS`.
         */
        clientProtocol: pulumi.Input<string>;
        /**
         * Port number used by the web server. The value ranges from 0 to 65535, for example, 8080.
         */
        port: pulumi.Input<number>;
        /**
         * Protocol used by WAF to forward client requests to the server. The options
         * include `HTTP` and `HTTPS`.
         */
        serverProtocol: pulumi.Input<string>;
    }

    export interface PolicyOption {
        /**
         * Indicates whether Basic Web Protection is enabled.
         */
        basicWebProtection?: pulumi.Input<boolean>;
        /**
         * Indicates whether Blacklist and Whitelist is enabled.
         */
        blacklist?: pulumi.Input<boolean>;
        /**
         * Indicates whether CC Attack Protection is enabled.
         */
        ccAttackProtection?: pulumi.Input<boolean>;
        /**
         * Indicates whether the master crawler detection switch in Basic Web Protection is enabled.
         */
        crawler?: pulumi.Input<boolean>;
        /**
         * Indicates whether the Search Engine switch in Basic Web Protection is enabled.
         */
        crawlerEngine?: pulumi.Input<boolean>;
        /**
         * Indicates whether detection of other crawlers in Basic Web Protection is enabled.
         */
        crawlerOther?: pulumi.Input<boolean>;
        /**
         * Indicates whether the Scanner switch in Basic Web Protection is enabled.
         */
        crawlerScanner?: pulumi.Input<boolean>;
        /**
         * Indicates whether the Script Tool switch in Basic Web Protection is enabled.
         */
        crawlerScript?: pulumi.Input<boolean>;
        /**
         * Indicates whether Data Masking is enabled.
         */
        dataMasking?: pulumi.Input<boolean>;
        /**
         * Indicates whether False Alarm Masking is enabled.
         */
        falseAlarmMasking?: pulumi.Input<boolean>;
        /**
         * Indicates whether General Check in Basic Web Protection is enabled.
         */
        generalCheck?: pulumi.Input<boolean>;
        /**
         * Indicates whether Precise Protection is enabled.
         */
        preciseProtection?: pulumi.Input<boolean>;
        /**
         * Indicates whether Web Tamper Protection is enabled.
         */
        webTamperProtection?: pulumi.Input<boolean>;
        /**
         * Indicates whether webshell detection in Basic Web Protection is enabled.
         */
        webshell?: pulumi.Input<boolean>;
    }

}

export namespace Workspace {
    export interface DesktopDataVolume {
        /**
         * The time that the volume was created.
         */
        createdAt?: pulumi.Input<string>;
        /**
         * The device location to which the volume is attached.
         */
        device?: pulumi.Input<string>;
        /**
         * The volume ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the desktop name.
         * The name can contain `1` to `15` characters, only letters, digits and hyphens (-) are allowed.
         * The name must start with a letter or digit and cannot end with a hyphen.
         * Changing this will create a new resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the size of system volume, in GB.
         * + For root volume, the valid value is range from `80` to `1,020`.
         * + For data volume, the valid value is range from `10` to `8,200`.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the type of system volume.
         * The valid values are as follows:
         * + **SAS**: High I/O disk type.
         * + **SSD**: Ultra-high I/O disk type.
         */
        type: pulumi.Input<string>;
    }

    export interface DesktopNic {
        /**
         * Specifies the network ID of subnet resource.
         * Changing this will create a new resource.
         */
        networkId: pulumi.Input<string>;
    }

    export interface DesktopRootVolume {
        /**
         * The time that the volume was created.
         */
        createdAt?: pulumi.Input<string>;
        /**
         * The device location to which the volume is attached.
         */
        device?: pulumi.Input<string>;
        /**
         * The volume ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the desktop name.
         * The name can contain `1` to `15` characters, only letters, digits and hyphens (-) are allowed.
         * The name must start with a letter or digit and cannot end with a hyphen.
         * Changing this will create a new resource.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the size of system volume, in GB.
         * + For root volume, the valid value is range from `80` to `1,020`.
         * + For data volume, the valid value is range from `10` to `8,200`.
         */
        size: pulumi.Input<number>;
        /**
         * Specifies the type of system volume.
         * The valid values are as follows:
         * + **SAS**: High I/O disk type.
         * + **SSD**: Ultra-high I/O disk type.
         */
        type: pulumi.Input<string>;
    }

    export interface ServiceAdDomain {
        /**
         * Specifies the primary DNS IP address.
         */
        activeDnsIp?: pulumi.Input<string>;
        /**
         * Specifies the IP address of primary domain controller.
         */
        activeDomainIp: pulumi.Input<string>;
        /**
         * Specifies the name of primary domain controller.
         */
        activeDomainName: pulumi.Input<string>;
        /**
         * Specifies the domain administrator account.
         * It must be an existing domain administrator account on the AD server.
         */
        adminAccount: pulumi.Input<string>;
        /**
         * Specifies whether to delete the corresponding computer object on AD
         * while deleting the desktop.
         */
        deleteComputerObject?: pulumi.Input<boolean>;
        /**
         * Specifies the domain name.
         * The domain name must be an existing domain name on the AD server, and the length cannot exceed `55`.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the account password of domain administrator.
         */
        password: pulumi.Input<string>;
        /**
         * Specifies the standby DNS IP address.
         */
        standbyDnsIp?: pulumi.Input<string>;
        /**
         * Specifies the IP address of the standby domain controller.
         */
        standbyDomainIp?: pulumi.Input<string>;
        /**
         * Specifies the name of the standby domain controller.
         */
        standbyDomainName?: pulumi.Input<string>;
    }

    export interface ServiceDesktopSecurityGroup {
        /**
         * Security group ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the domain name.
         * The domain name must be an existing domain name on the AD server, and the length cannot exceed `55`.
         */
        name?: pulumi.Input<string>;
    }

    export interface ServiceInfrastructureSecurityGroup {
        /**
         * Security group ID.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the domain name.
         * The domain name must be an existing domain name on the AD server, and the length cannot exceed `55`.
         */
        name?: pulumi.Input<string>;
    }
}

export namespace config {
}
