// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages DLI Table resource within HuaweiCloud
 *
 * ## Example Usage
 * ### Create a Table
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const databaseName = config.requireObject("databaseName");
 * const testDatabase = new huaweicloud.dli.Database("testDatabase", {});
 * const testTable = new huaweicloud.dli.Table("testTable", {
 *     databaseName: testDatabase.name,
 *     dataLocation: "DLI",
 *     description: "SQL table_1 description",
 *     columns: [
 *         {
 *             name: "column_1",
 *             type: "string",
 *             description: "the first column",
 *         },
 *         {
 *             name: "column_2",
 *             type: "string",
 *             description: "the second column",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * DLI table can be imported by `id`. It is composed of the name of database which table belongs and the name of table,
 *
 * separated by a slash. For example,
 *
 * ```sh
 *  $ pulumi import huaweicloud:Dli/table:Table example <database_name>/<table_name>
 * ```
 */
export class Table extends pulumi.CustomResource {
    /**
     * Get an existing Table resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TableState, opts?: pulumi.CustomResourceOptions): Table {
        return new Table(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Dli/table:Table';

    /**
     * Returns true if the given object is an instance of Table.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Table {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Table.__pulumiType;
    }

    /**
     * Specifies storage path of data which will be import to the OBS table.
     * Changing this parameter will create a new resource.
     * > If you need to import data stored in OBS to the OBS table, set this parameter to the path of a folder. If the table
     * creation path is a file, data fails to be imported. which must be a path on OBS and must begin with obs.
     */
    public readonly bucketLocation!: pulumi.Output<string>;
    /**
     * Specifies Columns of the new table. Structure is documented below.
     * Changing this parameter will create a new resource.
     */
    public readonly columns!: pulumi.Output<outputs.Dli.TableColumn[] | undefined>;
    /**
     * Specifies type of the data to be added to the OBS table.
     * The options: parquet, orc, csv, json, carbon, and avro. Changing this parameter will create a new resource.
     */
    public readonly dataFormat!: pulumi.Output<string>;
    /**
     * Specifies data storage location. Changing this parameter will create
     * a newresource. The options are as follows:
     * + **DLI**: Data stored in DLI tables is applicable to delay-sensitive services, such as interactive queries.
     * + **OBS**: Data stored in OBS tables is applicable to delay-insensitive services, such as historical data statistics
     * and analysis.
     */
    public readonly dataLocation!: pulumi.Output<string>;
    /**
     * Specifies the database name which the table belongs to.
     * Changing this parameter will create a new resource.
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * Specifies date type. `yyyy-MM-dd` is used by default. Only
     * data in CSV and JSON files has this attribute. Changing this parameter will create a new resource.
     */
    public readonly dateFormat!: pulumi.Output<string>;
    /**
     * Specifies data delimiter. Only data in CSV files has this
     * attribute. Changing this parameter will create a new resource.
     */
    public readonly delimiter!: pulumi.Output<string>;
    /**
     * Specifies the description of column. Changing this parameter will
     * create a new resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies escape character. Backslashes (`\\`) are used by
     * default. Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    public readonly escapeChar!: pulumi.Output<string>;
    /**
     * Specifies the name of column. Changing this parameter will create a new
     * resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies reference character. Double quotation marks (`\`)
     * are used by default. Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    public readonly quoteChar!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the dli table resource. If omitted,
     * the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies timestamp type. `yyyy-MM-dd HH:mm:ss` is used by default.
     * Only data in CSV and JSON files has this attribute. Changing this parameter will create a new resource.
     */
    public readonly timestampFormat!: pulumi.Output<string>;
    /**
     * Specifies whether the table header is included in the data file.
     * Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    public readonly withColumnHeader!: pulumi.Output<boolean>;

    /**
     * Create a Table resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TableArgs | TableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TableState | undefined;
            resourceInputs["bucketLocation"] = state ? state.bucketLocation : undefined;
            resourceInputs["columns"] = state ? state.columns : undefined;
            resourceInputs["dataFormat"] = state ? state.dataFormat : undefined;
            resourceInputs["dataLocation"] = state ? state.dataLocation : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["dateFormat"] = state ? state.dateFormat : undefined;
            resourceInputs["delimiter"] = state ? state.delimiter : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["escapeChar"] = state ? state.escapeChar : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["quoteChar"] = state ? state.quoteChar : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["timestampFormat"] = state ? state.timestampFormat : undefined;
            resourceInputs["withColumnHeader"] = state ? state.withColumnHeader : undefined;
        } else {
            const args = argsOrState as TableArgs | undefined;
            if ((!args || args.dataLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataLocation'");
            }
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            resourceInputs["bucketLocation"] = args ? args.bucketLocation : undefined;
            resourceInputs["columns"] = args ? args.columns : undefined;
            resourceInputs["dataFormat"] = args ? args.dataFormat : undefined;
            resourceInputs["dataLocation"] = args ? args.dataLocation : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["dateFormat"] = args ? args.dateFormat : undefined;
            resourceInputs["delimiter"] = args ? args.delimiter : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["escapeChar"] = args ? args.escapeChar : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["quoteChar"] = args ? args.quoteChar : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timestampFormat"] = args ? args.timestampFormat : undefined;
            resourceInputs["withColumnHeader"] = args ? args.withColumnHeader : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Table.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Table resources.
 */
export interface TableState {
    /**
     * Specifies storage path of data which will be import to the OBS table.
     * Changing this parameter will create a new resource.
     * > If you need to import data stored in OBS to the OBS table, set this parameter to the path of a folder. If the table
     * creation path is a file, data fails to be imported. which must be a path on OBS and must begin with obs.
     */
    bucketLocation?: pulumi.Input<string>;
    /**
     * Specifies Columns of the new table. Structure is documented below.
     * Changing this parameter will create a new resource.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.Dli.TableColumn>[]>;
    /**
     * Specifies type of the data to be added to the OBS table.
     * The options: parquet, orc, csv, json, carbon, and avro. Changing this parameter will create a new resource.
     */
    dataFormat?: pulumi.Input<string>;
    /**
     * Specifies data storage location. Changing this parameter will create
     * a newresource. The options are as follows:
     * + **DLI**: Data stored in DLI tables is applicable to delay-sensitive services, such as interactive queries.
     * + **OBS**: Data stored in OBS tables is applicable to delay-insensitive services, such as historical data statistics
     * and analysis.
     */
    dataLocation?: pulumi.Input<string>;
    /**
     * Specifies the database name which the table belongs to.
     * Changing this parameter will create a new resource.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Specifies date type. `yyyy-MM-dd` is used by default. Only
     * data in CSV and JSON files has this attribute. Changing this parameter will create a new resource.
     */
    dateFormat?: pulumi.Input<string>;
    /**
     * Specifies data delimiter. Only data in CSV files has this
     * attribute. Changing this parameter will create a new resource.
     */
    delimiter?: pulumi.Input<string>;
    /**
     * Specifies the description of column. Changing this parameter will
     * create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies escape character. Backslashes (`\\`) are used by
     * default. Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    escapeChar?: pulumi.Input<string>;
    /**
     * Specifies the name of column. Changing this parameter will create a new
     * resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies reference character. Double quotation marks (`\`)
     * are used by default. Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    quoteChar?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the dli table resource. If omitted,
     * the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies timestamp type. `yyyy-MM-dd HH:mm:ss` is used by default.
     * Only data in CSV and JSON files has this attribute. Changing this parameter will create a new resource.
     */
    timestampFormat?: pulumi.Input<string>;
    /**
     * Specifies whether the table header is included in the data file.
     * Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    withColumnHeader?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Table resource.
 */
export interface TableArgs {
    /**
     * Specifies storage path of data which will be import to the OBS table.
     * Changing this parameter will create a new resource.
     * > If you need to import data stored in OBS to the OBS table, set this parameter to the path of a folder. If the table
     * creation path is a file, data fails to be imported. which must be a path on OBS and must begin with obs.
     */
    bucketLocation?: pulumi.Input<string>;
    /**
     * Specifies Columns of the new table. Structure is documented below.
     * Changing this parameter will create a new resource.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.Dli.TableColumn>[]>;
    /**
     * Specifies type of the data to be added to the OBS table.
     * The options: parquet, orc, csv, json, carbon, and avro. Changing this parameter will create a new resource.
     */
    dataFormat?: pulumi.Input<string>;
    /**
     * Specifies data storage location. Changing this parameter will create
     * a newresource. The options are as follows:
     * + **DLI**: Data stored in DLI tables is applicable to delay-sensitive services, such as interactive queries.
     * + **OBS**: Data stored in OBS tables is applicable to delay-insensitive services, such as historical data statistics
     * and analysis.
     */
    dataLocation: pulumi.Input<string>;
    /**
     * Specifies the database name which the table belongs to.
     * Changing this parameter will create a new resource.
     */
    databaseName: pulumi.Input<string>;
    /**
     * Specifies date type. `yyyy-MM-dd` is used by default. Only
     * data in CSV and JSON files has this attribute. Changing this parameter will create a new resource.
     */
    dateFormat?: pulumi.Input<string>;
    /**
     * Specifies data delimiter. Only data in CSV files has this
     * attribute. Changing this parameter will create a new resource.
     */
    delimiter?: pulumi.Input<string>;
    /**
     * Specifies the description of column. Changing this parameter will
     * create a new resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies escape character. Backslashes (`\\`) are used by
     * default. Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    escapeChar?: pulumi.Input<string>;
    /**
     * Specifies the name of column. Changing this parameter will create a new
     * resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies reference character. Double quotation marks (`\`)
     * are used by default. Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    quoteChar?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the dli table resource. If omitted,
     * the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies timestamp type. `yyyy-MM-dd HH:mm:ss` is used by default.
     * Only data in CSV and JSON files has this attribute. Changing this parameter will create a new resource.
     */
    timestampFormat?: pulumi.Input<string>;
    /**
     * Specifies whether the table header is included in the data file.
     * Only data in CSV files has this attribute. Changing this parameter will create a new resource.
     */
    withColumnHeader?: pulumi.Input<boolean>;
}
