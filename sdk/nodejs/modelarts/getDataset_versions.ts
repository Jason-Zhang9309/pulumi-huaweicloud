// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of ModelArts dataset versions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const datasetId = config.requireObject("datasetId");
 * const test = huaweicloud.ModelArts.getDataset_versions({
 *     datasetId: datasetId,
 * });
 * ```
 */
export function getDataset_versions(args: GetDataset_versionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataset_versionsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:ModelArts/getDataset_versions:getDataset_versions", {
        "datasetId": args.datasetId,
        "name": args.name,
        "region": args.region,
        "splitRatio": args.splitRatio,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataset_versions.
 */
export interface GetDataset_versionsArgs {
    /**
     * Specifies the ID of dataset.
     */
    datasetId: string;
    /**
     * Specifies the name of the dataset version.
     */
    name?: string;
    /**
     * Specifies the region in which to obtain dataset versions. If omitted, the
     * provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the range of splitting ratio which randomly divides a labeled sample
     * into a training set and a validation set. Separate the minimum and maximum split ratios with commas,
     * for example: "0.0,1.0".
     */
    splitRatio?: string;
}

/**
 * A collection of values returned by getDataset_versions.
 */
export interface GetDataset_versionsResult {
    readonly datasetId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the dataset version.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * The ratio of splitting which randomly divides a labeled sample into a training set and
     * a validation set.
     */
    readonly splitRatio?: string;
    /**
     * Indicates a list of all dataset versions found. Structure is documented below.
     */
    readonly versions: outputs.ModelArts.GetDataset_versionsVersion[];
}

export function getDataset_versionsOutput(args: GetDataset_versionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataset_versionsResult> {
    return pulumi.output(args).apply(a => getDataset_versions(a, opts))
}

/**
 * A collection of arguments for invoking getDataset_versions.
 */
export interface GetDataset_versionsOutputArgs {
    /**
     * Specifies the ID of dataset.
     */
    datasetId: pulumi.Input<string>;
    /**
     * Specifies the name of the dataset version.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to obtain dataset versions. If omitted, the
     * provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the range of splitting ratio which randomly divides a labeled sample
     * into a training set and a validation set. Separate the minimum and maximum split ratios with commas,
     * for example: "0.0,1.0".
     */
    splitRatio?: pulumi.Input<string>;
}
