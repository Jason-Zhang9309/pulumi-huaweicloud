// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of ModelArts datasets.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = pulumi.output(huaweicloud.ModelArts.getDatasets({
 *     name: "your_dataset_name",
 *     type: 1,
 * }));
 * ```
 */
export function getDatasets(args?: GetDatasetsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasetsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:ModelArts/getDatasets:getDatasets", {
        "name": args.name,
        "region": args.region,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatasets.
 */
export interface GetDatasetsArgs {
    /**
     * Specifies the name of datasets.
     */
    name?: string;
    /**
     * Specifies the region in which to obtain datasets. If omitted, the provider-level region
     * will be used.
     */
    region?: string;
    /**
     * Specifies the type of datasets. The options are:
     * + **0**: Image classification, supported formats: `.jpg`, `.png`, `.jpeg`, `.bmp`.
     * + **1**: Object detection, supported formats: `.jpg`, `.png`, `.jpeg`, `.bmp`.
     * + **3**: Image segmentation, supported formats: `.jpg`, `.png`, `.jpeg`, `.bmp`.
     * + **100**: Text classification, supported formats: `.txt`, `.csv`.
     * + **200**: Sound classification, Supported formats: `.wav`.
     * + **400**: Table type, supported formats: Carbon type.
     * + **600**: Video, supported formats: `.mp4`
     * + **900**: Free format.
     */
    type?: number;
}

/**
 * A collection of values returned by getDatasets.
 */
export interface GetDatasetsResult {
    /**
     * Indicates a list of all datasets found. Structure is documented below.
     */
    readonly datasets: outputs.ModelArts.GetDatasetsDataset[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of label.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * The field type. Valid values include: `String`, `Short`, `Int`, `Long`, `Double`, `Float`, `Byte`,
     * `Date`, `Timestamp`, `Bool`.
     */
    readonly type?: number;
}

export function getDatasetsOutput(args?: GetDatasetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasetsResult> {
    return pulumi.output(args).apply(a => getDatasets(a, opts))
}

/**
 * A collection of arguments for invoking getDatasets.
 */
export interface GetDatasetsOutputArgs {
    /**
     * Specifies the name of datasets.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to obtain datasets. If omitted, the provider-level region
     * will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the type of datasets. The options are:
     * + **0**: Image classification, supported formats: `.jpg`, `.png`, `.jpeg`, `.bmp`.
     * + **1**: Object detection, supported formats: `.jpg`, `.png`, `.jpeg`, `.bmp`.
     * + **3**: Image segmentation, supported formats: `.jpg`, `.png`, `.jpeg`, `.bmp`.
     * + **100**: Text classification, supported formats: `.txt`, `.csv`.
     * + **200**: Sound classification, Supported formats: `.wav`.
     * + **400**: Table type, supported formats: Carbon type.
     * + **600**: Video, supported formats: `.mp4`
     * + **900**: Free format.
     */
    type?: pulumi.Input<number>;
}
