// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage the VPC endpoint connections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const serviceVpcId = config.requireObject("serviceVpcId");
 * const vmPort = config.requireObject("vmPort");
 * const vpcId = config.requireObject("vpcId");
 * const networkId = config.requireObject("networkId");
 * const demoService = new huaweicloud.vpcep.Service("demoService", {
 *     serverType: "VM",
 *     vpcId: serviceVpcId,
 *     portId: vmPort,
 *     approval: true,
 *     portMappings: [{
 *         servicePort: 8080,
 *         terminalPort: 80,
 *     }],
 * });
 * const demoEndpoint = new huaweicloud.vpcep.Endpoint("demoEndpoint", {
 *     serviceId: demoService.id,
 *     vpcId: vpcId,
 *     networkId: networkId,
 *     enableDns: true,
 * });
 * const approval = new huaweicloud.vpcep.Approval("approval", {
 *     serviceId: demoService.id,
 *     endpoints: [demoEndpoint.id],
 * });
 * ```
 */
export class Approval extends pulumi.CustomResource {
    /**
     * Get an existing Approval resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApprovalState, opts?: pulumi.CustomResourceOptions): Approval {
        return new Approval(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Vpcep/approval:Approval';

    /**
     * Returns true if the given object is an instance of Approval.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Approval {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Approval.__pulumiType;
    }

    /**
     * An array of VPC endpoints connect to the VPC endpoint service. Structure is documented below.
     */
    public /*out*/ readonly connections!: pulumi.Output<outputs.Vpcep.ApprovalConnection[]>;
    /**
     * - Specifies the list of VPC endpoint IDs which accepted to connect to VPC endpoint
     * service. The VPC endpoints will be rejected when the resource was destroyed.
     */
    public readonly endpoints!: pulumi.Output<string[]>;
    /**
     * The region in which to obtain the VPC endpoint service. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * - Specifies the ID of the VPC endpoint service. Changing this creates a new
     * resource.
     */
    public readonly serviceId!: pulumi.Output<string>;

    /**
     * Create a Approval resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApprovalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApprovalArgs | ApprovalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApprovalState | undefined;
            resourceInputs["connections"] = state ? state.connections : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
        } else {
            const args = argsOrState as ApprovalArgs | undefined;
            if ((!args || args.endpoints === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpoints'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["endpoints"] = args ? args.endpoints : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["connections"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Approval.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Approval resources.
 */
export interface ApprovalState {
    /**
     * An array of VPC endpoints connect to the VPC endpoint service. Structure is documented below.
     */
    connections?: pulumi.Input<pulumi.Input<inputs.Vpcep.ApprovalConnection>[]>;
    /**
     * - Specifies the list of VPC endpoint IDs which accepted to connect to VPC endpoint
     * service. The VPC endpoints will be rejected when the resource was destroyed.
     */
    endpoints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which to obtain the VPC endpoint service. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * - Specifies the ID of the VPC endpoint service. Changing this creates a new
     * resource.
     */
    serviceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Approval resource.
 */
export interface ApprovalArgs {
    /**
     * - Specifies the list of VPC endpoint IDs which accepted to connect to VPC endpoint
     * service. The VPC endpoints will be rejected when the resource was destroyed.
     */
    endpoints: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The region in which to obtain the VPC endpoint service. If omitted, the
     * provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * - Specifies the ID of the VPC endpoint service. Changing this creates a new
     * resource.
     */
    serviceId: pulumi.Input<string>;
}
