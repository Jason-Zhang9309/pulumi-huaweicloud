// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an IoTDA data forwarding rule within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const disRegion = config.requireObject("disRegion");
 * const disStreamId = config.requireObject("disStreamId");
 * const obsRegion = config.requireObject("obsRegion");
 * const obsbucket = config.requireObject("obsbucket");
 * const test = new huaweicloud.iotda.DataforwardingRule("test", {
 *     trigger: "product:create",
 *     enabled: true,
 *     targets: [
 *         {
 *             type: "DIS_FORWARDING",
 *             disForwarding: {
 *                 region: disRegion,
 *                 streamId: disStreamId,
 *             },
 *         },
 *         {
 *             type: "HTTP_FORWARDING",
 *             httpForwarding: {
 *                 url: "http://www.yourDomain.com",
 *             },
 *         },
 *         {
 *             type: "OBS_FORWARDING",
 *             obsForwarding: {
 *                 region: obsRegion,
 *                 bucket: obsbucket,
 *             },
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Data forwarding rules can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:IoTDA/dataforwardingRule:DataforwardingRule test 10022532f4f94f26b01daa1e424853e1
 * ```
 *
 *  Note that the imported state may not be identical to your resource definition, due to some attrubutes missing from the API response, security or some other reason. The missing attributes include`password` of `kafka_forwarding`. It is generally recommended running `terraform plan` after importing the resource. You can then decide if changes should be applied to the resource, or the resource definition should be updated to align with the group. Also you can ignore changes as below. resource "huaweicloud_iotda_device_group" "test" {
 *
 *  ...
 *
 *  lifecycle {
 *
 *  ignore_changes = [
 *
 *  targets,
 *
 *  ]
 *
 *  } }
 */
export class DataforwardingRule extends pulumi.CustomResource {
    /**
     * Get an existing DataforwardingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataforwardingRuleState, opts?: pulumi.CustomResourceOptions): DataforwardingRule {
        return new DataforwardingRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:IoTDA/dataforwardingRule:DataforwardingRule';

    /**
     * Returns true if the given object is an instance of DataforwardingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataforwardingRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataforwardingRule.__pulumiType;
    }

    /**
     * Specifies the description of data forwarding rule. The description contains
     * a maximum of 256 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether to enable the data forwarding rule. Defaults to `false`.
     * Can not enable without `targets`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the name of data forwarding rule. The name contains a maximum of 256 characters.
     * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
     * allowed: `?'#().,&%@!`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region to which the KAFKA belongs.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the SQL SELECT statement which contains a maximum of 500 characters.
     */
    public readonly select!: pulumi.Output<string | undefined>;
    /**
     * Specifies the resource space ID which uses the data forwarding rule.
     * If omitted, all resource space will use the data forwarding rule. Changing this parameter will create a new resource.
     */
    public readonly spaceId!: pulumi.Output<string>;
    /**
     * Specifies the list of the targets (HUAWEI CLOUD services or private servers) to which you
     * want to forward the data. The targets structure is documented below.
     */
    public readonly targets!: pulumi.Output<outputs.IoTDA.DataforwardingRuleTarget[] | undefined>;
    /**
     * Specifies the trigger event. The options are as follows:
     * + **device:create**: Device added.
     * + **device:delete**: Device deleted.
     * + **device:update**: Device updated.
     * + **device.status:update**: Device status changed.
     * + **device.property:report**: Device property reported.
     * + **device.message:report**: Device message reported.
     * + **device.message.status:update**: Device message status changed.
     * + **batchtask:update**: Batch task status changed.
     * + **product:create**: Product added.
     * + **product:delete**: Product deleted.
     * + **product:update**: Product updated.
     * + **device.command.status:update**: Update of the device asynchronous command status.
     */
    public readonly trigger!: pulumi.Output<string>;
    /**
     * Specifies the SQL WHERE statement which contains a maximum of 500 characters.
     */
    public readonly where!: pulumi.Output<string | undefined>;

    /**
     * Create a DataforwardingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataforwardingRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataforwardingRuleArgs | DataforwardingRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataforwardingRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["select"] = state ? state.select : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
            resourceInputs["trigger"] = state ? state.trigger : undefined;
            resourceInputs["where"] = state ? state.where : undefined;
        } else {
            const args = argsOrState as DataforwardingRuleArgs | undefined;
            if ((!args || args.trigger === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trigger'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["select"] = args ? args.select : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["trigger"] = args ? args.trigger : undefined;
            resourceInputs["where"] = args ? args.where : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataforwardingRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataforwardingRule resources.
 */
export interface DataforwardingRuleState {
    /**
     * Specifies the description of data forwarding rule. The description contains
     * a maximum of 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the data forwarding rule. Defaults to `false`.
     * Can not enable without `targets`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of data forwarding rule. The name contains a maximum of 256 characters.
     * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
     * allowed: `?'#().,&%@!`.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region to which the KAFKA belongs.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the SQL SELECT statement which contains a maximum of 500 characters.
     */
    select?: pulumi.Input<string>;
    /**
     * Specifies the resource space ID which uses the data forwarding rule.
     * If omitted, all resource space will use the data forwarding rule. Changing this parameter will create a new resource.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * Specifies the list of the targets (HUAWEI CLOUD services or private servers) to which you
     * want to forward the data. The targets structure is documented below.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.IoTDA.DataforwardingRuleTarget>[]>;
    /**
     * Specifies the trigger event. The options are as follows:
     * + **device:create**: Device added.
     * + **device:delete**: Device deleted.
     * + **device:update**: Device updated.
     * + **device.status:update**: Device status changed.
     * + **device.property:report**: Device property reported.
     * + **device.message:report**: Device message reported.
     * + **device.message.status:update**: Device message status changed.
     * + **batchtask:update**: Batch task status changed.
     * + **product:create**: Product added.
     * + **product:delete**: Product deleted.
     * + **product:update**: Product updated.
     * + **device.command.status:update**: Update of the device asynchronous command status.
     */
    trigger?: pulumi.Input<string>;
    /**
     * Specifies the SQL WHERE statement which contains a maximum of 500 characters.
     */
    where?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataforwardingRule resource.
 */
export interface DataforwardingRuleArgs {
    /**
     * Specifies the description of data forwarding rule. The description contains
     * a maximum of 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the data forwarding rule. Defaults to `false`.
     * Can not enable without `targets`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of data forwarding rule. The name contains a maximum of 256 characters.
     * Only letters, Chinese characters, digits, hyphens (-), underscores (_) and the following specail characters are
     * allowed: `?'#().,&%@!`.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region to which the KAFKA belongs.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the SQL SELECT statement which contains a maximum of 500 characters.
     */
    select?: pulumi.Input<string>;
    /**
     * Specifies the resource space ID which uses the data forwarding rule.
     * If omitted, all resource space will use the data forwarding rule. Changing this parameter will create a new resource.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * Specifies the list of the targets (HUAWEI CLOUD services or private servers) to which you
     * want to forward the data. The targets structure is documented below.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.IoTDA.DataforwardingRuleTarget>[]>;
    /**
     * Specifies the trigger event. The options are as follows:
     * + **device:create**: Device added.
     * + **device:delete**: Device deleted.
     * + **device:update**: Device updated.
     * + **device.status:update**: Device status changed.
     * + **device.property:report**: Device property reported.
     * + **device.message:report**: Device message reported.
     * + **device.message.status:update**: Device message status changed.
     * + **batchtask:update**: Batch task status changed.
     * + **product:create**: Product added.
     * + **product:delete**: Product deleted.
     * + **product:update**: Product updated.
     * + **device.command.status:update**: Update of the device asynchronous command status.
     */
    trigger: pulumi.Input<string>;
    /**
     * Specifies the SQL WHERE statement which contains a maximum of 500 characters.
     */
    where?: pulumi.Input<string>;
}
