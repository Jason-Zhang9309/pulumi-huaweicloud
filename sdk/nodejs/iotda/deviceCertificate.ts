// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IoTDA device CA certificate within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const certificateContent = config.requireObject("certificateContent");
 * const test = new huaweicloud.iotda.DeviceCertificate("test", {content: certificateContent});
 * ```
 *
 * ## Import
 *
 * Device CA certificates can be imported by `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:IoTDA/deviceCertificate:DeviceCertificate test 62b3cec5558d4b703f064534
 * ```
 *
 *  Note that the imported state may not be identical to your resource definition, due to some attributes missing from the API response, security or some other reason. The missing attributes include`content`, `space_id`, `verify_content`. It is generally recommended running `terraform plan` after importing the resource. You can then decide if changes should be applied to the resource, or the resource definition should be updated to align with the group. Also you can ignore changes as below. resource "huaweicloud_iotda_device_certificate" "test" {
 *
 *  ...
 *
 *  lifecycle {
 *
 *  ignore_changes = [
 *
 *  content, space_id, verify_content
 *
 *  ]
 *
 *  } }
 */
export class DeviceCertificate extends pulumi.CustomResource {
    /**
     * Get an existing DeviceCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceCertificateState, opts?: pulumi.CustomResourceOptions): DeviceCertificate {
        return new DeviceCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:IoTDA/deviceCertificate:DeviceCertificate';

    /**
     * Returns true if the given object is an instance of DeviceCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeviceCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeviceCertificate.__pulumiType;
    }

    /**
     * The CN name of the device CA certificate.
     */
    public /*out*/ readonly cn!: pulumi.Output<string>;
    /**
     * Specifies the content of device CA certificate.
     * Changing this parameter will create a new resource. Create a private CA certificate,
     * please following [reference](https://support.huaweicloud.com/usermanual-iothub/iot_01_0104.html)
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * The effective date of the device CA certificate.
     * The format is: **yyyyMMdd'T'HHmmss'Z'**, e.g., **20151212T121212Z**.
     */
    public /*out*/ readonly effectiveDate!: pulumi.Output<string>;
    /**
     * The expiry date of the device CA certificate.
     * The format is: **yyyyMMdd'T'HHmmss'Z'**, e.g., **20151212T121212Z**.
     */
    public /*out*/ readonly expiryDate!: pulumi.Output<string>;
    /**
     * The owner of the device CA certificate.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the IoTDA device CA certificate
     * resource. If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the resource space ID to which the device CA certificate belongs.
     * If omitted, the certificate will belong to the default resource space.
     * Changing this parameter will create a new resource.
     */
    public readonly spaceId!: pulumi.Output<string | undefined>;
    /**
     * The status of the device CA certificate. The valid values are **Unverified** and **Verified**.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The verify code of the device CA certificate.
     */
    public /*out*/ readonly verifyCode!: pulumi.Output<string>;
    /**
     * Specifies the content of verification certificate. Can only be used to verify
     * the validity of the device CA certificate after creation. Get the verification certificate,
     * please following [reference](https://support.huaweicloud.com/usermanual-iothub/iot_01_0106.html)
     */
    public readonly verifyContent!: pulumi.Output<string | undefined>;

    /**
     * Create a DeviceCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeviceCertificateArgs | DeviceCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeviceCertificateState | undefined;
            resourceInputs["cn"] = state ? state.cn : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["effectiveDate"] = state ? state.effectiveDate : undefined;
            resourceInputs["expiryDate"] = state ? state.expiryDate : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["verifyCode"] = state ? state.verifyCode : undefined;
            resourceInputs["verifyContent"] = state ? state.verifyContent : undefined;
        } else {
            const args = argsOrState as DeviceCertificateArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
            resourceInputs["verifyContent"] = args ? args.verifyContent : undefined;
            resourceInputs["cn"] = undefined /*out*/;
            resourceInputs["effectiveDate"] = undefined /*out*/;
            resourceInputs["expiryDate"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["verifyCode"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeviceCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeviceCertificate resources.
 */
export interface DeviceCertificateState {
    /**
     * The CN name of the device CA certificate.
     */
    cn?: pulumi.Input<string>;
    /**
     * Specifies the content of device CA certificate.
     * Changing this parameter will create a new resource. Create a private CA certificate,
     * please following [reference](https://support.huaweicloud.com/usermanual-iothub/iot_01_0104.html)
     */
    content?: pulumi.Input<string>;
    /**
     * The effective date of the device CA certificate.
     * The format is: **yyyyMMdd'T'HHmmss'Z'**, e.g., **20151212T121212Z**.
     */
    effectiveDate?: pulumi.Input<string>;
    /**
     * The expiry date of the device CA certificate.
     * The format is: **yyyyMMdd'T'HHmmss'Z'**, e.g., **20151212T121212Z**.
     */
    expiryDate?: pulumi.Input<string>;
    /**
     * The owner of the device CA certificate.
     */
    owner?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the IoTDA device CA certificate
     * resource. If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the resource space ID to which the device CA certificate belongs.
     * If omitted, the certificate will belong to the default resource space.
     * Changing this parameter will create a new resource.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * The status of the device CA certificate. The valid values are **Unverified** and **Verified**.
     */
    status?: pulumi.Input<string>;
    /**
     * The verify code of the device CA certificate.
     */
    verifyCode?: pulumi.Input<string>;
    /**
     * Specifies the content of verification certificate. Can only be used to verify
     * the validity of the device CA certificate after creation. Get the verification certificate,
     * please following [reference](https://support.huaweicloud.com/usermanual-iothub/iot_01_0106.html)
     */
    verifyContent?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DeviceCertificate resource.
 */
export interface DeviceCertificateArgs {
    /**
     * Specifies the content of device CA certificate.
     * Changing this parameter will create a new resource. Create a private CA certificate,
     * please following [reference](https://support.huaweicloud.com/usermanual-iothub/iot_01_0104.html)
     */
    content: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the IoTDA device CA certificate
     * resource. If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the resource space ID to which the device CA certificate belongs.
     * If omitted, the certificate will belong to the default resource space.
     * Changing this parameter will create a new resource.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * Specifies the content of verification certificate. Can only be used to verify
     * the validity of the device CA certificate after creation. Get the verification certificate,
     * please following [reference](https://support.huaweicloud.com/usermanual-iothub/iot_01_0106.html)
     */
    verifyContent?: pulumi.Input<string>;
}
