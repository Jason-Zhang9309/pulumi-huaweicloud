// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IoTDA AMQP queue resource within HuaweiCloud.
 *
 * > When accessing an IoTDA **standard** or **enterprise** edition instance, you need to specify the IoTDA service
 *   endpoint in `provider` block.
 *   You can login to the IoTDA console, choose the instance **Overview** and click **Access Details**
 *   to view the HTTPS application access address. An example of the access address might be
 *   **9bc34xxxxx.st1.iotda-app.ap-southeast-1.myhuaweicloud.com**, then you need to configure the
 *   `provider` block as follows:
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const queueName = config.requireObject("queueName");
 * const test = new huaweicloud.iotda.Amqp("test", {});
 * ```
 *
 * ## Import
 *
 * The AMQP queue can be imported using the `id`, e.g. bash
 *
 * ```sh
 *  $ pulumi import huaweicloud:IoTDA/amqp:Amqp test <id>
 * ```
 */
export class Amqp extends pulumi.CustomResource {
    /**
     * Get an existing Amqp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AmqpState, opts?: pulumi.CustomResourceOptions): Amqp {
        return new Amqp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:IoTDA/amqp:Amqp';

    /**
     * Returns true if the given object is an instance of Amqp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Amqp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Amqp.__pulumiType;
    }

    /**
     * The creation time of the AMQP queue.
     * The format is **yyyyMMdd'T'HHmmss'Z'**. e.g. **20151212T121212Z**.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Specifies the AMQP queue name, which contains `8` to `128` characters.
     * Only letters, digits, hyphens (-), underscores (_), dots (.) and colons (:) are allowed.
     * Changing this parameter will create a new resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the IoTDA AMQP queue resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The latest update time of the AMQP queue.
     * The format is **yyyyMMdd'T'HHmmss'Z'**. e.g. **20151212T121212Z**.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Amqp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AmqpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AmqpArgs | AmqpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AmqpState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as AmqpArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Amqp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Amqp resources.
 */
export interface AmqpState {
    /**
     * The creation time of the AMQP queue.
     * The format is **yyyyMMdd'T'HHmmss'Z'**. e.g. **20151212T121212Z**.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Specifies the AMQP queue name, which contains `8` to `128` characters.
     * Only letters, digits, hyphens (-), underscores (_), dots (.) and colons (:) are allowed.
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the IoTDA AMQP queue resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The latest update time of the AMQP queue.
     * The format is **yyyyMMdd'T'HHmmss'Z'**. e.g. **20151212T121212Z**.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Amqp resource.
 */
export interface AmqpArgs {
    /**
     * Specifies the AMQP queue name, which contains `8` to `128` characters.
     * Only letters, digits, hyphens (-), underscores (_), dots (.) and colons (:) are allowed.
     * Changing this parameter will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the IoTDA AMQP queue resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}
