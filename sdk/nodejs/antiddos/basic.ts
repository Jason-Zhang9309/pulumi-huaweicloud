// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages Cloud Native Anti-DDos Basic resource within HuaweiCloud.
 *
 * > The Cloud Native Anti-DDos Basic resource will be set to the default traffic cleaning threshold when destroyed,
 *   instead of deleting it.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const eipId = config.requireObject("eipId");
 * const antiddos1 = new huaweicloud.antiddos.Basic("antiddos1", {
 *     eipId: eipId,
 *     trafficThreshold: 150,
 * });
 * ```
 *
 * ## Import
 *
 * Cloud Native Anti-DDos Basic resources can be imported using `eip_id`. e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:AntiDDos/basic:Basic antiddos_1 c5256d47-8f9e-4ae7-9943-6e77e3d8bd2d
 * ```
 */
export class Basic extends pulumi.CustomResource {
    /**
     * Get an existing Basic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BasicState, opts?: pulumi.CustomResourceOptions): Basic {
        return new Basic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:AntiDDos/basic:Basic';

    /**
     * Returns true if the given object is an instance of Basic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Basic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Basic.__pulumiType;
    }

    /**
     * Specifies the ID of an EIP. Changing this creates a new resource.
     */
    public readonly eipId!: pulumi.Output<string>;
    /**
     * The public address of the EIP.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Specifies the region in which to manage the Cloud Native Anti-DDos Basic resource.
     * If omitted, the provider-level region will be used. Changing this creates a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The Anti-DDos status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the traffic cleaning threshold in Mbps.
     * The value can be 10, 30, 50, 70, 100, 120, 150, 200, 250, 300, 1000 Mbps.
     */
    public readonly trafficThreshold!: pulumi.Output<number>;

    /**
     * Create a Basic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BasicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BasicArgs | BasicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BasicState | undefined;
            resourceInputs["eipId"] = state ? state.eipId : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["trafficThreshold"] = state ? state.trafficThreshold : undefined;
        } else {
            const args = argsOrState as BasicArgs | undefined;
            if ((!args || args.eipId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eipId'");
            }
            if ((!args || args.trafficThreshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trafficThreshold'");
            }
            resourceInputs["eipId"] = args ? args.eipId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["trafficThreshold"] = args ? args.trafficThreshold : undefined;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Basic.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Basic resources.
 */
export interface BasicState {
    /**
     * Specifies the ID of an EIP. Changing this creates a new resource.
     */
    eipId?: pulumi.Input<string>;
    /**
     * The public address of the EIP.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Specifies the region in which to manage the Cloud Native Anti-DDos Basic resource.
     * If omitted, the provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The Anti-DDos status.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the traffic cleaning threshold in Mbps.
     * The value can be 10, 30, 50, 70, 100, 120, 150, 200, 250, 300, 1000 Mbps.
     */
    trafficThreshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Basic resource.
 */
export interface BasicArgs {
    /**
     * Specifies the ID of an EIP. Changing this creates a new resource.
     */
    eipId: pulumi.Input<string>;
    /**
     * Specifies the region in which to manage the Cloud Native Anti-DDos Basic resource.
     * If omitted, the provider-level region will be used. Changing this creates a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the traffic cleaning threshold in Mbps.
     * The value can be 10, 30, 50, 70, 100, 120, 150, 200, 250, 300, 1000 Mbps.
     */
    trafficThreshold: pulumi.Input<number>;
}
