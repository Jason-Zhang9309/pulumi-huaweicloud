// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of RDS SQLServer database privileges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = huaweicloud.Rds.getSqlserverDatabasePrivileges({
 *     instanceId: _var.instance_id,
 *     dbName: _var.db_name,
 * });
 * ```
 */
export function getSqlserverDatabasePrivileges(args: GetSqlserverDatabasePrivilegesArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlserverDatabasePrivilegesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Rds/getSqlserverDatabasePrivileges:getSqlserverDatabasePrivileges", {
        "dbName": args.dbName,
        "instanceId": args.instanceId,
        "readonly": args.readonly,
        "region": args.region,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlserverDatabasePrivileges.
 */
export interface GetSqlserverDatabasePrivilegesArgs {
    /**
     * Specifies the database name.
     */
    dbName: string;
    /**
     * Specifies the ID of the RDS SQLServer instance.
     */
    instanceId: string;
    /**
     * Specifies whether the database permission is **read-only**. Values option:
     * + **true**: indicates the read-only permission.
     * + **false**: indicates the read and write permission.
     */
    readonly?: boolean;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the username of the database account.
     */
    userName?: string;
}

/**
 * A collection of values returned by getSqlserverDatabasePrivileges.
 */
export interface GetSqlserverDatabasePrivilegesResult {
    readonly dbName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * The read-only database permission.
     */
    readonly readonly?: boolean;
    readonly region: string;
    readonly userName?: string;
    /**
     * The list of the accounts that accociated with the database.
     * The users structure is documented below.
     */
    readonly users: outputs.Rds.GetSqlserverDatabasePrivilegesUser[];
}

export function getSqlserverDatabasePrivilegesOutput(args: GetSqlserverDatabasePrivilegesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlserverDatabasePrivilegesResult> {
    return pulumi.output(args).apply(a => getSqlserverDatabasePrivileges(a, opts))
}

/**
 * A collection of arguments for invoking getSqlserverDatabasePrivileges.
 */
export interface GetSqlserverDatabasePrivilegesOutputArgs {
    /**
     * Specifies the database name.
     */
    dbName: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS SQLServer instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies whether the database permission is **read-only**. Values option:
     * + **true**: indicates the read-only permission.
     * + **false**: indicates the read and write permission.
     */
    readonly?: pulumi.Input<boolean>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the username of the database account.
     */
    userName?: pulumi.Input<string>;
}
