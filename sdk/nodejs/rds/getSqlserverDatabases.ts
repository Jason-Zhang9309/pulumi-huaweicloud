// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of RDS SQLServer databases.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = huaweicloud.Rds.getSqlserverDatabases({
 *     instanceId: _var.instance_id,
 *     name: "test",
 * });
 * ```
 */
export function getSqlserverDatabases(args: GetSqlserverDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlserverDatabasesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Rds/getSqlserverDatabases:getSqlserverDatabases", {
        "characterSet": args.characterSet,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlserverDatabases.
 */
export interface GetSqlserverDatabasesArgs {
    /**
     * Specifies the character set used by the database.
     */
    characterSet?: string;
    /**
     * Specifies the ID of the RDS SQLServer instance.
     */
    instanceId: string;
    /**
     * Specifies the database name.
     */
    name?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the database status.
     */
    state?: string;
}

/**
 * A collection of values returned by getSqlserverDatabases.
 */
export interface GetSqlserverDatabasesResult {
    /**
     * Indicates the character set used by the database.
     */
    readonly characterSet?: string;
    /**
     * The list of databases.
     * The databases structure is documented below.
     */
    readonly databases: outputs.Rds.GetSqlserverDatabasesDatabase[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    /**
     * Indicates the database name.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * Indicates the database status.
     */
    readonly state?: string;
}

export function getSqlserverDatabasesOutput(args: GetSqlserverDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlserverDatabasesResult> {
    return pulumi.output(args).apply(a => getSqlserverDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getSqlserverDatabases.
 */
export interface GetSqlserverDatabasesOutputArgs {
    /**
     * Specifies the character set used by the database.
     */
    characterSet?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS SQLServer instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the database name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the database status.
     */
    state?: pulumi.Input<string>;
}
