// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an RDS MySQL proxy restart resource within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const proxyId = config.requireObject("proxyId");
 * const test = new huaweicloud.rds.MysqlProxyRestart("test", {
 *     instanceId: instanceId,
 *     proxyId: proxyId,
 * });
 * ```
 */
export class MysqlProxyRestart extends pulumi.CustomResource {
    /**
     * Get an existing MysqlProxyRestart resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlProxyRestartState, opts?: pulumi.CustomResourceOptions): MysqlProxyRestart {
        return new MysqlProxyRestart(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Rds/mysqlProxyRestart:MysqlProxyRestart';

    /**
     * Returns true if the given object is an instance of MysqlProxyRestart.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlProxyRestart {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlProxyRestart.__pulumiType;
    }

    /**
     * Specifies the ID of the RDS MySQL instance. Changing this parameter will
     * create a new resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the RDS MySQL proxy. Changing this parameter will create
     * a new resource.
     */
    public readonly proxyId!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a MysqlProxyRestart resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MysqlProxyRestartArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlProxyRestartArgs | MysqlProxyRestartState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlProxyRestartState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["proxyId"] = state ? state.proxyId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as MysqlProxyRestartArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.proxyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["proxyId"] = args ? args.proxyId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MysqlProxyRestart.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MysqlProxyRestart resources.
 */
export interface MysqlProxyRestartState {
    /**
     * Specifies the ID of the RDS MySQL instance. Changing this parameter will
     * create a new resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS MySQL proxy. Changing this parameter will create
     * a new resource.
     */
    proxyId?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MysqlProxyRestart resource.
 */
export interface MysqlProxyRestartArgs {
    /**
     * Specifies the ID of the RDS MySQL instance. Changing this parameter will
     * create a new resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the ID of the RDS MySQL proxy. Changing this parameter will create
     * a new resource.
     */
    proxyId: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}
