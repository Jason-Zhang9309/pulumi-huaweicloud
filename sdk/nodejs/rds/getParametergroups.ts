// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of RDS parametergroups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.requireObject("name");
 * const test = huaweicloud.Rds.getParametergroups({
 *     name: name,
 * });
 * ```
 */
export function getParametergroups(args?: GetParametergroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetParametergroupsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Rds/getParametergroups:getParametergroups", {
        "datastoreName": args.datastoreName,
        "datastoreVersionName": args.datastoreVersionName,
        "name": args.name,
        "region": args.region,
        "userDefined": args.userDefined,
    }, opts);
}

/**
 * A collection of arguments for invoking getParametergroups.
 */
export interface GetParametergroupsArgs {
    /**
     * Specifies the database name.
     */
    datastoreName?: string;
    /**
     * Specifies the database version name.
     */
    datastoreVersionName?: string;
    /**
     * Specifies the parameter template name.
     */
    name?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies whether the parameter template is created by users.
     * The options are as follows:
     * + **false**: The parameter template is a default parameter template.
     * + **true**: The parameter template is a custom template.
     */
    userDefined?: boolean;
}

/**
 * A collection of values returned by getParametergroups.
 */
export interface GetParametergroupsResult {
    /**
     * Lists the configurations.
     * The configurations structure is documented below.
     */
    readonly configurations: outputs.Rds.GetParametergroupsConfiguration[];
    /**
     * The database name.
     */
    readonly datastoreName?: string;
    /**
     * The database version name.
     */
    readonly datastoreVersionName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The parameter template name.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * Whether the parameter template is created by users.
     * The values can be **false** and **true**.
     */
    readonly userDefined?: boolean;
}

export function getParametergroupsOutput(args?: GetParametergroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetParametergroupsResult> {
    return pulumi.output(args).apply(a => getParametergroups(a, opts))
}

/**
 * A collection of arguments for invoking getParametergroups.
 */
export interface GetParametergroupsOutputArgs {
    /**
     * Specifies the database name.
     */
    datastoreName?: pulumi.Input<string>;
    /**
     * Specifies the database version name.
     */
    datastoreVersionName?: pulumi.Input<string>;
    /**
     * Specifies the parameter template name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies whether the parameter template is created by users.
     * The options are as follows:
     * + **false**: The parameter template is a default parameter template.
     * + **true**: The parameter template is a custom template.
     */
    userDefined?: pulumi.Input<boolean>;
}
