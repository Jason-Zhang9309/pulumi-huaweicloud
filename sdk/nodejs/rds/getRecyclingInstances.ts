// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of RDS recycling instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const instanceId = config.requireObject("instanceId");
 * const test = huaweicloud.Rds.getRecyclingInstances({
 *     instanceId: instanceId,
 * });
 * ```
 */
export function getRecyclingInstances(args?: GetRecyclingInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetRecyclingInstancesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Rds/getRecyclingInstances:getRecyclingInstances", {
        "dataVip": args.dataVip,
        "engineName": args.engineName,
        "engineVersion": args.engineVersion,
        "enterpriseProjectId": args.enterpriseProjectId,
        "haMode": args.haMode,
        "instanceId": args.instanceId,
        "isServerless": args.isServerless,
        "name": args.name,
        "payModel": args.payModel,
        "recycleBackupId": args.recycleBackupId,
        "recycleStatus": args.recycleStatus,
        "region": args.region,
        "volumeSize": args.volumeSize,
        "volumeType": args.volumeType,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecyclingInstances.
 */
export interface GetRecyclingInstancesArgs {
    /**
     * Specifies the floating IP address.
     */
    dataVip?: string;
    /**
     * Specifies the DB engine name.
     */
    engineName?: string;
    /**
     * Specifies the DB engine version.
     */
    engineVersion?: string;
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: string;
    /**
     * Specifies the instance type.
     * Value options: **Ha**, **Single**.
     */
    haMode?: string;
    /**
     * Specifies the instance ID.
     */
    instanceId?: string;
    /**
     * Specifies whether the instance is a serverless instance.
     * Value options: **true**, **false**.
     */
    isServerless?: string;
    /**
     * Specifies the instance name.
     */
    name?: string;
    /**
     * Specifies the billing mode.
     * Value options: **0** (pay-per-use), **1** (yearly/monthly).
     */
    payModel?: string;
    /**
     * Specifies the backup ID.
     */
    recycleBackupId?: string;
    /**
     * Specifies the backup status.
     * Value options:
     * + **BUILDING**: The instance is being backed up and cannot be rebuilt.
     * + **COMPLETED**: The backup is complete and the instance can be rebuilt.
     */
    recycleStatus?: string;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the storage space in **GB**.
     * The value must be a multiple of **10** and the value range is from **40 GB** to **4,000 GB**.
     */
    volumeSize?: string;
    /**
     * Specifies the storage type.
     * Value options:
     * + **ULTRAHIGH**: ultra-high I/O storage.
     * + **ULTRAHIGHPRO**: ultra-high I/O (advanced) storage.
     * + **CLOUDSSD**: cloud SSD storage.
     * + **LOCALSSD**: local SSD storage.
     */
    volumeType?: string;
}

/**
 * A collection of values returned by getRecyclingInstances.
 */
export interface GetRecyclingInstancesResult {
    /**
     * Indicates the floating IP address.
     */
    readonly dataVip?: string;
    /**
     * Indicates the instance DB engine name.
     */
    readonly engineName?: string;
    /**
     * Indicates the instance DB engine version.
     */
    readonly engineVersion?: string;
    /**
     * Indicates the enterprise project ID.
     */
    readonly enterpriseProjectId?: string;
    /**
     * Indicates the instance type.
     */
    readonly haMode?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    /**
     * Indicates the list of recycling RDS instances.
     */
    readonly instances: outputs.Rds.GetRecyclingInstancesInstance[];
    /**
     * Indicates whether the instance is a serverless instance.
     */
    readonly isServerless?: string;
    /**
     * Indicates the instance name.
     */
    readonly name?: string;
    /**
     * Indicates the instance billing mode.
     */
    readonly payModel?: string;
    /**
     * Indicates the backup ID.
     */
    readonly recycleBackupId?: string;
    /**
     * Indicates the backup status.
     */
    readonly recycleStatus?: string;
    readonly region: string;
    /**
     * Indicates the storage space in **GB**.
     */
    readonly volumeSize?: string;
    /**
     * Indicates the storage type.
     */
    readonly volumeType?: string;
}

export function getRecyclingInstancesOutput(args?: GetRecyclingInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecyclingInstancesResult> {
    return pulumi.output(args).apply(a => getRecyclingInstances(a, opts))
}

/**
 * A collection of arguments for invoking getRecyclingInstances.
 */
export interface GetRecyclingInstancesOutputArgs {
    /**
     * Specifies the floating IP address.
     */
    dataVip?: pulumi.Input<string>;
    /**
     * Specifies the DB engine name.
     */
    engineName?: pulumi.Input<string>;
    /**
     * Specifies the DB engine version.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the instance type.
     * Value options: **Ha**, **Single**.
     */
    haMode?: pulumi.Input<string>;
    /**
     * Specifies the instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies whether the instance is a serverless instance.
     * Value options: **true**, **false**.
     */
    isServerless?: pulumi.Input<string>;
    /**
     * Specifies the instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the billing mode.
     * Value options: **0** (pay-per-use), **1** (yearly/monthly).
     */
    payModel?: pulumi.Input<string>;
    /**
     * Specifies the backup ID.
     */
    recycleBackupId?: pulumi.Input<string>;
    /**
     * Specifies the backup status.
     * Value options:
     * + **BUILDING**: The instance is being backed up and cannot be rebuilt.
     * + **COMPLETED**: The backup is complete and the instance can be rebuilt.
     */
    recycleStatus?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the resource.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the storage space in **GB**.
     * The value must be a multiple of **10** and the value range is from **40 GB** to **4,000 GB**.
     */
    volumeSize?: pulumi.Input<string>;
    /**
     * Specifies the storage type.
     * Value options:
     * + **ULTRAHIGH**: ultra-high I/O storage.
     * + **ULTRAHIGHPRO**: ultra-high I/O (advanced) storage.
     * + **CLOUDSSD**: cloud SSD storage.
     * + **LOCALSSD**: local SSD storage.
     */
    volumeType?: pulumi.Input<string>;
}
