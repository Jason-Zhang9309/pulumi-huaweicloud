// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of subnets belong to a specific IEC VPC.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject("vpcId");
 * const allSubnets = huaweicloud.Iec.getVpcSubnets({
 *     vpcId: vpcId,
 * });
 * ```
 */
export function getVpcSubnets(args: GetVpcSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcSubnetsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Iec/getVpcSubnets:getVpcSubnets", {
        "region": args.region,
        "siteId": args.siteId,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsArgs {
    /**
     * The region in which to obtain the subnets. If omitted, the provider-level region will be
     * used.
     */
    region?: string;
    /**
     * Specifies the ID of the IEC site.
     */
    siteId?: string;
    /**
     * Specifies the ID of the IEC VPC.
     */
    vpcId: string;
}

/**
 * A collection of values returned by getVpcSubnets.
 */
export interface GetVpcSubnetsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    /**
     * Indicates the ID of the IEC site.
     */
    readonly siteId?: string;
    /**
     * A list of all the subnets found. The object is documented below.
     */
    readonly subnets: outputs.Iec.GetVpcSubnetsSubnet[];
    readonly vpcId: string;
}

export function getVpcSubnetsOutput(args: GetVpcSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcSubnetsResult> {
    return pulumi.output(args).apply(a => getVpcSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsOutputArgs {
    /**
     * The region in which to obtain the subnets. If omitted, the provider-level region will be
     * used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the ID of the IEC site.
     */
    siteId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the IEC VPC.
     */
    vpcId: pulumi.Input<string>;
}
