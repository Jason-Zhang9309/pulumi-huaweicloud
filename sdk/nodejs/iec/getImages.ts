// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the available of HuaweiCloud IEC images.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const iecImage = pulumi.output(huaweicloud.Iec.getImages({
 *     osType: "Linux",
 * }));
 * ```
 */
export function getImages(args?: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Iec/getImages:getImages", {
        "name": args.name,
        "osType": args.osType,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesArgs {
    /**
     * Specifies the image Name, which can be queried with a regular expression.
     */
    name?: string;
    /**
     * Specifies the os type of the iec image.
     * "Linux", "Windows" and "Other" are supported.
     */
    osType?: string;
    /**
     * The region in which to obtain the images. If omitted, the provider-level region will be
     * used.
     */
    region?: string;
}

/**
 * A collection of values returned by getImages.
 */
export interface GetImagesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An array of one or more image. The images object structure is documented below.
     */
    readonly images: outputs.Iec.GetImagesImage[];
    /**
     * The name of the iec images.
     */
    readonly name?: string;
    /**
     * The osType of the iec images.
     */
    readonly osType?: string;
    readonly region: string;
}

export function getImagesOutput(args?: GetImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesResult> {
    return pulumi.output(args).apply(a => getImages(a, opts))
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesOutputArgs {
    /**
     * Specifies the image Name, which can be queried with a regular expression.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the os type of the iec image.
     * "Linux", "Windows" and "Other" are supported.
     */
    osType?: pulumi.Input<string>;
    /**
     * The region in which to obtain the images. If omitted, the provider-level region will be
     * used.
     */
    region?: pulumi.Input<string>;
}
