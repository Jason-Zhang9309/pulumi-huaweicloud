// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the details of a specific IEC subnet port.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const subnetId = config.requireObject("subnetId");
 * const port1 = huaweicloud.Iec.getPort({
 *     subnetId: subnetId,
 *     fixedIp: "192.168.1.123",
 * });
 * ```
 */
export function getPort(args?: GetPortArgs, opts?: pulumi.InvokeOptions): Promise<GetPortResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Iec/getPort:getPort", {
        "fixedIp": args.fixedIp,
        "id": args.id,
        "macAddress": args.macAddress,
        "region": args.region,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPort.
 */
export interface GetPortArgs {
    /**
     * The IP address of the port.
     */
    fixedIp?: string;
    /**
     * The ID of the port.
     */
    id?: string;
    /**
     * The MAC address of the port.
     */
    macAddress?: string;
    /**
     * The region in which to obtain the port. If omitted, the provider-level region will be
     * used.
     */
    region?: string;
    /**
     * The ID of the subnet which the port belongs to.
     */
    subnetId?: string;
}

/**
 * A collection of values returned by getPort.
 */
export interface GetPortResult {
    readonly fixedIp: string;
    /**
     * Specifies a data source ID in UUID format.
     */
    readonly id: string;
    readonly macAddress: string;
    readonly region: string;
    /**
     * Indicates the list of security group IDs applied on the port.
     */
    readonly securityGroups: string[];
    /**
     * Indicates the ID of the IEC site.
     */
    readonly siteId: string;
    /**
     * Indicates the status of the port.
     */
    readonly status: string;
    readonly subnetId: string;
}

export function getPortOutput(args?: GetPortOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPortResult> {
    return pulumi.output(args).apply(a => getPort(a, opts))
}

/**
 * A collection of arguments for invoking getPort.
 */
export interface GetPortOutputArgs {
    /**
     * The IP address of the port.
     */
    fixedIp?: pulumi.Input<string>;
    /**
     * The ID of the port.
     */
    id?: pulumi.Input<string>;
    /**
     * The MAC address of the port.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The region in which to obtain the port. If omitted, the provider-level region will be
     * used.
     */
    region?: pulumi.Input<string>;
    /**
     * The ID of the subnet which the port belongs to.
     */
    subnetId?: pulumi.Input<string>;
}
