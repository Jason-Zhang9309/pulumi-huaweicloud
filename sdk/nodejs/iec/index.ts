// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./eip";
export * from "./getBandwidths";
export * from "./getEips";
export * from "./getFlavors";
export * from "./getImages";
export * from "./getKeypair";
export * from "./getNetwork_acl";
export * from "./getPort";
export * from "./getSecurityGroup";
export * from "./getServer";
export * from "./getSites";
export * from "./getVpc";
export * from "./getVpcSubnets";
export * from "./keypair";
export * from "./networkAcl";
export * from "./networkAclRule";
export * from "./securityGroup";
export * from "./securityGroupRule";
export * from "./server";
export * from "./vip";
export * from "./vpc";
export * from "./vpcSubnet";

// Import resources to register:
import { Eip } from "./eip";
import { Keypair } from "./keypair";
import { NetworkAcl } from "./networkAcl";
import { NetworkAclRule } from "./networkAclRule";
import { SecurityGroup } from "./securityGroup";
import { SecurityGroupRule } from "./securityGroupRule";
import { Server } from "./server";
import { Vip } from "./vip";
import { Vpc } from "./vpc";
import { VpcSubnet } from "./vpcSubnet";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "huaweicloud:Iec/eip:Eip":
                return new Eip(name, <any>undefined, { urn })
            case "huaweicloud:Iec/keypair:Keypair":
                return new Keypair(name, <any>undefined, { urn })
            case "huaweicloud:Iec/networkAcl:NetworkAcl":
                return new NetworkAcl(name, <any>undefined, { urn })
            case "huaweicloud:Iec/networkAclRule:NetworkAclRule":
                return new NetworkAclRule(name, <any>undefined, { urn })
            case "huaweicloud:Iec/securityGroup:SecurityGroup":
                return new SecurityGroup(name, <any>undefined, { urn })
            case "huaweicloud:Iec/securityGroupRule:SecurityGroupRule":
                return new SecurityGroupRule(name, <any>undefined, { urn })
            case "huaweicloud:Iec/server:Server":
                return new Server(name, <any>undefined, { urn })
            case "huaweicloud:Iec/vip:Vip":
                return new Vip(name, <any>undefined, { urn })
            case "huaweicloud:Iec/vpc:Vpc":
                return new Vpc(name, <any>undefined, { urn })
            case "huaweicloud:Iec/vpcSubnet:VpcSubnet":
                return new VpcSubnet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/eip", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/keypair", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/networkAcl", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/networkAclRule", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/securityGroup", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/securityGroupRule", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/server", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/vip", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/vpc", _module)
pulumi.runtime.registerResourceModule("huaweicloud", "Iec/vpcSubnet", _module)
