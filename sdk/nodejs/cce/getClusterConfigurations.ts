// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get the configurations of a CCE cluster within HuaweiCloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const clusterId = config.requireObject("clusterId");
 * const test = huaweicloud.Cce.getClusterConfigurations({
 *     clusterId: clusterId,
 * });
 * ```
 */
export function getClusterConfigurations(args: GetClusterConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterConfigurationsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Cce/getClusterConfigurations:getClusterConfigurations", {
        "clusterId": args.clusterId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterConfigurations.
 */
export interface GetClusterConfigurationsArgs {
    /**
     * Specifies the cluster ID in which to query the configurations.
     */
    clusterId: string;
    /**
     * Specifies the region in which to obtain the CCE cluster configurations. If omitted, the
     * provider-level region will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getClusterConfigurations.
 */
export interface GetClusterConfigurationsResult {
    readonly clusterId: string;
    /**
     * The map of configurations.
     */
    readonly configurations: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
}

export function getClusterConfigurationsOutput(args: GetClusterConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterConfigurationsResult> {
    return pulumi.output(args).apply(a => getClusterConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getClusterConfigurations.
 */
export interface GetClusterConfigurationsOutputArgs {
    /**
     * Specifies the cluster ID in which to query the configurations.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Specifies the region in which to obtain the CCE cluster configurations. If omitted, the
     * provider-level region will be used.
     */
    region?: pulumi.Input<string>;
}
