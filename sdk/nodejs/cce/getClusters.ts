// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of CCE clusters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const clusterName = config.requireObject("clusterName");
 * const clusters = huaweicloud.Cce.getClusters({
 *     name: clusterName,
 *     status: "Available",
 * });
 * ```
 */
export function getClusters(args?: GetClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetClustersResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Cce/getClusters:getClusters", {
        "clusterId": args.clusterId,
        "clusterType": args.clusterType,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusters.
 */
export interface GetClustersArgs {
    /**
     * Specifies the ID of the cluster.
     */
    clusterId?: string;
    /**
     * Specifies the type of the cluster. Possible values: **VirtualMachine**, **BareMetal**.
     */
    clusterType?: string;
    /**
     * Specifies the enterprise project ID of the cluster.
     */
    enterpriseProjectId?: string;
    /**
     * Specifies the name of the cluster.
     */
    name?: string;
    /**
     * Specifies the region in which to obtain the CCE clusters. If omitted, the
     * provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the status of the cluster.
     */
    status?: string;
    /**
     * Specifies the VPC ID to which the cluster belongs.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getClusters.
 */
export interface GetClustersResult {
    readonly clusterId?: string;
    /**
     * The type of the cluster. Possible values: **VirtualMachine**, **ARM64**.
     */
    readonly clusterType?: string;
    /**
     * Indicates a list of CCE clusters found. Structure is documented below.
     */
    readonly clusters: outputs.Cce.GetClustersCluster[];
    /**
     * The enterprise project ID of the CCE cluster.
     */
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates a list of IDs of all CCE clusters found.
     */
    readonly ids: string[];
    /**
     * The user name.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * The status of the cluster.
     */
    readonly status?: string;
    /**
     * The vpc ID of the cluster.
     */
    readonly vpcId?: string;
}

export function getClustersOutput(args?: GetClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClustersResult> {
    return pulumi.output(args).apply(a => getClusters(a, opts))
}

/**
 * A collection of arguments for invoking getClusters.
 */
export interface GetClustersOutputArgs {
    /**
     * Specifies the ID of the cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Specifies the type of the cluster. Possible values: **VirtualMachine**, **BareMetal**.
     */
    clusterType?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project ID of the cluster.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to obtain the CCE clusters. If omitted, the
     * provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the status of the cluster.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the VPC ID to which the cluster belongs.
     */
    vpcId?: pulumi.Input<string>;
}
