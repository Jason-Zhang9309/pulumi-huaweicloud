// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the details of available DDS flavors.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const flavor = pulumi.output(huaweicloud.Dds.getFlavors({
 *     engineName: "DDS-Community",
 *     vcpus: "8",
 * }));
 * ```
 */
export function getFlavors(args: GetFlavorsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlavorsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Dds/getFlavors:getFlavors", {
        "engineName": args.engineName,
        "memory": args.memory,
        "region": args.region,
        "type": args.type,
        "vcpus": args.vcpus,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlavors.
 */
export interface GetFlavorsArgs {
    /**
     * Specifies the engine name of the dds, "DDS-Community" and "DDS-Enhanced" are
     * supported.
     */
    engineName: string;
    /**
     * Specifies the ram of the dds flavor in GB.
     */
    memory?: string;
    /**
     * Specifies the region in which to obtain the flavors. If omitted,
     * the provider-level region will be used.
     */
    region?: string;
    /**
     * Specifies the type of the dds falvor. "mongos", "shard", "config", "replica" and "single"
     * are supported.
     */
    type?: string;
    /**
     * Specifies the vcpus of the dds flavor.
     */
    vcpus?: string;
}

/**
 * A collection of values returned by getFlavors.
 */
export interface GetFlavorsResult {
    readonly engineName: string;
    /**
     * Indicates the flavors information. Structure is documented below.
     */
    readonly flavors: outputs.Dds.GetFlavorsFlavor[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * See `memory` above.
     */
    readonly memory?: string;
    readonly region: string;
    /**
     * See `type` above.
     */
    readonly type?: string;
    /**
     * See `vcpus` above.
     */
    readonly vcpus?: string;
}

export function getFlavorsOutput(args: GetFlavorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlavorsResult> {
    return pulumi.output(args).apply(a => getFlavors(a, opts))
}

/**
 * A collection of arguments for invoking getFlavors.
 */
export interface GetFlavorsOutputArgs {
    /**
     * Specifies the engine name of the dds, "DDS-Community" and "DDS-Enhanced" are
     * supported.
     */
    engineName: pulumi.Input<string>;
    /**
     * Specifies the ram of the dds flavor in GB.
     */
    memory?: pulumi.Input<string>;
    /**
     * Specifies the region in which to obtain the flavors. If omitted,
     * the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the type of the dds falvor. "mongos", "shard", "config", "replica" and "single"
     * are supported.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the vcpus of the dds flavor.
     */
    vcpus?: pulumi.Input<string>;
}
