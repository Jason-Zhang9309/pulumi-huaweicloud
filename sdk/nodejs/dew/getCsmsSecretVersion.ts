// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to query the version and plaintext of the CSMS(Cloud Secret Management Service) secret.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const version1 = pulumi.output(huaweicloud.Dew.getCsmsSecretVersion({
 *     secretName: "your_secret_name",
 * }));
 * ```
 */
export function getCsmsSecretVersion(args: GetCsmsSecretVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCsmsSecretVersionResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Dew/getCsmsSecretVersion:getCsmsSecretVersion", {
        "region": args.region,
        "secretName": args.secretName,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getCsmsSecretVersion.
 */
export interface GetCsmsSecretVersionArgs {
    /**
     * Specifies the region in which to obtain the CSMS secrets.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * The name of the CSMS secret to query.
     */
    secretName: string;
    /**
     * The version ID of the CSMS secret version to query.
     * If omitted, the latest version will be used.
     */
    version?: string;
}

/**
 * A collection of values returned by getCsmsSecretVersion.
 */
export interface GetCsmsSecretVersionResult {
    /**
     * Time when the CSMS secret version created, in UTC format.
     */
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the KMS CMK used for secret encryption.
     */
    readonly kmsKeyId: string;
    readonly region: string;
    readonly secretName: string;
    /**
     * The plaintext of a secret in text format.
     */
    readonly secretText: string;
    /**
     * The status of the CSMS secret version.
     */
    readonly statuses: string[];
    readonly version: string;
}

export function getCsmsSecretVersionOutput(args: GetCsmsSecretVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCsmsSecretVersionResult> {
    return pulumi.output(args).apply(a => getCsmsSecretVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCsmsSecretVersion.
 */
export interface GetCsmsSecretVersionOutputArgs {
    /**
     * Specifies the region in which to obtain the CSMS secrets.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * The name of the CSMS secret to query.
     */
    secretName: pulumi.Input<string>;
    /**
     * The version ID of the CSMS secret version to query.
     * If omitted, the latest version will be used.
     */
    version?: pulumi.Input<string>;
}
