// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get a list of keypairs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const config = new pulumi.Config();
 * const keypairName = config.requireObject("keypairName");
 * const test = huaweicloud.Dew.getKeypairs({
 *     name: keypairName,
 * });
 * ```
 */
export function getKeypairs(args?: GetKeypairsArgs, opts?: pulumi.InvokeOptions): Promise<GetKeypairsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Dew/getKeypairs:getKeypairs", {
        "fingerprint": args.fingerprint,
        "isManaged": args.isManaged,
        "name": args.name,
        "publicKey": args.publicKey,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeypairs.
 */
export interface GetKeypairsArgs {
    /**
     * Specifies the fingerprint of the keypair.
     */
    fingerprint?: string;
    /**
     * Specifies whether the private key is managed by HuaweiCloud.
     */
    isManaged?: boolean;
    /**
     * Specifies the name of the keypair.
     */
    name?: string;
    /**
     * Specifies the imported OpenSSH-formatted public key.
     */
    publicKey?: string;
    /**
     * The region in which to obtain the keypairs. If omitted, the provider-level region will
     * be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getKeypairs.
 */
export interface GetKeypairsResult {
    /**
     * Indicates the fingerprint information about an key pair.
     */
    readonly fingerprint?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether the private key is managed by HuaweiCloud.
     */
    readonly isManaged?: boolean;
    /**
     * Indicates a list of all keypairs found. Structure is documented below.
     */
    readonly keypairs: outputs.Dew.GetKeypairsKeypair[];
    /**
     * Indicates the name of the keypair.
     */
    readonly name?: string;
    /**
     * Indicates the imported OpenSSH-formatted public key.
     */
    readonly publicKey?: string;
    readonly region?: string;
}

export function getKeypairsOutput(args?: GetKeypairsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeypairsResult> {
    return pulumi.output(args).apply(a => getKeypairs(a, opts))
}

/**
 * A collection of arguments for invoking getKeypairs.
 */
export interface GetKeypairsOutputArgs {
    /**
     * Specifies the fingerprint of the keypair.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Specifies whether the private key is managed by HuaweiCloud.
     */
    isManaged?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the keypair.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the imported OpenSSH-formatted public key.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The region in which to obtain the keypairs. If omitted, the provider-level region will
     * be used.
     */
    region?: pulumi.Input<string>;
}
