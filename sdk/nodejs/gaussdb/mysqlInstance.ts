// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * GaussDB mysql instance management within HuaweiCoud.
 *
 * ## Example Usage
 * ### create a basic instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const instance1 = new huaweicloud.gaussdb.MysqlInstance("instance1", {
 *     password: _var.password,
 *     flavor: "gaussdb.mysql.4xlarge.x86.4",
 *     vpcId: _var.vpc_id,
 *     subnetId: _var.subnet_id,
 *     securityGroupId: _var.secgroup_id,
 * });
 * ```
 * ### create a gaussdb mysql instance with backup strategy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const instance1 = new huaweicloud.gaussdb.MysqlInstance("instance1", {
 *     password: _var.password,
 *     flavor: "gaussdb.mysql.4xlarge.x86.4",
 *     vpcId: _var.vpc_id,
 *     subnetId: _var.subnet_id,
 *     securityGroupId: _var.secgroup_id,
 *     backupStrategy: {
 *         startTime: "03:00-04:00",
 *         keepDays: 7,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * GaussDB instance can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:GaussDB/mysqlInstance:MysqlInstance instance_1 ee678f40-ce8e-4d0c-8221-38dead426f06
 * ```
 */
export class MysqlInstance extends pulumi.CustomResource {
    /**
     * Get an existing MysqlInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlInstanceState, opts?: pulumi.CustomResourceOptions): MysqlInstance {
        return new MysqlInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:GaussDB/mysqlInstance:MysqlInstance';

    /**
     * Returns true if the given object is an instance of MysqlInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlInstance.__pulumiType;
    }

    /**
     * Specifies whether audit log is enabled. The default value is `false`.
     */
    public readonly auditLogEnabled!: pulumi.Output<boolean>;
    public readonly autoPay!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether auto renew is enabled.
     * Valid values are "true" and "false". Changing this will do nothing.
     */
    public readonly autoRenew!: pulumi.Output<string | undefined>;
    /**
     * Specifies the availability zone mode: "single" or "multi".
     * Defaults to "single". Changing this parameter will create a new resource.
     */
    public readonly availabilityZoneMode!: pulumi.Output<string | undefined>;
    /**
     * Specifies the advanced backup policy. Structure is documented below.
     */
    public readonly backupStrategy!: pulumi.Output<outputs.GaussDB.MysqlInstanceBackupStrategy>;
    /**
     * Specifies the charging mode of the instance. Valid values are *prePaid*
     * and *postPaid*, defaults to *postPaid*. Changing this will do nothing.
     */
    public readonly chargingMode!: pulumi.Output<string | undefined>;
    /**
     * Specifies the configuration ID. Changing this parameter will create
     * a new resource.
     */
    public readonly configurationId!: pulumi.Output<string>;
    /**
     * Specifies the configuration name. Changing this parameter will create
     * a new resource.
     */
    public readonly configurationName!: pulumi.Output<string>;
    /**
     * Specifies the database information. Structure is documented below. Changing
     * this parameter will create a new resource.
     */
    public readonly datastore!: pulumi.Output<outputs.GaussDB.MysqlInstanceDatastore>;
    /**
     * Indicates the default username.
     */
    public /*out*/ readonly dbUserName!: pulumi.Output<string>;
    /**
     * Specifies the dedicated resource ID. Changing this parameter
     * will create a new resource.
     */
    public readonly dedicatedResourceId!: pulumi.Output<string>;
    /**
     * Specifies the dedicated resource name. Changing this parameter
     * will create a new resource.
     */
    public readonly dedicatedResourceName!: pulumi.Output<string>;
    /**
     * Specifies the enterprise project id. Required if EPS enabled.
     * Changing this parameter will create a new resource.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the instance specifications. Please use
     * `gaussdbMysqlFlavors` data source to fetch the available flavors.
     */
    public readonly flavor!: pulumi.Output<string>;
    /**
     * If specified, try to import the instance instead of creating if the name already
     * existed.
     */
    public readonly forceImport!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the availability zone where the master node
     * resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
     * resource.
     */
    public readonly masterAvailabilityZone!: pulumi.Output<string>;
    /**
     * Indicates the instance mode.
     */
    public /*out*/ readonly mode!: pulumi.Output<string>;
    /**
     * Specifies the instance name, which can be the same as an existing instance name. The value
     * must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
     * digits, hyphens (-), and underscores (_).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates the instance nodes information. Structure is documented below.
     */
    public /*out*/ readonly nodes!: pulumi.Output<outputs.GaussDB.MysqlInstanceNode[]>;
    /**
     * Specifies the database password. The value must be 8 to 32 characters in length,
     * including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
     * enter a strong password to improve security, preventing security risks such as brute force cracking.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Specifies the charging period of the instance.
     * If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
     * ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this will
     * do nothing.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Specifies the charging period unit of the instance.
     * Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
     * Changing this will do nothing.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * Indicates the database port.
     */
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * Indicates the private IP address of the DB instance.
     */
    public /*out*/ readonly privateWriteIp!: pulumi.Output<string>;
    /**
     * Indicates the address of the proxy.
     */
    public /*out*/ readonly proxyAddress!: pulumi.Output<string>;
    /**
     * Specifies the flavor of the proxy.
     */
    public readonly proxyFlavor!: pulumi.Output<string>;
    /**
     * Specifies the node count of the proxy.
     */
    public readonly proxyNodeNum!: pulumi.Output<number>;
    /**
     * Indicates the port of the proxy.
     */
    public /*out*/ readonly proxyPort!: pulumi.Output<number>;
    /**
     * Specifies the count of read replicas. Defaults to 1.
     */
    public readonly readReplicas!: pulumi.Output<number | undefined>;
    /**
     * The region in which to create the GaussDB mysql instance resource. If omitted,
     * the provider-level region will be used. Changing this creates a new instance resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the security group ID. Required if the selected subnet
     * doesn't enable network ACL. Changing this parameter will create a new resource.
     */
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    /**
     * Indicates the node status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the network ID of a subnet. Changing this parameter will create a
     * new resource.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Whether the kernel table name is case sensitive. The value can
     * be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
     * creation.
     */
    public readonly tableNameCaseSensitivity!: pulumi.Output<boolean | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
     * will create a new resource.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;
    /**
     * Specifies the volume size of the instance. The new storage space must be greater than
     * the current storage and must be a multiple of 10 GB. Only valid when in prePaid mode.
     */
    public readonly volumeSize!: pulumi.Output<number>;
    /**
     * Specifies the VPC ID. Changing this parameter will create a new resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a MysqlInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MysqlInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlInstanceArgs | MysqlInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlInstanceState | undefined;
            resourceInputs["auditLogEnabled"] = state ? state.auditLogEnabled : undefined;
            resourceInputs["autoPay"] = state ? state.autoPay : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["availabilityZoneMode"] = state ? state.availabilityZoneMode : undefined;
            resourceInputs["backupStrategy"] = state ? state.backupStrategy : undefined;
            resourceInputs["chargingMode"] = state ? state.chargingMode : undefined;
            resourceInputs["configurationId"] = state ? state.configurationId : undefined;
            resourceInputs["configurationName"] = state ? state.configurationName : undefined;
            resourceInputs["datastore"] = state ? state.datastore : undefined;
            resourceInputs["dbUserName"] = state ? state.dbUserName : undefined;
            resourceInputs["dedicatedResourceId"] = state ? state.dedicatedResourceId : undefined;
            resourceInputs["dedicatedResourceName"] = state ? state.dedicatedResourceName : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["flavor"] = state ? state.flavor : undefined;
            resourceInputs["forceImport"] = state ? state.forceImport : undefined;
            resourceInputs["masterAvailabilityZone"] = state ? state.masterAvailabilityZone : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["privateWriteIp"] = state ? state.privateWriteIp : undefined;
            resourceInputs["proxyAddress"] = state ? state.proxyAddress : undefined;
            resourceInputs["proxyFlavor"] = state ? state.proxyFlavor : undefined;
            resourceInputs["proxyNodeNum"] = state ? state.proxyNodeNum : undefined;
            resourceInputs["proxyPort"] = state ? state.proxyPort : undefined;
            resourceInputs["readReplicas"] = state ? state.readReplicas : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tableNameCaseSensitivity"] = state ? state.tableNameCaseSensitivity : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["volumeSize"] = state ? state.volumeSize : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as MysqlInstanceArgs | undefined;
            if ((!args || args.flavor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flavor'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["auditLogEnabled"] = args ? args.auditLogEnabled : undefined;
            resourceInputs["autoPay"] = args ? args.autoPay : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["availabilityZoneMode"] = args ? args.availabilityZoneMode : undefined;
            resourceInputs["backupStrategy"] = args ? args.backupStrategy : undefined;
            resourceInputs["chargingMode"] = args ? args.chargingMode : undefined;
            resourceInputs["configurationId"] = args ? args.configurationId : undefined;
            resourceInputs["configurationName"] = args ? args.configurationName : undefined;
            resourceInputs["datastore"] = args ? args.datastore : undefined;
            resourceInputs["dedicatedResourceId"] = args ? args.dedicatedResourceId : undefined;
            resourceInputs["dedicatedResourceName"] = args ? args.dedicatedResourceName : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["flavor"] = args ? args.flavor : undefined;
            resourceInputs["forceImport"] = args ? args.forceImport : undefined;
            resourceInputs["masterAvailabilityZone"] = args ? args.masterAvailabilityZone : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["proxyFlavor"] = args ? args.proxyFlavor : undefined;
            resourceInputs["proxyNodeNum"] = args ? args.proxyNodeNum : undefined;
            resourceInputs["readReplicas"] = args ? args.readReplicas : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tableNameCaseSensitivity"] = args ? args.tableNameCaseSensitivity : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["volumeSize"] = args ? args.volumeSize : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["dbUserName"] = undefined /*out*/;
            resourceInputs["mode"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["privateWriteIp"] = undefined /*out*/;
            resourceInputs["proxyAddress"] = undefined /*out*/;
            resourceInputs["proxyPort"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MysqlInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MysqlInstance resources.
 */
export interface MysqlInstanceState {
    /**
     * Specifies whether audit log is enabled. The default value is `false`.
     */
    auditLogEnabled?: pulumi.Input<boolean>;
    autoPay?: pulumi.Input<string>;
    /**
     * Specifies whether auto renew is enabled.
     * Valid values are "true" and "false". Changing this will do nothing.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the availability zone mode: "single" or "multi".
     * Defaults to "single". Changing this parameter will create a new resource.
     */
    availabilityZoneMode?: pulumi.Input<string>;
    /**
     * Specifies the advanced backup policy. Structure is documented below.
     */
    backupStrategy?: pulumi.Input<inputs.GaussDB.MysqlInstanceBackupStrategy>;
    /**
     * Specifies the charging mode of the instance. Valid values are *prePaid*
     * and *postPaid*, defaults to *postPaid*. Changing this will do nothing.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the configuration ID. Changing this parameter will create
     * a new resource.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * Specifies the configuration name. Changing this parameter will create
     * a new resource.
     */
    configurationName?: pulumi.Input<string>;
    /**
     * Specifies the database information. Structure is documented below. Changing
     * this parameter will create a new resource.
     */
    datastore?: pulumi.Input<inputs.GaussDB.MysqlInstanceDatastore>;
    /**
     * Indicates the default username.
     */
    dbUserName?: pulumi.Input<string>;
    /**
     * Specifies the dedicated resource ID. Changing this parameter
     * will create a new resource.
     */
    dedicatedResourceId?: pulumi.Input<string>;
    /**
     * Specifies the dedicated resource name. Changing this parameter
     * will create a new resource.
     */
    dedicatedResourceName?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id. Required if EPS enabled.
     * Changing this parameter will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the instance specifications. Please use
     * `gaussdbMysqlFlavors` data source to fetch the available flavors.
     */
    flavor?: pulumi.Input<string>;
    /**
     * If specified, try to import the instance instead of creating if the name already
     * existed.
     */
    forceImport?: pulumi.Input<boolean>;
    /**
     * Specifies the availability zone where the master node
     * resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
     * resource.
     */
    masterAvailabilityZone?: pulumi.Input<string>;
    /**
     * Indicates the instance mode.
     */
    mode?: pulumi.Input<string>;
    /**
     * Specifies the instance name, which can be the same as an existing instance name. The value
     * must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
     * digits, hyphens (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates the instance nodes information. Structure is documented below.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.GaussDB.MysqlInstanceNode>[]>;
    /**
     * Specifies the database password. The value must be 8 to 32 characters in length,
     * including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
     * enter a strong password to improve security, preventing security risks such as brute force cracking.
     */
    password?: pulumi.Input<string>;
    /**
     * Specifies the charging period of the instance.
     * If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
     * ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this will
     * do nothing.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the instance.
     * Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
     * Changing this will do nothing.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Indicates the database port.
     */
    port?: pulumi.Input<number>;
    /**
     * Indicates the private IP address of the DB instance.
     */
    privateWriteIp?: pulumi.Input<string>;
    /**
     * Indicates the address of the proxy.
     */
    proxyAddress?: pulumi.Input<string>;
    /**
     * Specifies the flavor of the proxy.
     */
    proxyFlavor?: pulumi.Input<string>;
    /**
     * Specifies the node count of the proxy.
     */
    proxyNodeNum?: pulumi.Input<number>;
    /**
     * Indicates the port of the proxy.
     */
    proxyPort?: pulumi.Input<number>;
    /**
     * Specifies the count of read replicas. Defaults to 1.
     */
    readReplicas?: pulumi.Input<number>;
    /**
     * The region in which to create the GaussDB mysql instance resource. If omitted,
     * the provider-level region will be used. Changing this creates a new instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the security group ID. Required if the selected subnet
     * doesn't enable network ACL. Changing this parameter will create a new resource.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Indicates the node status.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the network ID of a subnet. Changing this parameter will create a
     * new resource.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Whether the kernel table name is case sensitive. The value can
     * be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
     * creation.
     */
    tableNameCaseSensitivity?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
     * will create a new resource.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Specifies the volume size of the instance. The new storage space must be greater than
     * the current storage and must be a multiple of 10 GB. Only valid when in prePaid mode.
     */
    volumeSize?: pulumi.Input<number>;
    /**
     * Specifies the VPC ID. Changing this parameter will create a new resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MysqlInstance resource.
 */
export interface MysqlInstanceArgs {
    /**
     * Specifies whether audit log is enabled. The default value is `false`.
     */
    auditLogEnabled?: pulumi.Input<boolean>;
    autoPay?: pulumi.Input<string>;
    /**
     * Specifies whether auto renew is enabled.
     * Valid values are "true" and "false". Changing this will do nothing.
     */
    autoRenew?: pulumi.Input<string>;
    /**
     * Specifies the availability zone mode: "single" or "multi".
     * Defaults to "single". Changing this parameter will create a new resource.
     */
    availabilityZoneMode?: pulumi.Input<string>;
    /**
     * Specifies the advanced backup policy. Structure is documented below.
     */
    backupStrategy?: pulumi.Input<inputs.GaussDB.MysqlInstanceBackupStrategy>;
    /**
     * Specifies the charging mode of the instance. Valid values are *prePaid*
     * and *postPaid*, defaults to *postPaid*. Changing this will do nothing.
     */
    chargingMode?: pulumi.Input<string>;
    /**
     * Specifies the configuration ID. Changing this parameter will create
     * a new resource.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * Specifies the configuration name. Changing this parameter will create
     * a new resource.
     */
    configurationName?: pulumi.Input<string>;
    /**
     * Specifies the database information. Structure is documented below. Changing
     * this parameter will create a new resource.
     */
    datastore?: pulumi.Input<inputs.GaussDB.MysqlInstanceDatastore>;
    /**
     * Specifies the dedicated resource ID. Changing this parameter
     * will create a new resource.
     */
    dedicatedResourceId?: pulumi.Input<string>;
    /**
     * Specifies the dedicated resource name. Changing this parameter
     * will create a new resource.
     */
    dedicatedResourceName?: pulumi.Input<string>;
    /**
     * Specifies the enterprise project id. Required if EPS enabled.
     * Changing this parameter will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the instance specifications. Please use
     * `gaussdbMysqlFlavors` data source to fetch the available flavors.
     */
    flavor: pulumi.Input<string>;
    /**
     * If specified, try to import the instance instead of creating if the name already
     * existed.
     */
    forceImport?: pulumi.Input<boolean>;
    /**
     * Specifies the availability zone where the master node
     * resides. The parameter is required in multi availability zone mode. Changing this parameter will create a new
     * resource.
     */
    masterAvailabilityZone?: pulumi.Input<string>;
    /**
     * Specifies the instance name, which can be the same as an existing instance name. The value
     * must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can contain only letters,
     * digits, hyphens (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the database password. The value must be 8 to 32 characters in length,
     * including uppercase and lowercase letters, digits, and special characters, such as ~!@#%^*-_=+? You are advised to
     * enter a strong password to improve security, preventing security risks such as brute force cracking.
     */
    password: pulumi.Input<string>;
    /**
     * Specifies the charging period of the instance.
     * If `periodUnit` is set to *month* , the value ranges from 1 to 9. If `periodUnit` is set to *year*, the value
     * ranges from 1 to 3. This parameter is mandatory if `chargingMode` is set to *prePaid*. Changing this will
     * do nothing.
     */
    period?: pulumi.Input<number>;
    /**
     * Specifies the charging period unit of the instance.
     * Valid values are *month* and *year*. This parameter is mandatory if `chargingMode` is set to *prePaid*.
     * Changing this will do nothing.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * Specifies the flavor of the proxy.
     */
    proxyFlavor?: pulumi.Input<string>;
    /**
     * Specifies the node count of the proxy.
     */
    proxyNodeNum?: pulumi.Input<number>;
    /**
     * Specifies the count of read replicas. Defaults to 1.
     */
    readReplicas?: pulumi.Input<number>;
    /**
     * The region in which to create the GaussDB mysql instance resource. If omitted,
     * the provider-level region will be used. Changing this creates a new instance resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the security group ID. Required if the selected subnet
     * doesn't enable network ACL. Changing this parameter will create a new resource.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Specifies the network ID of a subnet. Changing this parameter will create a
     * new resource.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Whether the kernel table name is case sensitive. The value can
     * be `true` (case sensitive) and `false` (case insensitive). Defaults to `false`. This parameter only works during
     * creation.
     */
    tableNameCaseSensitivity?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the time zone. Defaults to "UTC+08:00". Changing this parameter
     * will create a new resource.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Specifies the volume size of the instance. The new storage space must be greater than
     * the current storage and must be a multiple of 10 GB. Only valid when in prePaid mode.
     */
    volumeSize?: pulumi.Input<number>;
    /**
     * Specifies the VPC ID. Changing this parameter will create a new resource.
     */
    vpcId: pulumi.Input<string>;
}
