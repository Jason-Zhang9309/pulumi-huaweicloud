// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get available HuaweiCloud gaussdb mysql configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const thisMysqlConfiguration = pulumi.output(huaweicloud.GaussDB.getMysqlConfiguration({
 *     name: "Default-GaussDB-for-MySQL 8.0",
 * }));
 * ```
 */
export function getMysqlConfiguration(args?: GetMysqlConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlConfigurationResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:GaussDB/getMysqlConfiguration:getMysqlConfiguration", {
        "name": args.name,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlConfiguration.
 */
export interface GetMysqlConfigurationArgs {
    /**
     * Specifies the name of the parameter template.
     */
    name?: string;
    /**
     * The region in which to obtain the configurations. If omitted, the provider-level region
     * will be used.
     */
    region?: string;
}

/**
 * A collection of values returned by getMysqlConfiguration.
 */
export interface GetMysqlConfigurationResult {
    /**
     * Indicates the datastore name of the configuration.
     */
    readonly datastoreName: string;
    /**
     * Indicates the datastore version of the configuration.
     */
    readonly datastoreVersion: string;
    /**
     * Indicates the description of the configuration.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly region: string;
}

export function getMysqlConfigurationOutput(args?: GetMysqlConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlConfigurationResult> {
    return pulumi.output(args).apply(a => getMysqlConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlConfiguration.
 */
export interface GetMysqlConfigurationOutputArgs {
    /**
     * Specifies the name of the parameter template.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to obtain the configurations. If omitted, the provider-level region
     * will be used.
     */
    region?: pulumi.Input<string>;
}
