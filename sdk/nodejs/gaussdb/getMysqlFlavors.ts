// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get available HuaweiCloud gaussdb mysql flavors.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const flavors = pulumi.output(huaweicloud.GaussDB.getMysqlFlavors());
 * ```
 */
export function getMysqlFlavors(args?: GetMysqlFlavorsArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlFlavorsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:GaussDB/getMysqlFlavors:getMysqlFlavors", {
        "availabilityZoneMode": args.availabilityZoneMode,
        "engine": args.engine,
        "region": args.region,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlFlavors.
 */
export interface GetMysqlFlavorsArgs {
    /**
     * Specifies the availability zone mode. Currently support `single` and '
     * multi'. Defaults to `single`.
     */
    availabilityZoneMode?: string;
    /**
     * Specifies the database engine. Only "gaussdb-mysql" is supported now.
     */
    engine?: string;
    /**
     * The region in which to obtain the flavors. If omitted, the provider-level region will be
     * used.
     */
    region?: string;
    /**
     * Specifies the database version. Only "8.0" is supported now.
     */
    version?: string;
}

/**
 * A collection of values returned by getMysqlFlavors.
 */
export interface GetMysqlFlavorsResult {
    readonly availabilityZoneMode?: string;
    readonly engine?: string;
    /**
     * Indicates the flavors information. Structure is documented below.
     */
    readonly flavors: outputs.GaussDB.GetMysqlFlavorsFlavor[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly region: string;
    /**
     * Indicates the database version.
     */
    readonly version?: string;
}

export function getMysqlFlavorsOutput(args?: GetMysqlFlavorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlFlavorsResult> {
    return pulumi.output(args).apply(a => getMysqlFlavors(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlFlavors.
 */
export interface GetMysqlFlavorsOutputArgs {
    /**
     * Specifies the availability zone mode. Currently support `single` and '
     * multi'. Defaults to `single`.
     */
    availabilityZoneMode?: pulumi.Input<string>;
    /**
     * Specifies the database engine. Only "gaussdb-mysql" is supported now.
     */
    engine?: pulumi.Input<string>;
    /**
     * The region in which to obtain the flavors. If omitted, the provider-level region will be
     * used.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the database version. Only "8.0" is supported now.
     */
    version?: pulumi.Input<string>;
}
