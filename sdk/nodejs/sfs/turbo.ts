// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides an Shared File System (SFS) Turbo resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const vpcId = config.requireObject("vpcId");
 * const subnetId = config.requireObject("subnetId");
 * const secgroupId = config.requireObject("secgroupId");
 * const testAz = config.requireObject("testAz");
 * const sfs_turbo_1 = new huaweicloud.sfs.Turbo("sfs-turbo-1", {
 *     size: 500,
 *     shareProto: "NFS",
 *     vpcId: vpcId,
 *     subnetId: subnetId,
 *     securityGroupId: secgroupId,
 *     availabilityZone: testAz,
 * });
 * ```
 *
 * ## Import
 *
 * SFS Turbo can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Sfs/turbo:Turbo huaweicloud_sfs_turbo 1e3d5306-24c9-4316-9185-70e9787d71ab
 * ```
 */
export class Turbo extends pulumi.CustomResource {
    /**
     * Get an existing Turbo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TurboState, opts?: pulumi.CustomResourceOptions): Turbo {
        return new Turbo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Sfs/turbo:Turbo';

    /**
     * Returns true if the given object is an instance of Turbo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Turbo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Turbo.__pulumiType;
    }

    /**
     * Specifies the availability zone where the file system is located.
     * Changing this will create a new resource.
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * The available capacity of the SFS Turbo file system in the unit of GB.
     */
    public /*out*/ readonly availableCapacity!: pulumi.Output<string>;
    /**
     * Specifies the ID of a KMS key to encrypt the file system. Changing this
     * will create a new resource.
     */
    public readonly cryptKeyId!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the file system is enhanced or not. Changing this will
     * create a new resource.
     */
    public readonly enhanced!: pulumi.Output<boolean>;
    /**
     * The enterprise project id of the file system. Changing this
     * will create a new resource.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Tthe mount point of the SFS Turbo file system.
     */
    public /*out*/ readonly exportLocation!: pulumi.Output<string>;
    /**
     * Specifies the name of an SFS Turbo file system. The value contains 4 to 64
     * characters and must start with a letter. Changing this will create a new resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The region in which to create the SFS Turbo resource. If omitted, the
     * provider-level region will be used. Changing this creates a new SFS Turbo resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Specifies the security group ID. Changing this will create a new
     * resource.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Specifies the protocol for sharing file systems. The valid value is NFS.
     * Changing this will create a new resource.
     */
    public readonly shareProto!: pulumi.Output<string | undefined>;
    /**
     * Specifies the file system type. The valid values are STANDARD and
     * PERFORMANCE Changing this will create a new resource.
     */
    public readonly shareType!: pulumi.Output<string | undefined>;
    /**
     * Specifies the capacity of a common file system, in GB. The value ranges from 500 to 32768,
     * and must be large than 10240 for an enhanced file system.
     */
    public readonly size!: pulumi.Output<number>;
    /**
     * The status of the SFS Turbo file system.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specifies the network ID of the subnet. Changing this will create a new
     * resource.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * The version ID of the SFS Turbo file system.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * Specifies the VPC ID. Changing this will create a new resource.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Turbo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TurboArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TurboArgs | TurboState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TurboState | undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["availableCapacity"] = state ? state.availableCapacity : undefined;
            resourceInputs["cryptKeyId"] = state ? state.cryptKeyId : undefined;
            resourceInputs["enhanced"] = state ? state.enhanced : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["exportLocation"] = state ? state.exportLocation : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["shareProto"] = state ? state.shareProto : undefined;
            resourceInputs["shareType"] = state ? state.shareType : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as TurboArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["cryptKeyId"] = args ? args.cryptKeyId : undefined;
            resourceInputs["enhanced"] = args ? args.enhanced : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["shareProto"] = args ? args.shareProto : undefined;
            resourceInputs["shareType"] = args ? args.shareType : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["availableCapacity"] = undefined /*out*/;
            resourceInputs["exportLocation"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Turbo.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Turbo resources.
 */
export interface TurboState {
    /**
     * Specifies the availability zone where the file system is located.
     * Changing this will create a new resource.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The available capacity of the SFS Turbo file system in the unit of GB.
     */
    availableCapacity?: pulumi.Input<string>;
    /**
     * Specifies the ID of a KMS key to encrypt the file system. Changing this
     * will create a new resource.
     */
    cryptKeyId?: pulumi.Input<string>;
    /**
     * Specifies whether the file system is enhanced or not. Changing this will
     * create a new resource.
     */
    enhanced?: pulumi.Input<boolean>;
    /**
     * The enterprise project id of the file system. Changing this
     * will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Tthe mount point of the SFS Turbo file system.
     */
    exportLocation?: pulumi.Input<string>;
    /**
     * Specifies the name of an SFS Turbo file system. The value contains 4 to 64
     * characters and must start with a letter. Changing this will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to create the SFS Turbo resource. If omitted, the
     * provider-level region will be used. Changing this creates a new SFS Turbo resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the security group ID. Changing this will create a new
     * resource.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Specifies the protocol for sharing file systems. The valid value is NFS.
     * Changing this will create a new resource.
     */
    shareProto?: pulumi.Input<string>;
    /**
     * Specifies the file system type. The valid values are STANDARD and
     * PERFORMANCE Changing this will create a new resource.
     */
    shareType?: pulumi.Input<string>;
    /**
     * Specifies the capacity of a common file system, in GB. The value ranges from 500 to 32768,
     * and must be large than 10240 for an enhanced file system.
     */
    size?: pulumi.Input<number>;
    /**
     * The status of the SFS Turbo file system.
     */
    status?: pulumi.Input<string>;
    /**
     * Specifies the network ID of the subnet. Changing this will create a new
     * resource.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The version ID of the SFS Turbo file system.
     */
    version?: pulumi.Input<string>;
    /**
     * Specifies the VPC ID. Changing this will create a new resource.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Turbo resource.
 */
export interface TurboArgs {
    /**
     * Specifies the availability zone where the file system is located.
     * Changing this will create a new resource.
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * Specifies the ID of a KMS key to encrypt the file system. Changing this
     * will create a new resource.
     */
    cryptKeyId?: pulumi.Input<string>;
    /**
     * Specifies whether the file system is enhanced or not. Changing this will
     * create a new resource.
     */
    enhanced?: pulumi.Input<boolean>;
    /**
     * The enterprise project id of the file system. Changing this
     * will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the name of an SFS Turbo file system. The value contains 4 to 64
     * characters and must start with a letter. Changing this will create a new resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The region in which to create the SFS Turbo resource. If omitted, the
     * provider-level region will be used. Changing this creates a new SFS Turbo resource.
     */
    region?: pulumi.Input<string>;
    /**
     * Specifies the security group ID. Changing this will create a new
     * resource.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * Specifies the protocol for sharing file systems. The valid value is NFS.
     * Changing this will create a new resource.
     */
    shareProto?: pulumi.Input<string>;
    /**
     * Specifies the file system type. The valid values are STANDARD and
     * PERFORMANCE Changing this will create a new resource.
     */
    shareType?: pulumi.Input<string>;
    /**
     * Specifies the capacity of a common file system, in GB. The value ranges from 500 to 32768,
     * and must be large than 10240 for an enhanced file system.
     */
    size: pulumi.Input<number>;
    /**
     * Specifies the network ID of the subnet. Changing this will create a new
     * resource.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specifies the VPC ID. Changing this will create a new resource.
     */
    vpcId: pulumi.Input<string>;
}
