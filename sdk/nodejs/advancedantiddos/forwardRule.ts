// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a forward rule resource of Advanced Anti-DDos service within HuaweiCloud.
 *
 * ## Import
 *
 * Rule can be imported using the `id` (combination of `instance_id`, `ip`, `forward_protocol` and `forward_port`), separated by slashes (/), e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:AdvancedAntiDDos/forwardRule:ForwardRule test &ltinstance_id&gt/&ltip&gt/&ltforward_protocol&gt/&ltforward_port&gt
 * ```
 */
export class ForwardRule extends pulumi.CustomResource {
    /**
     * Get an existing ForwardRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ForwardRuleState, opts?: pulumi.CustomResourceOptions): ForwardRule {
        return new ForwardRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:AdvancedAntiDDos/forwardRule:ForwardRule';

    /**
     * Returns true if the given object is an instance of ForwardRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ForwardRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ForwardRule.__pulumiType;
    }

    /**
     * Specifies the forward port.
     * The valid value is range from **1** to **65535**.
     */
    public readonly forwardPort!: pulumi.Output<number>;
    /**
     * Specifies the forward protocol.
     * The valid values are **tcp** and **udp**.
     */
    public readonly forwardProtocol!: pulumi.Output<string>;
    /**
     * Specifies the ID of advanced Anti-DDoS instance.
     * Changing this will create a new rule resource.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Specifies the public IP addresss to which Advanced Anti-DDoS instance
     * belongs. Changing this will create a new rule resource.
     */
    public readonly ip!: pulumi.Output<string>;
    /**
     * The LVS forward policy.
     */
    public /*out*/ readonly lbMethod!: pulumi.Output<string>;
    /**
     * schema: Deprecated
     */
    public /*out*/ readonly ruleId!: pulumi.Output<string>;
    /**
     * Specifies the source IP addresses, separated by commas (,).
     */
    public readonly sourceIp!: pulumi.Output<string>;
    /**
     * Specifies the source port.
     * The valid value is range from **1** to **65535**.
     */
    public readonly sourcePort!: pulumi.Output<number>;
    /**
     * The status of forward rule.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;

    /**
     * Create a ForwardRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ForwardRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ForwardRuleArgs | ForwardRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ForwardRuleState | undefined;
            resourceInputs["forwardPort"] = state ? state.forwardPort : undefined;
            resourceInputs["forwardProtocol"] = state ? state.forwardProtocol : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["lbMethod"] = state ? state.lbMethod : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["sourcePort"] = state ? state.sourcePort : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ForwardRuleArgs | undefined;
            if ((!args || args.forwardPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardPort'");
            }
            if ((!args || args.forwardProtocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardProtocol'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.ip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ip'");
            }
            if ((!args || args.sourceIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceIp'");
            }
            if ((!args || args.sourcePort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourcePort'");
            }
            resourceInputs["forwardPort"] = args ? args.forwardPort : undefined;
            resourceInputs["forwardProtocol"] = args ? args.forwardProtocol : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["sourcePort"] = args ? args.sourcePort : undefined;
            resourceInputs["lbMethod"] = undefined /*out*/;
            resourceInputs["ruleId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ForwardRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ForwardRule resources.
 */
export interface ForwardRuleState {
    /**
     * Specifies the forward port.
     * The valid value is range from **1** to **65535**.
     */
    forwardPort?: pulumi.Input<number>;
    /**
     * Specifies the forward protocol.
     * The valid values are **tcp** and **udp**.
     */
    forwardProtocol?: pulumi.Input<string>;
    /**
     * Specifies the ID of advanced Anti-DDoS instance.
     * Changing this will create a new rule resource.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Specifies the public IP addresss to which Advanced Anti-DDoS instance
     * belongs. Changing this will create a new rule resource.
     */
    ip?: pulumi.Input<string>;
    /**
     * The LVS forward policy.
     */
    lbMethod?: pulumi.Input<string>;
    /**
     * schema: Deprecated
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Specifies the source IP addresses, separated by commas (,).
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Specifies the source port.
     * The valid value is range from **1** to **65535**.
     */
    sourcePort?: pulumi.Input<number>;
    /**
     * The status of forward rule.
     */
    status?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ForwardRule resource.
 */
export interface ForwardRuleArgs {
    /**
     * Specifies the forward port.
     * The valid value is range from **1** to **65535**.
     */
    forwardPort: pulumi.Input<number>;
    /**
     * Specifies the forward protocol.
     * The valid values are **tcp** and **udp**.
     */
    forwardProtocol: pulumi.Input<string>;
    /**
     * Specifies the ID of advanced Anti-DDoS instance.
     * Changing this will create a new rule resource.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Specifies the public IP addresss to which Advanced Anti-DDoS instance
     * belongs. Changing this will create a new rule resource.
     */
    ip: pulumi.Input<string>;
    /**
     * Specifies the source IP addresses, separated by commas (,).
     */
    sourceIp: pulumi.Input<string>;
    /**
     * Specifies the source port.
     * The valid value is range from **1** to **65535**.
     */
    sourcePort: pulumi.Input<number>;
}
