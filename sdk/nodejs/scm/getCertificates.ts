// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get the list of SCM certificates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = pulumi.output(huaweicloud.Scm.getCertificates({
 *     status: "ALL",
 * }));
 * ```
 */
export function getCertificates(args?: GetCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificatesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("huaweicloud:Scm/getCertificates:getCertificates", {
        "deploySupport": args.deploySupport,
        "enterpriseProjectId": args.enterpriseProjectId,
        "name": args.name,
        "region": args.region,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificates.
 */
export interface GetCertificatesArgs {
    /**
     * Whether to support deployment.
     */
    deploySupport?: boolean;
    /**
     * The enterprise project id of the project.
     */
    enterpriseProjectId?: string;
    /**
     * Certificate name.
     */
    name?: string;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: string;
    /**
     * Certificate status.  
     * The options are as follows:
     * - ALL: All certificate status.
     * - PAID: The certificate has been paid and needs to be applied for from the CA.
     * - ISSUED: The certificate has been issued.
     * - CHECKING: The certificate application is being reviewed.
     * - CANCELCHECKING: The certificate application cancellation is being reviewed.
     * - UNPASSED: The certificate application fails.
     * - EXPIRED: The certificate has expired.
     * - REVOKING: The certificate revocation application is being reviewed.
     * - REVOKED: The certificate has been revoked.
     * - UPLOAD: The certificate is being managed.
     * - CHECKING_ORG: The organization verification is to be completed.
     * - ISSUING: The certificate is to be issued.
     * - SUPPLEMENTCHECKING: Additional domain names to be added for a multi-domain certificate are being reviewed.
     */
    status?: string;
}

/**
 * A collection of values returned by getCertificates.
 */
export interface GetCertificatesResult {
    /**
     * Certificate list. For details, see Data structure of the Certificate field.
     * The Certificate structure is documented below.
     */
    readonly certificates: outputs.Scm.GetCertificatesCertificate[];
    /**
     * Whether to support deployment.
     */
    readonly deploySupport?: boolean;
    /**
     * The enterprise project id of the project.
     */
    readonly enterpriseProjectId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Certificate name.
     */
    readonly name?: string;
    readonly region: string;
    /**
     * Certificate status.  
     * The options are as follows:
     * - ALL: All certificate status.
     * - PAID: The certificate has been paid and needs to be applied for from the CA.
     * - ISSUED: The certificate has been issued.
     * - CHECKING: The certificate application is being reviewed.
     * - CANCELCHECKING: The certificate application cancellation is being reviewed.
     * - UNPASSED: The certificate application fails.
     * - EXPIRED: The certificate has expired.
     * - REVOKING: The certificate revocation application is being reviewed.
     * - REVOKED: The certificate has been revoked.
     * - UPLOAD: The certificate is being managed.
     * - CHECKING_ORG: The organization verification is to be completed.
     * - ISSUING: The certificate is to be issued.
     * - SUPPLEMENTCHECKING: Additional domain names to be added for a multi-domain certificate are being reviewed.
     */
    readonly status?: string;
}

export function getCertificatesOutput(args?: GetCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificatesResult> {
    return pulumi.output(args).apply(a => getCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getCertificates.
 */
export interface GetCertificatesOutputArgs {
    /**
     * Whether to support deployment.
     */
    deploySupport?: pulumi.Input<boolean>;
    /**
     * The enterprise project id of the project.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Certificate name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to query the data source.
     * If omitted, the provider-level region will be used.
     */
    region?: pulumi.Input<string>;
    /**
     * Certificate status.  
     * The options are as follows:
     * - ALL: All certificate status.
     * - PAID: The certificate has been paid and needs to be applied for from the CA.
     * - ISSUED: The certificate has been issued.
     * - CHECKING: The certificate application is being reviewed.
     * - CANCELCHECKING: The certificate application cancellation is being reviewed.
     * - UNPASSED: The certificate application fails.
     * - EXPIRED: The certificate has expired.
     * - REVOKING: The certificate revocation application is being reviewed.
     * - REVOKED: The certificate has been revoked.
     * - UPLOAD: The certificate is being managed.
     * - CHECKING_ORG: The organization verification is to be completed.
     * - ISSUING: The certificate is to be issued.
     * - SUPPLEMENTCHECKING: Additional domain names to be added for a multi-domain certificate are being reviewed.
     */
    status?: pulumi.Input<string>;
}
