// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * CDN domain management.
 *
 * ## Example Usage
 * ### Create a cdn domain
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const domainName = config.requireObject("domainName");
 * const originServer = config.requireObject("originServer");
 * const domain1 = new huaweicloud.cdn.Domain("domain1", {
 *     type: "web",
 *     sources: [{
 *         origin: originServer,
 *         originType: "ipaddr",
 *         active: 1,
 *     }],
 *     tags: {
 *         key: "val",
 *         foo: "bar",
 *     },
 * });
 * ```
 * ### Create a cdn domain with cache rules
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const domainName = config.requireObject("domainName");
 * const originServer = config.requireObject("originServer");
 * const domain1 = new huaweicloud.cdn.Domain("domain1", {
 *     type: "web",
 *     sources: [{
 *         origin: originServer,
 *         originType: "ipaddr",
 *         active: 1,
 *     }],
 *     cacheSettings: {
 *         rules: [{
 *             ruleType: 0,
 *             ttl: 180,
 *             ttlType: 4,
 *             priority: 2,
 *         }],
 *     },
 * });
 * ```
 * ### Create a cdn domain with configs
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fs from "fs";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const domainName = config.requireObject("domainName");
 * const originServer = config.requireObject("originServer");
 * const domain1 = new huaweicloud.cdn.Domain("domain1", {
 *     type: "web",
 *     sources: [{
 *         origin: originServer,
 *         originType: "ipaddr",
 *         active: 1,
 *     }],
 *     configs: {
 *         originProtocol: "http",
 *         httpsSettings: {
 *             certificateName: "terraform-test",
 *             certificateBody: fs.readFileSync("your_directory/chain.cer"),
 *             http2Enabled: true,
 *             httpsEnabled: true,
 *             privateKey: fs.readFileSync("your_directory/server_private.key"),
 *         },
 *         cacheUrlParameterFilter: {
 *             type: "ignore_url_params",
 *         },
 *         retrievalRequestHeaders: [{
 *             name: "test-name",
 *             value: "test-val",
 *             action: "set",
 *         }],
 *         httpResponseHeaders: [{
 *             name: "test-name",
 *             value: "test-val",
 *             action: "set",
 *         }],
 *         urlSigning: {
 *             enabled: false,
 *         },
 *         compress: {
 *             enabled: false,
 *         },
 *         forceRedirect: {
 *             enabled: true,
 *             type: "http",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Domains can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Cdn/domain:Domain domain_1 fe2462fac09a4a42a76ecc4a1ef542f1
 * ```
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Cdn/domain:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * Specifies the cache configuration. The object structure
     * is documented below.
     */
    public readonly cacheSettings!: pulumi.Output<outputs.Cdn.DomainCacheSettings>;
    /**
     * The CNAME of the acceleration domain name.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * Specifies the domain configuration items. The object structure is
     * documented below.
     */
    public readonly configs!: pulumi.Output<outputs.Cdn.DomainConfigs>;
    /**
     * The status of the acceleration domain name. The available values are
     * 'online', 'offline', 'configuring', 'configure_failed', 'checking', 'check_failed' and 'deleting.'
     */
    public /*out*/ readonly domainStatus!: pulumi.Output<string>;
    /**
     * The enterprise project id. Changing this parameter will create
     * a new resource.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the request or response header.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The area covered by the acceleration service. Valid values are
     * `mainlandChina`, `outsideMainlandChina`, and `global`. Changing this parameter will create a new resource.
     */
    public readonly serviceArea!: pulumi.Output<string>;
    /**
     * An array of one or more objects specifies the domain name of the origin server.
     * The sources object structure is documented below.
     */
    public readonly sources!: pulumi.Output<outputs.Cdn.DomainSource[]>;
    /**
     * Specifies the key/value pairs to associate with the domain.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the operation type for caching URL parameters. Posiible values are:
     * **full_url**: cache all parameters
     * **ignore_url_params**: ignore all parameters
     * **del_args**: ignore specific URL parameters
     * **reserve_args**: reserve specified URL parameters
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs | DomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainState | undefined;
            resourceInputs["cacheSettings"] = state ? state.cacheSettings : undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["configs"] = state ? state.configs : undefined;
            resourceInputs["domainStatus"] = state ? state.domainStatus : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceArea"] = state ? state.serviceArea : undefined;
            resourceInputs["sources"] = state ? state.sources : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DomainArgs | undefined;
            if ((!args || args.sources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["cacheSettings"] = args ? args.cacheSettings : undefined;
            resourceInputs["configs"] = args ? args.configs : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceArea"] = args ? args.serviceArea : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["cname"] = undefined /*out*/;
            resourceInputs["domainStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * Specifies the cache configuration. The object structure
     * is documented below.
     */
    cacheSettings?: pulumi.Input<inputs.Cdn.DomainCacheSettings>;
    /**
     * The CNAME of the acceleration domain name.
     */
    cname?: pulumi.Input<string>;
    /**
     * Specifies the domain configuration items. The object structure is
     * documented below.
     */
    configs?: pulumi.Input<inputs.Cdn.DomainConfigs>;
    /**
     * The status of the acceleration domain name. The available values are
     * 'online', 'offline', 'configuring', 'configure_failed', 'checking', 'check_failed' and 'deleting.'
     */
    domainStatus?: pulumi.Input<string>;
    /**
     * The enterprise project id. Changing this parameter will create
     * a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the request or response header.
     */
    name?: pulumi.Input<string>;
    /**
     * The area covered by the acceleration service. Valid values are
     * `mainlandChina`, `outsideMainlandChina`, and `global`. Changing this parameter will create a new resource.
     */
    serviceArea?: pulumi.Input<string>;
    /**
     * An array of one or more objects specifies the domain name of the origin server.
     * The sources object structure is documented below.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.Cdn.DomainSource>[]>;
    /**
     * Specifies the key/value pairs to associate with the domain.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the operation type for caching URL parameters. Posiible values are:
     * **full_url**: cache all parameters
     * **ignore_url_params**: ignore all parameters
     * **del_args**: ignore specific URL parameters
     * **reserve_args**: reserve specified URL parameters
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * Specifies the cache configuration. The object structure
     * is documented below.
     */
    cacheSettings?: pulumi.Input<inputs.Cdn.DomainCacheSettings>;
    /**
     * Specifies the domain configuration items. The object structure is
     * documented below.
     */
    configs?: pulumi.Input<inputs.Cdn.DomainConfigs>;
    /**
     * The enterprise project id. Changing this parameter will create
     * a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the request or response header.
     */
    name?: pulumi.Input<string>;
    /**
     * The area covered by the acceleration service. Valid values are
     * `mainlandChina`, `outsideMainlandChina`, and `global`. Changing this parameter will create a new resource.
     */
    serviceArea?: pulumi.Input<string>;
    /**
     * An array of one or more objects specifies the domain name of the origin server.
     * The sources object structure is documented below.
     */
    sources: pulumi.Input<pulumi.Input<inputs.Cdn.DomainSource>[]>;
    /**
     * Specifies the key/value pairs to associate with the domain.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the operation type for caching URL parameters. Posiible values are:
     * **full_url**: cache all parameters
     * **ignore_url_params**: ignore all parameters
     * **del_args**: ignore specific URL parameters
     * **reserve_args**: reserve specified URL parameters
     */
    type: pulumi.Input<string>;
}
