// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an application resource within HuaweiCloud ServiceStage.
 *
 * ## Example Usage
 * ### Create an application and an environment variable
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pulumi from "@huaweicloudos/pulumi";
 *
 * const config = new pulumi.Config();
 * const envId = config.requireObject("envId");
 * const appName = config.requireObject("appName");
 * const vpcId = config.requireObject("vpcId");
 * const test = new huaweicloud.servicestage.Application("test", {environments: [{
 *     id: envId,
 *     variables: [{
 *         name: "owner",
 *         value: "terraform",
 *     }],
 * }]});
 * ```
 *
 * ## Import
 *
 * Applications can be imported using their `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:ServiceStage/application:Application test eeea08e7-c838-4794-926c-abc12f3e10e8
 * ```
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:ServiceStage/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * The list of component IDs associated under the application.
     */
    public /*out*/ readonly componentIds!: pulumi.Output<string[]>;
    /**
     * Specifies the application description.
     * The description can contian a maximum of `128` characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the enterprise projcet ID to which the application
     * belongs. Changing this will create a new resource.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * Specifies the configurations of the environment variables.
     * The object structure is documented below.
     */
    public readonly environments!: pulumi.Output<outputs.ServiceStage.ApplicationEnvironment[] | undefined>;
    /**
     * Specifies the variable name. The name can contain `1` to `64` characters, only letters,
     * digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the region in which to create the ServiceStage application.
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["componentIds"] = state ? state.componentIds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["environments"] = state ? state.environments : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["environments"] = args ? args.environments : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["componentIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Application.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * The list of component IDs associated under the application.
     */
    componentIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the application description.
     * The description can contian a maximum of `128` characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise projcet ID to which the application
     * belongs. Changing this will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the configurations of the environment variables.
     * The object structure is documented below.
     */
    environments?: pulumi.Input<pulumi.Input<inputs.ServiceStage.ApplicationEnvironment>[]>;
    /**
     * Specifies the variable name. The name can contain `1` to `64` characters, only letters,
     * digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the ServiceStage application.
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Specifies the application description.
     * The description can contian a maximum of `128` characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the enterprise projcet ID to which the application
     * belongs. Changing this will create a new resource.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * Specifies the configurations of the environment variables.
     * The object structure is documented below.
     */
    environments?: pulumi.Input<pulumi.Input<inputs.ServiceStage.ApplicationEnvironment>[]>;
    /**
     * Specifies the variable name. The name can contain `1` to `64` characters, only letters,
     * digits, underscores (_), hyphens (-) and dots (.) are allowed. The name cannot start with a digit or dot.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the ServiceStage application.
     * If omitted, the provider-level region will be used. Changing this will create a new resource.
     */
    region?: pulumi.Input<string>;
}
