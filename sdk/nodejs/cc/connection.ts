// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Cloud Connection resource within HuaweiCloud.
 *
 * Cloud Connect (CC) is a service that enables you to quickly build ultra-fast, high-quality, and stable networks
 * between VPCs across regions and between VPCs and on-premises data centers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as huaweicloud from "@pulumi/huaweicloud";
 *
 * const test = new huaweicloud.Cc.Connection("test", {});
 * ```
 *
 * ## Import
 *
 * The cloud connection can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import huaweicloud:Cc/connection:Connection test 0ce123456a00f2591fabc00385ff1234
 * ```
 */
export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'huaweicloud:Cc/connection:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * The number of bandwidth packages associated with the cloud connection instance.
     */
    public /*out*/ readonly bandwidthPackageNumber!: pulumi.Output<number>;
    /**
     * The Description about the cloud connection.  
     * The description can contain a maximum of 255 characters.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The Domain ID.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The enterprise project id of the cloud connection.  
     * Value 0 indicates the default enterprise project.
     */
    public readonly enterpriseProjectId!: pulumi.Output<string>;
    /**
     * The number of inter-domain bandwidths associated with the cloud connection instance.
     */
    public /*out*/ readonly interRegionBandwidthNumber!: pulumi.Output<number>;
    /**
     * The cloud connection name.  
     * The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
     * underscores (_) and dots (.).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The number of network instances associated with the cloud connection instance.
     */
    public /*out*/ readonly networkInstanceNumber!: pulumi.Output<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The status of the cloud connection.  
     * The options are as follows:
     * + **ACTIVE**: Device deleted.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The Scenario.  
     * The options are as follows:
     * + **vpc**: VPCs or virtual gateways can use this cloud connection.
     */
    public /*out*/ readonly usedScene!: pulumi.Output<string>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionArgs | ConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionState | undefined;
            resourceInputs["bandwidthPackageNumber"] = state ? state.bandwidthPackageNumber : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["enterpriseProjectId"] = state ? state.enterpriseProjectId : undefined;
            resourceInputs["interRegionBandwidthNumber"] = state ? state.interRegionBandwidthNumber : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInstanceNumber"] = state ? state.networkInstanceNumber : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["usedScene"] = state ? state.usedScene : undefined;
        } else {
            const args = argsOrState as ConnectionArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enterpriseProjectId"] = args ? args.enterpriseProjectId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["bandwidthPackageNumber"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["interRegionBandwidthNumber"] = undefined /*out*/;
            resourceInputs["networkInstanceNumber"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["usedScene"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Connection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    /**
     * The number of bandwidth packages associated with the cloud connection instance.
     */
    bandwidthPackageNumber?: pulumi.Input<number>;
    /**
     * The Description about the cloud connection.  
     * The description can contain a maximum of 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The Domain ID.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The enterprise project id of the cloud connection.  
     * Value 0 indicates the default enterprise project.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The number of inter-domain bandwidths associated with the cloud connection instance.
     */
    interRegionBandwidthNumber?: pulumi.Input<number>;
    /**
     * The cloud connection name.  
     * The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
     * underscores (_) and dots (.).
     */
    name?: pulumi.Input<string>;
    /**
     * The number of network instances associated with the cloud connection instance.
     */
    networkInstanceNumber?: pulumi.Input<number>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
    /**
     * The status of the cloud connection.  
     * The options are as follows:
     * + **ACTIVE**: Device deleted.
     */
    status?: pulumi.Input<string>;
    /**
     * The Scenario.  
     * The options are as follows:
     * + **vpc**: VPCs or virtual gateways can use this cloud connection.
     */
    usedScene?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * The Description about the cloud connection.  
     * The description can contain a maximum of 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The enterprise project id of the cloud connection.  
     * Value 0 indicates the default enterprise project.
     */
    enterpriseProjectId?: pulumi.Input<string>;
    /**
     * The cloud connection name.  
     * The name can contain 1 to 64 characters, only letters, Chinese characters, digits, hyphens (-),
     * underscores (_) and dots (.).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the region in which to create the resource.
     * If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
     */
    region?: pulumi.Input<string>;
}
